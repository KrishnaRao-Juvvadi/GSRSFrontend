/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/
(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.ketcher = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
(function (process,setImmediate){

// Use the fastest possible means to execute a task in a future turn
// of the event loop.

// linked list of tasks (single, with head node)
var head = {task: void 0, next: null};
var tail = head;
var flushing = false;
var requestFlush = void 0;
var isNodeJS = false;

function flush() {
    /* jshint loopfunc: true */

    while (head.next) {
        head = head.next;
        var task = head.task;
        head.task = void 0;
        var domain = head.domain;

        if (domain) {
            head.domain = void 0;
            domain.enter();
        }

        try {
            task();

        } catch (e) {
            if (isNodeJS) {
                // In node, uncaught exceptions are considered fatal errors.
                // Re-throw them synchronously to interrupt flushing!

                // Ensure continuation if the uncaught exception is suppressed
                // listening "uncaughtException" events (as domains does).
                // Continue in next event to avoid tick recursion.
                if (domain) {
                    domain.exit();
                }
                setTimeout(flush, 0);
                if (domain) {
                    domain.enter();
                }

                throw e;

            } else {
                // In browsers, uncaught exceptions are not fatal.
                // Re-throw them asynchronously to avoid slow-downs.
                setTimeout(function() {
                   throw e;
                }, 0);
            }
        }

        if (domain) {
            domain.exit();
        }
    }

    flushing = false;
}

if (typeof process !== "undefined" && process.nextTick) {
    // Node.js before 0.9. Note that some fake-Node environments, like the
    // Mocha test runner, introduce a `process` global without a `nextTick`.
    isNodeJS = true;

    requestFlush = function () {
        process.nextTick(flush);
    };

} else if (typeof setImmediate === "function") {
    // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate
    if (typeof window !== "undefined") {
        requestFlush = setImmediate.bind(window, flush);
    } else {
        requestFlush = function () {
            setImmediate(flush);
        };
    }

} else if (typeof MessageChannel !== "undefined") {
    // modern browsers
    // http://www.nonblocking.io/2011/06/windownexttick.html
    var channel = new MessageChannel();
    channel.port1.onmessage = flush;
    requestFlush = function () {
        channel.port2.postMessage(0);
    };

} else {
    // old browsers
    requestFlush = function () {
        setTimeout(flush, 0);
    };
}

function asap(task) {
    tail = tail.next = {
        task: task,
        domain: isNodeJS && process.domain,
        next: null
    };

    if (!flushing) {
        flushing = true;
        requestFlush();
    }
};

module.exports = asap;


}).call(this,require('_process'),require("timers").setImmediate)

},{"_process":486,"timers":513}],2:[function(require,module,exports){
/*!
  Copyright (c) 2016 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				classes.push(classNames.apply(null, arg));
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		module.exports = classNames;
	} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {
		// register as 'classnames', consistent with npm package name
		define('classnames', [], function () {
			return classNames;
		});
	} else {
		window.classNames = classNames;
	}
}());

},{}],3:[function(require,module,exports){
module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

},{}],4:[function(require,module,exports){
// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = require('./_wks')('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};

},{"./_hide":35,"./_wks":106}],5:[function(require,module,exports){
module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};

},{}],6:[function(require,module,exports){
var isObject = require('./_is-object');
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};

},{"./_is-object":44}],7:[function(require,module,exports){
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
'use strict';
var toObject = require('./_to-object');
var toAbsoluteIndex = require('./_to-absolute-index');
var toLength = require('./_to-length');

module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
  var O = toObject(this);
  var len = toLength(O.length);
  var to = toAbsoluteIndex(target, len);
  var from = toAbsoluteIndex(start, len);
  var end = arguments.length > 2 ? arguments[2] : undefined;
  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
  var inc = 1;
  if (from < to && to < from + count) {
    inc = -1;
    from += count - 1;
    to += count - 1;
  }
  while (count-- > 0) {
    if (from in O) O[to] = O[from];
    else delete O[to];
    to += inc;
    from += inc;
  } return O;
};

},{"./_to-absolute-index":91,"./_to-length":95,"./_to-object":96}],8:[function(require,module,exports){
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
'use strict';
var toObject = require('./_to-object');
var toAbsoluteIndex = require('./_to-absolute-index');
var toLength = require('./_to-length');
module.exports = function fill(value /* , start = 0, end = @length */) {
  var O = toObject(this);
  var length = toLength(O.length);
  var aLen = arguments.length;
  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);
  var end = aLen > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
  while (endPos > index) O[index++] = value;
  return O;
};

},{"./_to-absolute-index":91,"./_to-length":95,"./_to-object":96}],9:[function(require,module,exports){
// false -> Array#indexOf
// true  -> Array#includes
var toIObject = require('./_to-iobject');
var toLength = require('./_to-length');
var toAbsoluteIndex = require('./_to-absolute-index');
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

},{"./_to-absolute-index":91,"./_to-iobject":94,"./_to-length":95}],10:[function(require,module,exports){
// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = require('./_ctx');
var IObject = require('./_iobject');
var toObject = require('./_to-object');
var toLength = require('./_to-length');
var asc = require('./_array-species-create');
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};

},{"./_array-species-create":12,"./_ctx":21,"./_iobject":40,"./_to-length":95,"./_to-object":96}],11:[function(require,module,exports){
var isObject = require('./_is-object');
var isArray = require('./_is-array');
var SPECIES = require('./_wks')('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};

},{"./_is-array":42,"./_is-object":44,"./_wks":106}],12:[function(require,module,exports){
// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = require('./_array-species-constructor');

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};

},{"./_array-species-constructor":11}],13:[function(require,module,exports){
'use strict';
var aFunction = require('./_a-function');
var isObject = require('./_is-object');
var invoke = require('./_invoke');
var arraySlice = [].slice;
var factories = {};

var construct = function (F, len, args) {
  if (!(len in factories)) {
    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
    // eslint-disable-next-line no-new-func
    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
  } return factories[len](F, args);
};

module.exports = Function.bind || function bind(that /* , ...args */) {
  var fn = aFunction(this);
  var partArgs = arraySlice.call(arguments, 1);
  var bound = function (/* args... */) {
    var args = partArgs.concat(arraySlice.call(arguments));
    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
  };
  if (isObject(fn.prototype)) bound.prototype = fn.prototype;
  return bound;
};

},{"./_a-function":3,"./_invoke":39,"./_is-object":44}],14:[function(require,module,exports){
// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = require('./_cof');
var TAG = require('./_wks')('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};

},{"./_cof":15,"./_wks":106}],15:[function(require,module,exports){
var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};

},{}],16:[function(require,module,exports){
'use strict';
var dP = require('./_object-dp').f;
var create = require('./_object-create');
var redefineAll = require('./_redefine-all');
var ctx = require('./_ctx');
var anInstance = require('./_an-instance');
var forOf = require('./_for-of');
var $iterDefine = require('./_iter-define');
var step = require('./_iter-step');
var setSpecies = require('./_set-species');
var DESCRIPTORS = require('./_descriptors');
var fastKey = require('./_meta').fastKey;
var validate = require('./_validate-collection');
var SIZE = DESCRIPTORS ? '_s' : 'size';

var getEntry = function (that, key) {
  // fast case
  var index = fastKey(key);
  var entry;
  if (index !== 'F') return that._i[index];
  // frozen object case
  for (entry = that._f; entry; entry = entry.n) {
    if (entry.k == key) return entry;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;         // collection type
      that._i = create(null); // index
      that._f = undefined;    // first entry
      that._l = undefined;    // last entry
      that[SIZE] = 0;         // size
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
          entry.r = true;
          if (entry.p) entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }
        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = validate(this, NAME);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.n;
          var prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if (prev) prev.n = next;
          if (next) next.p = prev;
          if (that._f == entry) that._f = next;
          if (that._l == entry) that._l = prev;
          that[SIZE]--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        validate(this, NAME);
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.n : this._f) {
          f(entry.v, entry.k, this);
          // revert to the last existing entry
          while (entry && entry.r) entry = entry.p;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(validate(this, NAME), key);
      }
    });
    if (DESCRIPTORS) dP(C.prototype, 'size', {
      get: function () {
        return validate(this, NAME)[SIZE];
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var entry = getEntry(that, key);
    var prev, index;
    // change existing entry
    if (entry) {
      entry.v = value;
    // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true), // <- index
        k: key,                        // <- key
        v: value,                      // <- value
        p: prev = that._l,             // <- previous entry
        n: undefined,                  // <- next entry
        r: false                       // <- removed
      };
      if (!that._f) that._f = entry;
      if (prev) prev.n = entry;
      that[SIZE]++;
      // add to index
      if (index !== 'F') that._i[index] = entry;
    } return that;
  },
  getEntry: getEntry,
  setStrong: function (C, NAME, IS_MAP) {
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function (iterated, kind) {
      this._t = validate(iterated, NAME); // target
      this._k = kind;                     // kind
      this._l = undefined;                // previous
    }, function () {
      var that = this;
      var kind = that._k;
      var entry = that._l;
      // revert to the last existing entry
      while (entry && entry.r) entry = entry.p;
      // get next entry
      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
        // or finish the iteration
        that._t = undefined;
        return step(1);
      }
      // return step by kind
      if (kind == 'keys') return step(0, entry.k);
      if (kind == 'values') return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(NAME);
  }
};

},{"./_an-instance":5,"./_ctx":21,"./_descriptors":23,"./_for-of":32,"./_iter-define":48,"./_iter-step":50,"./_meta":57,"./_object-create":61,"./_object-dp":62,"./_redefine-all":77,"./_set-species":81,"./_validate-collection":103}],17:[function(require,module,exports){
'use strict';
var redefineAll = require('./_redefine-all');
var getWeak = require('./_meta').getWeak;
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var anInstance = require('./_an-instance');
var forOf = require('./_for-of');
var createArrayMethod = require('./_array-methods');
var $has = require('./_has');
var validate = require('./_validate-collection');
var arrayFind = createArrayMethod(5);
var arrayFindIndex = createArrayMethod(6);
var id = 0;

// fallback for uncaught frozen keys
var uncaughtFrozenStore = function (that) {
  return that._l || (that._l = new UncaughtFrozenStore());
};
var UncaughtFrozenStore = function () {
  this.a = [];
};
var findUncaughtFrozen = function (store, key) {
  return arrayFind(store.a, function (it) {
    return it[0] === key;
  });
};
UncaughtFrozenStore.prototype = {
  get: function (key) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) return entry[1];
  },
  has: function (key) {
    return !!findUncaughtFrozen(this, key);
  },
  set: function (key, value) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) entry[1] = value;
    else this.a.push([key, value]);
  },
  'delete': function (key) {
    var index = arrayFindIndex(this.a, function (it) {
      return it[0] === key;
    });
    if (~index) this.a.splice(index, 1);
    return !!~index;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;      // collection type
      that._i = id++;      // collection id
      that._l = undefined; // leak store for uncaught frozen objects
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.3.3.2 WeakMap.prototype.delete(key)
      // 23.4.3.3 WeakSet.prototype.delete(value)
      'delete': function (key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);
        return data && $has(data, this._i) && delete data[this._i];
      },
      // 23.3.3.4 WeakMap.prototype.has(key)
      // 23.4.3.4 WeakSet.prototype.has(value)
      has: function has(key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);
        return data && $has(data, this._i);
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var data = getWeak(anObject(key), true);
    if (data === true) uncaughtFrozenStore(that).set(key, value);
    else data[that._i] = value;
    return that;
  },
  ufstore: uncaughtFrozenStore
};

},{"./_an-instance":5,"./_an-object":6,"./_array-methods":10,"./_for-of":32,"./_has":34,"./_is-object":44,"./_meta":57,"./_redefine-all":77,"./_validate-collection":103}],18:[function(require,module,exports){
'use strict';
var global = require('./_global');
var $export = require('./_export');
var redefine = require('./_redefine');
var redefineAll = require('./_redefine-all');
var meta = require('./_meta');
var forOf = require('./_for-of');
var anInstance = require('./_an-instance');
var isObject = require('./_is-object');
var fails = require('./_fails');
var $iterDetect = require('./_iter-detect');
var setToStringTag = require('./_set-to-string-tag');
var inheritIfRequired = require('./_inherit-if-required');

module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
  var Base = global[NAME];
  var C = Base;
  var ADDER = IS_MAP ? 'set' : 'add';
  var proto = C && C.prototype;
  var O = {};
  var fixMethod = function (KEY) {
    var fn = proto[KEY];
    redefine(proto, KEY,
      KEY == 'delete' ? function (a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'has' ? function has(a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'get' ? function get(a) {
        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }
        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }
    );
  };
  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
    new C().entries().next();
  }))) {
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    var instance = new C();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new C();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });
    if (!ACCEPT_ITERABLES) {
      C = wrapper(function (target, iterable) {
        anInstance(target, C, NAME);
        var that = inheritIfRequired(new Base(), target, C);
        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
        return that;
      });
      C.prototype = proto;
      proto.constructor = C;
    }
    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }
    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
    // weak collections should not contains .clear method
    if (IS_WEAK && proto.clear) delete proto.clear;
  }

  setToStringTag(C, NAME);

  O[NAME] = C;
  $export($export.G + $export.W + $export.F * (C != Base), O);

  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

  return C;
};

},{"./_an-instance":5,"./_export":27,"./_fails":29,"./_for-of":32,"./_global":33,"./_inherit-if-required":38,"./_is-object":44,"./_iter-detect":49,"./_meta":57,"./_redefine":78,"./_redefine-all":77,"./_set-to-string-tag":82}],19:[function(require,module,exports){
var core = module.exports = { version: '2.5.7' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

},{}],20:[function(require,module,exports){
'use strict';
var $defineProperty = require('./_object-dp');
var createDesc = require('./_property-desc');

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};

},{"./_object-dp":62,"./_property-desc":76}],21:[function(require,module,exports){
// optional / simple context binding
var aFunction = require('./_a-function');
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

},{"./_a-function":3}],22:[function(require,module,exports){
// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

},{}],23:[function(require,module,exports){
// Thank's IE8 for his funny defineProperty
module.exports = !require('./_fails')(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});

},{"./_fails":29}],24:[function(require,module,exports){
var isObject = require('./_is-object');
var document = require('./_global').document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};

},{"./_global":33,"./_is-object":44}],25:[function(require,module,exports){
// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

},{}],26:[function(require,module,exports){
// all enumerable object keys, includes symbols
var getKeys = require('./_object-keys');
var gOPS = require('./_object-gops');
var pIE = require('./_object-pie');
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};

},{"./_object-gops":67,"./_object-keys":70,"./_object-pie":71}],27:[function(require,module,exports){
var global = require('./_global');
var core = require('./_core');
var hide = require('./_hide');
var redefine = require('./_redefine');
var ctx = require('./_ctx');
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;

},{"./_core":19,"./_ctx":21,"./_global":33,"./_hide":35,"./_redefine":78}],28:[function(require,module,exports){
var MATCH = require('./_wks')('match');
module.exports = function (KEY) {
  var re = /./;
  try {
    '/./'[KEY](re);
  } catch (e) {
    try {
      re[MATCH] = false;
      return !'/./'[KEY](re);
    } catch (f) { /* empty */ }
  } return true;
};

},{"./_wks":106}],29:[function(require,module,exports){
module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

},{}],30:[function(require,module,exports){
'use strict';
var hide = require('./_hide');
var redefine = require('./_redefine');
var fails = require('./_fails');
var defined = require('./_defined');
var wks = require('./_wks');

module.exports = function (KEY, length, exec) {
  var SYMBOL = wks(KEY);
  var fns = exec(defined, SYMBOL, ''[KEY]);
  var strfn = fns[0];
  var rxfn = fns[1];
  if (fails(function () {
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  })) {
    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return rxfn.call(string, this); }
    );
  }
};

},{"./_defined":22,"./_fails":29,"./_hide":35,"./_redefine":78,"./_wks":106}],31:[function(require,module,exports){
'use strict';
// 21.2.5.3 get RegExp.prototype.flags
var anObject = require('./_an-object');
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};

},{"./_an-object":6}],32:[function(require,module,exports){
var ctx = require('./_ctx');
var call = require('./_iter-call');
var isArrayIter = require('./_is-array-iter');
var anObject = require('./_an-object');
var toLength = require('./_to-length');
var getIterFn = require('./core.get-iterator-method');
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;

},{"./_an-object":6,"./_ctx":21,"./_is-array-iter":41,"./_iter-call":46,"./_to-length":95,"./core.get-iterator-method":107}],33:[function(require,module,exports){
// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

},{}],34:[function(require,module,exports){
var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};

},{}],35:[function(require,module,exports){
var dP = require('./_object-dp');
var createDesc = require('./_property-desc');
module.exports = require('./_descriptors') ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

},{"./_descriptors":23,"./_object-dp":62,"./_property-desc":76}],36:[function(require,module,exports){
var document = require('./_global').document;
module.exports = document && document.documentElement;

},{"./_global":33}],37:[function(require,module,exports){
module.exports = !require('./_descriptors') && !require('./_fails')(function () {
  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;
});

},{"./_descriptors":23,"./_dom-create":24,"./_fails":29}],38:[function(require,module,exports){
var isObject = require('./_is-object');
var setPrototypeOf = require('./_set-proto').set;
module.exports = function (that, target, C) {
  var S = target.constructor;
  var P;
  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  } return that;
};

},{"./_is-object":44,"./_set-proto":80}],39:[function(require,module,exports){
// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};

},{}],40:[function(require,module,exports){
// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = require('./_cof');
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};

},{"./_cof":15}],41:[function(require,module,exports){
// check on default Array iterator
var Iterators = require('./_iterators');
var ITERATOR = require('./_wks')('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};

},{"./_iterators":51,"./_wks":106}],42:[function(require,module,exports){
// 7.2.2 IsArray(argument)
var cof = require('./_cof');
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};

},{"./_cof":15}],43:[function(require,module,exports){
// 20.1.2.3 Number.isInteger(number)
var isObject = require('./_is-object');
var floor = Math.floor;
module.exports = function isInteger(it) {
  return !isObject(it) && isFinite(it) && floor(it) === it;
};

},{"./_is-object":44}],44:[function(require,module,exports){
module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

},{}],45:[function(require,module,exports){
// 7.2.8 IsRegExp(argument)
var isObject = require('./_is-object');
var cof = require('./_cof');
var MATCH = require('./_wks')('match');
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};

},{"./_cof":15,"./_is-object":44,"./_wks":106}],46:[function(require,module,exports){
// call something on iterator step with safe closing on error
var anObject = require('./_an-object');
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};

},{"./_an-object":6}],47:[function(require,module,exports){
'use strict';
var create = require('./_object-create');
var descriptor = require('./_property-desc');
var setToStringTag = require('./_set-to-string-tag');
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
require('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};

},{"./_hide":35,"./_object-create":61,"./_property-desc":76,"./_set-to-string-tag":82,"./_wks":106}],48:[function(require,module,exports){
'use strict';
var LIBRARY = require('./_library');
var $export = require('./_export');
var redefine = require('./_redefine');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var $iterCreate = require('./_iter-create');
var setToStringTag = require('./_set-to-string-tag');
var getPrototypeOf = require('./_object-gpo');
var ITERATOR = require('./_wks')('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

},{"./_export":27,"./_hide":35,"./_iter-create":47,"./_iterators":51,"./_library":52,"./_object-gpo":68,"./_redefine":78,"./_set-to-string-tag":82,"./_wks":106}],49:[function(require,module,exports){
var ITERATOR = require('./_wks')('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};

},{"./_wks":106}],50:[function(require,module,exports){
module.exports = function (done, value) {
  return { value: value, done: !!done };
};

},{}],51:[function(require,module,exports){
module.exports = {};

},{}],52:[function(require,module,exports){
module.exports = false;

},{}],53:[function(require,module,exports){
// 20.2.2.14 Math.expm1(x)
var $expm1 = Math.expm1;
module.exports = (!$expm1
  // Old FF bug
  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
  // Tor Browser bug
  || $expm1(-2e-17) != -2e-17
) ? function expm1(x) {
  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
} : $expm1;

},{}],54:[function(require,module,exports){
// 20.2.2.16 Math.fround(x)
var sign = require('./_math-sign');
var pow = Math.pow;
var EPSILON = pow(2, -52);
var EPSILON32 = pow(2, -23);
var MAX32 = pow(2, 127) * (2 - EPSILON32);
var MIN32 = pow(2, -126);

var roundTiesToEven = function (n) {
  return n + 1 / EPSILON - 1 / EPSILON;
};

module.exports = Math.fround || function fround(x) {
  var $abs = Math.abs(x);
  var $sign = sign(x);
  var a, result;
  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
  a = (1 + EPSILON32 / EPSILON) * $abs;
  result = a - (a - $abs);
  // eslint-disable-next-line no-self-compare
  if (result > MAX32 || result != result) return $sign * Infinity;
  return $sign * result;
};

},{"./_math-sign":56}],55:[function(require,module,exports){
// 20.2.2.20 Math.log1p(x)
module.exports = Math.log1p || function log1p(x) {
  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
};

},{}],56:[function(require,module,exports){
// 20.2.2.28 Math.sign(x)
module.exports = Math.sign || function sign(x) {
  // eslint-disable-next-line no-self-compare
  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
};

},{}],57:[function(require,module,exports){
var META = require('./_uid')('meta');
var isObject = require('./_is-object');
var has = require('./_has');
var setDesc = require('./_object-dp').f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !require('./_fails')(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};

},{"./_fails":29,"./_has":34,"./_is-object":44,"./_object-dp":62,"./_uid":101}],58:[function(require,module,exports){
var global = require('./_global');
var macrotask = require('./_task').set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = require('./_cof')(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};

},{"./_cof":15,"./_global":33,"./_task":90}],59:[function(require,module,exports){
'use strict';
// 25.4.1.5 NewPromiseCapability(C)
var aFunction = require('./_a-function');

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};

},{"./_a-function":3}],60:[function(require,module,exports){
'use strict';
// 19.1.2.1 Object.assign(target, source, ...)
var getKeys = require('./_object-keys');
var gOPS = require('./_object-gops');
var pIE = require('./_object-pie');
var toObject = require('./_to-object');
var IObject = require('./_iobject');
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || require('./_fails')(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : $assign;

},{"./_fails":29,"./_iobject":40,"./_object-gops":67,"./_object-keys":70,"./_object-pie":71,"./_to-object":96}],61:[function(require,module,exports){
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = require('./_an-object');
var dPs = require('./_object-dps');
var enumBugKeys = require('./_enum-bug-keys');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = require('./_dom-create')('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  require('./_html').appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};

},{"./_an-object":6,"./_dom-create":24,"./_enum-bug-keys":25,"./_html":36,"./_object-dps":63,"./_shared-key":83}],62:[function(require,module,exports){
var anObject = require('./_an-object');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var toPrimitive = require('./_to-primitive');
var dP = Object.defineProperty;

exports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

},{"./_an-object":6,"./_descriptors":23,"./_ie8-dom-define":37,"./_to-primitive":97}],63:[function(require,module,exports){
var dP = require('./_object-dp');
var anObject = require('./_an-object');
var getKeys = require('./_object-keys');

module.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};

},{"./_an-object":6,"./_descriptors":23,"./_object-dp":62,"./_object-keys":70}],64:[function(require,module,exports){
var pIE = require('./_object-pie');
var createDesc = require('./_property-desc');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var has = require('./_has');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};

},{"./_descriptors":23,"./_has":34,"./_ie8-dom-define":37,"./_object-pie":71,"./_property-desc":76,"./_to-iobject":94,"./_to-primitive":97}],65:[function(require,module,exports){
// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = require('./_to-iobject');
var gOPN = require('./_object-gopn').f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};

},{"./_object-gopn":66,"./_to-iobject":94}],66:[function(require,module,exports){
// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = require('./_object-keys-internal');
var hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};

},{"./_enum-bug-keys":25,"./_object-keys-internal":69}],67:[function(require,module,exports){
exports.f = Object.getOwnPropertySymbols;

},{}],68:[function(require,module,exports){
// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = require('./_has');
var toObject = require('./_to-object');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

},{"./_has":34,"./_shared-key":83,"./_to-object":96}],69:[function(require,module,exports){
var has = require('./_has');
var toIObject = require('./_to-iobject');
var arrayIndexOf = require('./_array-includes')(false);
var IE_PROTO = require('./_shared-key')('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

},{"./_array-includes":9,"./_has":34,"./_shared-key":83,"./_to-iobject":94}],70:[function(require,module,exports){
// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = require('./_object-keys-internal');
var enumBugKeys = require('./_enum-bug-keys');

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};

},{"./_enum-bug-keys":25,"./_object-keys-internal":69}],71:[function(require,module,exports){
exports.f = {}.propertyIsEnumerable;

},{}],72:[function(require,module,exports){
var getKeys = require('./_object-keys');
var toIObject = require('./_to-iobject');
var isEnum = require('./_object-pie').f;
module.exports = function (isEntries) {
  return function (it) {
    var O = toIObject(it);
    var keys = getKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) if (isEnum.call(O, key = keys[i++])) {
      result.push(isEntries ? [key, O[key]] : O[key]);
    } return result;
  };
};

},{"./_object-keys":70,"./_object-pie":71,"./_to-iobject":94}],73:[function(require,module,exports){
// all object keys, includes non-enumerable and symbols
var gOPN = require('./_object-gopn');
var gOPS = require('./_object-gops');
var anObject = require('./_an-object');
var Reflect = require('./_global').Reflect;
module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
  var keys = gOPN.f(anObject(it));
  var getSymbols = gOPS.f;
  return getSymbols ? keys.concat(getSymbols(it)) : keys;
};

},{"./_an-object":6,"./_global":33,"./_object-gopn":66,"./_object-gops":67}],74:[function(require,module,exports){
module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};

},{}],75:[function(require,module,exports){
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var newPromiseCapability = require('./_new-promise-capability');

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};

},{"./_an-object":6,"./_is-object":44,"./_new-promise-capability":59}],76:[function(require,module,exports){
module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

},{}],77:[function(require,module,exports){
var redefine = require('./_redefine');
module.exports = function (target, src, safe) {
  for (var key in src) redefine(target, key, src[key], safe);
  return target;
};

},{"./_redefine":78}],78:[function(require,module,exports){
var global = require('./_global');
var hide = require('./_hide');
var has = require('./_has');
var SRC = require('./_uid')('src');
var TO_STRING = 'toString';
var $toString = Function[TO_STRING];
var TPL = ('' + $toString).split(TO_STRING);

require('./_core').inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});

},{"./_core":19,"./_global":33,"./_has":34,"./_hide":35,"./_uid":101}],79:[function(require,module,exports){
// 7.2.9 SameValue(x, y)
module.exports = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};

},{}],80:[function(require,module,exports){
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = require('./_is-object');
var anObject = require('./_an-object');
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};

},{"./_an-object":6,"./_ctx":21,"./_is-object":44,"./_object-gopd":64}],81:[function(require,module,exports){
'use strict';
var global = require('./_global');
var dP = require('./_object-dp');
var DESCRIPTORS = require('./_descriptors');
var SPECIES = require('./_wks')('species');

module.exports = function (KEY) {
  var C = global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};

},{"./_descriptors":23,"./_global":33,"./_object-dp":62,"./_wks":106}],82:[function(require,module,exports){
var def = require('./_object-dp').f;
var has = require('./_has');
var TAG = require('./_wks')('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};

},{"./_has":34,"./_object-dp":62,"./_wks":106}],83:[function(require,module,exports){
var shared = require('./_shared')('keys');
var uid = require('./_uid');
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};

},{"./_shared":84,"./_uid":101}],84:[function(require,module,exports){
var core = require('./_core');
var global = require('./_global');
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: require('./_library') ? 'pure' : 'global',
  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
});

},{"./_core":19,"./_global":33,"./_library":52}],85:[function(require,module,exports){
// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = require('./_an-object');
var aFunction = require('./_a-function');
var SPECIES = require('./_wks')('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};

},{"./_a-function":3,"./_an-object":6,"./_wks":106}],86:[function(require,module,exports){
var toInteger = require('./_to-integer');
var defined = require('./_defined');
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

},{"./_defined":22,"./_to-integer":93}],87:[function(require,module,exports){
// helper for String#{startsWith, endsWith, includes}
var isRegExp = require('./_is-regexp');
var defined = require('./_defined');

module.exports = function (that, searchString, NAME) {
  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(defined(that));
};

},{"./_defined":22,"./_is-regexp":45}],88:[function(require,module,exports){
// https://github.com/tc39/proposal-string-pad-start-end
var toLength = require('./_to-length');
var repeat = require('./_string-repeat');
var defined = require('./_defined');

module.exports = function (that, maxLength, fillString, left) {
  var S = String(defined(that));
  var stringLength = S.length;
  var fillStr = fillString === undefined ? ' ' : String(fillString);
  var intMaxLength = toLength(maxLength);
  if (intMaxLength <= stringLength || fillStr == '') return S;
  var fillLen = intMaxLength - stringLength;
  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
  return left ? stringFiller + S : S + stringFiller;
};

},{"./_defined":22,"./_string-repeat":89,"./_to-length":95}],89:[function(require,module,exports){
'use strict';
var toInteger = require('./_to-integer');
var defined = require('./_defined');

module.exports = function repeat(count) {
  var str = String(defined(this));
  var res = '';
  var n = toInteger(count);
  if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
  return res;
};

},{"./_defined":22,"./_to-integer":93}],90:[function(require,module,exports){
var ctx = require('./_ctx');
var invoke = require('./_invoke');
var html = require('./_html');
var cel = require('./_dom-create');
var global = require('./_global');
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (require('./_cof')(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};

},{"./_cof":15,"./_ctx":21,"./_dom-create":24,"./_global":33,"./_html":36,"./_invoke":39}],91:[function(require,module,exports){
var toInteger = require('./_to-integer');
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};

},{"./_to-integer":93}],92:[function(require,module,exports){
// https://tc39.github.io/ecma262/#sec-toindex
var toInteger = require('./_to-integer');
var toLength = require('./_to-length');
module.exports = function (it) {
  if (it === undefined) return 0;
  var number = toInteger(it);
  var length = toLength(number);
  if (number !== length) throw RangeError('Wrong length!');
  return length;
};

},{"./_to-integer":93,"./_to-length":95}],93:[function(require,module,exports){
// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

},{}],94:[function(require,module,exports){
// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = require('./_iobject');
var defined = require('./_defined');
module.exports = function (it) {
  return IObject(defined(it));
};

},{"./_defined":22,"./_iobject":40}],95:[function(require,module,exports){
// 7.1.15 ToLength
var toInteger = require('./_to-integer');
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

},{"./_to-integer":93}],96:[function(require,module,exports){
// 7.1.13 ToObject(argument)
var defined = require('./_defined');
module.exports = function (it) {
  return Object(defined(it));
};

},{"./_defined":22}],97:[function(require,module,exports){
// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = require('./_is-object');
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

},{"./_is-object":44}],98:[function(require,module,exports){
'use strict';
if (require('./_descriptors')) {
  var LIBRARY = require('./_library');
  var global = require('./_global');
  var fails = require('./_fails');
  var $export = require('./_export');
  var $typed = require('./_typed');
  var $buffer = require('./_typed-buffer');
  var ctx = require('./_ctx');
  var anInstance = require('./_an-instance');
  var propertyDesc = require('./_property-desc');
  var hide = require('./_hide');
  var redefineAll = require('./_redefine-all');
  var toInteger = require('./_to-integer');
  var toLength = require('./_to-length');
  var toIndex = require('./_to-index');
  var toAbsoluteIndex = require('./_to-absolute-index');
  var toPrimitive = require('./_to-primitive');
  var has = require('./_has');
  var classof = require('./_classof');
  var isObject = require('./_is-object');
  var toObject = require('./_to-object');
  var isArrayIter = require('./_is-array-iter');
  var create = require('./_object-create');
  var getPrototypeOf = require('./_object-gpo');
  var gOPN = require('./_object-gopn').f;
  var getIterFn = require('./core.get-iterator-method');
  var uid = require('./_uid');
  var wks = require('./_wks');
  var createArrayMethod = require('./_array-methods');
  var createArrayIncludes = require('./_array-includes');
  var speciesConstructor = require('./_species-constructor');
  var ArrayIterators = require('./es6.array.iterator');
  var Iterators = require('./_iterators');
  var $iterDetect = require('./_iter-detect');
  var setSpecies = require('./_set-species');
  var arrayFill = require('./_array-fill');
  var arrayCopyWithin = require('./_array-copy-within');
  var $DP = require('./_object-dp');
  var $GOPD = require('./_object-gopd');
  var dP = $DP.f;
  var gOPD = $GOPD.f;
  var RangeError = global.RangeError;
  var TypeError = global.TypeError;
  var Uint8Array = global.Uint8Array;
  var ARRAY_BUFFER = 'ArrayBuffer';
  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
  var PROTOTYPE = 'prototype';
  var ArrayProto = Array[PROTOTYPE];
  var $ArrayBuffer = $buffer.ArrayBuffer;
  var $DataView = $buffer.DataView;
  var arrayForEach = createArrayMethod(0);
  var arrayFilter = createArrayMethod(2);
  var arraySome = createArrayMethod(3);
  var arrayEvery = createArrayMethod(4);
  var arrayFind = createArrayMethod(5);
  var arrayFindIndex = createArrayMethod(6);
  var arrayIncludes = createArrayIncludes(true);
  var arrayIndexOf = createArrayIncludes(false);
  var arrayValues = ArrayIterators.values;
  var arrayKeys = ArrayIterators.keys;
  var arrayEntries = ArrayIterators.entries;
  var arrayLastIndexOf = ArrayProto.lastIndexOf;
  var arrayReduce = ArrayProto.reduce;
  var arrayReduceRight = ArrayProto.reduceRight;
  var arrayJoin = ArrayProto.join;
  var arraySort = ArrayProto.sort;
  var arraySlice = ArrayProto.slice;
  var arrayToString = ArrayProto.toString;
  var arrayToLocaleString = ArrayProto.toLocaleString;
  var ITERATOR = wks('iterator');
  var TAG = wks('toStringTag');
  var TYPED_CONSTRUCTOR = uid('typed_constructor');
  var DEF_CONSTRUCTOR = uid('def_constructor');
  var ALL_CONSTRUCTORS = $typed.CONSTR;
  var TYPED_ARRAY = $typed.TYPED;
  var VIEW = $typed.VIEW;
  var WRONG_LENGTH = 'Wrong length!';

  var $map = createArrayMethod(1, function (O, length) {
    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
  });

  var LITTLE_ENDIAN = fails(function () {
    // eslint-disable-next-line no-undef
    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
  });

  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
    new Uint8Array(1).set({});
  });

  var toOffset = function (it, BYTES) {
    var offset = toInteger(it);
    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
    return offset;
  };

  var validate = function (it) {
    if (isObject(it) && TYPED_ARRAY in it) return it;
    throw TypeError(it + ' is not a typed array!');
  };

  var allocate = function (C, length) {
    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
      throw TypeError('It is not a typed array constructor!');
    } return new C(length);
  };

  var speciesFromList = function (O, list) {
    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
  };

  var fromList = function (C, list) {
    var index = 0;
    var length = list.length;
    var result = allocate(C, length);
    while (length > index) result[index] = list[index++];
    return result;
  };

  var addGetter = function (it, key, internal) {
    dP(it, key, { get: function () { return this._d[internal]; } });
  };

  var $from = function from(source /* , mapfn, thisArg */) {
    var O = toObject(source);
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var iterFn = getIterFn(O);
    var i, length, values, result, step, iterator;
    if (iterFn != undefined && !isArrayIter(iterFn)) {
      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
        values.push(step.value);
      } O = values;
    }
    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
      result[i] = mapping ? mapfn(O[i], i) : O[i];
    }
    return result;
  };

  var $of = function of(/* ...items */) {
    var index = 0;
    var length = arguments.length;
    var result = allocate(this, length);
    while (length > index) result[index] = arguments[index++];
    return result;
  };

  // iOS Safari 6.x fails here
  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });

  var $toLocaleString = function toLocaleString() {
    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
  };

  var proto = {
    copyWithin: function copyWithin(target, start /* , end */) {
      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
    },
    every: function every(callbackfn /* , thisArg */) {
      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars
      return arrayFill.apply(validate(this), arguments);
    },
    filter: function filter(callbackfn /* , thisArg */) {
      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
        arguments.length > 1 ? arguments[1] : undefined));
    },
    find: function find(predicate /* , thisArg */) {
      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    findIndex: function findIndex(predicate /* , thisArg */) {
      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    forEach: function forEach(callbackfn /* , thisArg */) {
      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    indexOf: function indexOf(searchElement /* , fromIndex */) {
      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    includes: function includes(searchElement /* , fromIndex */) {
      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    join: function join(separator) { // eslint-disable-line no-unused-vars
      return arrayJoin.apply(validate(this), arguments);
    },
    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars
      return arrayLastIndexOf.apply(validate(this), arguments);
    },
    map: function map(mapfn /* , thisArg */) {
      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduce.apply(validate(this), arguments);
    },
    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduceRight.apply(validate(this), arguments);
    },
    reverse: function reverse() {
      var that = this;
      var length = validate(that).length;
      var middle = Math.floor(length / 2);
      var index = 0;
      var value;
      while (index < middle) {
        value = that[index];
        that[index++] = that[--length];
        that[length] = value;
      } return that;
    },
    some: function some(callbackfn /* , thisArg */) {
      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    sort: function sort(comparefn) {
      return arraySort.call(validate(this), comparefn);
    },
    subarray: function subarray(begin, end) {
      var O = validate(this);
      var length = O.length;
      var $begin = toAbsoluteIndex(begin, length);
      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
        O.buffer,
        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)
      );
    }
  };

  var $slice = function slice(start, end) {
    return speciesFromList(this, arraySlice.call(validate(this), start, end));
  };

  var $set = function set(arrayLike /* , offset */) {
    validate(this);
    var offset = toOffset(arguments[1], 1);
    var length = this.length;
    var src = toObject(arrayLike);
    var len = toLength(src.length);
    var index = 0;
    if (len + offset > length) throw RangeError(WRONG_LENGTH);
    while (index < len) this[offset + index] = src[index++];
  };

  var $iterators = {
    entries: function entries() {
      return arrayEntries.call(validate(this));
    },
    keys: function keys() {
      return arrayKeys.call(validate(this));
    },
    values: function values() {
      return arrayValues.call(validate(this));
    }
  };

  var isTAIndex = function (target, key) {
    return isObject(target)
      && target[TYPED_ARRAY]
      && typeof key != 'symbol'
      && key in target
      && String(+key) == String(key);
  };
  var $getDesc = function getOwnPropertyDescriptor(target, key) {
    return isTAIndex(target, key = toPrimitive(key, true))
      ? propertyDesc(2, target[key])
      : gOPD(target, key);
  };
  var $setDesc = function defineProperty(target, key, desc) {
    if (isTAIndex(target, key = toPrimitive(key, true))
      && isObject(desc)
      && has(desc, 'value')
      && !has(desc, 'get')
      && !has(desc, 'set')
      // TODO: add validation descriptor w/o calling accessors
      && !desc.configurable
      && (!has(desc, 'writable') || desc.writable)
      && (!has(desc, 'enumerable') || desc.enumerable)
    ) {
      target[key] = desc.value;
      return target;
    } return dP(target, key, desc);
  };

  if (!ALL_CONSTRUCTORS) {
    $GOPD.f = $getDesc;
    $DP.f = $setDesc;
  }

  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
    getOwnPropertyDescriptor: $getDesc,
    defineProperty: $setDesc
  });

  if (fails(function () { arrayToString.call({}); })) {
    arrayToString = arrayToLocaleString = function toString() {
      return arrayJoin.call(this);
    };
  }

  var $TypedArrayPrototype$ = redefineAll({}, proto);
  redefineAll($TypedArrayPrototype$, $iterators);
  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
  redefineAll($TypedArrayPrototype$, {
    slice: $slice,
    set: $set,
    constructor: function () { /* noop */ },
    toString: arrayToString,
    toLocaleString: $toLocaleString
  });
  addGetter($TypedArrayPrototype$, 'buffer', 'b');
  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
  addGetter($TypedArrayPrototype$, 'length', 'e');
  dP($TypedArrayPrototype$, TAG, {
    get: function () { return this[TYPED_ARRAY]; }
  });

  // eslint-disable-next-line max-statements
  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
    CLAMPED = !!CLAMPED;
    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
    var GETTER = 'get' + KEY;
    var SETTER = 'set' + KEY;
    var TypedArray = global[NAME];
    var Base = TypedArray || {};
    var TAC = TypedArray && getPrototypeOf(TypedArray);
    var FORCED = !TypedArray || !$typed.ABV;
    var O = {};
    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
    var getter = function (that, index) {
      var data = that._d;
      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
    };
    var setter = function (that, index, value) {
      var data = that._d;
      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
    };
    var addElement = function (that, index) {
      dP(that, index, {
        get: function () {
          return getter(this, index);
        },
        set: function (value) {
          return setter(this, index, value);
        },
        enumerable: true
      });
    };
    if (FORCED) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME, '_d');
        var index = 0;
        var offset = 0;
        var buffer, byteLength, length, klass;
        if (!isObject(data)) {
          length = toIndex(data);
          byteLength = length * BYTES;
          buffer = new $ArrayBuffer(byteLength);
        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          buffer = data;
          offset = toOffset($offset, BYTES);
          var $len = data.byteLength;
          if ($length === undefined) {
            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
            byteLength = $len - offset;
            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
          } else {
            byteLength = toLength($length) * BYTES;
            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
          }
          length = byteLength / BYTES;
        } else if (TYPED_ARRAY in data) {
          return fromList(TypedArray, data);
        } else {
          return $from.call(TypedArray, data);
        }
        hide(that, '_d', {
          b: buffer,
          o: offset,
          l: byteLength,
          e: length,
          v: new $DataView(buffer)
        });
        while (index < length) addElement(that, index++);
      });
      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
      hide(TypedArrayPrototype, 'constructor', TypedArray);
    } else if (!fails(function () {
      TypedArray(1);
    }) || !fails(function () {
      new TypedArray(-1); // eslint-disable-line no-new
    }) || !$iterDetect(function (iter) {
      new TypedArray(); // eslint-disable-line no-new
      new TypedArray(null); // eslint-disable-line no-new
      new TypedArray(1.5); // eslint-disable-line no-new
      new TypedArray(iter); // eslint-disable-line no-new
    }, true)) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME);
        var klass;
        // `ws` module bug, temporarily remove validation length for Uint8Array
        // https://github.com/websockets/ws/pull/645
        if (!isObject(data)) return new Base(toIndex(data));
        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          return $length !== undefined
            ? new Base(data, toOffset($offset, BYTES), $length)
            : $offset !== undefined
              ? new Base(data, toOffset($offset, BYTES))
              : new Base(data);
        }
        if (TYPED_ARRAY in data) return fromList(TypedArray, data);
        return $from.call(TypedArray, data);
      });
      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
      });
      TypedArray[PROTOTYPE] = TypedArrayPrototype;
      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
    }
    var $nativeIterator = TypedArrayPrototype[ITERATOR];
    var CORRECT_ITER_NAME = !!$nativeIterator
      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);
    var $iterator = $iterators.values;
    hide(TypedArray, TYPED_CONSTRUCTOR, true);
    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
    hide(TypedArrayPrototype, VIEW, true);
    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
      dP(TypedArrayPrototype, TAG, {
        get: function () { return NAME; }
      });
    }

    O[NAME] = TypedArray;

    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

    $export($export.S, NAME, {
      BYTES_PER_ELEMENT: BYTES
    });

    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {
      from: $from,
      of: $of
    });

    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

    $export($export.P, NAME, proto);

    setSpecies(NAME);

    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });

    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;

    $export($export.P + $export.F * fails(function () {
      new TypedArray(1).slice();
    }), NAME, { slice: $slice });

    $export($export.P + $export.F * (fails(function () {
      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
    }) || !fails(function () {
      TypedArrayPrototype.toLocaleString.call([1, 2]);
    })), NAME, { toLocaleString: $toLocaleString });

    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
  };
} else module.exports = function () { /* empty */ };

},{"./_an-instance":5,"./_array-copy-within":7,"./_array-fill":8,"./_array-includes":9,"./_array-methods":10,"./_classof":14,"./_ctx":21,"./_descriptors":23,"./_export":27,"./_fails":29,"./_global":33,"./_has":34,"./_hide":35,"./_is-array-iter":41,"./_is-object":44,"./_iter-detect":49,"./_iterators":51,"./_library":52,"./_object-create":61,"./_object-dp":62,"./_object-gopd":64,"./_object-gopn":66,"./_object-gpo":68,"./_property-desc":76,"./_redefine-all":77,"./_set-species":81,"./_species-constructor":85,"./_to-absolute-index":91,"./_to-index":92,"./_to-integer":93,"./_to-length":95,"./_to-object":96,"./_to-primitive":97,"./_typed":100,"./_typed-buffer":99,"./_uid":101,"./_wks":106,"./core.get-iterator-method":107,"./es6.array.iterator":113}],99:[function(require,module,exports){
'use strict';
var global = require('./_global');
var DESCRIPTORS = require('./_descriptors');
var LIBRARY = require('./_library');
var $typed = require('./_typed');
var hide = require('./_hide');
var redefineAll = require('./_redefine-all');
var fails = require('./_fails');
var anInstance = require('./_an-instance');
var toInteger = require('./_to-integer');
var toLength = require('./_to-length');
var toIndex = require('./_to-index');
var gOPN = require('./_object-gopn').f;
var dP = require('./_object-dp').f;
var arrayFill = require('./_array-fill');
var setToStringTag = require('./_set-to-string-tag');
var ARRAY_BUFFER = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH = 'Wrong length!';
var WRONG_INDEX = 'Wrong index!';
var $ArrayBuffer = global[ARRAY_BUFFER];
var $DataView = global[DATA_VIEW];
var Math = global.Math;
var RangeError = global.RangeError;
// eslint-disable-next-line no-shadow-restricted-names
var Infinity = global.Infinity;
var BaseBuffer = $ArrayBuffer;
var abs = Math.abs;
var pow = Math.pow;
var floor = Math.floor;
var log = Math.log;
var LN2 = Math.LN2;
var BUFFER = 'buffer';
var BYTE_LENGTH = 'byteLength';
var BYTE_OFFSET = 'byteOffset';
var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;

// IEEE754 conversions based on https://github.com/feross/ieee754
function packIEEE754(value, mLen, nBytes) {
  var buffer = new Array(nBytes);
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
  var i = 0;
  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
  var e, m, c;
  value = abs(value);
  // eslint-disable-next-line no-self-compare
  if (value != value || value === Infinity) {
    // eslint-disable-next-line no-self-compare
    m = value != value ? 1 : 0;
    e = eMax;
  } else {
    e = floor(log(value) / LN2);
    if (value * (c = pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }
    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * pow(2, eBias - 1) * pow(2, mLen);
      e = 0;
    }
  }
  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
  e = e << mLen | m;
  eLen += mLen;
  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
  buffer[--i] |= s * 128;
  return buffer;
}
function unpackIEEE754(buffer, mLen, nBytes) {
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var nBits = eLen - 7;
  var i = nBytes - 1;
  var s = buffer[i--];
  var e = s & 127;
  var m;
  s >>= 7;
  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
  m = e & (1 << -nBits) - 1;
  e >>= -nBits;
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : s ? -Infinity : Infinity;
  } else {
    m = m + pow(2, mLen);
    e = e - eBias;
  } return (s ? -1 : 1) * m * pow(2, e - mLen);
}

function unpackI32(bytes) {
  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
}
function packI8(it) {
  return [it & 0xff];
}
function packI16(it) {
  return [it & 0xff, it >> 8 & 0xff];
}
function packI32(it) {
  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
}
function packF64(it) {
  return packIEEE754(it, 52, 8);
}
function packF32(it) {
  return packIEEE754(it, 23, 4);
}

function addGetter(C, key, internal) {
  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });
}

function get(view, bytes, index, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = store.slice(start, start + bytes);
  return isLittleEndian ? pack : pack.reverse();
}
function set(view, bytes, index, conversion, value, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = conversion(+value);
  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
}

if (!$typed.ABV) {
  $ArrayBuffer = function ArrayBuffer(length) {
    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
    var byteLength = toIndex(length);
    this._b = arrayFill.call(new Array(byteLength), 0);
    this[$LENGTH] = byteLength;
  };

  $DataView = function DataView(buffer, byteOffset, byteLength) {
    anInstance(this, $DataView, DATA_VIEW);
    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
    var bufferLength = buffer[$LENGTH];
    var offset = toInteger(byteOffset);
    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
    this[$BUFFER] = buffer;
    this[$OFFSET] = offset;
    this[$LENGTH] = byteLength;
  };

  if (DESCRIPTORS) {
    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
    addGetter($DataView, BUFFER, '_b');
    addGetter($DataView, BYTE_LENGTH, '_l');
    addGetter($DataView, BYTE_OFFSET, '_o');
  }

  redefineAll($DataView[PROTOTYPE], {
    getInt8: function getInt8(byteOffset) {
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset) {
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1]));
    },
    getUint32: function getUint32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
    },
    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
    },
    setInt8: function setInt8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setUint8: function setUint8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packF32, value, arguments[2]);
    },
    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
      set(this, 8, byteOffset, packF64, value, arguments[2]);
    }
  });
} else {
  if (!fails(function () {
    $ArrayBuffer(1);
  }) || !fails(function () {
    new $ArrayBuffer(-1); // eslint-disable-line no-new
  }) || fails(function () {
    new $ArrayBuffer(); // eslint-disable-line no-new
    new $ArrayBuffer(1.5); // eslint-disable-line no-new
    new $ArrayBuffer(NaN); // eslint-disable-line no-new
    return $ArrayBuffer.name != ARRAY_BUFFER;
  })) {
    $ArrayBuffer = function ArrayBuffer(length) {
      anInstance(this, $ArrayBuffer);
      return new BaseBuffer(toIndex(length));
    };
    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
    }
    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
  }
  // iOS Safari 7.x bug
  var view = new $DataView(new $ArrayBuffer(2));
  var $setInt8 = $DataView[PROTOTYPE].setInt8;
  view.setInt8(0, 2147483648);
  view.setInt8(1, 2147483649);
  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
    setInt8: function setInt8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    }
  }, true);
}
setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);
hide($DataView[PROTOTYPE], $typed.VIEW, true);
exports[ARRAY_BUFFER] = $ArrayBuffer;
exports[DATA_VIEW] = $DataView;

},{"./_an-instance":5,"./_array-fill":8,"./_descriptors":23,"./_fails":29,"./_global":33,"./_hide":35,"./_library":52,"./_object-dp":62,"./_object-gopn":66,"./_redefine-all":77,"./_set-to-string-tag":82,"./_to-index":92,"./_to-integer":93,"./_to-length":95,"./_typed":100}],100:[function(require,module,exports){
var global = require('./_global');
var hide = require('./_hide');
var uid = require('./_uid');
var TYPED = uid('typed_array');
var VIEW = uid('view');
var ABV = !!(global.ArrayBuffer && global.DataView);
var CONSTR = ABV;
var i = 0;
var l = 9;
var Typed;

var TypedArrayConstructors = (
  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
).split(',');

while (i < l) {
  if (Typed = global[TypedArrayConstructors[i++]]) {
    hide(Typed.prototype, TYPED, true);
    hide(Typed.prototype, VIEW, true);
  } else CONSTR = false;
}

module.exports = {
  ABV: ABV,
  CONSTR: CONSTR,
  TYPED: TYPED,
  VIEW: VIEW
};

},{"./_global":33,"./_hide":35,"./_uid":101}],101:[function(require,module,exports){
var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

},{}],102:[function(require,module,exports){
var global = require('./_global');
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';

},{"./_global":33}],103:[function(require,module,exports){
var isObject = require('./_is-object');
module.exports = function (it, TYPE) {
  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
  return it;
};

},{"./_is-object":44}],104:[function(require,module,exports){
var global = require('./_global');
var core = require('./_core');
var LIBRARY = require('./_library');
var wksExt = require('./_wks-ext');
var defineProperty = require('./_object-dp').f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};

},{"./_core":19,"./_global":33,"./_library":52,"./_object-dp":62,"./_wks-ext":105}],105:[function(require,module,exports){
exports.f = require('./_wks');

},{"./_wks":106}],106:[function(require,module,exports){
var store = require('./_shared')('wks');
var uid = require('./_uid');
var Symbol = require('./_global').Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;

},{"./_global":33,"./_shared":84,"./_uid":101}],107:[function(require,module,exports){
var classof = require('./_classof');
var ITERATOR = require('./_wks')('iterator');
var Iterators = require('./_iterators');
module.exports = require('./_core').getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};

},{"./_classof":14,"./_core":19,"./_iterators":51,"./_wks":106}],108:[function(require,module,exports){
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
var $export = require('./_export');

$export($export.P, 'Array', { copyWithin: require('./_array-copy-within') });

require('./_add-to-unscopables')('copyWithin');

},{"./_add-to-unscopables":4,"./_array-copy-within":7,"./_export":27}],109:[function(require,module,exports){
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
var $export = require('./_export');

$export($export.P, 'Array', { fill: require('./_array-fill') });

require('./_add-to-unscopables')('fill');

},{"./_add-to-unscopables":4,"./_array-fill":8,"./_export":27}],110:[function(require,module,exports){
'use strict';
// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
var $export = require('./_export');
var $find = require('./_array-methods')(6);
var KEY = 'findIndex';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
require('./_add-to-unscopables')(KEY);

},{"./_add-to-unscopables":4,"./_array-methods":10,"./_export":27}],111:[function(require,module,exports){
'use strict';
// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
var $export = require('./_export');
var $find = require('./_array-methods')(5);
var KEY = 'find';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
require('./_add-to-unscopables')(KEY);

},{"./_add-to-unscopables":4,"./_array-methods":10,"./_export":27}],112:[function(require,module,exports){
'use strict';
var ctx = require('./_ctx');
var $export = require('./_export');
var toObject = require('./_to-object');
var call = require('./_iter-call');
var isArrayIter = require('./_is-array-iter');
var toLength = require('./_to-length');
var createProperty = require('./_create-property');
var getIterFn = require('./core.get-iterator-method');

$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});

},{"./_create-property":20,"./_ctx":21,"./_export":27,"./_is-array-iter":41,"./_iter-call":46,"./_iter-detect":49,"./_to-length":95,"./_to-object":96,"./core.get-iterator-method":107}],113:[function(require,module,exports){
'use strict';
var addToUnscopables = require('./_add-to-unscopables');
var step = require('./_iter-step');
var Iterators = require('./_iterators');
var toIObject = require('./_to-iobject');

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

},{"./_add-to-unscopables":4,"./_iter-define":48,"./_iter-step":50,"./_iterators":51,"./_to-iobject":94}],114:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var createProperty = require('./_create-property');

// WebKit Array.of isn't generic
$export($export.S + $export.F * require('./_fails')(function () {
  function F() { /* empty */ }
  return !(Array.of.call(F) instanceof F);
}), 'Array', {
  // 22.1.2.3 Array.of( ...items)
  of: function of(/* ...args */) {
    var index = 0;
    var aLen = arguments.length;
    var result = new (typeof this == 'function' ? this : Array)(aLen);
    while (aLen > index) createProperty(result, index, arguments[index++]);
    result.length = aLen;
    return result;
  }
});

},{"./_create-property":20,"./_export":27,"./_fails":29}],115:[function(require,module,exports){
var dP = require('./_object-dp').f;
var FProto = Function.prototype;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// 19.2.4.2 name
NAME in FProto || require('./_descriptors') && dP(FProto, NAME, {
  configurable: true,
  get: function () {
    try {
      return ('' + this).match(nameRE)[1];
    } catch (e) {
      return '';
    }
  }
});

},{"./_descriptors":23,"./_object-dp":62}],116:[function(require,module,exports){
'use strict';
var strong = require('./_collection-strong');
var validate = require('./_validate-collection');
var MAP = 'Map';

// 23.1 Map Objects
module.exports = require('./_collection')(MAP, function (get) {
  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.1.3.6 Map.prototype.get(key)
  get: function get(key) {
    var entry = strong.getEntry(validate(this, MAP), key);
    return entry && entry.v;
  },
  // 23.1.3.9 Map.prototype.set(key, value)
  set: function set(key, value) {
    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
  }
}, strong, true);

},{"./_collection":18,"./_collection-strong":16,"./_validate-collection":103}],117:[function(require,module,exports){
// 20.2.2.3 Math.acosh(x)
var $export = require('./_export');
var log1p = require('./_math-log1p');
var sqrt = Math.sqrt;
var $acosh = Math.acosh;

$export($export.S + $export.F * !($acosh
  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
  && Math.floor($acosh(Number.MAX_VALUE)) == 710
  // Tor Browser bug: Math.acosh(Infinity) -> NaN
  && $acosh(Infinity) == Infinity
), 'Math', {
  acosh: function acosh(x) {
    return (x = +x) < 1 ? NaN : x > 94906265.62425156
      ? Math.log(x) + Math.LN2
      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
  }
});

},{"./_export":27,"./_math-log1p":55}],118:[function(require,module,exports){
// 20.2.2.5 Math.asinh(x)
var $export = require('./_export');
var $asinh = Math.asinh;

function asinh(x) {
  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
}

// Tor Browser bug: Math.asinh(0) -> -0
$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });

},{"./_export":27}],119:[function(require,module,exports){
// 20.2.2.7 Math.atanh(x)
var $export = require('./_export');
var $atanh = Math.atanh;

// Tor Browser bug: Math.atanh(-0) -> 0
$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
  atanh: function atanh(x) {
    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
  }
});

},{"./_export":27}],120:[function(require,module,exports){
// 20.2.2.9 Math.cbrt(x)
var $export = require('./_export');
var sign = require('./_math-sign');

$export($export.S, 'Math', {
  cbrt: function cbrt(x) {
    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
  }
});

},{"./_export":27,"./_math-sign":56}],121:[function(require,module,exports){
// 20.2.2.11 Math.clz32(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  clz32: function clz32(x) {
    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
  }
});

},{"./_export":27}],122:[function(require,module,exports){
// 20.2.2.12 Math.cosh(x)
var $export = require('./_export');
var exp = Math.exp;

$export($export.S, 'Math', {
  cosh: function cosh(x) {
    return (exp(x = +x) + exp(-x)) / 2;
  }
});

},{"./_export":27}],123:[function(require,module,exports){
// 20.2.2.14 Math.expm1(x)
var $export = require('./_export');
var $expm1 = require('./_math-expm1');

$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });

},{"./_export":27,"./_math-expm1":53}],124:[function(require,module,exports){
// 20.2.2.16 Math.fround(x)
var $export = require('./_export');

$export($export.S, 'Math', { fround: require('./_math-fround') });

},{"./_export":27,"./_math-fround":54}],125:[function(require,module,exports){
// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
var $export = require('./_export');
var abs = Math.abs;

$export($export.S, 'Math', {
  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars
    var sum = 0;
    var i = 0;
    var aLen = arguments.length;
    var larg = 0;
    var arg, div;
    while (i < aLen) {
      arg = abs(arguments[i++]);
      if (larg < arg) {
        div = larg / arg;
        sum = sum * div * div + 1;
        larg = arg;
      } else if (arg > 0) {
        div = arg / larg;
        sum += div * div;
      } else sum += arg;
    }
    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
  }
});

},{"./_export":27}],126:[function(require,module,exports){
// 20.2.2.18 Math.imul(x, y)
var $export = require('./_export');
var $imul = Math.imul;

// some WebKit versions fails with big numbers, some has wrong arity
$export($export.S + $export.F * require('./_fails')(function () {
  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
}), 'Math', {
  imul: function imul(x, y) {
    var UINT16 = 0xffff;
    var xn = +x;
    var yn = +y;
    var xl = UINT16 & xn;
    var yl = UINT16 & yn;
    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
  }
});

},{"./_export":27,"./_fails":29}],127:[function(require,module,exports){
// 20.2.2.21 Math.log10(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  log10: function log10(x) {
    return Math.log(x) * Math.LOG10E;
  }
});

},{"./_export":27}],128:[function(require,module,exports){
// 20.2.2.20 Math.log1p(x)
var $export = require('./_export');

$export($export.S, 'Math', { log1p: require('./_math-log1p') });

},{"./_export":27,"./_math-log1p":55}],129:[function(require,module,exports){
// 20.2.2.22 Math.log2(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  log2: function log2(x) {
    return Math.log(x) / Math.LN2;
  }
});

},{"./_export":27}],130:[function(require,module,exports){
// 20.2.2.28 Math.sign(x)
var $export = require('./_export');

$export($export.S, 'Math', { sign: require('./_math-sign') });

},{"./_export":27,"./_math-sign":56}],131:[function(require,module,exports){
// 20.2.2.30 Math.sinh(x)
var $export = require('./_export');
var expm1 = require('./_math-expm1');
var exp = Math.exp;

// V8 near Chromium 38 has a problem with very small numbers
$export($export.S + $export.F * require('./_fails')(function () {
  return !Math.sinh(-2e-17) != -2e-17;
}), 'Math', {
  sinh: function sinh(x) {
    return Math.abs(x = +x) < 1
      ? (expm1(x) - expm1(-x)) / 2
      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
  }
});

},{"./_export":27,"./_fails":29,"./_math-expm1":53}],132:[function(require,module,exports){
// 20.2.2.33 Math.tanh(x)
var $export = require('./_export');
var expm1 = require('./_math-expm1');
var exp = Math.exp;

$export($export.S, 'Math', {
  tanh: function tanh(x) {
    var a = expm1(x = +x);
    var b = expm1(-x);
    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
  }
});

},{"./_export":27,"./_math-expm1":53}],133:[function(require,module,exports){
// 20.2.2.34 Math.trunc(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  trunc: function trunc(it) {
    return (it > 0 ? Math.floor : Math.ceil)(it);
  }
});

},{"./_export":27}],134:[function(require,module,exports){
// 20.1.2.1 Number.EPSILON
var $export = require('./_export');

$export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });

},{"./_export":27}],135:[function(require,module,exports){
// 20.1.2.2 Number.isFinite(number)
var $export = require('./_export');
var _isFinite = require('./_global').isFinite;

$export($export.S, 'Number', {
  isFinite: function isFinite(it) {
    return typeof it == 'number' && _isFinite(it);
  }
});

},{"./_export":27,"./_global":33}],136:[function(require,module,exports){
// 20.1.2.3 Number.isInteger(number)
var $export = require('./_export');

$export($export.S, 'Number', { isInteger: require('./_is-integer') });

},{"./_export":27,"./_is-integer":43}],137:[function(require,module,exports){
// 20.1.2.4 Number.isNaN(number)
var $export = require('./_export');

$export($export.S, 'Number', {
  isNaN: function isNaN(number) {
    // eslint-disable-next-line no-self-compare
    return number != number;
  }
});

},{"./_export":27}],138:[function(require,module,exports){
// 20.1.2.5 Number.isSafeInteger(number)
var $export = require('./_export');
var isInteger = require('./_is-integer');
var abs = Math.abs;

$export($export.S, 'Number', {
  isSafeInteger: function isSafeInteger(number) {
    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
  }
});

},{"./_export":27,"./_is-integer":43}],139:[function(require,module,exports){
// 20.1.2.6 Number.MAX_SAFE_INTEGER
var $export = require('./_export');

$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });

},{"./_export":27}],140:[function(require,module,exports){
// 20.1.2.10 Number.MIN_SAFE_INTEGER
var $export = require('./_export');

$export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });

},{"./_export":27}],141:[function(require,module,exports){
// 19.1.3.1 Object.assign(target, source)
var $export = require('./_export');

$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });

},{"./_export":27,"./_object-assign":60}],142:[function(require,module,exports){
// 19.1.3.10 Object.is(value1, value2)
var $export = require('./_export');
$export($export.S, 'Object', { is: require('./_same-value') });

},{"./_export":27,"./_same-value":79}],143:[function(require,module,exports){
// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = require('./_export');
$export($export.S, 'Object', { setPrototypeOf: require('./_set-proto').set });

},{"./_export":27,"./_set-proto":80}],144:[function(require,module,exports){
'use strict';
var LIBRARY = require('./_library');
var global = require('./_global');
var ctx = require('./_ctx');
var classof = require('./_classof');
var $export = require('./_export');
var isObject = require('./_is-object');
var aFunction = require('./_a-function');
var anInstance = require('./_an-instance');
var forOf = require('./_for-of');
var speciesConstructor = require('./_species-constructor');
var task = require('./_task').set;
var microtask = require('./_microtask')();
var newPromiseCapabilityModule = require('./_new-promise-capability');
var perform = require('./_perform');
var userAgent = require('./_user-agent');
var promiseResolve = require('./_promise-resolve');
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = require('./_redefine-all')($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
require('./_set-to-string-tag')($Promise, PROMISE);
require('./_set-species')(PROMISE);
Wrapper = require('./_core')[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});

},{"./_a-function":3,"./_an-instance":5,"./_classof":14,"./_core":19,"./_ctx":21,"./_export":27,"./_for-of":32,"./_global":33,"./_is-object":44,"./_iter-detect":49,"./_library":52,"./_microtask":58,"./_new-promise-capability":59,"./_perform":74,"./_promise-resolve":75,"./_redefine-all":77,"./_set-species":81,"./_set-to-string-tag":82,"./_species-constructor":85,"./_task":90,"./_user-agent":102,"./_wks":106}],145:[function(require,module,exports){
// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
var $export = require('./_export');
var aFunction = require('./_a-function');
var anObject = require('./_an-object');
var rApply = (require('./_global').Reflect || {}).apply;
var fApply = Function.apply;
// MS Edge argumentsList argument is optional
$export($export.S + $export.F * !require('./_fails')(function () {
  rApply(function () { /* empty */ });
}), 'Reflect', {
  apply: function apply(target, thisArgument, argumentsList) {
    var T = aFunction(target);
    var L = anObject(argumentsList);
    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
  }
});

},{"./_a-function":3,"./_an-object":6,"./_export":27,"./_fails":29,"./_global":33}],146:[function(require,module,exports){
// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
var $export = require('./_export');
var create = require('./_object-create');
var aFunction = require('./_a-function');
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var fails = require('./_fails');
var bind = require('./_bind');
var rConstruct = (require('./_global').Reflect || {}).construct;

// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function () {
  function F() { /* empty */ }
  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);
});
var ARGS_BUG = !fails(function () {
  rConstruct(function () { /* empty */ });
});

$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
  construct: function construct(Target, args /* , newTarget */) {
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);
    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0: return new Target();
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : Object.prototype);
    var result = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});

},{"./_a-function":3,"./_an-object":6,"./_bind":13,"./_export":27,"./_fails":29,"./_global":33,"./_is-object":44,"./_object-create":61}],147:[function(require,module,exports){
// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
var dP = require('./_object-dp');
var $export = require('./_export');
var anObject = require('./_an-object');
var toPrimitive = require('./_to-primitive');

// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
$export($export.S + $export.F * require('./_fails')(function () {
  // eslint-disable-next-line no-undef
  Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });
}), 'Reflect', {
  defineProperty: function defineProperty(target, propertyKey, attributes) {
    anObject(target);
    propertyKey = toPrimitive(propertyKey, true);
    anObject(attributes);
    try {
      dP.f(target, propertyKey, attributes);
      return true;
    } catch (e) {
      return false;
    }
  }
});

},{"./_an-object":6,"./_export":27,"./_fails":29,"./_object-dp":62,"./_to-primitive":97}],148:[function(require,module,exports){
// 26.1.4 Reflect.deleteProperty(target, propertyKey)
var $export = require('./_export');
var gOPD = require('./_object-gopd').f;
var anObject = require('./_an-object');

$export($export.S, 'Reflect', {
  deleteProperty: function deleteProperty(target, propertyKey) {
    var desc = gOPD(anObject(target), propertyKey);
    return desc && !desc.configurable ? false : delete target[propertyKey];
  }
});

},{"./_an-object":6,"./_export":27,"./_object-gopd":64}],149:[function(require,module,exports){
// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
var gOPD = require('./_object-gopd');
var $export = require('./_export');
var anObject = require('./_an-object');

$export($export.S, 'Reflect', {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
    return gOPD.f(anObject(target), propertyKey);
  }
});

},{"./_an-object":6,"./_export":27,"./_object-gopd":64}],150:[function(require,module,exports){
// 26.1.8 Reflect.getPrototypeOf(target)
var $export = require('./_export');
var getProto = require('./_object-gpo');
var anObject = require('./_an-object');

$export($export.S, 'Reflect', {
  getPrototypeOf: function getPrototypeOf(target) {
    return getProto(anObject(target));
  }
});

},{"./_an-object":6,"./_export":27,"./_object-gpo":68}],151:[function(require,module,exports){
// 26.1.6 Reflect.get(target, propertyKey [, receiver])
var gOPD = require('./_object-gopd');
var getPrototypeOf = require('./_object-gpo');
var has = require('./_has');
var $export = require('./_export');
var isObject = require('./_is-object');
var anObject = require('./_an-object');

function get(target, propertyKey /* , receiver */) {
  var receiver = arguments.length < 3 ? target : arguments[2];
  var desc, proto;
  if (anObject(target) === receiver) return target[propertyKey];
  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')
    ? desc.value
    : desc.get !== undefined
      ? desc.get.call(receiver)
      : undefined;
  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);
}

$export($export.S, 'Reflect', { get: get });

},{"./_an-object":6,"./_export":27,"./_has":34,"./_is-object":44,"./_object-gopd":64,"./_object-gpo":68}],152:[function(require,module,exports){
// 26.1.9 Reflect.has(target, propertyKey)
var $export = require('./_export');

$export($export.S, 'Reflect', {
  has: function has(target, propertyKey) {
    return propertyKey in target;
  }
});

},{"./_export":27}],153:[function(require,module,exports){
// 26.1.10 Reflect.isExtensible(target)
var $export = require('./_export');
var anObject = require('./_an-object');
var $isExtensible = Object.isExtensible;

$export($export.S, 'Reflect', {
  isExtensible: function isExtensible(target) {
    anObject(target);
    return $isExtensible ? $isExtensible(target) : true;
  }
});

},{"./_an-object":6,"./_export":27}],154:[function(require,module,exports){
// 26.1.11 Reflect.ownKeys(target)
var $export = require('./_export');

$export($export.S, 'Reflect', { ownKeys: require('./_own-keys') });

},{"./_export":27,"./_own-keys":73}],155:[function(require,module,exports){
// 26.1.12 Reflect.preventExtensions(target)
var $export = require('./_export');
var anObject = require('./_an-object');
var $preventExtensions = Object.preventExtensions;

$export($export.S, 'Reflect', {
  preventExtensions: function preventExtensions(target) {
    anObject(target);
    try {
      if ($preventExtensions) $preventExtensions(target);
      return true;
    } catch (e) {
      return false;
    }
  }
});

},{"./_an-object":6,"./_export":27}],156:[function(require,module,exports){
// 26.1.14 Reflect.setPrototypeOf(target, proto)
var $export = require('./_export');
var setProto = require('./_set-proto');

if (setProto) $export($export.S, 'Reflect', {
  setPrototypeOf: function setPrototypeOf(target, proto) {
    setProto.check(target, proto);
    try {
      setProto.set(target, proto);
      return true;
    } catch (e) {
      return false;
    }
  }
});

},{"./_export":27,"./_set-proto":80}],157:[function(require,module,exports){
// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
var dP = require('./_object-dp');
var gOPD = require('./_object-gopd');
var getPrototypeOf = require('./_object-gpo');
var has = require('./_has');
var $export = require('./_export');
var createDesc = require('./_property-desc');
var anObject = require('./_an-object');
var isObject = require('./_is-object');

function set(target, propertyKey, V /* , receiver */) {
  var receiver = arguments.length < 4 ? target : arguments[3];
  var ownDesc = gOPD.f(anObject(target), propertyKey);
  var existingDescriptor, proto;
  if (!ownDesc) {
    if (isObject(proto = getPrototypeOf(target))) {
      return set(proto, propertyKey, V, receiver);
    }
    ownDesc = createDesc(0);
  }
  if (has(ownDesc, 'value')) {
    if (ownDesc.writable === false || !isObject(receiver)) return false;
    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {
      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
      existingDescriptor.value = V;
      dP.f(receiver, propertyKey, existingDescriptor);
    } else dP.f(receiver, propertyKey, createDesc(0, V));
    return true;
  }
  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
}

$export($export.S, 'Reflect', { set: set });

},{"./_an-object":6,"./_export":27,"./_has":34,"./_is-object":44,"./_object-dp":62,"./_object-gopd":64,"./_object-gpo":68,"./_property-desc":76}],158:[function(require,module,exports){
// 21.2.5.3 get RegExp.prototype.flags()
if (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {
  configurable: true,
  get: require('./_flags')
});

},{"./_descriptors":23,"./_flags":31,"./_object-dp":62}],159:[function(require,module,exports){
// @@match logic
require('./_fix-re-wks')('match', 1, function (defined, MATCH, $match) {
  // 21.1.3.11 String.prototype.match(regexp)
  return [function match(regexp) {
    'use strict';
    var O = defined(this);
    var fn = regexp == undefined ? undefined : regexp[MATCH];
    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
  }, $match];
});

},{"./_fix-re-wks":30}],160:[function(require,module,exports){
// @@replace logic
require('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace) {
  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
  return [function replace(searchValue, replaceValue) {
    'use strict';
    var O = defined(this);
    var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
    return fn !== undefined
      ? fn.call(searchValue, O, replaceValue)
      : $replace.call(String(O), searchValue, replaceValue);
  }, $replace];
});

},{"./_fix-re-wks":30}],161:[function(require,module,exports){
// @@search logic
require('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search) {
  // 21.1.3.15 String.prototype.search(regexp)
  return [function search(regexp) {
    'use strict';
    var O = defined(this);
    var fn = regexp == undefined ? undefined : regexp[SEARCH];
    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
  }, $search];
});

},{"./_fix-re-wks":30}],162:[function(require,module,exports){
// @@split logic
require('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split) {
  'use strict';
  var isRegExp = require('./_is-regexp');
  var _split = $split;
  var $push = [].push;
  var $SPLIT = 'split';
  var LENGTH = 'length';
  var LAST_INDEX = 'lastIndex';
  if (
    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
    ''[$SPLIT](/.?/)[LENGTH]
  ) {
    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
    // based on es5-shim implementation, need to rework it
    $split = function (separator, limit) {
      var string = String(this);
      if (separator === undefined && limit === 0) return [];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) return _split.call(string, separator, limit);
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var separator2, match, lastIndex, lastLength, i;
      // Doesn't need flags gy, but they don't hurt
      if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
      while (match = separatorCopy.exec(string)) {
        // `separatorCopy.lastIndex` is not reliable cross-browser
        lastIndex = match.index + match[0][LENGTH];
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
          // eslint-disable-next-line no-loop-func
          if (!NPCG && match[LENGTH] > 1) match[0].replace(separator2, function () {
            for (i = 1; i < arguments[LENGTH] - 2; i++) if (arguments[i] === undefined) match[i] = undefined;
          });
          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
          lastLength = match[0][LENGTH];
          lastLastIndex = lastIndex;
          if (output[LENGTH] >= splitLimit) break;
        }
        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
      }
      if (lastLastIndex === string[LENGTH]) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
    };
  // Chakra, V8
  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
    $split = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
    };
  }
  // 21.1.3.17 String.prototype.split(separator, limit)
  return [function split(separator, limit) {
    var O = defined(this);
    var fn = separator == undefined ? undefined : separator[SPLIT];
    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
  }, $split];
});

},{"./_fix-re-wks":30,"./_is-regexp":45}],163:[function(require,module,exports){
'use strict';
var strong = require('./_collection-strong');
var validate = require('./_validate-collection');
var SET = 'Set';

// 23.2 Set Objects
module.exports = require('./_collection')(SET, function (get) {
  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.2.3.1 Set.prototype.add(value)
  add: function add(value) {
    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
  }
}, strong);

},{"./_collection":18,"./_collection-strong":16,"./_validate-collection":103}],164:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var $at = require('./_string-at')(false);
$export($export.P, 'String', {
  // 21.1.3.3 String.prototype.codePointAt(pos)
  codePointAt: function codePointAt(pos) {
    return $at(this, pos);
  }
});

},{"./_export":27,"./_string-at":86}],165:[function(require,module,exports){
// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
'use strict';
var $export = require('./_export');
var toLength = require('./_to-length');
var context = require('./_string-context');
var ENDS_WITH = 'endsWith';
var $endsWith = ''[ENDS_WITH];

$export($export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH), 'String', {
  endsWith: function endsWith(searchString /* , endPosition = @length */) {
    var that = context(this, searchString, ENDS_WITH);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = toLength(that.length);
    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);
    var search = String(searchString);
    return $endsWith
      ? $endsWith.call(that, search, end)
      : that.slice(end - search.length, end) === search;
  }
});

},{"./_export":27,"./_fails-is-regexp":28,"./_string-context":87,"./_to-length":95}],166:[function(require,module,exports){
var $export = require('./_export');
var toAbsoluteIndex = require('./_to-absolute-index');
var fromCharCode = String.fromCharCode;
var $fromCodePoint = String.fromCodePoint;

// length should be 1, old FF problem
$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
  // 21.1.2.2 String.fromCodePoint(...codePoints)
  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars
    var res = [];
    var aLen = arguments.length;
    var i = 0;
    var code;
    while (aLen > i) {
      code = +arguments[i++];
      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
      res.push(code < 0x10000
        ? fromCharCode(code)
        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
      );
    } return res.join('');
  }
});

},{"./_export":27,"./_to-absolute-index":91}],167:[function(require,module,exports){
// 21.1.3.7 String.prototype.includes(searchString, position = 0)
'use strict';
var $export = require('./_export');
var context = require('./_string-context');
var INCLUDES = 'includes';

$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~context(this, searchString, INCLUDES)
      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
  }
});

},{"./_export":27,"./_fails-is-regexp":28,"./_string-context":87}],168:[function(require,module,exports){
var $export = require('./_export');
var toIObject = require('./_to-iobject');
var toLength = require('./_to-length');

$export($export.S, 'String', {
  // 21.1.2.4 String.raw(callSite, ...substitutions)
  raw: function raw(callSite) {
    var tpl = toIObject(callSite.raw);
    var len = toLength(tpl.length);
    var aLen = arguments.length;
    var res = [];
    var i = 0;
    while (len > i) {
      res.push(String(tpl[i++]));
      if (i < aLen) res.push(String(arguments[i]));
    } return res.join('');
  }
});

},{"./_export":27,"./_to-iobject":94,"./_to-length":95}],169:[function(require,module,exports){
var $export = require('./_export');

$export($export.P, 'String', {
  // 21.1.3.13 String.prototype.repeat(count)
  repeat: require('./_string-repeat')
});

},{"./_export":27,"./_string-repeat":89}],170:[function(require,module,exports){
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
'use strict';
var $export = require('./_export');
var toLength = require('./_to-length');
var context = require('./_string-context');
var STARTS_WITH = 'startsWith';
var $startsWith = ''[STARTS_WITH];

$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = context(this, searchString, STARTS_WITH);
    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = String(searchString);
    return $startsWith
      ? $startsWith.call(that, search, index)
      : that.slice(index, index + search.length) === search;
  }
});

},{"./_export":27,"./_fails-is-regexp":28,"./_string-context":87,"./_to-length":95}],171:[function(require,module,exports){
'use strict';
// ECMAScript 6 symbols shim
var global = require('./_global');
var has = require('./_has');
var DESCRIPTORS = require('./_descriptors');
var $export = require('./_export');
var redefine = require('./_redefine');
var META = require('./_meta').KEY;
var $fails = require('./_fails');
var shared = require('./_shared');
var setToStringTag = require('./_set-to-string-tag');
var uid = require('./_uid');
var wks = require('./_wks');
var wksExt = require('./_wks-ext');
var wksDefine = require('./_wks-define');
var enumKeys = require('./_enum-keys');
var isArray = require('./_is-array');
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var createDesc = require('./_property-desc');
var _create = require('./_object-create');
var gOPNExt = require('./_object-gopn-ext');
var $GOPD = require('./_object-gopd');
var $DP = require('./_object-dp');
var $keys = require('./_object-keys');
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
  require('./_object-pie').f = $propertyIsEnumerable;
  require('./_object-gops').f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !require('./_library')) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);

},{"./_an-object":6,"./_descriptors":23,"./_enum-keys":26,"./_export":27,"./_fails":29,"./_global":33,"./_has":34,"./_hide":35,"./_is-array":42,"./_is-object":44,"./_library":52,"./_meta":57,"./_object-create":61,"./_object-dp":62,"./_object-gopd":64,"./_object-gopn":66,"./_object-gopn-ext":65,"./_object-gops":67,"./_object-keys":70,"./_object-pie":71,"./_property-desc":76,"./_redefine":78,"./_set-to-string-tag":82,"./_shared":84,"./_to-iobject":94,"./_to-primitive":97,"./_uid":101,"./_wks":106,"./_wks-define":104,"./_wks-ext":105}],172:[function(require,module,exports){
'use strict';
var $export = require('./_export');
var $typed = require('./_typed');
var buffer = require('./_typed-buffer');
var anObject = require('./_an-object');
var toAbsoluteIndex = require('./_to-absolute-index');
var toLength = require('./_to-length');
var isObject = require('./_is-object');
var ArrayBuffer = require('./_global').ArrayBuffer;
var speciesConstructor = require('./_species-constructor');
var $ArrayBuffer = buffer.ArrayBuffer;
var $DataView = buffer.DataView;
var $isView = $typed.ABV && ArrayBuffer.isView;
var $slice = $ArrayBuffer.prototype.slice;
var VIEW = $typed.VIEW;
var ARRAY_BUFFER = 'ArrayBuffer';

$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), { ArrayBuffer: $ArrayBuffer });

$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
  // 24.1.3.1 ArrayBuffer.isView(arg)
  isView: function isView(it) {
    return $isView && $isView(it) || isObject(it) && VIEW in it;
  }
});

$export($export.P + $export.U + $export.F * require('./_fails')(function () {
  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
}), ARRAY_BUFFER, {
  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
  slice: function slice(start, end) {
    if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix
    var len = anObject(this).byteLength;
    var first = toAbsoluteIndex(start, len);
    var fin = toAbsoluteIndex(end === undefined ? len : end, len);
    var result = new (speciesConstructor(this, $ArrayBuffer))(toLength(fin - first));
    var viewS = new $DataView(this);
    var viewT = new $DataView(result);
    var index = 0;
    while (first < fin) {
      viewT.setUint8(index++, viewS.getUint8(first++));
    } return result;
  }
});

require('./_set-species')(ARRAY_BUFFER);

},{"./_an-object":6,"./_export":27,"./_fails":29,"./_global":33,"./_is-object":44,"./_set-species":81,"./_species-constructor":85,"./_to-absolute-index":91,"./_to-length":95,"./_typed":100,"./_typed-buffer":99}],173:[function(require,module,exports){
require('./_typed-array')('Float32', 4, function (init) {
  return function Float32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":98}],174:[function(require,module,exports){
require('./_typed-array')('Float64', 8, function (init) {
  return function Float64Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":98}],175:[function(require,module,exports){
require('./_typed-array')('Int16', 2, function (init) {
  return function Int16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":98}],176:[function(require,module,exports){
require('./_typed-array')('Int32', 4, function (init) {
  return function Int32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":98}],177:[function(require,module,exports){
require('./_typed-array')('Int8', 1, function (init) {
  return function Int8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":98}],178:[function(require,module,exports){
require('./_typed-array')('Uint16', 2, function (init) {
  return function Uint16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":98}],179:[function(require,module,exports){
require('./_typed-array')('Uint32', 4, function (init) {
  return function Uint32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":98}],180:[function(require,module,exports){
require('./_typed-array')('Uint8', 1, function (init) {
  return function Uint8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":98}],181:[function(require,module,exports){
require('./_typed-array')('Uint8', 1, function (init) {
  return function Uint8ClampedArray(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
}, true);

},{"./_typed-array":98}],182:[function(require,module,exports){
'use strict';
var each = require('./_array-methods')(0);
var redefine = require('./_redefine');
var meta = require('./_meta');
var assign = require('./_object-assign');
var weak = require('./_collection-weak');
var isObject = require('./_is-object');
var fails = require('./_fails');
var validate = require('./_validate-collection');
var WEAK_MAP = 'WeakMap';
var getWeak = meta.getWeak;
var isExtensible = Object.isExtensible;
var uncaughtFrozenStore = weak.ufstore;
var tmp = {};
var InternalMap;

var wrapper = function (get) {
  return function WeakMap() {
    return get(this, arguments.length > 0 ? arguments[0] : undefined);
  };
};

var methods = {
  // 23.3.3.3 WeakMap.prototype.get(key)
  get: function get(key) {
    if (isObject(key)) {
      var data = getWeak(key);
      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
      return data ? data[this._i] : undefined;
    }
  },
  // 23.3.3.5 WeakMap.prototype.set(key, value)
  set: function set(key, value) {
    return weak.def(validate(this, WEAK_MAP), key, value);
  }
};

// 23.3 WeakMap Objects
var $WeakMap = module.exports = require('./_collection')(WEAK_MAP, wrapper, methods, weak, true, true);

// IE11 WeakMap frozen keys fix
if (fails(function () { return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7; })) {
  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
  assign(InternalMap.prototype, methods);
  meta.NEED = true;
  each(['delete', 'has', 'get', 'set'], function (key) {
    var proto = $WeakMap.prototype;
    var method = proto[key];
    redefine(proto, key, function (a, b) {
      // store frozen objects on internal weakmap shim
      if (isObject(a) && !isExtensible(a)) {
        if (!this._f) this._f = new InternalMap();
        var result = this._f[key](a, b);
        return key == 'set' ? this : result;
      // store all the rest on native weakmap
      } return method.call(this, a, b);
    });
  });
}

},{"./_array-methods":10,"./_collection":18,"./_collection-weak":17,"./_fails":29,"./_is-object":44,"./_meta":57,"./_object-assign":60,"./_redefine":78,"./_validate-collection":103}],183:[function(require,module,exports){
'use strict';
var weak = require('./_collection-weak');
var validate = require('./_validate-collection');
var WEAK_SET = 'WeakSet';

// 23.4 WeakSet Objects
require('./_collection')(WEAK_SET, function (get) {
  return function WeakSet() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.4.3.1 WeakSet.prototype.add(value)
  add: function add(value) {
    return weak.def(validate(this, WEAK_SET), value, true);
  }
}, weak, false, true);

},{"./_collection":18,"./_collection-weak":17,"./_validate-collection":103}],184:[function(require,module,exports){
'use strict';
// https://github.com/tc39/Array.prototype.includes
var $export = require('./_export');
var $includes = require('./_array-includes')(true);

$export($export.P, 'Array', {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

require('./_add-to-unscopables')('includes');

},{"./_add-to-unscopables":4,"./_array-includes":9,"./_export":27}],185:[function(require,module,exports){
// https://github.com/tc39/proposal-object-values-entries
var $export = require('./_export');
var $entries = require('./_object-to-array')(true);

$export($export.S, 'Object', {
  entries: function entries(it) {
    return $entries(it);
  }
});

},{"./_export":27,"./_object-to-array":72}],186:[function(require,module,exports){
// https://github.com/tc39/proposal-object-getownpropertydescriptors
var $export = require('./_export');
var ownKeys = require('./_own-keys');
var toIObject = require('./_to-iobject');
var gOPD = require('./_object-gopd');
var createProperty = require('./_create-property');

$export($export.S, 'Object', {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIObject(object);
    var getDesc = gOPD.f;
    var keys = ownKeys(O);
    var result = {};
    var i = 0;
    var key, desc;
    while (keys.length > i) {
      desc = getDesc(O, key = keys[i++]);
      if (desc !== undefined) createProperty(result, key, desc);
    }
    return result;
  }
});

},{"./_create-property":20,"./_export":27,"./_object-gopd":64,"./_own-keys":73,"./_to-iobject":94}],187:[function(require,module,exports){
// https://github.com/tc39/proposal-object-values-entries
var $export = require('./_export');
var $values = require('./_object-to-array')(false);

$export($export.S, 'Object', {
  values: function values(it) {
    return $values(it);
  }
});

},{"./_export":27,"./_object-to-array":72}],188:[function(require,module,exports){
'use strict';
// https://github.com/tc39/proposal-string-pad-start-end
var $export = require('./_export');
var $pad = require('./_string-pad');
var userAgent = require('./_user-agent');

// https://github.com/zloirock/core-js/issues/280
$export($export.P + $export.F * /Version\/10\.\d+(\.\d+)? Safari\//.test(userAgent), 'String', {
  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
  }
});

},{"./_export":27,"./_string-pad":88,"./_user-agent":102}],189:[function(require,module,exports){
'use strict';
// https://github.com/tc39/proposal-string-pad-start-end
var $export = require('./_export');
var $pad = require('./_string-pad');
var userAgent = require('./_user-agent');

// https://github.com/zloirock/core-js/issues/280
$export($export.P + $export.F * /Version\/10\.\d+(\.\d+)? Safari\//.test(userAgent), 'String', {
  padStart: function padStart(maxLength /* , fillString = ' ' */) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
  }
});

},{"./_export":27,"./_string-pad":88,"./_user-agent":102}],190:[function(require,module,exports){
var $iterators = require('./es6.array.iterator');
var getKeys = require('./_object-keys');
var redefine = require('./_redefine');
var global = require('./_global');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var wks = require('./_wks');
var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;
  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
  }
}

},{"./_global":33,"./_hide":35,"./_iterators":51,"./_object-keys":70,"./_redefine":78,"./_wks":106,"./es6.array.iterator":113}],191:[function(require,module,exports){
var $export = require('./_export');
var $task = require('./_task');
$export($export.G + $export.B, {
  setImmediate: $task.set,
  clearImmediate: $task.clear
});

},{"./_export":27,"./_task":90}],192:[function(require,module,exports){
// ie9- setTimeout & setInterval additional parameters fix
var global = require('./_global');
var $export = require('./_export');
var userAgent = require('./_user-agent');
var slice = [].slice;
var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check
var wrap = function (set) {
  return function (fn, time /* , ...args */) {
    var boundArgs = arguments.length > 2;
    var args = boundArgs ? slice.call(arguments, 2) : false;
    return set(boundArgs ? function () {
      // eslint-disable-next-line no-new-func
      (typeof fn == 'function' ? fn : Function(fn)).apply(this, args);
    } : fn, time);
  };
};
$export($export.G + $export.B + $export.F * MSIE, {
  setTimeout: wrap(global.setTimeout),
  setInterval: wrap(global.setInterval)
});

},{"./_export":27,"./_global":33,"./_user-agent":102}],193:[function(require,module,exports){
/* FileSaver.js
 * A saveAs() FileSaver implementation.
 * 1.1.20150716
 *
 * By Eli Grey, http://eligrey.com
 * License: X11/MIT
 *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md
 */

/*global self */
/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */

/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */

var saveAs = saveAs || (function(view) {
	"use strict";
	// IE <10 is explicitly unsupported
	if (typeof navigator !== "undefined" && /MSIE [1-9]\./.test(navigator.userAgent)) {
		return;
	}
	var
		  doc = view.document
		  // only get URL when necessary in case Blob.js hasn't overridden it yet
		, get_URL = function() {
			return view.URL || view.webkitURL || view;
		}
		, save_link = doc.createElementNS("http://www.w3.org/1999/xhtml", "a")
		, can_use_save_link = "download" in save_link
		, click = function(node) {
			var event = new MouseEvent("click");
			node.dispatchEvent(event);
		}
		, webkit_req_fs = view.webkitRequestFileSystem
		, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem
		, throw_outside = function(ex) {
			(view.setImmediate || view.setTimeout)(function() {
				throw ex;
			}, 0);
		}
		, force_saveable_type = "application/octet-stream"
		, fs_min_size = 0
		// See https://code.google.com/p/chromium/issues/detail?id=375297#c7 and
		// https://github.com/eligrey/FileSaver.js/commit/485930a#commitcomment-8768047
		// for the reasoning behind the timeout and revocation flow
		, arbitrary_revoke_timeout = 500 // in ms
		, revoke = function(file) {
			var revoker = function() {
				if (typeof file === "string") { // file is an object URL
					get_URL().revokeObjectURL(file);
				} else { // file is a File
					file.remove();
				}
			};
			if (view.chrome) {
				revoker();
			} else {
				setTimeout(revoker, arbitrary_revoke_timeout);
			}
		}
		, dispatch = function(filesaver, event_types, event) {
			event_types = [].concat(event_types);
			var i = event_types.length;
			while (i--) {
				var listener = filesaver["on" + event_types[i]];
				if (typeof listener === "function") {
					try {
						listener.call(filesaver, event || filesaver);
					} catch (ex) {
						throw_outside(ex);
					}
				}
			}
		}
		, auto_bom = function(blob) {
			// prepend BOM for UTF-8 XML and text/* types (including HTML)
			if (/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(blob.type)) {
				return new Blob(["\ufeff", blob], {type: blob.type});
			}
			return blob;
		}
		, FileSaver = function(blob, name, no_auto_bom) {
			if (!no_auto_bom) {
				blob = auto_bom(blob);
			}
			// First try a.download, then web filesystem, then object URLs
			var
				  filesaver = this
				, type = blob.type
				, blob_changed = false
				, object_url
				, target_view
				, dispatch_all = function() {
					dispatch(filesaver, "writestart progress write writeend".split(" "));
				}
				// on any filesys errors revert to saving with object URLs
				, fs_error = function() {
					// don't create more object URLs than needed
					if (blob_changed || !object_url) {
						object_url = get_URL().createObjectURL(blob);
					}
					if (target_view) {
						target_view.location.href = object_url;
					} else {
						var new_tab = view.open(object_url, "_blank");
						if (new_tab == undefined && typeof safari !== "undefined") {
							//Apple do not allow window.open, see http://bit.ly/1kZffRI
							view.location.href = object_url
						}
					}
					filesaver.readyState = filesaver.DONE;
					dispatch_all();
					revoke(object_url);
				}
				, abortable = function(func) {
					return function() {
						if (filesaver.readyState !== filesaver.DONE) {
							return func.apply(this, arguments);
						}
					};
				}
				, create_if_not_found = {create: true, exclusive: false}
				, slice
			;
			filesaver.readyState = filesaver.INIT;
			if (!name) {
				name = "download";
			}
			if (can_use_save_link) {
				object_url = get_URL().createObjectURL(blob);
				save_link.href = object_url;
				save_link.download = name;
				setTimeout(function() {
					click(save_link);
					dispatch_all();
					revoke(object_url);
					filesaver.readyState = filesaver.DONE;
				});
				return;
			}
			// Object and web filesystem URLs have a problem saving in Google Chrome when
			// viewed in a tab, so I force save with application/octet-stream
			// http://code.google.com/p/chromium/issues/detail?id=91158
			// Update: Google errantly closed 91158, I submitted it again:
			// https://code.google.com/p/chromium/issues/detail?id=389642
			if (view.chrome && type && type !== force_saveable_type) {
				slice = blob.slice || blob.webkitSlice;
				blob = slice.call(blob, 0, blob.size, force_saveable_type);
				blob_changed = true;
			}
			// Since I can't be sure that the guessed media type will trigger a download
			// in WebKit, I append .download to the filename.
			// https://bugs.webkit.org/show_bug.cgi?id=65440
			if (webkit_req_fs && name !== "download") {
				name += ".download";
			}
			if (type === force_saveable_type || webkit_req_fs) {
				target_view = view;
			}
			if (!req_fs) {
				fs_error();
				return;
			}
			fs_min_size += blob.size;
			req_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {
				fs.root.getDirectory("saved", create_if_not_found, abortable(function(dir) {
					var save = function() {
						dir.getFile(name, create_if_not_found, abortable(function(file) {
							file.createWriter(abortable(function(writer) {
								writer.onwriteend = function(event) {
									target_view.location.href = file.toURL();
									filesaver.readyState = filesaver.DONE;
									dispatch(filesaver, "writeend", event);
									revoke(file);
								};
								writer.onerror = function() {
									var error = writer.error;
									if (error.code !== error.ABORT_ERR) {
										fs_error();
									}
								};
								"writestart progress write abort".split(" ").forEach(function(event) {
									writer["on" + event] = filesaver["on" + event];
								});
								writer.write(blob);
								filesaver.abort = function() {
									writer.abort();
									filesaver.readyState = filesaver.DONE;
								};
								filesaver.readyState = filesaver.WRITING;
							}), fs_error);
						}), fs_error);
					};
					dir.getFile(name, {create: false}, abortable(function(file) {
						// delete file if it already exists
						file.remove();
						save();
					}), abortable(function(ex) {
						if (ex.code === ex.NOT_FOUND_ERR) {
							save();
						} else {
							fs_error();
						}
					}));
				}), fs_error);
			}), fs_error);
		}
		, FS_proto = FileSaver.prototype
		, saveAs = function(blob, name, no_auto_bom) {
			return new FileSaver(blob, name, no_auto_bom);
		}
	;
	// IE 10+ (native saveAs)
	if (typeof navigator !== "undefined" && navigator.msSaveOrOpenBlob) {
		return function(blob, name, no_auto_bom) {
			if (!no_auto_bom) {
				blob = auto_bom(blob);
			}
			return navigator.msSaveOrOpenBlob(blob, name || "download");
		};
	}

	FS_proto.abort = function() {
		var filesaver = this;
		filesaver.readyState = filesaver.DONE;
		dispatch(filesaver, "abort");
	};
	FS_proto.readyState = FS_proto.INIT = 0;
	FS_proto.WRITING = 1;
	FS_proto.DONE = 2;

	FS_proto.error =
	FS_proto.onwritestart =
	FS_proto.onprogress =
	FS_proto.onwrite =
	FS_proto.onabort =
	FS_proto.onerror =
	FS_proto.onwriteend =
		null;

	return saveAs;
}(
	   typeof self !== "undefined" && self
	|| typeof window !== "undefined" && window
	|| this.content
));
// `self` is undefined in Firefox for Android content script context
// while `this` is nsIContentFrameMessageManager
// with an attribute `content` that corresponds to the window

if (typeof module !== "undefined" && module.exports) {
  module.exports.saveAs = saveAs;
} else if ((typeof define !== "undefined" && define !== null) && (define.amd != null)) {
  define([], function() {
    return saveAs;
  });
}

},{}],194:[function(require,module,exports){
var dom = {};

module.exports = dom;

/**
 * @param {string} name
 * @return {Element}
 */
dom.createElement = function (name) {
  return document.createElement(name);
};

/**
 * @param {string} text
 * @return {Text}
 */
dom.createText = function (text) {
  return document.createTextNode(text);
};

/**
 * @param {Element} element
 * @param {string} style
 */
dom.style = function (element, style) {
  element.style.cssText = style;
};

/**
 * @param {Node} parent
 * @param {Node} child
 */
dom.append = function (parent, child) {
  parent.appendChild(child);
};

/**
 * @param {Node} parent
 * @param {Node} child
 */
dom.remove = function (parent, child) {
  parent.removeChild(child);
};

},{}],195:[function(require,module,exports){
var Promise = require('promise');
var dom = require('./dom');
var Ruler = require('./ruler');

/**
 * @constructor
 *
 * @param {string} family
 * @param [fontface.Descriptors] descriptors
 */
var Observer = function (family, descriptors) {
  descriptors = descriptors || {weight: 'normal'};

  /**
   * @type {string}
   */
  this['family'] = family;

  /**
   * @type {string}
   */
  this['style'] = descriptors.style || 'normal';

  /**
   * @type {string}
   */
  this['variant'] = descriptors.variant || 'normal';

  /**
   * @type {string}
   */
  this['weight'] = descriptors.weight || 'normal';

  /**
   * @type {string}
   */
  this['stretch'] = descriptors.stretch || 'stretch';

  /**
   * @type {string}
   */
  this['featureSettings'] = descriptors.featureSettings || 'normal';
};

module.exports = Observer;

/**
 * @type {null|boolean}
 */
Observer.HAS_WEBKIT_FALLBACK_BUG = null;

/**
 * @type {number}
 */
Observer.DEFAULT_TIMEOUT = 3000;

/**
 * @return {string}
 */
Observer.getUserAgent = function () {
  return window.navigator.userAgent;
};

/**
 * Returns true if this browser is WebKit and it has the fallback bug
 * which is present in WebKit 536.11 and earlier.
 *
 * @return {boolean}
 */
Observer.hasWebKitFallbackBug = function () {
  if (Observer.HAS_WEBKIT_FALLBACK_BUG === null) {
    var match = /AppleWeb[kK]it\/([0-9]+)(?:\.([0-9]+))/.exec(Observer.getUserAgent());

    Observer.HAS_WEBKIT_FALLBACK_BUG = !!match &&
                                        (parseInt(match[1], 10) < 536 ||
                                         (parseInt(match[1], 10) === 536 &&
                                          parseInt(match[2], 10) <= 11));
  }
  return Observer.HAS_WEBKIT_FALLBACK_BUG;
};

/**
 * @private
 * @return {string}
 */
Observer.prototype.getStyle = function () {
  return 'font-style:' + this['style'] + ';' +
         'font-variant:' + this['variant'] + ';' +
         'font-weight:' + this['weight'] + ';' +
         'font-stretch:' + this['stretch'] + ';' +
         'font-feature-settings:' + this['featureSettings'] + ';' +
         '-moz-font-feature-settings:' + this['featureSettings'] + ';' +
         '-webkit-font-feature-settings:' + this['featureSettings'] + ';';
};

/**
 * @param {string=} text Optional test string to use for detecting if a font is available.
 * @param {number=} timeout Optional timeout for giving up on font load detection and rejecting the promise (defaults to 3 seconds).
 * @return {Promise.<fontface.Observer>}
 */
Observer.prototype.check = function (text, timeout) {
  var testString = text || 'BESbswy',
      timeoutValue = timeout || Observer.DEFAULT_TIMEOUT,
      style = this.getStyle(),
      container = dom.createElement('div'),

      rulerA = new Ruler(testString),
      rulerB = new Ruler(testString),
      rulerC = new Ruler(testString),

      widthA = -1,
      widthB = -1,
      widthC = -1,

      fallbackWidthA = -1,
      fallbackWidthB = -1,
      fallbackWidthC = -1,

      that = this;

  rulerA.setFont('"Times New Roman", sans-serif', style);
  rulerB.setFont('serif', style);
  rulerC.setFont('monospace', style);

  dom.append(container, rulerA.getElement());
  dom.append(container, rulerB.getElement());
  dom.append(container, rulerC.getElement());

  dom.append(document.body, container);

  fallbackWidthA = rulerA.getWidth();
  fallbackWidthB = rulerB.getWidth();
  fallbackWidthC = rulerC.getWidth();

  return new Promise(function (resolve, reject) {
    /**
     * @private
     */
    function removeContainer() {
      if (container.parentNode !== null) {
        dom.remove(document.body, container);
      }
    }

    /**
     * @private
     *
     * Cases:
     * 1) Font loads: both a, b and c are called and have the same value.
     * 2) Font fails to load: resize callback is never called and timeout happens.
     * 3) WebKit bug: both a, b and c are called and have the same value, but the
     *    values are equal to one of the last resort fonts, we ignore this and
     *    continue waiting until we get new values (or a timeout).
     */
    function check() {
      if (widthA !== -1 && widthB !== -1 && widthC !== -1) {
        // All values are changed from their initial state

        if (widthA === widthB && widthB === widthC) {
          // All values are the same, so the browser has most likely loaded the web font

          if (Observer.hasWebKitFallbackBug()) {
            // Except if the browser has the WebKit fallback bug, in which case we check to see if all
            // values are set to one of the last resort fonts.

            if (!((widthA === fallbackWidthA && widthB === fallbackWidthA && widthC === fallbackWidthA) ||
                  (widthA === fallbackWidthB && widthB === fallbackWidthB && widthC === fallbackWidthB) ||
                  (widthA === fallbackWidthC && widthB === fallbackWidthC && widthC === fallbackWidthC))) {
              // The width we got doesn't match any of the known last resort fonts, so let's assume fonts are loaded.
              removeContainer();
              resolve(that);
            }
          } else {
            removeContainer();
            resolve(that);
          }
        }
      }
    }

    setTimeout(function () {
      removeContainer();
      reject(that);
    }, timeoutValue);

    rulerA.onResize(function (width) {
      widthA = width;
      check();
    });

    rulerA.setFont(that['family'] + ',sans-serif', style);

    rulerB.onResize(function (width) {
      widthB = width;
      check();
    });

    rulerB.setFont(that['family'] + ',serif', style);

    rulerC.onResize(function (width) {
      widthC = width;
      check();
    });

    rulerC.setFont(that['family'] + ',monospace', style);
  });
};

},{"./dom":194,"./ruler":196,"promise":487}],196:[function(require,module,exports){
var dom = require('./dom');

/**
 * @constructor
 * @param {string} text
 */
var Ruler = function (text) {
  var style = 'display:inline-block;' +
    'position:absolute;' +
    'height:100%;' +
    'width:100%;' +
    'overflow:scroll;';

  this.element = dom.createElement('div');
  this.element.setAttribute('aria-hidden', 'true');

  dom.append(this.element, dom.createText(text));

  this.collapsible = dom.createElement('span');
  this.expandable = dom.createElement('span');
  this.collapsibleInner = dom.createElement('span');
  this.expandableInner = dom.createElement('span');

  this.lastOffsetWidth = -1;

  dom.style(this.collapsible, style);
  dom.style(this.expandable, style);
  dom.style(this.expandableInner, style);
  dom.style(this.collapsibleInner, 'display:inline-block;width:200%;height:200%;');

  dom.append(this.collapsible, this.collapsibleInner);
  dom.append(this.expandable, this.expandableInner);

  dom.append(this.element, this.collapsible);
  dom.append(this.element, this.expandable);
};

module.exports = Ruler;

/**
 * @return {Element}
 */
Ruler.prototype.getElement = function () {
  return this.element;
};

/**
 * @param {string} family
 * @param {string} description
 */
Ruler.prototype.setFont = function (family, description) {
  dom.style(this.element, 'min-width:20px;' +
            'min-height:20px;' +
            'display:inline-block;' +
            'position:absolute;' +
            'width:auto;' +
            'margin:0;' +
            'padding:0;' +
            'top:-999px;' +
            'left:-999px;' +
            'white-space:nowrap;' +
            'font-size:100px;' +
            'font-family:' + family + ';' +
            description);
};

/**
 * @return {number}
 */
Ruler.prototype.getWidth = function () {
  return this.element.offsetWidth;
};

/**
 * @param {string} width
 */
Ruler.prototype.setWidth = function (width) {
  this.element.style.width = width + 'px';
};

/**
 * @private
 *
 * @return {boolean}
 */
Ruler.prototype.reset = function () {
  var offsetWidth = this.getWidth(),
    width = offsetWidth + 100;

  this.expandableInner.style.width = width + 'px';
  this.expandable.scrollLeft = width;
  this.collapsible.scrollLeft = this.collapsible.scrollWidth + 100;

  if (this.lastOffsetWidth !== offsetWidth) {
    this.lastOffsetWidth = offsetWidth;
    return true;
  } else {
    return false;
  }
};

/**
 * @private
 * @param {function(number)} callback
 */
Ruler.prototype.onScroll = function (callback) {
  if (this.reset() && this.element.parentNode !== null) {
    callback(this.lastOffsetWidth);
  }
};

/**
 * @param {function(number)} callback
 */
Ruler.prototype.onResize = function (callback) {
  var that = this;

  this.collapsible.addEventListener('scroll', function () {
    that.onScroll(callback);
  }, false);
  this.expandable.addEventListener('scroll', function () {
    that.onScroll(callback);
  }, false);
  this.reset();
};

},{"./dom":194}],197:[function(require,module,exports){
'use strict';

var helpers = require('./helpers');

/** @type ValidatorResult */
var ValidatorResult = helpers.ValidatorResult;
/** @type SchemaError */
var SchemaError = helpers.SchemaError;

var attribute = {};

attribute.ignoreProperties = {
  // informative properties
  'id': true,
  'default': true,
  'description': true,
  'title': true,
  // arguments to other properties
  'exclusiveMinimum': true,
  'exclusiveMaximum': true,
  'additionalItems': true,
  // special-handled properties
  '$schema': true,
  '$ref': true,
  'extends': true
};

/**
 * @name validators
 */
var validators = attribute.validators = {};

/**
 * Validates whether the instance if of a certain type
 * @param instance
 * @param schema
 * @param options
 * @param ctx
 * @return {ValidatorResult|null}
 */
validators.type = function validateType (instance, schema, options, ctx) {
  // Ignore undefined instances
  if (instance === undefined) {
    return null;
  }
  var result = new ValidatorResult(instance, schema, options, ctx);
  var types = Array.isArray(schema.type) ? schema.type : [schema.type];
  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {
    var list = types.map(function (v) {
      return v.id && ('<' + v.id + '>') || (v+'');
    });
    result.addError({
      name: 'type',
      argument: list,
      message: "is not of a type(s) " + list,
    });
  }
  return result;
};

function testSchema(instance, options, ctx, callback, schema){
  var res = this.validateSchema(instance, schema, options, ctx);
  if (! res.valid && callback instanceof Function) {
    callback(res);
  }
  return res.valid;
}

/**
 * Validates whether the instance matches some of the given schemas
 * @param instance
 * @param schema
 * @param options
 * @param ctx
 * @return {ValidatorResult|null}
 */
validators.anyOf = function validateAnyOf (instance, schema, options, ctx) {
  // Ignore undefined instances
  if (instance === undefined) {
    return null;
  }
  var result = new ValidatorResult(instance, schema, options, ctx);
  var inner = new ValidatorResult(instance, schema, options, ctx);
  if (!Array.isArray(schema.anyOf)){
    throw new SchemaError("anyOf must be an array");
  }
  if (!schema.anyOf.some(
    testSchema.bind(
      this, instance, options, ctx, function(res){inner.importErrors(res);}
      ))) {
    var list = schema.anyOf.map(function (v, i) {
      return (v.id && ('<' + v.id + '>')) || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';
    });
    if (options.nestedErrors) {
      result.importErrors(inner);
    }
    result.addError({
      name: 'anyOf',
      argument: list,
      message: "is not any of " + list.join(','),
    });
  }
  return result;
};

/**
 * Validates whether the instance matches every given schema
 * @param instance
 * @param schema
 * @param options
 * @param ctx
 * @return {String|null}
 */
validators.allOf = function validateAllOf (instance, schema, options, ctx) {
  // Ignore undefined instances
  if (instance === undefined) {
    return null;
  }
  if (!Array.isArray(schema.allOf)){
    throw new SchemaError("allOf must be an array");
  }
  var result = new ValidatorResult(instance, schema, options, ctx);
  var self = this;
  schema.allOf.forEach(function(v, i){
    var valid = self.validateSchema(instance, v, options, ctx);
    if(!valid.valid){
      var msg = (v.id && ('<' + v.id + '>')) || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';
      result.addError({
        name: 'allOf',
        argument: { id: msg, length: valid.errors.length, valid: valid },
        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',
      });
      result.importErrors(valid);
    }
  });
  return result;
};

/**
 * Validates whether the instance matches exactly one of the given schemas
 * @param instance
 * @param schema
 * @param options
 * @param ctx
 * @return {String|null}
 */
validators.oneOf = function validateOneOf (instance, schema, options, ctx) {
  // Ignore undefined instances
  if (instance === undefined) {
    return null;
  }
  if (!Array.isArray(schema.oneOf)){
    throw new SchemaError("oneOf must be an array");
  }
  var result = new ValidatorResult(instance, schema, options, ctx);
  var inner = new ValidatorResult(instance, schema, options, ctx);
  var count = schema.oneOf.filter(
    testSchema.bind(
      this, instance, options, ctx, function(res) {inner.importErrors(res);}
      ) ).length;
  var list = schema.oneOf.map(function (v, i) {
    return (v.id && ('<' + v.id + '>')) || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';
  });
  if (count!==1) {
    if (options.nestedErrors) {
      result.importErrors(inner);
    }
    result.addError({
      name: 'oneOf',
      argument: list,
      message: "is not exactly one from " + list.join(','),
    });
  }
  return result;
};

/**
 * Validates properties
 * @param instance
 * @param schema
 * @param options
 * @param ctx
 * @return {String|null|ValidatorResult}
 */
validators.properties = function validateProperties (instance, schema, options, ctx) {
  if(instance === undefined || !(instance instanceof Object)) return;
  var result = new ValidatorResult(instance, schema, options, ctx);
  var properties = schema.properties || {};
  for (var property in properties) {
    var prop = (instance || undefined) && instance[property];
    var res = this.validateSchema(prop, properties[property], options, ctx.makeChild(properties[property], property));
    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;
    result.importErrors(res);
  }
  return result;
};

/**
 * Test a specific property within in instance against the additionalProperties schema attribute
 * This ignores properties with definitions in the properties schema attribute, but no other attributes.
 * If too many more types of property-existance tests pop up they may need their own class of tests (like `type` has)
 * @private
 * @return {boolean}
 */
function testAdditionalProperty (instance, schema, options, ctx, property, result) {
  if (schema.properties && schema.properties[property] !== undefined) {
    return;
  }
  if (schema.additionalProperties === false) {
    result.addError({
      name: 'additionalProperties',
      argument: property,
      message: "additionalProperty " + JSON.stringify(property) + " exists in instance when not allowed",
    });
  } else {
    var additionalProperties = schema.additionalProperties || {};
    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));
    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;
    result.importErrors(res);
  }
}

/**
 * Validates patternProperties
 * @param instance
 * @param schema
 * @param options
 * @param ctx
 * @return {String|null|ValidatorResult}
 */
validators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {
  if(instance === undefined) return;
  if(!this.types.object(instance)) return;
  var result = new ValidatorResult(instance, schema, options, ctx);
  var patternProperties = schema.patternProperties || {};

  for (var property in instance) {
    var test = true;
    for (var pattern in patternProperties) {
      var expr = new RegExp(pattern);
      if (!expr.test(property)) {
        continue;
      }
      test = false;
      var res = this.validateSchema(instance[property], patternProperties[pattern], options, ctx.makeChild(patternProperties[pattern], property));
      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;
      result.importErrors(res);
    }
    if (test) {
      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);
    }
  }

  return result;
};

/**
 * Validates additionalProperties
 * @param instance
 * @param schema
 * @param options
 * @param ctx
 * @return {String|null|ValidatorResult}
 */
validators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {
  if(instance === undefined) return;
  if(!this.types.object(instance)) return;
  // if patternProperties is defined then we'll test when that one is called instead
  if (schema.patternProperties) {
    return null;
  }
  var result = new ValidatorResult(instance, schema, options, ctx);
  for (var property in instance) {
    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);
  }
  return result;
};

/**
 * Validates whether the instance value is at least of a certain length, when the instance value is a string.
 * @param instance
 * @param schema
 * @return {String|null}
 */
validators.minProperties = function validateMinProperties (instance, schema, options, ctx) {
  if (!instance || typeof instance !== 'object') {
    return null;
  }
  var result = new ValidatorResult(instance, schema, options, ctx);
  var keys = Object.keys(instance);
  if (!(keys.length >= schema.minProperties)) {
    result.addError({
      name: 'minProperties',
      argument: schema.minProperties,
      message: "does not meet minimum property length of " + schema.minProperties,
    })
  }
  return result;
};

/**
 * Validates whether the instance value is at most of a certain length, when the instance value is a string.
 * @param instance
 * @param schema
 * @return {String|null}
 */
validators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {
  if (!instance || typeof instance !== 'object') {
    return null;
  }
  var result = new ValidatorResult(instance, schema, options, ctx);
  var keys = Object.keys(instance);
  if (!(keys.length <= schema.maxProperties)) {
    result.addError({
      name: 'maxProperties',
      argument: schema.maxProperties,
      message: "does not meet maximum property length of " + schema.maxProperties,
    });
  }
  return result;
};

/**
 * Validates items when instance is an array
 * @param instance
 * @param schema
 * @param options
 * @param ctx
 * @return {String|null|ValidatorResult}
 */
validators.items = function validateItems (instance, schema, options, ctx) {
  if (!Array.isArray(instance)) {
    return null;
  }
  var self = this;
  var result = new ValidatorResult(instance, schema, options, ctx);
  if (instance === undefined || !schema.items) {
    return result;
  }
  instance.every(function (value, i) {
    var items = Array.isArray(schema.items) ? (schema.items[i] || schema.additionalItems) : schema.items;
    if (items === undefined) {
      return true;
    }
    if (items === false) {
      result.addError({
        name: 'items',
        message: "additionalItems not permitted",
      });
      return false;
    }
    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));
    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;
    result.importErrors(res);
    return true;
  });
  return result;
};

/**
 * Validates minimum and exclusiveMinimum when the type of the instance value is a number.
 * @param instance
 * @param schema
 * @return {String|null}
 */
validators.minimum = function validateMinimum (instance, schema, options, ctx) {
  if (typeof instance !== 'number') {
    return null;
  }
  var result = new ValidatorResult(instance, schema, options, ctx);
  var valid = true;
  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {
    valid = instance > schema.minimum;
  } else {
    valid = instance >= schema.minimum;
  }
  if (!valid) {
    result.addError({
      name: 'minimum',
      argument: schema.minimum,
      message: "must have a minimum value of " + schema.minimum,
    });
  }
  return result;
};

/**
 * Validates maximum and exclusiveMaximum when the type of the instance value is a number.
 * @param instance
 * @param schema
 * @return {String|null}
 */
validators.maximum = function validateMaximum (instance, schema, options, ctx) {
  if (typeof instance !== 'number') {
    return null;
  }
  var result = new ValidatorResult(instance, schema, options, ctx);
  var valid;
  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {
    valid = instance < schema.maximum;
  } else {
    valid = instance <= schema.maximum;
  }
  if (!valid) {
    result.addError({
      name: 'maximum',
      argument: schema.maximum,
      message: "must have a maximum value of " + schema.maximum,
    });
  }
  return result;
};

/**
 * Validates divisibleBy when the type of the instance value is a number.
 * Of course, this is susceptible to floating point error since it compares the floating points
 * and not the JSON byte sequences to arbitrary precision.
 * @param instance
 * @param schema
 * @return {String|null}
 */
validators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {
  if (typeof instance !== 'number') {
    return null;
  }

  if (schema.divisibleBy == 0) {
    throw new SchemaError("divisibleBy cannot be zero");
  }

  var result = new ValidatorResult(instance, schema, options, ctx);
  if (instance / schema.divisibleBy % 1) {
    result.addError({
      name: 'divisibleBy',
      argument: schema.divisibleBy,
      message: "is not divisible by (multiple of) " + JSON.stringify(schema.divisibleBy),
    });
  }
  return result;
};

/**
 * Validates divisibleBy when the type of the instance value is a number.
 * Of course, this is susceptible to floating point error since it compares the floating points
 * and not the JSON byte sequences to arbitrary precision.
 * @param instance
 * @param schema
 * @return {String|null}
 */
validators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {
  if (typeof instance !== 'number') {
    return null;
  }

  if (schema.multipleOf == 0) {
    throw new SchemaError("multipleOf cannot be zero");
  }

  var result = new ValidatorResult(instance, schema, options, ctx);
  if (instance / schema.multipleOf % 1) {
    result.addError({
      name: 'multipleOf',
      argument:  schema.multipleOf,
      message: "is not a multiple of (divisible by) " + JSON.stringify(schema.multipleOf),
    });
  }
  return result;
};

/**
 * Validates whether the instance value is present.
 * @param instance
 * @param schema
 * @return {String|null}
 */
validators.required = function validateRequired (instance, schema, options, ctx) {
  var result = new ValidatorResult(instance, schema, options, ctx);
  if (instance === undefined && schema.required === true) {
    result.addError({
      name: 'required',
      message: "is required"
    });
  } else if (instance && typeof instance==='object' && Array.isArray(schema.required)) {
    schema.required.forEach(function(n){
      if(instance[n]===undefined){
        result.addError({
          name: 'required',
          argument: n,
          message: "requires property " + JSON.stringify(n),
        });
      }
    });
  }
  return result;
};

/**
 * Validates whether the instance value matches the regular expression, when the instance value is a string.
 * @param instance
 * @param schema
 * @return {String|null}
 */
validators.pattern = function validatePattern (instance, schema, options, ctx) {
  if (typeof instance !== 'string') {
    return null;
  }
  var result = new ValidatorResult(instance, schema, options, ctx);
  if (!instance.match(schema.pattern)) {
    result.addError({
      name: 'pattern',
      argument: schema.pattern,
      message: "does not match pattern " + JSON.stringify(schema.pattern),
    });
  }
  return result;
};

/**
 * Validates whether the instance value is of a certain defined format or a custom
 * format.
 * The following formats are supported for string types:
 *   - date-time
 *   - date
 *   - time
 *   - ip-address
 *   - ipv6
 *   - uri
 *   - color
 *   - host-name
 *   - alpha
 *   - alpha-numeric
 *   - utc-millisec
 * @param instance
 * @param schema
 * @param [options]
 * @param [ctx]
 * @return {String|null}
 */
validators.format = function validateFormat (instance, schema, options, ctx) {
  var result = new ValidatorResult(instance, schema, options, ctx);
  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {
    result.addError({
      name: 'format',
      argument: schema.format,
      message: "does not conform to the " + JSON.stringify(schema.format) + " format",
    });
  }
  return result;
};

/**
 * Validates whether the instance value is at least of a certain length, when the instance value is a string.
 * @param instance
 * @param schema
 * @return {String|null}
 */
validators.minLength = function validateMinLength (instance, schema, options, ctx) {
  if (!(typeof instance === 'string')) {
    return null;
  }
  var result = new ValidatorResult(instance, schema, options, ctx);
  if (!(instance.length >= schema.minLength)) {
    result.addError({
      name: 'minLength',
      argument: schema.minLength,
      message: "does not meet minimum length of " + schema.minLength,
    });
  }
  return result;
};

/**
 * Validates whether the instance value is at most of a certain length, when the instance value is a string.
 * @param instance
 * @param schema
 * @return {String|null}
 */
validators.maxLength = function validateMaxLength (instance, schema, options, ctx) {
  if (!(typeof instance === 'string')) {
    return null;
  }
  var result = new ValidatorResult(instance, schema, options, ctx);
  if (!(instance.length <= schema.maxLength)) {
    result.addError({
      name: 'maxLength',
      argument: schema.maxLength,
      message: "does not meet maximum length of " + schema.maxLength,
    });
  }
  return result;
};

/**
 * Validates whether instance contains at least a minimum number of items, when the instance is an Array.
 * @param instance
 * @param schema
 * @return {String|null}
 */
validators.minItems = function validateMinItems (instance, schema, options, ctx) {
  if (!Array.isArray(instance)) {
    return null;
  }
  var result = new ValidatorResult(instance, schema, options, ctx);
  if (!(instance.length >= schema.minItems)) {
    result.addError({
      name: 'minItems',
      argument: schema.minItems,
      message: "does not meet minimum length of " + schema.minItems,
    });
  }
  return result;
};

/**
 * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.
 * @param instance
 * @param schema
 * @return {String|null}
 */
validators.maxItems = function validateMaxItems (instance, schema, options, ctx) {
  if (!Array.isArray(instance)) {
    return null;
  }
  var result = new ValidatorResult(instance, schema, options, ctx);
  if (!(instance.length <= schema.maxItems)) {
    result.addError({
      name: 'maxItems',
      argument: schema.maxItems,
      message: "does not meet maximum length of " + schema.maxItems,
    });
  }
  return result;
};

/**
 * Validates that every item in an instance array is unique, when instance is an array
 * @param instance
 * @param schema
 * @param options
 * @param ctx
 * @return {String|null|ValidatorResult}
 */
validators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {
  var result = new ValidatorResult(instance, schema, options, ctx);
  if (!Array.isArray(instance)) {
    return result;
  }
  function testArrays (v, i, a) {
    for (var j = i + 1; j < a.length; j++) if (helpers.deepCompareStrict(v, a[j])) {
      return false;
    }
    return true;
  }
  if (!instance.every(testArrays)) {
    result.addError({
      name: 'uniqueItems',
      message: "contains duplicate item",
    });
  }
  return result;
};

/**
 * Deep compares arrays for duplicates
 * @param v
 * @param i
 * @param a
 * @private
 * @return {boolean}
 */
function testArrays (v, i, a) {
  var j, len = a.length;
  for (j = i + 1, len; j < len; j++) {
    if (helpers.deepCompareStrict(v, a[j])) {
      return false;
    }
  }
  return true;
}

/**
 * Validates whether there are no duplicates, when the instance is an Array.
 * @param instance
 * @return {String|null}
 */
validators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {
  if (!Array.isArray(instance)) {
    return null;
  }
  var result = new ValidatorResult(instance, schema, options, ctx);
  if (!instance.every(testArrays)) {
    result.addError({
      name: 'uniqueItems',
      message: "contains duplicate item",
    });
  }
  return result;
};

/**
 * Validate for the presence of dependency properties, if the instance is an object.
 * @param instance
 * @param schema
 * @param options
 * @param ctx
 * @return {null|ValidatorResult}
 */
validators.dependencies = function validateDependencies (instance, schema, options, ctx) {
  if (!instance || typeof instance != 'object') {
    return null;
  }
  var result = new ValidatorResult(instance, schema, options, ctx);
  for (var property in schema.dependencies) {
    if (instance[property] === undefined) {
      continue;
    }
    var dep = schema.dependencies[property];
    var childContext = ctx.makeChild(dep, property);
    if (typeof dep == 'string') {
      dep = [dep];
    }
    if (Array.isArray(dep)) {
      dep.forEach(function (prop) {
        if (instance[prop] === undefined) {
          result.addError({
            // FIXME there's two different "dependencies" errors here with slightly different outputs
            // Can we make these the same? Or should we create different error types?
            name: 'dependencies',
            argument: childContext.propertyPath,
            message: "property " + prop + " not found, required by " + childContext.propertyPath,
          });
        }
      });
    } else {
      var res = this.validateSchema(instance, dep, options, childContext);
      if(result.instance !== res.instance) result.instance = res.instance;
      if (res && res.errors.length) {
        result.addError({
          name: 'dependencies',
          argument: childContext.propertyPath,
          message: "does not meet dependency required by " + childContext.propertyPath,
        });
        result.importErrors(res);
      }
    }
  }
  return result;
};

/**
 * Validates whether the instance value is one of the enumerated values.
 *
 * @param instance
 * @param schema
 * @return {ValidatorResult|null}
 */
validators['enum'] = function validateEnum (instance, schema, options, ctx) {
  if (!Array.isArray(schema['enum'])) {
    throw new SchemaError("enum expects an array", schema);
  }
  if (instance === undefined) {
    return null;
  }
  var result = new ValidatorResult(instance, schema, options, ctx);
  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {
    result.addError({
      name: 'enum',
      argument: schema['enum'],
      message: "is not one of enum values: " + schema['enum'].join(','),
    });
  }
  return result;
};

/**
 * Validates whether the instance if of a prohibited type.
 * @param instance
 * @param schema
 * @param options
 * @param ctx
 * @return {null|ValidatorResult}
 */
validators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {
  var self = this;
  if(instance===undefined) return null;
  var result = new ValidatorResult(instance, schema, options, ctx);
  var notTypes = schema.not || schema.disallow;
  if(!notTypes) return null;
  if(!Array.isArray(notTypes)) notTypes=[notTypes];
  notTypes.forEach(function (type) {
    if (self.testType(instance, schema, options, ctx, type)) {
      var schemaId = type && type.id && ('<' + type.id + '>') || type;
      result.addError({
        name: 'not',
        argument: schemaId,
        message: "is of prohibited type " + schemaId,
      });
    }
  });
  return result;
};

module.exports = attribute;

},{"./helpers":198}],198:[function(require,module,exports){
'use strict';

var uri = require('url');

var ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, propertyPath, name, argument) {
  if (propertyPath) {
    this.property = propertyPath;
  }
  if (message) {
    this.message = message;
  }
  if (schema) {
    if (schema.id) {
      this.schema = schema.id;
    } else {
      this.schema = schema;
    }
  }
  if (instance) {
    this.instance = instance;
  }
  this.name = name;
  this.argument = argument;
  this.stack = this.toString();
};

ValidationError.prototype.toString = function toString() {
  return this.property + ' ' + this.message;
};

var ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {
  this.instance = instance;
  this.schema = schema;
  this.propertyPath = ctx.propertyPath;
  this.errors = [];
  this.throwError = options && options.throwError;
  this.disableFormat = options && options.disableFormat === true;
};

ValidatorResult.prototype.addError = function addError(detail) {
  var err;
  if (typeof detail == 'string') {
    err = new ValidationError(detail, this.instance, this.schema, this.propertyPath);
  } else {
    if (!detail) throw new Error('Missing error detail');
    if (!detail.message) throw new Error('Missing error message');
    if (!detail.name) throw new Error('Missing validator type');
    err = new ValidationError(detail.message, this.instance, this.schema, this.propertyPath, detail.name, detail.argument);
  }

  if (this.throwError) {
    throw err;
  }
  this.errors.push(err);
  return err;
};

ValidatorResult.prototype.importErrors = function importErrors(res) {
  if (typeof res == 'string' || (res && res.validatorType)) {
    this.addError(res);
  } else if (res && res.errors) {
    Array.prototype.push.apply(this.errors, res.errors);
  }
};

function stringizer (v,i){
  return i+': '+v.toString()+'\n';
}
ValidatorResult.prototype.toString = function toString(res) {
  return this.errors.map(stringizer).join('');
};

Object.defineProperty(ValidatorResult.prototype, "valid", { get: function() {
  return !this.errors.length;
} });

/**
 * Describes a problem with a Schema which prevents validation of an instance
 * @name SchemaError
 * @constructor
 */
var SchemaError = exports.SchemaError = function SchemaError (msg, schema) {
  this.message = msg;
  this.schema = schema;
  Error.call(this, msg);
  Error.captureStackTrace(this, SchemaError);
};
SchemaError.prototype = Object.create(Error.prototype,
  { constructor: {value: SchemaError, enumerable: false}
  , name: {value: 'SchemaError', enumerable: false}
  });

var SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, propertyPath, base, schemas) {
  this.schema = schema;
  this.options = options;
  this.propertyPath = propertyPath;
  this.base = base;
  this.schemas = schemas;
};

SchemaContext.prototype.resolve = function resolve (target) {
  return uri.resolve(this.base, target);
};

SchemaContext.prototype.makeChild = function makeChild(schema, propertyName){
  var propertyPath = (propertyName===undefined) ? this.propertyPath : this.propertyPath+makeSuffix(propertyName);
  var base = uri.resolve(this.base, schema.id||'');
  var ctx = new SchemaContext(schema, this.options, propertyPath, base, Object.create(this.schemas));
  if(schema.id && !ctx.schemas[base]){
    ctx.schemas[base] = schema;
  }
  return ctx;
}

var FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {
  'date-time': /^\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\.\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,
  'date': /^\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,
  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,

  'email': /^(?:[\w\!\#\$\%\&\'\*\+\-\/\=\?\^\`\{\|\}\~]+\.)*[\w\!\#\$\%\&\'\*\+\-\/\=\?\^\`\{\|\}\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\-](?!\.)){0,61}[a-zA-Z0-9]?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\[(?:(?:[01]?\d{1,2}|2[0-4]\d|25[0-5])\.){3}(?:[01]?\d{1,2}|2[0-4]\d|25[0-5])\]))$/,
  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,
  'ipv6': /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/,
  'uri': /^[a-zA-Z][a-zA-Z0-9+-.]*:[^\s]*$/,

  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\(\s*\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\b\s*,\s*\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\b\s*,\s*\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\b\s*\))|(rgb\(\s*(\d?\d%|100%)+\s*,\s*(\d?\d%|100%)+\s*,\s*(\d?\d%|100%)+\s*\)))$/,

  // hostname regex from: http://stackoverflow.com/a/1420225/5628
  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\.?$/,
  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\.?$/,

  'alpha': /^[a-zA-Z]+$/,
  'alphanumeric': /^[a-zA-Z0-9]+$/,
  'utc-millisec': function (input) {
    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);
  },
  'regex': function (input) {
    var result = true;
    try {
      new RegExp(input);
    } catch (e) {
      result = false;
    }
    return result;
  },
  'style': /\s*(.+?):\s*([^;]+);?/g,
  'phone': /^\+(?:[0-9] ?){6,14}[0-9]$/
};

FORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;
FORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;
FORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];

exports.isFormat = function isFormat (input, format, validator) {
  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {
    if (FORMAT_REGEXPS[format] instanceof RegExp) {
      return FORMAT_REGEXPS[format].test(input);
    }
    if (typeof FORMAT_REGEXPS[format] === 'function') {
      return FORMAT_REGEXPS[format](input);
    }
  } else if (validator && validator.customFormats &&
      typeof validator.customFormats[format] === 'function') {
    return validator.customFormats[format](input);
  }
  return true;
};

var makeSuffix = exports.makeSuffix = function makeSuffix (key) {
  key = key.toString();
  // This function could be capable of outputting valid a ECMAScript string, but the
  // resulting code for testing which form to use would be tens of thousands of characters long
  // That means this will use the name form for some illegal forms
  if (!key.match(/[.\s\[\]]/) && !key.match(/^[\d]/)) {
    return '.' + key;
  }
  if (key.match(/^\d+$/)) {
    return '[' + key + ']';
  }
  return '[' + JSON.stringify(key) + ']';
};

exports.deepCompareStrict = function deepCompareStrict (a, b) {
  if (typeof a !== typeof b) {
    return false;
  }
  if (a instanceof Array) {
    if (!(b instanceof Array)) {
      return false;
    }
    if (a.length !== b.length) {
      return false;
    }
    return a.every(function (v, i) {
      return deepCompareStrict(a[i], b[i]);
    });
  }
  if (typeof a === 'object') {
    if (!a || !b) {
      return a === b;
    }
    var aKeys = Object.keys(a);
    var bKeys = Object.keys(b);
    if (aKeys.length !== bKeys.length) {
      return false;
    }
    return aKeys.every(function (v) {
      return deepCompareStrict(a[v], b[v]);
    });
  }
  return a === b;
};

function deepMerger (target, dst, e, i) {
  if (typeof e === 'object') {
    dst[i] = deepMerge(target[i], e)
  } else {
    if (target.indexOf(e) === -1) {
      dst.push(e)
    }
  }
}

function copyist (src, dst, key) {
  dst[key] = src[key];
}

function copyistWithDeepMerge (target, src, dst, key) {
  if (typeof src[key] !== 'object' || !src[key]) {
    dst[key] = src[key];
  }
  else {
    if (!target[key]) {
      dst[key] = src[key];
    } else {
      dst[key] = deepMerge(target[key], src[key])
    }
  }
}

function deepMerge (target, src) {
  var array = Array.isArray(src);
  var dst = array && [] || {};

  if (array) {
    target = target || [];
    dst = dst.concat(target);
    src.forEach(deepMerger.bind(null, target, dst));
  } else {
    if (target && typeof target === 'object') {
      Object.keys(target).forEach(copyist.bind(null, target, dst));
    }
    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));
  }

  return dst;
};

module.exports.deepMerge = deepMerge;

/**
 * Validates instance against the provided schema
 * Implements URI+JSON Pointer encoding, e.g. "%7e"="~0"=>"~", "~1"="%2f"=>"/"
 * @param o
 * @param s The path to walk o along
 * @return any
 */
exports.objectGetPath = function objectGetPath(o, s) {
  var parts = s.split('/').slice(1);
  var k;
  while (typeof (k=parts.shift()) == 'string') {
    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));
    if (!(n in o)) return;
    o = o[n];
  }
  return o;
};

function pathEncoder (v) {
  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');
}
/**
 * Accept an Array of property names and return a JSON Pointer URI fragment
 * @param Array a
 * @return {String}
 */
exports.encodePath = function encodePointer(a){
	// ~ must be encoded explicitly because hacks
	// the slash is encoded by encodeURIComponent
	return a.map(pathEncoder).join('');
};

},{"url":514}],199:[function(require,module,exports){
'use strict';

var Validator = module.exports.Validator = require('./validator');

module.exports.ValidatorResult = require('./helpers').ValidatorResult;
module.exports.ValidationError = require('./helpers').ValidationError;
module.exports.SchemaError = require('./helpers').SchemaError;

module.exports.validate = function (instance, schema, options) {
  var v = new Validator();
  return v.validate(instance, schema, options);
};

},{"./helpers":198,"./validator":200}],200:[function(require,module,exports){
'use strict';

var urilib = require('url');

var attribute = require('./attribute');
var helpers = require('./helpers');
var ValidatorResult = helpers.ValidatorResult;
var SchemaError = helpers.SchemaError;
var SchemaContext = helpers.SchemaContext;

/**
 * Creates a new Validator object
 * @name Validator
 * @constructor
 */
var Validator = function Validator () {
  // Allow a validator instance to override global custom formats or to have their
  // own custom formats.
  this.customFormats = Object.create(Validator.prototype.customFormats);
  this.schemas = {};
  this.unresolvedRefs = [];

  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.
  this.types = Object.create(types);
  this.attributes = Object.create(attribute.validators);
};

// Allow formats to be registered globally.
Validator.prototype.customFormats = {};

// Hint at the presence of a property
Validator.prototype.schemas = null;
Validator.prototype.types = null;
Validator.prototype.attributes = null;
Validator.prototype.unresolvedRefs = null;

/**
 * Adds a schema with a certain urn to the Validator instance.
 * @param schema
 * @param urn
 * @return {Object}
 */
Validator.prototype.addSchema = function addSchema (schema, uri) {
  if (!schema) {
    return null;
  }
  var ourUri = uri || schema.id;
  this.addSubSchema(ourUri, schema);
  if (ourUri) {
    this.schemas[ourUri] = schema;
  }
  return this.schemas[ourUri];
};

Validator.prototype.addSubSchema = function addSubSchema(baseuri, schema) {
  if(!schema || typeof schema!='object') return;
  // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined
  if(schema.$ref){
    var resolvedUri = urilib.resolve(baseuri, schema.$ref);
    // Only mark unknown schemas as unresolved
    if (this.schemas[resolvedUri] === undefined) {
      this.schemas[resolvedUri] = null;
      this.unresolvedRefs.push(resolvedUri);
    }
    return;
  }
  var ourUri = schema.id && urilib.resolve(baseuri, schema.id);
  var ourBase = ourUri || baseuri;
  if (ourUri) {
    if(this.schemas[ourUri]){
      if(!helpers.deepCompareStrict(this.schemas[ourUri], schema)){
        throw new Error('Schema <'+schema+'> already exists with different definition');
      }
      return this.schemas[ourUri];
    }
    this.schemas[ourUri] = schema;
    var documentUri = ourUri.replace(/^([^#]*)#$/, '$1');
    this.schemas[documentUri] = schema;
  }
  this.addSubSchemaArray(ourBase, ((schema.items instanceof Array)?schema.items:[schema.items]));
  this.addSubSchemaArray(ourBase, ((schema.extends instanceof Array)?schema.extends:[schema.extends]));
  this.addSubSchema(ourBase, schema.additionalItems);
  this.addSubSchemaObject(ourBase, schema.properties);
  this.addSubSchema(ourBase, schema.additionalProperties);
  this.addSubSchemaObject(ourBase, schema.definitions);
  this.addSubSchemaObject(ourBase, schema.patternProperties);
  this.addSubSchemaObject(ourBase, schema.dependencies);
  this.addSubSchemaArray(ourBase, schema.disallow);
  this.addSubSchemaArray(ourBase, schema.allOf);
  this.addSubSchemaArray(ourBase, schema.anyOf);
  this.addSubSchemaArray(ourBase, schema.oneOf);
  this.addSubSchema(ourBase, schema.not);
  return this.schemas[ourUri];
};

Validator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {
  if(!(schemas instanceof Array)) return;
  for(var i=0; i<schemas.length; i++){
    this.addSubSchema(baseuri, schemas[i]);
  }
};

Validator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {
  if(!schemas || typeof schemas!='object') return;
  for(var p in schemas){
    this.addSubSchema(baseuri, schemas[p]);
  }
};



/**
 * Sets all the schemas of the Validator instance.
 * @param schemas
 */
Validator.prototype.setSchemas = function setSchemas (schemas) {
  this.schemas = schemas;
};

/**
 * Returns the schema of a certain urn
 * @param urn
 */
Validator.prototype.getSchema = function getSchema (urn) {
  return this.schemas[urn];
};

/**
 * Validates instance against the provided schema
 * @param instance
 * @param schema
 * @param [options]
 * @param [ctx]
 * @return {Array}
 */
Validator.prototype.validate = function validate (instance, schema, options, ctx) {
  if (!options) {
    options = {};
  }
  var propertyName = options.propertyName || 'instance';
  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI
  var base = urilib.resolve(options.base||'/', schema.id||'');
  if(!ctx){
    ctx = new SchemaContext(schema, options, propertyName, base, Object.create(this.schemas));
    if (!ctx.schemas[base]) {
      ctx.schemas[base] = schema;
    }
  }
  if (schema) {
    var result = this.validateSchema(instance, schema, options, ctx);
    if (!result) {
      throw new Error('Result undefined');
    }
    return result;
  }
  throw new SchemaError('no schema specified', schema);
};

/**
* @param Object schema
* @return mixed schema uri or false
*/
function shouldResolve(schema) {
  var ref = (typeof schema === 'string') ? schema : schema.$ref;
  if (typeof ref=='string') return ref;
  return false;
}

/**
 * Validates an instance against the schema (the actual work horse)
 * @param instance
 * @param schema
 * @param options
 * @param ctx
 * @private
 * @return {ValidatorResult}
 */
Validator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {
  var result = new ValidatorResult(instance, schema, options, ctx);
  if (!schema) {
    throw new Error("schema is undefined");
  }

  if (schema['extends']) {
    if (schema['extends'] instanceof Array) {
      var schemaobj = {schema: schema, ctx: ctx};
      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));
      schema = schemaobj.schema;
      schemaobj.schema = null;
      schemaobj.ctx = null;
      schemaobj = null;
    } else {
      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));
    }
  }

  var switchSchema;
  if (switchSchema = shouldResolve(schema)) {
    var resolved = this.resolve(schema, switchSchema, ctx);
    var subctx = new SchemaContext(resolved.subschema, options, ctx.propertyPath, resolved.switchSchema, ctx.schemas);
    return this.validateSchema(instance, resolved.subschema, options, subctx);
  }

  var skipAttributes = options && options.skipAttributes || [];
  // Validate each schema attribute against the instance
  for (var key in schema) {
    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {
      var validatorErr = null;
      var validator = this.attributes[key];
      if (validator) {
        validatorErr = validator.call(this, instance, schema, options, ctx);
      } else if (options.allowUnknownAttributes === false) {
        // This represents an error with the schema itself, not an invalid instance
        throw new SchemaError("Unsupported attribute: " + key, schema);
      }
      if (validatorErr) {
        result.importErrors(validatorErr);
      }
    }
  }

  if (typeof options.rewrite == 'function') {
    var value = options.rewrite.call(this, instance, schema, options, ctx);
    result.instance = value;
  }
  return result;
};

/**
* @private
* @param Object schema
* @param SchemaContext ctx
* @returns Object schema or resolved schema
*/
Validator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {
  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));
}

/**
* @private
* @param Object schema
* @param SchemaContext ctx
* @returns Object schema or resolved schema
*/
Validator.prototype.superResolve = function superResolve (schema, ctx) {
  var ref;
  if(ref = shouldResolve(schema)) {
    return this.resolve(schema, ref, ctx).subschema;
  }
  return schema;
}

/**
* @private
* @param Object schema
* @param Object switchSchema
* @param SchemaContext ctx
* @return Object resolved schemas {subschema:String, switchSchema: String}
* @thorws SchemaError
*/
Validator.prototype.resolve = function resolve (schema, switchSchema, ctx) {
  switchSchema = ctx.resolve(switchSchema);
  // First see if the schema exists under the provided URI
  if (ctx.schemas[switchSchema]) {
    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};
  }
  // Else try walking the property pointer
  var parsed = urilib.parse(switchSchema);
  var fragment = parsed && parsed.hash;
  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);
  if (!document || !ctx.schemas[document]) {
    throw new SchemaError("no such schema <" + switchSchema + ">", schema);
  }
  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));
  if(subschema===undefined){
    throw new SchemaError("no such schema " + fragment + " located in <" + document + ">", schema);
  }
  return {subschema: subschema, switchSchema: switchSchema};
};

/**
 * Tests whether the instance if of a certain type.
 * @private
 * @param instance
 * @param schema
 * @param options
 * @param ctx
 * @param type
 * @return {boolean}
 */
Validator.prototype.testType = function validateType (instance, schema, options, ctx, type) {
  if (typeof this.types[type] == 'function') {
    return this.types[type].call(this, instance);
  }
  if (type && typeof type == 'object') {
    var res = this.validateSchema(instance, type, options, ctx);
    return res === undefined || !(res && res.errors.length);
  }
  // Undefined or properties not on the list are acceptable, same as not being defined
  return true;
};

var types = Validator.prototype.types = {};
types.string = function testString (instance) {
  return typeof instance == 'string';
};
types.number = function testNumber (instance) {
  // isFinite returns false for NaN, Infinity, and -Infinity
  return typeof instance == 'number' && isFinite(instance);
};
types.integer = function testInteger (instance) {
  return (typeof instance == 'number') && instance % 1 === 0;
};
types.boolean = function testBoolean (instance) {
  return typeof instance == 'boolean';
};
types.array = function testArray (instance) {
  return instance instanceof Array;
};
types['null'] = function testNull (instance) {
  return instance === null;
};
types.date = function testDate (instance) {
  return instance instanceof Date;
};
types.any = function testAny (instance) {
  return true;
};
types.object = function testObject (instance) {
  // TODO: fix this - see #15
  return instance && (typeof instance) === 'object' && !(instance instanceof Array) && !(instance instanceof Date);
};

module.exports = Validator;

},{"./attribute":197,"./helpers":198,"url":514}],201:[function(require,module,exports){
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;

},{"./_getNative":324,"./_root":378}],202:[function(require,module,exports){
var hashClear = require('./_hashClear'),
    hashDelete = require('./_hashDelete'),
    hashGet = require('./_hashGet'),
    hashHas = require('./_hashHas'),
    hashSet = require('./_hashSet');

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;

},{"./_hashClear":334,"./_hashDelete":335,"./_hashGet":336,"./_hashHas":337,"./_hashSet":338}],203:[function(require,module,exports){
var baseCreate = require('./_baseCreate'),
    baseLodash = require('./_baseLodash');

/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295;

/**
 * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
 *
 * @private
 * @constructor
 * @param {*} value The value to wrap.
 */
function LazyWrapper(value) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__dir__ = 1;
  this.__filtered__ = false;
  this.__iteratees__ = [];
  this.__takeCount__ = MAX_ARRAY_LENGTH;
  this.__views__ = [];
}

// Ensure `LazyWrapper` is an instance of `baseLodash`.
LazyWrapper.prototype = baseCreate(baseLodash.prototype);
LazyWrapper.prototype.constructor = LazyWrapper;

module.exports = LazyWrapper;

},{"./_baseCreate":234,"./_baseLodash":258}],204:[function(require,module,exports){
var listCacheClear = require('./_listCacheClear'),
    listCacheDelete = require('./_listCacheDelete'),
    listCacheGet = require('./_listCacheGet'),
    listCacheHas = require('./_listCacheHas'),
    listCacheSet = require('./_listCacheSet');

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;

},{"./_listCacheClear":352,"./_listCacheDelete":353,"./_listCacheGet":354,"./_listCacheHas":355,"./_listCacheSet":356}],205:[function(require,module,exports){
var baseCreate = require('./_baseCreate'),
    baseLodash = require('./_baseLodash');

/**
 * The base constructor for creating `lodash` wrapper objects.
 *
 * @private
 * @param {*} value The value to wrap.
 * @param {boolean} [chainAll] Enable explicit method chain sequences.
 */
function LodashWrapper(value, chainAll) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__chain__ = !!chainAll;
  this.__index__ = 0;
  this.__values__ = undefined;
}

LodashWrapper.prototype = baseCreate(baseLodash.prototype);
LodashWrapper.prototype.constructor = LodashWrapper;

module.exports = LodashWrapper;

},{"./_baseCreate":234,"./_baseLodash":258}],206:[function(require,module,exports){
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;

},{"./_getNative":324,"./_root":378}],207:[function(require,module,exports){
var mapCacheClear = require('./_mapCacheClear'),
    mapCacheDelete = require('./_mapCacheDelete'),
    mapCacheGet = require('./_mapCacheGet'),
    mapCacheHas = require('./_mapCacheHas'),
    mapCacheSet = require('./_mapCacheSet');

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;

},{"./_mapCacheClear":357,"./_mapCacheDelete":358,"./_mapCacheGet":359,"./_mapCacheHas":360,"./_mapCacheSet":361}],208:[function(require,module,exports){
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;

},{"./_getNative":324,"./_root":378}],209:[function(require,module,exports){
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;

},{"./_getNative":324,"./_root":378}],210:[function(require,module,exports){
var MapCache = require('./_MapCache'),
    setCacheAdd = require('./_setCacheAdd'),
    setCacheHas = require('./_setCacheHas');

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;

},{"./_MapCache":207,"./_setCacheAdd":379,"./_setCacheHas":380}],211:[function(require,module,exports){
var ListCache = require('./_ListCache'),
    stackClear = require('./_stackClear'),
    stackDelete = require('./_stackDelete'),
    stackGet = require('./_stackGet'),
    stackHas = require('./_stackHas'),
    stackSet = require('./_stackSet');

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;

},{"./_ListCache":204,"./_stackClear":386,"./_stackDelete":387,"./_stackGet":388,"./_stackHas":389,"./_stackSet":390}],212:[function(require,module,exports){
var root = require('./_root');

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;

},{"./_root":378}],213:[function(require,module,exports){
var root = require('./_root');

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;

},{"./_root":378}],214:[function(require,module,exports){
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;

},{"./_getNative":324,"./_root":378}],215:[function(require,module,exports){
/**
 * Adds the key-value `pair` to `map`.
 *
 * @private
 * @param {Object} map The map to modify.
 * @param {Array} pair The key-value pair to add.
 * @returns {Object} Returns `map`.
 */
function addMapEntry(map, pair) {
  // Don't return `map.set` because it's not chainable in IE 11.
  map.set(pair[0], pair[1]);
  return map;
}

module.exports = addMapEntry;

},{}],216:[function(require,module,exports){
/**
 * Adds `value` to `set`.
 *
 * @private
 * @param {Object} set The set to modify.
 * @param {*} value The value to add.
 * @returns {Object} Returns `set`.
 */
function addSetEntry(set, value) {
  // Don't return `set.add` because it's not chainable in IE 11.
  set.add(value);
  return set;
}

module.exports = addSetEntry;

},{}],217:[function(require,module,exports){
/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;

},{}],218:[function(require,module,exports){
/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

module.exports = arrayEach;

},{}],219:[function(require,module,exports){
/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;

},{}],220:[function(require,module,exports){
var baseIndexOf = require('./_baseIndexOf');

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf(array, value, 0) > -1;
}

module.exports = arrayIncludes;

},{"./_baseIndexOf":247}],221:[function(require,module,exports){
/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

module.exports = arrayIncludesWith;

},{}],222:[function(require,module,exports){
var baseTimes = require('./_baseTimes'),
    isArguments = require('./isArguments'),
    isArray = require('./isArray'),
    isBuffer = require('./isBuffer'),
    isIndex = require('./_isIndex'),
    isTypedArray = require('./isTypedArray');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;

},{"./_baseTimes":272,"./_isIndex":344,"./isArguments":443,"./isArray":444,"./isBuffer":447,"./isTypedArray":456}],223:[function(require,module,exports){
/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;

},{}],224:[function(require,module,exports){
/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;

},{}],225:[function(require,module,exports){
/**
 * A specialized version of `_.reduce` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @param {boolean} [initAccum] Specify using the first element of `array` as
 *  the initial value.
 * @returns {*} Returns the accumulated value.
 */
function arrayReduce(array, iteratee, accumulator, initAccum) {
  var index = -1,
      length = array == null ? 0 : array.length;

  if (initAccum && length) {
    accumulator = array[++index];
  }
  while (++index < length) {
    accumulator = iteratee(accumulator, array[index], index, array);
  }
  return accumulator;
}

module.exports = arrayReduce;

},{}],226:[function(require,module,exports){
/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

module.exports = arraySome;

},{}],227:[function(require,module,exports){
/**
 * Converts an ASCII `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function asciiToArray(string) {
  return string.split('');
}

module.exports = asciiToArray;

},{}],228:[function(require,module,exports){
var baseAssignValue = require('./_baseAssignValue'),
    eq = require('./eq');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;

},{"./_baseAssignValue":232,"./eq":407}],229:[function(require,module,exports){
var eq = require('./eq');

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;

},{"./eq":407}],230:[function(require,module,exports){
var copyObject = require('./_copyObject'),
    keys = require('./keys');

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

module.exports = baseAssign;

},{"./_copyObject":292,"./keys":458}],231:[function(require,module,exports){
var copyObject = require('./_copyObject'),
    keysIn = require('./keysIn');

/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
  return object && copyObject(source, keysIn(source), object);
}

module.exports = baseAssignIn;

},{"./_copyObject":292,"./keysIn":459}],232:[function(require,module,exports){
var defineProperty = require('./_defineProperty');

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;

},{"./_defineProperty":311}],233:[function(require,module,exports){
var Stack = require('./_Stack'),
    arrayEach = require('./_arrayEach'),
    assignValue = require('./_assignValue'),
    baseAssign = require('./_baseAssign'),
    baseAssignIn = require('./_baseAssignIn'),
    cloneBuffer = require('./_cloneBuffer'),
    copyArray = require('./_copyArray'),
    copySymbols = require('./_copySymbols'),
    copySymbolsIn = require('./_copySymbolsIn'),
    getAllKeys = require('./_getAllKeys'),
    getAllKeysIn = require('./_getAllKeysIn'),
    getTag = require('./_getTag'),
    initCloneArray = require('./_initCloneArray'),
    initCloneByTag = require('./_initCloneByTag'),
    initCloneObject = require('./_initCloneObject'),
    isArray = require('./isArray'),
    isBuffer = require('./isBuffer'),
    isObject = require('./isObject'),
    keys = require('./keys');

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] =
cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
cloneableTags[boolTag] = cloneableTags[dateTag] =
cloneableTags[float32Tag] = cloneableTags[float64Tag] =
cloneableTags[int8Tag] = cloneableTags[int16Tag] =
cloneableTags[int32Tag] = cloneableTags[mapTag] =
cloneableTags[numberTag] = cloneableTags[objectTag] =
cloneableTags[regexpTag] = cloneableTags[setTag] =
cloneableTags[stringTag] = cloneableTags[symbolTag] =
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] =
cloneableTags[weakMapTag] = false;

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
      result = (isFlat || isFunc) ? {} : initCloneObject(value);
      if (!isDeep) {
        return isFlat
          ? copySymbolsIn(value, baseAssignIn(result, value))
          : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, baseClone, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  var keysFunc = isFull
    ? (isFlat ? getAllKeysIn : getAllKeys)
    : (isFlat ? keysIn : keys);

  var props = isArr ? undefined : keysFunc(value);
  arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

module.exports = baseClone;

},{"./_Stack":211,"./_arrayEach":218,"./_assignValue":228,"./_baseAssign":230,"./_baseAssignIn":231,"./_cloneBuffer":282,"./_copyArray":291,"./_copySymbols":293,"./_copySymbolsIn":294,"./_getAllKeys":317,"./_getAllKeysIn":318,"./_getTag":329,"./_initCloneArray":339,"./_initCloneByTag":340,"./_initCloneObject":341,"./isArray":444,"./isBuffer":447,"./isObject":452,"./keys":458}],234:[function(require,module,exports){
var isObject = require('./isObject');

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

module.exports = baseCreate;

},{"./isObject":452}],235:[function(require,module,exports){
var SetCache = require('./_SetCache'),
    arrayIncludes = require('./_arrayIncludes'),
    arrayIncludesWith = require('./_arrayIncludesWith'),
    arrayMap = require('./_arrayMap'),
    baseUnary = require('./_baseUnary'),
    cacheHas = require('./_cacheHas');

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of methods like `_.difference` without support
 * for excluding multiple arrays or iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Array} values The values to exclude.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 */
function baseDifference(array, values, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      isCommon = true,
      length = array.length,
      result = [],
      valuesLength = values.length;

  if (!length) {
    return result;
  }
  if (iteratee) {
    values = arrayMap(values, baseUnary(iteratee));
  }
  if (comparator) {
    includes = arrayIncludesWith;
    isCommon = false;
  }
  else if (values.length >= LARGE_ARRAY_SIZE) {
    includes = cacheHas;
    isCommon = false;
    values = new SetCache(values);
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee == null ? value : iteratee(value);

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var valuesIndex = valuesLength;
      while (valuesIndex--) {
        if (values[valuesIndex] === computed) {
          continue outer;
        }
      }
      result.push(value);
    }
    else if (!includes(values, computed, comparator)) {
      result.push(value);
    }
  }
  return result;
}

module.exports = baseDifference;

},{"./_SetCache":210,"./_arrayIncludes":220,"./_arrayIncludesWith":221,"./_arrayMap":223,"./_baseUnary":274,"./_cacheHas":278}],236:[function(require,module,exports){
var baseForOwn = require('./_baseForOwn'),
    createBaseEach = require('./_createBaseEach');

/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEach = createBaseEach(baseForOwn);

module.exports = baseEach;

},{"./_baseForOwn":241,"./_createBaseEach":297}],237:[function(require,module,exports){
var baseEach = require('./_baseEach');

/**
 * The base implementation of `_.filter` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function baseFilter(collection, predicate) {
  var result = [];
  baseEach(collection, function(value, index, collection) {
    if (predicate(value, index, collection)) {
      result.push(value);
    }
  });
  return result;
}

module.exports = baseFilter;

},{"./_baseEach":236}],238:[function(require,module,exports){
/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

module.exports = baseFindIndex;

},{}],239:[function(require,module,exports){
var arrayPush = require('./_arrayPush'),
    isFlattenable = require('./_isFlattenable');

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

module.exports = baseFlatten;

},{"./_arrayPush":224,"./_isFlattenable":343}],240:[function(require,module,exports){
var createBaseFor = require('./_createBaseFor');

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

module.exports = baseFor;

},{"./_createBaseFor":298}],241:[function(require,module,exports){
var baseFor = require('./_baseFor'),
    keys = require('./keys');

/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && baseFor(object, iteratee, keys);
}

module.exports = baseForOwn;

},{"./_baseFor":240,"./keys":458}],242:[function(require,module,exports){
var castPath = require('./_castPath'),
    toKey = require('./_toKey');

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

module.exports = baseGet;

},{"./_castPath":279,"./_toKey":394}],243:[function(require,module,exports){
var arrayPush = require('./_arrayPush'),
    isArray = require('./isArray');

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;

},{"./_arrayPush":224,"./isArray":444}],244:[function(require,module,exports){
var Symbol = require('./_Symbol'),
    getRawTag = require('./_getRawTag'),
    objectToString = require('./_objectToString');

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;

},{"./_Symbol":212,"./_getRawTag":326,"./_objectToString":371}],245:[function(require,module,exports){
/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

module.exports = baseHasIn;

},{}],246:[function(require,module,exports){
/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * The base implementation of `_.inRange` which doesn't coerce arguments.
 *
 * @private
 * @param {number} number The number to check.
 * @param {number} start The start of the range.
 * @param {number} end The end of the range.
 * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
 */
function baseInRange(number, start, end) {
  return number >= nativeMin(start, end) && number < nativeMax(start, end);
}

module.exports = baseInRange;

},{}],247:[function(require,module,exports){
var baseFindIndex = require('./_baseFindIndex'),
    baseIsNaN = require('./_baseIsNaN'),
    strictIndexOf = require('./_strictIndexOf');

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? strictIndexOf(array, value, fromIndex)
    : baseFindIndex(array, baseIsNaN, fromIndex);
}

module.exports = baseIndexOf;

},{"./_baseFindIndex":238,"./_baseIsNaN":252,"./_strictIndexOf":391}],248:[function(require,module,exports){
var baseGetTag = require('./_baseGetTag'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;

},{"./_baseGetTag":244,"./isObjectLike":453}],249:[function(require,module,exports){
var baseIsEqualDeep = require('./_baseIsEqualDeep'),
    isObjectLike = require('./isObjectLike');

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;

},{"./_baseIsEqualDeep":250,"./isObjectLike":453}],250:[function(require,module,exports){
var Stack = require('./_Stack'),
    equalArrays = require('./_equalArrays'),
    equalByTag = require('./_equalByTag'),
    equalObjects = require('./_equalObjects'),
    getTag = require('./_getTag'),
    isArray = require('./isArray'),
    isBuffer = require('./isBuffer'),
    isTypedArray = require('./isTypedArray');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack);
    return (objIsArr || isTypedArray(object))
      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack);
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;

},{"./_Stack":211,"./_equalArrays":312,"./_equalByTag":313,"./_equalObjects":314,"./_getTag":329,"./isArray":444,"./isBuffer":447,"./isTypedArray":456}],251:[function(require,module,exports){
var Stack = require('./_Stack'),
    baseIsEqual = require('./_baseIsEqual');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

module.exports = baseIsMatch;

},{"./_Stack":211,"./_baseIsEqual":249}],252:[function(require,module,exports){
/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

module.exports = baseIsNaN;

},{}],253:[function(require,module,exports){
var isFunction = require('./isFunction'),
    isMasked = require('./_isMasked'),
    isObject = require('./isObject'),
    toSource = require('./_toSource');

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;

},{"./_isMasked":349,"./_toSource":395,"./isFunction":450,"./isObject":452}],254:[function(require,module,exports){
var baseGetTag = require('./_baseGetTag'),
    isLength = require('./isLength'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;

},{"./_baseGetTag":244,"./isLength":451,"./isObjectLike":453}],255:[function(require,module,exports){
var baseMatches = require('./_baseMatches'),
    baseMatchesProperty = require('./_baseMatchesProperty'),
    identity = require('./identity'),
    isArray = require('./isArray'),
    property = require('./property');

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity;
  }
  if (typeof value == 'object') {
    return isArray(value)
      ? baseMatchesProperty(value[0], value[1])
      : baseMatches(value);
  }
  return property(value);
}

module.exports = baseIteratee;

},{"./_baseMatches":259,"./_baseMatchesProperty":260,"./identity":441,"./isArray":444,"./property":467}],256:[function(require,module,exports){
var isPrototype = require('./_isPrototype'),
    nativeKeys = require('./_nativeKeys');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;

},{"./_isPrototype":350,"./_nativeKeys":368}],257:[function(require,module,exports){
var isObject = require('./isObject'),
    isPrototype = require('./_isPrototype'),
    nativeKeysIn = require('./_nativeKeysIn');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeysIn;

},{"./_isPrototype":350,"./_nativeKeysIn":369,"./isObject":452}],258:[function(require,module,exports){
/**
 * The function whose prototype chain sequence wrappers inherit from.
 *
 * @private
 */
function baseLodash() {
  // No operation performed.
}

module.exports = baseLodash;

},{}],259:[function(require,module,exports){
var baseIsMatch = require('./_baseIsMatch'),
    getMatchData = require('./_getMatchData'),
    matchesStrictComparable = require('./_matchesStrictComparable');

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch(object, source, matchData);
  };
}

module.exports = baseMatches;

},{"./_baseIsMatch":251,"./_getMatchData":323,"./_matchesStrictComparable":363}],260:[function(require,module,exports){
var baseIsEqual = require('./_baseIsEqual'),
    get = require('./get'),
    hasIn = require('./hasIn'),
    isKey = require('./_isKey'),
    isStrictComparable = require('./_isStrictComparable'),
    matchesStrictComparable = require('./_matchesStrictComparable'),
    toKey = require('./_toKey');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (isKey(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path), srcValue);
  }
  return function(object) {
    var objValue = get(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? hasIn(object, path)
      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

module.exports = baseMatchesProperty;

},{"./_baseIsEqual":249,"./_isKey":346,"./_isStrictComparable":351,"./_matchesStrictComparable":363,"./_toKey":394,"./get":439,"./hasIn":440}],261:[function(require,module,exports){
var basePickBy = require('./_basePickBy'),
    hasIn = require('./hasIn');

/**
 * The base implementation of `_.pick` without support for individual
 * property identifiers.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @returns {Object} Returns the new object.
 */
function basePick(object, paths) {
  return basePickBy(object, paths, function(value, path) {
    return hasIn(object, path);
  });
}

module.exports = basePick;

},{"./_basePickBy":262,"./hasIn":440}],262:[function(require,module,exports){
var baseGet = require('./_baseGet'),
    baseSet = require('./_baseSet'),
    castPath = require('./_castPath');

/**
 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @param {Function} predicate The function invoked per property.
 * @returns {Object} Returns the new object.
 */
function basePickBy(object, paths, predicate) {
  var index = -1,
      length = paths.length,
      result = {};

  while (++index < length) {
    var path = paths[index],
        value = baseGet(object, path);

    if (predicate(value, path)) {
      baseSet(result, castPath(path, object), value);
    }
  }
  return result;
}

module.exports = basePickBy;

},{"./_baseGet":242,"./_baseSet":268,"./_castPath":279}],263:[function(require,module,exports){
/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

module.exports = baseProperty;

},{}],264:[function(require,module,exports){
var baseGet = require('./_baseGet');

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return baseGet(object, path);
  };
}

module.exports = basePropertyDeep;

},{"./_baseGet":242}],265:[function(require,module,exports){
/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeCeil = Math.ceil,
    nativeMax = Math.max;

/**
 * The base implementation of `_.range` and `_.rangeRight` which doesn't
 * coerce arguments.
 *
 * @private
 * @param {number} start The start of the range.
 * @param {number} end The end of the range.
 * @param {number} step The value to increment or decrement by.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Array} Returns the range of numbers.
 */
function baseRange(start, end, step, fromRight) {
  var index = -1,
      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
      result = Array(length);

  while (length--) {
    result[fromRight ? length : ++index] = start;
    start += step;
  }
  return result;
}

module.exports = baseRange;

},{}],266:[function(require,module,exports){
/**
 * The base implementation of `_.reduce` and `_.reduceRight`, without support
 * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} accumulator The initial value.
 * @param {boolean} initAccum Specify using the first or last element of
 *  `collection` as the initial value.
 * @param {Function} eachFunc The function to iterate over `collection`.
 * @returns {*} Returns the accumulated value.
 */
function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
  eachFunc(collection, function(value, index, collection) {
    accumulator = initAccum
      ? (initAccum = false, value)
      : iteratee(accumulator, value, index, collection);
  });
  return accumulator;
}

module.exports = baseReduce;

},{}],267:[function(require,module,exports){
var identity = require('./identity'),
    overRest = require('./_overRest'),
    setToString = require('./_setToString');

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

module.exports = baseRest;

},{"./_overRest":373,"./_setToString":383,"./identity":441}],268:[function(require,module,exports){
var assignValue = require('./_assignValue'),
    castPath = require('./_castPath'),
    isIndex = require('./_isIndex'),
    isObject = require('./isObject'),
    toKey = require('./_toKey');

/**
 * The base implementation of `_.set`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @param {Function} [customizer] The function to customize path creation.
 * @returns {Object} Returns `object`.
 */
function baseSet(object, path, value, customizer) {
  if (!isObject(object)) {
    return object;
  }
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      lastIndex = length - 1,
      nested = object;

  while (nested != null && ++index < length) {
    var key = toKey(path[index]),
        newValue = value;

    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : undefined;
      if (newValue === undefined) {
        newValue = isObject(objValue)
          ? objValue
          : (isIndex(path[index + 1]) ? [] : {});
      }
    }
    assignValue(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}

module.exports = baseSet;

},{"./_assignValue":228,"./_castPath":279,"./_isIndex":344,"./_toKey":394,"./isObject":452}],269:[function(require,module,exports){
var identity = require('./identity'),
    metaMap = require('./_metaMap');

/**
 * The base implementation of `setData` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to associate metadata with.
 * @param {*} data The metadata.
 * @returns {Function} Returns `func`.
 */
var baseSetData = !metaMap ? identity : function(func, data) {
  metaMap.set(func, data);
  return func;
};

module.exports = baseSetData;

},{"./_metaMap":366,"./identity":441}],270:[function(require,module,exports){
var constant = require('./constant'),
    defineProperty = require('./_defineProperty'),
    identity = require('./identity');

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;

},{"./_defineProperty":311,"./constant":403,"./identity":441}],271:[function(require,module,exports){
/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : (length + start);
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : ((end - start) >>> 0);
  start >>>= 0;

  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}

module.exports = baseSlice;

},{}],272:[function(require,module,exports){
/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;

},{}],273:[function(require,module,exports){
var Symbol = require('./_Symbol'),
    arrayMap = require('./_arrayMap'),
    isArray = require('./isArray'),
    isSymbol = require('./isSymbol');

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = baseToString;

},{"./_Symbol":212,"./_arrayMap":223,"./isArray":444,"./isSymbol":455}],274:[function(require,module,exports){
/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;

},{}],275:[function(require,module,exports){
var SetCache = require('./_SetCache'),
    arrayIncludes = require('./_arrayIncludes'),
    arrayIncludesWith = require('./_arrayIncludesWith'),
    cacheHas = require('./_cacheHas'),
    createSet = require('./_createSet'),
    setToArray = require('./_setToArray');

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */
function baseUniq(array, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      length = array.length,
      isCommon = true,
      result = [],
      seen = result;

  if (comparator) {
    isCommon = false;
    includes = arrayIncludesWith;
  }
  else if (length >= LARGE_ARRAY_SIZE) {
    var set = iteratee ? null : createSet(array);
    if (set) {
      return setToArray(set);
    }
    isCommon = false;
    includes = cacheHas;
    seen = new SetCache;
  }
  else {
    seen = iteratee ? [] : result;
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var seenIndex = seen.length;
      while (seenIndex--) {
        if (seen[seenIndex] === computed) {
          continue outer;
        }
      }
      if (iteratee) {
        seen.push(computed);
      }
      result.push(value);
    }
    else if (!includes(seen, computed, comparator)) {
      if (seen !== result) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

module.exports = baseUniq;

},{"./_SetCache":210,"./_arrayIncludes":220,"./_arrayIncludesWith":221,"./_cacheHas":278,"./_createSet":308,"./_setToArray":382}],276:[function(require,module,exports){
var castPath = require('./_castPath'),
    last = require('./last'),
    parent = require('./_parent'),
    toKey = require('./_toKey');

/**
 * The base implementation of `_.unset`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The property path to unset.
 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
 */
function baseUnset(object, path) {
  path = castPath(path, object);
  object = parent(object, path);
  return object == null || delete object[toKey(last(path))];
}

module.exports = baseUnset;

},{"./_castPath":279,"./_parent":374,"./_toKey":394,"./last":460}],277:[function(require,module,exports){
var baseDifference = require('./_baseDifference'),
    baseFlatten = require('./_baseFlatten'),
    baseUniq = require('./_baseUniq');

/**
 * The base implementation of methods like `_.xor`, without support for
 * iteratee shorthands, that accepts an array of arrays to inspect.
 *
 * @private
 * @param {Array} arrays The arrays to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of values.
 */
function baseXor(arrays, iteratee, comparator) {
  var length = arrays.length;
  if (length < 2) {
    return length ? baseUniq(arrays[0]) : [];
  }
  var index = -1,
      result = Array(length);

  while (++index < length) {
    var array = arrays[index],
        othIndex = -1;

    while (++othIndex < length) {
      if (othIndex != index) {
        result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
      }
    }
  }
  return baseUniq(baseFlatten(result, 1), iteratee, comparator);
}

module.exports = baseXor;

},{"./_baseDifference":235,"./_baseFlatten":239,"./_baseUniq":275}],278:[function(require,module,exports){
/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;

},{}],279:[function(require,module,exports){
var isArray = require('./isArray'),
    isKey = require('./_isKey'),
    stringToPath = require('./_stringToPath'),
    toString = require('./toString');

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;

},{"./_isKey":346,"./_stringToPath":393,"./isArray":444,"./toString":478}],280:[function(require,module,exports){
var baseSlice = require('./_baseSlice');

/**
 * Casts `array` to a slice if it's needed.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {number} start The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the cast slice.
 */
function castSlice(array, start, end) {
  var length = array.length;
  end = end === undefined ? length : end;
  return (!start && end >= length) ? array : baseSlice(array, start, end);
}

module.exports = castSlice;

},{"./_baseSlice":271}],281:[function(require,module,exports){
var Uint8Array = require('./_Uint8Array');

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;

},{"./_Uint8Array":213}],282:[function(require,module,exports){
var root = require('./_root');

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;

},{"./_root":378}],283:[function(require,module,exports){
var cloneArrayBuffer = require('./_cloneArrayBuffer');

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

module.exports = cloneDataView;

},{"./_cloneArrayBuffer":281}],284:[function(require,module,exports){
var addMapEntry = require('./_addMapEntry'),
    arrayReduce = require('./_arrayReduce'),
    mapToArray = require('./_mapToArray');

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1;

/**
 * Creates a clone of `map`.
 *
 * @private
 * @param {Object} map The map to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned map.
 */
function cloneMap(map, isDeep, cloneFunc) {
  var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
  return arrayReduce(array, addMapEntry, new map.constructor);
}

module.exports = cloneMap;

},{"./_addMapEntry":215,"./_arrayReduce":225,"./_mapToArray":362}],285:[function(require,module,exports){
/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

module.exports = cloneRegExp;

},{}],286:[function(require,module,exports){
var addSetEntry = require('./_addSetEntry'),
    arrayReduce = require('./_arrayReduce'),
    setToArray = require('./_setToArray');

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1;

/**
 * Creates a clone of `set`.
 *
 * @private
 * @param {Object} set The set to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned set.
 */
function cloneSet(set, isDeep, cloneFunc) {
  var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
  return arrayReduce(array, addSetEntry, new set.constructor);
}

module.exports = cloneSet;

},{"./_addSetEntry":216,"./_arrayReduce":225,"./_setToArray":382}],287:[function(require,module,exports){
var Symbol = require('./_Symbol');

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

module.exports = cloneSymbol;

},{"./_Symbol":212}],288:[function(require,module,exports){
var cloneArrayBuffer = require('./_cloneArrayBuffer');

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;

},{"./_cloneArrayBuffer":281}],289:[function(require,module,exports){
/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * Creates an array that is the composition of partially applied arguments,
 * placeholders, and provided arguments into a single array of arguments.
 *
 * @private
 * @param {Array} args The provided arguments.
 * @param {Array} partials The arguments to prepend to those provided.
 * @param {Array} holders The `partials` placeholder indexes.
 * @params {boolean} [isCurried] Specify composing for a curried function.
 * @returns {Array} Returns the new array of composed arguments.
 */
function composeArgs(args, partials, holders, isCurried) {
  var argsIndex = -1,
      argsLength = args.length,
      holdersLength = holders.length,
      leftIndex = -1,
      leftLength = partials.length,
      rangeLength = nativeMax(argsLength - holdersLength, 0),
      result = Array(leftLength + rangeLength),
      isUncurried = !isCurried;

  while (++leftIndex < leftLength) {
    result[leftIndex] = partials[leftIndex];
  }
  while (++argsIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result[holders[argsIndex]] = args[argsIndex];
    }
  }
  while (rangeLength--) {
    result[leftIndex++] = args[argsIndex++];
  }
  return result;
}

module.exports = composeArgs;

},{}],290:[function(require,module,exports){
/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * This function is like `composeArgs` except that the arguments composition
 * is tailored for `_.partialRight`.
 *
 * @private
 * @param {Array} args The provided arguments.
 * @param {Array} partials The arguments to append to those provided.
 * @param {Array} holders The `partials` placeholder indexes.
 * @params {boolean} [isCurried] Specify composing for a curried function.
 * @returns {Array} Returns the new array of composed arguments.
 */
function composeArgsRight(args, partials, holders, isCurried) {
  var argsIndex = -1,
      argsLength = args.length,
      holdersIndex = -1,
      holdersLength = holders.length,
      rightIndex = -1,
      rightLength = partials.length,
      rangeLength = nativeMax(argsLength - holdersLength, 0),
      result = Array(rangeLength + rightLength),
      isUncurried = !isCurried;

  while (++argsIndex < rangeLength) {
    result[argsIndex] = args[argsIndex];
  }
  var offset = argsIndex;
  while (++rightIndex < rightLength) {
    result[offset + rightIndex] = partials[rightIndex];
  }
  while (++holdersIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result[offset + holders[holdersIndex]] = args[argsIndex++];
    }
  }
  return result;
}

module.exports = composeArgsRight;

},{}],291:[function(require,module,exports){
/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;

},{}],292:[function(require,module,exports){
var assignValue = require('./_assignValue'),
    baseAssignValue = require('./_baseAssignValue');

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;

},{"./_assignValue":228,"./_baseAssignValue":232}],293:[function(require,module,exports){
var copyObject = require('./_copyObject'),
    getSymbols = require('./_getSymbols');

/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

module.exports = copySymbols;

},{"./_copyObject":292,"./_getSymbols":327}],294:[function(require,module,exports){
var copyObject = require('./_copyObject'),
    getSymbolsIn = require('./_getSymbolsIn');

/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
  return copyObject(source, getSymbolsIn(source), object);
}

module.exports = copySymbolsIn;

},{"./_copyObject":292,"./_getSymbolsIn":328}],295:[function(require,module,exports){
var root = require('./_root');

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;

},{"./_root":378}],296:[function(require,module,exports){
/**
 * Gets the number of `placeholder` occurrences in `array`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} placeholder The placeholder to search for.
 * @returns {number} Returns the placeholder count.
 */
function countHolders(array, placeholder) {
  var length = array.length,
      result = 0;

  while (length--) {
    if (array[length] === placeholder) {
      ++result;
    }
  }
  return result;
}

module.exports = countHolders;

},{}],297:[function(require,module,exports){
var isArrayLike = require('./isArrayLike');

/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length,
        index = fromRight ? length : -1,
        iterable = Object(collection);

    while ((fromRight ? index-- : ++index < length)) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}

module.exports = createBaseEach;

},{"./isArrayLike":445}],298:[function(require,module,exports){
/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;

},{}],299:[function(require,module,exports){
var createCtor = require('./_createCtor'),
    root = require('./_root');

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1;

/**
 * Creates a function that wraps `func` to invoke it with the optional `this`
 * binding of `thisArg`.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createBind(func, bitmask, thisArg) {
  var isBind = bitmask & WRAP_BIND_FLAG,
      Ctor = createCtor(func);

  function wrapper() {
    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
    return fn.apply(isBind ? thisArg : this, arguments);
  }
  return wrapper;
}

module.exports = createBind;

},{"./_createCtor":301,"./_root":378}],300:[function(require,module,exports){
var castSlice = require('./_castSlice'),
    hasUnicode = require('./_hasUnicode'),
    stringToArray = require('./_stringToArray'),
    toString = require('./toString');

/**
 * Creates a function like `_.lowerFirst`.
 *
 * @private
 * @param {string} methodName The name of the `String` case method to use.
 * @returns {Function} Returns the new case function.
 */
function createCaseFirst(methodName) {
  return function(string) {
    string = toString(string);

    var strSymbols = hasUnicode(string)
      ? stringToArray(string)
      : undefined;

    var chr = strSymbols
      ? strSymbols[0]
      : string.charAt(0);

    var trailing = strSymbols
      ? castSlice(strSymbols, 1).join('')
      : string.slice(1);

    return chr[methodName]() + trailing;
  };
}

module.exports = createCaseFirst;

},{"./_castSlice":280,"./_hasUnicode":333,"./_stringToArray":392,"./toString":478}],301:[function(require,module,exports){
var baseCreate = require('./_baseCreate'),
    isObject = require('./isObject');

/**
 * Creates a function that produces an instance of `Ctor` regardless of
 * whether it was invoked as part of a `new` expression or by `call` or `apply`.
 *
 * @private
 * @param {Function} Ctor The constructor to wrap.
 * @returns {Function} Returns the new wrapped function.
 */
function createCtor(Ctor) {
  return function() {
    // Use a `switch` statement to work with class constructors. See
    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
    // for more details.
    var args = arguments;
    switch (args.length) {
      case 0: return new Ctor;
      case 1: return new Ctor(args[0]);
      case 2: return new Ctor(args[0], args[1]);
      case 3: return new Ctor(args[0], args[1], args[2]);
      case 4: return new Ctor(args[0], args[1], args[2], args[3]);
      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
    }
    var thisBinding = baseCreate(Ctor.prototype),
        result = Ctor.apply(thisBinding, args);

    // Mimic the constructor's `return` behavior.
    // See https://es5.github.io/#x13.2.2 for more details.
    return isObject(result) ? result : thisBinding;
  };
}

module.exports = createCtor;

},{"./_baseCreate":234,"./isObject":452}],302:[function(require,module,exports){
var apply = require('./_apply'),
    createCtor = require('./_createCtor'),
    createHybrid = require('./_createHybrid'),
    createRecurry = require('./_createRecurry'),
    getHolder = require('./_getHolder'),
    replaceHolders = require('./_replaceHolders'),
    root = require('./_root');

/**
 * Creates a function that wraps `func` to enable currying.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {number} arity The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createCurry(func, bitmask, arity) {
  var Ctor = createCtor(func);

  function wrapper() {
    var length = arguments.length,
        args = Array(length),
        index = length,
        placeholder = getHolder(wrapper);

    while (index--) {
      args[index] = arguments[index];
    }
    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
      ? []
      : replaceHolders(args, placeholder);

    length -= holders.length;
    if (length < arity) {
      return createRecurry(
        func, bitmask, createHybrid, wrapper.placeholder, undefined,
        args, holders, undefined, undefined, arity - length);
    }
    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
    return apply(fn, this, args);
  }
  return wrapper;
}

module.exports = createCurry;

},{"./_apply":217,"./_createCtor":301,"./_createHybrid":304,"./_createRecurry":307,"./_getHolder":321,"./_replaceHolders":377,"./_root":378}],303:[function(require,module,exports){
var LodashWrapper = require('./_LodashWrapper'),
    flatRest = require('./_flatRest'),
    getData = require('./_getData'),
    getFuncName = require('./_getFuncName'),
    isArray = require('./isArray'),
    isLaziable = require('./_isLaziable');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used to compose bitmasks for function metadata. */
var WRAP_CURRY_FLAG = 8,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_ARY_FLAG = 128,
    WRAP_REARG_FLAG = 256;

/**
 * Creates a `_.flow` or `_.flowRight` function.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new flow function.
 */
function createFlow(fromRight) {
  return flatRest(function(funcs) {
    var length = funcs.length,
        index = length,
        prereq = LodashWrapper.prototype.thru;

    if (fromRight) {
      funcs.reverse();
    }
    while (index--) {
      var func = funcs[index];
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
        var wrapper = new LodashWrapper([], true);
      }
    }
    index = wrapper ? index : length;
    while (++index < length) {
      func = funcs[index];

      var funcName = getFuncName(func),
          data = funcName == 'wrapper' ? getData(func) : undefined;

      if (data && isLaziable(data[0]) &&
            data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
            !data[4].length && data[9] == 1
          ) {
        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
      } else {
        wrapper = (func.length == 1 && isLaziable(func))
          ? wrapper[funcName]()
          : wrapper.thru(func);
      }
    }
    return function() {
      var args = arguments,
          value = args[0];

      if (wrapper && args.length == 1 && isArray(value)) {
        return wrapper.plant(value).value();
      }
      var index = 0,
          result = length ? funcs[index].apply(this, args) : value;

      while (++index < length) {
        result = funcs[index].call(this, result);
      }
      return result;
    };
  });
}

module.exports = createFlow;

},{"./_LodashWrapper":205,"./_flatRest":315,"./_getData":319,"./_getFuncName":320,"./_isLaziable":348,"./isArray":444}],304:[function(require,module,exports){
var composeArgs = require('./_composeArgs'),
    composeArgsRight = require('./_composeArgsRight'),
    countHolders = require('./_countHolders'),
    createCtor = require('./_createCtor'),
    createRecurry = require('./_createRecurry'),
    getHolder = require('./_getHolder'),
    reorder = require('./_reorder'),
    replaceHolders = require('./_replaceHolders'),
    root = require('./_root');

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_FLAG = 8,
    WRAP_CURRY_RIGHT_FLAG = 16,
    WRAP_ARY_FLAG = 128,
    WRAP_FLIP_FLAG = 512;

/**
 * Creates a function that wraps `func` to invoke it with optional `this`
 * binding of `thisArg`, partial application, and currying.
 *
 * @private
 * @param {Function|string} func The function or method name to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to prepend to those provided to
 *  the new function.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [partialsRight] The arguments to append to those provided
 *  to the new function.
 * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
  var isAry = bitmask & WRAP_ARY_FLAG,
      isBind = bitmask & WRAP_BIND_FLAG,
      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
      isFlip = bitmask & WRAP_FLIP_FLAG,
      Ctor = isBindKey ? undefined : createCtor(func);

  function wrapper() {
    var length = arguments.length,
        args = Array(length),
        index = length;

    while (index--) {
      args[index] = arguments[index];
    }
    if (isCurried) {
      var placeholder = getHolder(wrapper),
          holdersCount = countHolders(args, placeholder);
    }
    if (partials) {
      args = composeArgs(args, partials, holders, isCurried);
    }
    if (partialsRight) {
      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
    }
    length -= holdersCount;
    if (isCurried && length < arity) {
      var newHolders = replaceHolders(args, placeholder);
      return createRecurry(
        func, bitmask, createHybrid, wrapper.placeholder, thisArg,
        args, newHolders, argPos, ary, arity - length
      );
    }
    var thisBinding = isBind ? thisArg : this,
        fn = isBindKey ? thisBinding[func] : func;

    length = args.length;
    if (argPos) {
      args = reorder(args, argPos);
    } else if (isFlip && length > 1) {
      args.reverse();
    }
    if (isAry && ary < length) {
      args.length = ary;
    }
    if (this && this !== root && this instanceof wrapper) {
      fn = Ctor || createCtor(fn);
    }
    return fn.apply(thisBinding, args);
  }
  return wrapper;
}

module.exports = createHybrid;

},{"./_composeArgs":289,"./_composeArgsRight":290,"./_countHolders":296,"./_createCtor":301,"./_createRecurry":307,"./_getHolder":321,"./_reorder":376,"./_replaceHolders":377,"./_root":378}],305:[function(require,module,exports){
var apply = require('./_apply'),
    createCtor = require('./_createCtor'),
    root = require('./_root');

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1;

/**
 * Creates a function that wraps `func` to invoke it with the `this` binding
 * of `thisArg` and `partials` prepended to the arguments it receives.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} partials The arguments to prepend to those provided to
 *  the new function.
 * @returns {Function} Returns the new wrapped function.
 */
function createPartial(func, bitmask, thisArg, partials) {
  var isBind = bitmask & WRAP_BIND_FLAG,
      Ctor = createCtor(func);

  function wrapper() {
    var argsIndex = -1,
        argsLength = arguments.length,
        leftIndex = -1,
        leftLength = partials.length,
        args = Array(leftLength + argsLength),
        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

    while (++leftIndex < leftLength) {
      args[leftIndex] = partials[leftIndex];
    }
    while (argsLength--) {
      args[leftIndex++] = arguments[++argsIndex];
    }
    return apply(fn, isBind ? thisArg : this, args);
  }
  return wrapper;
}

module.exports = createPartial;

},{"./_apply":217,"./_createCtor":301,"./_root":378}],306:[function(require,module,exports){
var baseRange = require('./_baseRange'),
    isIterateeCall = require('./_isIterateeCall'),
    toFinite = require('./toFinite');

/**
 * Creates a `_.range` or `_.rangeRight` function.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new range function.
 */
function createRange(fromRight) {
  return function(start, end, step) {
    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
      end = step = undefined;
    }
    // Ensure the sign of `-0` is preserved.
    start = toFinite(start);
    if (end === undefined) {
      end = start;
      start = 0;
    } else {
      end = toFinite(end);
    }
    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
    return baseRange(start, end, step, fromRight);
  };
}

module.exports = createRange;

},{"./_baseRange":265,"./_isIterateeCall":345,"./toFinite":474}],307:[function(require,module,exports){
var isLaziable = require('./_isLaziable'),
    setData = require('./_setData'),
    setWrapToString = require('./_setWrapToString');

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_BOUND_FLAG = 4,
    WRAP_CURRY_FLAG = 8,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_PARTIAL_RIGHT_FLAG = 64;

/**
 * Creates a function that wraps `func` to continue currying.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {Function} wrapFunc The function to create the `func` wrapper.
 * @param {*} placeholder The placeholder value.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to prepend to those provided to
 *  the new function.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
  var isCurry = bitmask & WRAP_CURRY_FLAG,
      newHolders = isCurry ? holders : undefined,
      newHoldersRight = isCurry ? undefined : holders,
      newPartials = isCurry ? partials : undefined,
      newPartialsRight = isCurry ? undefined : partials;

  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
  }
  var newData = [
    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
    newHoldersRight, argPos, ary, arity
  ];

  var result = wrapFunc.apply(undefined, newData);
  if (isLaziable(func)) {
    setData(result, newData);
  }
  result.placeholder = placeholder;
  return setWrapToString(result, func, bitmask);
}

module.exports = createRecurry;

},{"./_isLaziable":348,"./_setData":381,"./_setWrapToString":384}],308:[function(require,module,exports){
var Set = require('./_Set'),
    noop = require('./noop'),
    setToArray = require('./_setToArray');

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Creates a set object of `values`.
 *
 * @private
 * @param {Array} values The values to add to the set.
 * @returns {Object} Returns the new set.
 */
var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
  return new Set(values);
};

module.exports = createSet;

},{"./_Set":209,"./_setToArray":382,"./noop":462}],309:[function(require,module,exports){
var baseSetData = require('./_baseSetData'),
    createBind = require('./_createBind'),
    createCurry = require('./_createCurry'),
    createHybrid = require('./_createHybrid'),
    createPartial = require('./_createPartial'),
    getData = require('./_getData'),
    mergeData = require('./_mergeData'),
    setData = require('./_setData'),
    setWrapToString = require('./_setWrapToString'),
    toInteger = require('./toInteger');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_FLAG = 8,
    WRAP_CURRY_RIGHT_FLAG = 16,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_PARTIAL_RIGHT_FLAG = 64;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * Creates a function that either curries or invokes `func` with optional
 * `this` binding and partially applied arguments.
 *
 * @private
 * @param {Function|string} func The function or method name to wrap.
 * @param {number} bitmask The bitmask flags.
 *    1 - `_.bind`
 *    2 - `_.bindKey`
 *    4 - `_.curry` or `_.curryRight` of a bound function
 *    8 - `_.curry`
 *   16 - `_.curryRight`
 *   32 - `_.partial`
 *   64 - `_.partialRight`
 *  128 - `_.rearg`
 *  256 - `_.ary`
 *  512 - `_.flip`
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to be partially applied.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
  if (!isBindKey && typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var length = partials ? partials.length : 0;
  if (!length) {
    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
    partials = holders = undefined;
  }
  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
  arity = arity === undefined ? arity : toInteger(arity);
  length -= holders ? holders.length : 0;

  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
    var partialsRight = partials,
        holdersRight = holders;

    partials = holders = undefined;
  }
  var data = isBindKey ? undefined : getData(func);

  var newData = [
    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
    argPos, ary, arity
  ];

  if (data) {
    mergeData(newData, data);
  }
  func = newData[0];
  bitmask = newData[1];
  thisArg = newData[2];
  partials = newData[3];
  holders = newData[4];
  arity = newData[9] = newData[9] === undefined
    ? (isBindKey ? 0 : func.length)
    : nativeMax(newData[9] - length, 0);

  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
  }
  if (!bitmask || bitmask == WRAP_BIND_FLAG) {
    var result = createBind(func, bitmask, thisArg);
  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
    result = createCurry(func, bitmask, arity);
  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
    result = createPartial(func, bitmask, thisArg, partials);
  } else {
    result = createHybrid.apply(undefined, newData);
  }
  var setter = data ? baseSetData : setData;
  return setWrapToString(setter(result, newData), func, bitmask);
}

module.exports = createWrap;

},{"./_baseSetData":269,"./_createBind":299,"./_createCurry":302,"./_createHybrid":304,"./_createPartial":305,"./_getData":319,"./_mergeData":365,"./_setData":381,"./_setWrapToString":384,"./toInteger":475}],310:[function(require,module,exports){
var isPlainObject = require('./isPlainObject');

/**
 * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
 * objects.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {string} key The key of the property to inspect.
 * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
 */
function customOmitClone(value) {
  return isPlainObject(value) ? undefined : value;
}

module.exports = customOmitClone;

},{"./isPlainObject":454}],311:[function(require,module,exports){
var getNative = require('./_getNative');

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

module.exports = defineProperty;

},{"./_getNative":324}],312:[function(require,module,exports){
var SetCache = require('./_SetCache'),
    arraySome = require('./_arraySome'),
    cacheHas = require('./_cacheHas');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(array);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function(othValue, othIndex) {
            if (!cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;

},{"./_SetCache":210,"./_arraySome":226,"./_cacheHas":278}],313:[function(require,module,exports){
var Symbol = require('./_Symbol'),
    Uint8Array = require('./_Uint8Array'),
    eq = require('./eq'),
    equalArrays = require('./_equalArrays'),
    mapToArray = require('./_mapToArray'),
    setToArray = require('./_setToArray');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

module.exports = equalByTag;

},{"./_Symbol":212,"./_Uint8Array":213,"./_equalArrays":312,"./_mapToArray":362,"./_setToArray":382,"./eq":407}],314:[function(require,module,exports){
var getAllKeys = require('./_getAllKeys');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(object);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;

},{"./_getAllKeys":317}],315:[function(require,module,exports){
var flatten = require('./flatten'),
    overRest = require('./_overRest'),
    setToString = require('./_setToString');

/**
 * A specialized version of `baseRest` which flattens the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
function flatRest(func) {
  return setToString(overRest(func, undefined, flatten), func + '');
}

module.exports = flatRest;

},{"./_overRest":373,"./_setToString":383,"./flatten":412}],316:[function(require,module,exports){
(function (global){
/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],317:[function(require,module,exports){
var baseGetAllKeys = require('./_baseGetAllKeys'),
    getSymbols = require('./_getSymbols'),
    keys = require('./keys');

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;

},{"./_baseGetAllKeys":243,"./_getSymbols":327,"./keys":458}],318:[function(require,module,exports){
var baseGetAllKeys = require('./_baseGetAllKeys'),
    getSymbolsIn = require('./_getSymbolsIn'),
    keysIn = require('./keysIn');

/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn);
}

module.exports = getAllKeysIn;

},{"./_baseGetAllKeys":243,"./_getSymbolsIn":328,"./keysIn":459}],319:[function(require,module,exports){
var metaMap = require('./_metaMap'),
    noop = require('./noop');

/**
 * Gets metadata for `func`.
 *
 * @private
 * @param {Function} func The function to query.
 * @returns {*} Returns the metadata for `func`.
 */
var getData = !metaMap ? noop : function(func) {
  return metaMap.get(func);
};

module.exports = getData;

},{"./_metaMap":366,"./noop":462}],320:[function(require,module,exports){
var realNames = require('./_realNames');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the name of `func`.
 *
 * @private
 * @param {Function} func The function to query.
 * @returns {string} Returns the function name.
 */
function getFuncName(func) {
  var result = (func.name + ''),
      array = realNames[result],
      length = hasOwnProperty.call(realNames, result) ? array.length : 0;

  while (length--) {
    var data = array[length],
        otherFunc = data.func;
    if (otherFunc == null || otherFunc == func) {
      return data.name;
    }
  }
  return result;
}

module.exports = getFuncName;

},{"./_realNames":375}],321:[function(require,module,exports){
/**
 * Gets the argument placeholder value for `func`.
 *
 * @private
 * @param {Function} func The function to inspect.
 * @returns {*} Returns the placeholder value.
 */
function getHolder(func) {
  var object = func;
  return object.placeholder;
}

module.exports = getHolder;

},{}],322:[function(require,module,exports){
var isKeyable = require('./_isKeyable');

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;

},{"./_isKeyable":347}],323:[function(require,module,exports){
var isStrictComparable = require('./_isStrictComparable'),
    keys = require('./keys');

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = keys(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, isStrictComparable(value)];
  }
  return result;
}

module.exports = getMatchData;

},{"./_isStrictComparable":351,"./keys":458}],324:[function(require,module,exports){
var baseIsNative = require('./_baseIsNative'),
    getValue = require('./_getValue');

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;

},{"./_baseIsNative":253,"./_getValue":330}],325:[function(require,module,exports){
var overArg = require('./_overArg');

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;

},{"./_overArg":372}],326:[function(require,module,exports){
var Symbol = require('./_Symbol');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;

},{"./_Symbol":212}],327:[function(require,module,exports){
var arrayFilter = require('./_arrayFilter'),
    stubArray = require('./stubArray');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;

},{"./_arrayFilter":219,"./stubArray":471}],328:[function(require,module,exports){
var arrayPush = require('./_arrayPush'),
    getPrototype = require('./_getPrototype'),
    getSymbols = require('./_getSymbols'),
    stubArray = require('./stubArray');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

module.exports = getSymbolsIn;

},{"./_arrayPush":224,"./_getPrototype":325,"./_getSymbols":327,"./stubArray":471}],329:[function(require,module,exports){
var DataView = require('./_DataView'),
    Map = require('./_Map'),
    Promise = require('./_Promise'),
    Set = require('./_Set'),
    WeakMap = require('./_WeakMap'),
    baseGetTag = require('./_baseGetTag'),
    toSource = require('./_toSource');

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

module.exports = getTag;

},{"./_DataView":201,"./_Map":206,"./_Promise":208,"./_Set":209,"./_WeakMap":214,"./_baseGetTag":244,"./_toSource":395}],330:[function(require,module,exports){
/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;

},{}],331:[function(require,module,exports){
/** Used to match wrap detail comments. */
var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
    reSplitDetails = /,? & /;

/**
 * Extracts wrapper details from the `source` body comment.
 *
 * @private
 * @param {string} source The source to inspect.
 * @returns {Array} Returns the wrapper details.
 */
function getWrapDetails(source) {
  var match = source.match(reWrapDetails);
  return match ? match[1].split(reSplitDetails) : [];
}

module.exports = getWrapDetails;

},{}],332:[function(require,module,exports){
var castPath = require('./_castPath'),
    isArguments = require('./isArguments'),
    isArray = require('./isArray'),
    isIndex = require('./_isIndex'),
    isLength = require('./isLength'),
    toKey = require('./_toKey');

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) &&
    (isArray(object) || isArguments(object));
}

module.exports = hasPath;

},{"./_castPath":279,"./_isIndex":344,"./_toKey":394,"./isArguments":443,"./isArray":444,"./isLength":451}],333:[function(require,module,exports){
/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsZWJ = '\\u200d';

/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

/**
 * Checks if `string` contains Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
 */
function hasUnicode(string) {
  return reHasUnicode.test(string);
}

module.exports = hasUnicode;

},{}],334:[function(require,module,exports){
var nativeCreate = require('./_nativeCreate');

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;

},{"./_nativeCreate":367}],335:[function(require,module,exports){
/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;

},{}],336:[function(require,module,exports){
var nativeCreate = require('./_nativeCreate');

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;

},{"./_nativeCreate":367}],337:[function(require,module,exports){
var nativeCreate = require('./_nativeCreate');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;

},{"./_nativeCreate":367}],338:[function(require,module,exports){
var nativeCreate = require('./_nativeCreate');

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;

},{"./_nativeCreate":367}],339:[function(require,module,exports){
/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

module.exports = initCloneArray;

},{}],340:[function(require,module,exports){
var cloneArrayBuffer = require('./_cloneArrayBuffer'),
    cloneDataView = require('./_cloneDataView'),
    cloneMap = require('./_cloneMap'),
    cloneRegExp = require('./_cloneRegExp'),
    cloneSet = require('./_cloneSet'),
    cloneSymbol = require('./_cloneSymbol'),
    cloneTypedArray = require('./_cloneTypedArray');

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, cloneFunc, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag: case float64Tag:
    case int8Tag: case int16Tag: case int32Tag:
    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return cloneMap(object, isDeep, cloneFunc);

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return cloneSet(object, isDeep, cloneFunc);

    case symbolTag:
      return cloneSymbol(object);
  }
}

module.exports = initCloneByTag;

},{"./_cloneArrayBuffer":281,"./_cloneDataView":283,"./_cloneMap":284,"./_cloneRegExp":285,"./_cloneSet":286,"./_cloneSymbol":287,"./_cloneTypedArray":288}],341:[function(require,module,exports){
var baseCreate = require('./_baseCreate'),
    getPrototype = require('./_getPrototype'),
    isPrototype = require('./_isPrototype');

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

module.exports = initCloneObject;

},{"./_baseCreate":234,"./_getPrototype":325,"./_isPrototype":350}],342:[function(require,module,exports){
/** Used to match wrap detail comments. */
var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;

/**
 * Inserts wrapper `details` in a comment at the top of the `source` body.
 *
 * @private
 * @param {string} source The source to modify.
 * @returns {Array} details The details to insert.
 * @returns {string} Returns the modified source.
 */
function insertWrapDetails(source, details) {
  var length = details.length;
  if (!length) {
    return source;
  }
  var lastIndex = length - 1;
  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
  details = details.join(length > 2 ? ', ' : ' ');
  return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
}

module.exports = insertWrapDetails;

},{}],343:[function(require,module,exports){
var Symbol = require('./_Symbol'),
    isArguments = require('./isArguments'),
    isArray = require('./isArray');

/** Built-in value references. */
var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
  return isArray(value) || isArguments(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

module.exports = isFlattenable;

},{"./_Symbol":212,"./isArguments":443,"./isArray":444}],344:[function(require,module,exports){
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length &&
    (typeof value == 'number' || reIsUint.test(value)) &&
    (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;

},{}],345:[function(require,module,exports){
var eq = require('./eq'),
    isArrayLike = require('./isArrayLike'),
    isIndex = require('./_isIndex'),
    isObject = require('./isObject');

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

module.exports = isIterateeCall;

},{"./_isIndex":344,"./eq":407,"./isArrayLike":445,"./isObject":452}],346:[function(require,module,exports){
var isArray = require('./isArray'),
    isSymbol = require('./isSymbol');

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

module.exports = isKey;

},{"./isArray":444,"./isSymbol":455}],347:[function(require,module,exports){
/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;

},{}],348:[function(require,module,exports){
var LazyWrapper = require('./_LazyWrapper'),
    getData = require('./_getData'),
    getFuncName = require('./_getFuncName'),
    lodash = require('./wrapperLodash');

/**
 * Checks if `func` has a lazy counterpart.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
 *  else `false`.
 */
function isLaziable(func) {
  var funcName = getFuncName(func),
      other = lodash[funcName];

  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
    return false;
  }
  if (func === other) {
    return true;
  }
  var data = getData(other);
  return !!data && func === data[0];
}

module.exports = isLaziable;

},{"./_LazyWrapper":203,"./_getData":319,"./_getFuncName":320,"./wrapperLodash":482}],349:[function(require,module,exports){
var coreJsData = require('./_coreJsData');

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;

},{"./_coreJsData":295}],350:[function(require,module,exports){
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;

},{}],351:[function(require,module,exports){
var isObject = require('./isObject');

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !isObject(value);
}

module.exports = isStrictComparable;

},{"./isObject":452}],352:[function(require,module,exports){
/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;

},{}],353:[function(require,module,exports){
var assocIndexOf = require('./_assocIndexOf');

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;

},{"./_assocIndexOf":229}],354:[function(require,module,exports){
var assocIndexOf = require('./_assocIndexOf');

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;

},{"./_assocIndexOf":229}],355:[function(require,module,exports){
var assocIndexOf = require('./_assocIndexOf');

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;

},{"./_assocIndexOf":229}],356:[function(require,module,exports){
var assocIndexOf = require('./_assocIndexOf');

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;

},{"./_assocIndexOf":229}],357:[function(require,module,exports){
var Hash = require('./_Hash'),
    ListCache = require('./_ListCache'),
    Map = require('./_Map');

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;

},{"./_Hash":202,"./_ListCache":204,"./_Map":206}],358:[function(require,module,exports){
var getMapData = require('./_getMapData');

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;

},{"./_getMapData":322}],359:[function(require,module,exports){
var getMapData = require('./_getMapData');

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;

},{"./_getMapData":322}],360:[function(require,module,exports){
var getMapData = require('./_getMapData');

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;

},{"./_getMapData":322}],361:[function(require,module,exports){
var getMapData = require('./_getMapData');

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;

},{"./_getMapData":322}],362:[function(require,module,exports){
/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;

},{}],363:[function(require,module,exports){
/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

module.exports = matchesStrictComparable;

},{}],364:[function(require,module,exports){
var memoize = require('./memoize');

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;

},{"./memoize":461}],365:[function(require,module,exports){
var composeArgs = require('./_composeArgs'),
    composeArgsRight = require('./_composeArgsRight'),
    replaceHolders = require('./_replaceHolders');

/** Used as the internal argument placeholder. */
var PLACEHOLDER = '__lodash_placeholder__';

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_BOUND_FLAG = 4,
    WRAP_CURRY_FLAG = 8,
    WRAP_ARY_FLAG = 128,
    WRAP_REARG_FLAG = 256;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * Merges the function metadata of `source` into `data`.
 *
 * Merging metadata reduces the number of wrappers used to invoke a function.
 * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
 * may be applied regardless of execution order. Methods like `_.ary` and
 * `_.rearg` modify function arguments, making the order in which they are
 * executed important, preventing the merging of metadata. However, we make
 * an exception for a safe combined case where curried functions have `_.ary`
 * and or `_.rearg` applied.
 *
 * @private
 * @param {Array} data The destination metadata.
 * @param {Array} source The source metadata.
 * @returns {Array} Returns `data`.
 */
function mergeData(data, source) {
  var bitmask = data[1],
      srcBitmask = source[1],
      newBitmask = bitmask | srcBitmask,
      isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

  var isCombo =
    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
    ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

  // Exit early if metadata can't be merged.
  if (!(isCommon || isCombo)) {
    return data;
  }
  // Use source `thisArg` if available.
  if (srcBitmask & WRAP_BIND_FLAG) {
    data[2] = source[2];
    // Set when currying a bound function.
    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
  }
  // Compose partial arguments.
  var value = source[3];
  if (value) {
    var partials = data[3];
    data[3] = partials ? composeArgs(partials, value, source[4]) : value;
    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
  }
  // Compose partial right arguments.
  value = source[5];
  if (value) {
    partials = data[5];
    data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
  }
  // Use source `argPos` if available.
  value = source[7];
  if (value) {
    data[7] = value;
  }
  // Use source `ary` if it's smaller.
  if (srcBitmask & WRAP_ARY_FLAG) {
    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
  }
  // Use source `arity` if one is not provided.
  if (data[9] == null) {
    data[9] = source[9];
  }
  // Use source `func` and merge bitmasks.
  data[0] = source[0];
  data[1] = newBitmask;

  return data;
}

module.exports = mergeData;

},{"./_composeArgs":289,"./_composeArgsRight":290,"./_replaceHolders":377}],366:[function(require,module,exports){
var WeakMap = require('./_WeakMap');

/** Used to store function metadata. */
var metaMap = WeakMap && new WeakMap;

module.exports = metaMap;

},{"./_WeakMap":214}],367:[function(require,module,exports){
var getNative = require('./_getNative');

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;

},{"./_getNative":324}],368:[function(require,module,exports){
var overArg = require('./_overArg');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;

},{"./_overArg":372}],369:[function(require,module,exports){
/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = nativeKeysIn;

},{}],370:[function(require,module,exports){
var freeGlobal = require('./_freeGlobal');

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;

},{"./_freeGlobal":316}],371:[function(require,module,exports){
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;

},{}],372:[function(require,module,exports){
/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;

},{}],373:[function(require,module,exports){
var apply = require('./_apply');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;

},{"./_apply":217}],374:[function(require,module,exports){
var baseGet = require('./_baseGet'),
    baseSlice = require('./_baseSlice');

/**
 * Gets the parent value at `path` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} path The path to get the parent value of.
 * @returns {*} Returns the parent value.
 */
function parent(object, path) {
  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
}

module.exports = parent;

},{"./_baseGet":242,"./_baseSlice":271}],375:[function(require,module,exports){
/** Used to lookup unminified function names. */
var realNames = {};

module.exports = realNames;

},{}],376:[function(require,module,exports){
var copyArray = require('./_copyArray'),
    isIndex = require('./_isIndex');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * Reorder `array` according to the specified indexes where the element at
 * the first index is assigned as the first element, the element at
 * the second index is assigned as the second element, and so on.
 *
 * @private
 * @param {Array} array The array to reorder.
 * @param {Array} indexes The arranged array indexes.
 * @returns {Array} Returns `array`.
 */
function reorder(array, indexes) {
  var arrLength = array.length,
      length = nativeMin(indexes.length, arrLength),
      oldArray = copyArray(array);

  while (length--) {
    var index = indexes[length];
    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
  }
  return array;
}

module.exports = reorder;

},{"./_copyArray":291,"./_isIndex":344}],377:[function(require,module,exports){
/** Used as the internal argument placeholder. */
var PLACEHOLDER = '__lodash_placeholder__';

/**
 * Replaces all `placeholder` elements in `array` with an internal placeholder
 * and returns an array of their indexes.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {*} placeholder The placeholder to replace.
 * @returns {Array} Returns the new array of placeholder indexes.
 */
function replaceHolders(array, placeholder) {
  var index = -1,
      length = array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (value === placeholder || value === PLACEHOLDER) {
      array[index] = PLACEHOLDER;
      result[resIndex++] = index;
    }
  }
  return result;
}

module.exports = replaceHolders;

},{}],378:[function(require,module,exports){
var freeGlobal = require('./_freeGlobal');

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;

},{"./_freeGlobal":316}],379:[function(require,module,exports){
/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;

},{}],380:[function(require,module,exports){
/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;

},{}],381:[function(require,module,exports){
var baseSetData = require('./_baseSetData'),
    shortOut = require('./_shortOut');

/**
 * Sets metadata for `func`.
 *
 * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
 * period of time, it will trip its breaker and transition to an identity
 * function to avoid garbage collection pauses in V8. See
 * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
 * for more details.
 *
 * @private
 * @param {Function} func The function to associate metadata with.
 * @param {*} data The metadata.
 * @returns {Function} Returns `func`.
 */
var setData = shortOut(baseSetData);

module.exports = setData;

},{"./_baseSetData":269,"./_shortOut":385}],382:[function(require,module,exports){
/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;

},{}],383:[function(require,module,exports){
var baseSetToString = require('./_baseSetToString'),
    shortOut = require('./_shortOut');

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

module.exports = setToString;

},{"./_baseSetToString":270,"./_shortOut":385}],384:[function(require,module,exports){
var getWrapDetails = require('./_getWrapDetails'),
    insertWrapDetails = require('./_insertWrapDetails'),
    setToString = require('./_setToString'),
    updateWrapDetails = require('./_updateWrapDetails');

/**
 * Sets the `toString` method of `wrapper` to mimic the source of `reference`
 * with wrapper details in a comment at the top of the source body.
 *
 * @private
 * @param {Function} wrapper The function to modify.
 * @param {Function} reference The reference function.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @returns {Function} Returns `wrapper`.
 */
function setWrapToString(wrapper, reference, bitmask) {
  var source = (reference + '');
  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
}

module.exports = setWrapToString;

},{"./_getWrapDetails":331,"./_insertWrapDetails":342,"./_setToString":383,"./_updateWrapDetails":397}],385:[function(require,module,exports){
/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;

},{}],386:[function(require,module,exports){
var ListCache = require('./_ListCache');

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

module.exports = stackClear;

},{"./_ListCache":204}],387:[function(require,module,exports){
/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;

},{}],388:[function(require,module,exports){
/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;

},{}],389:[function(require,module,exports){
/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;

},{}],390:[function(require,module,exports){
var ListCache = require('./_ListCache'),
    Map = require('./_Map'),
    MapCache = require('./_MapCache');

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;

},{"./_ListCache":204,"./_Map":206,"./_MapCache":207}],391:[function(require,module,exports){
/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

module.exports = strictIndexOf;

},{}],392:[function(require,module,exports){
var asciiToArray = require('./_asciiToArray'),
    hasUnicode = require('./_hasUnicode'),
    unicodeToArray = require('./_unicodeToArray');

/**
 * Converts `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function stringToArray(string) {
  return hasUnicode(string)
    ? unicodeToArray(string)
    : asciiToArray(string);
}

module.exports = stringToArray;

},{"./_asciiToArray":227,"./_hasUnicode":333,"./_unicodeToArray":396}],393:[function(require,module,exports){
var memoizeCapped = require('./_memoizeCapped');

/** Used to match property names within property paths. */
var reLeadingDot = /^\./,
    rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoizeCapped(function(string) {
  var result = [];
  if (reLeadingDot.test(string)) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, string) {
    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

module.exports = stringToPath;

},{"./_memoizeCapped":364}],394:[function(require,module,exports){
var isSymbol = require('./isSymbol');

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = toKey;

},{"./isSymbol":455}],395:[function(require,module,exports){
/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;

},{}],396:[function(require,module,exports){
/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsAstral = '[' + rsAstralRange + ']',
    rsCombo = '[' + rsComboRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var reOptMod = rsModifier + '?',
    rsOptVar = '[' + rsVarRange + ']?',
    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

/**
 * Converts a Unicode `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function unicodeToArray(string) {
  return string.match(reUnicode) || [];
}

module.exports = unicodeToArray;

},{}],397:[function(require,module,exports){
var arrayEach = require('./_arrayEach'),
    arrayIncludes = require('./_arrayIncludes');

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_FLAG = 8,
    WRAP_CURRY_RIGHT_FLAG = 16,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_PARTIAL_RIGHT_FLAG = 64,
    WRAP_ARY_FLAG = 128,
    WRAP_REARG_FLAG = 256,
    WRAP_FLIP_FLAG = 512;

/** Used to associate wrap methods with their bit flags. */
var wrapFlags = [
  ['ary', WRAP_ARY_FLAG],
  ['bind', WRAP_BIND_FLAG],
  ['bindKey', WRAP_BIND_KEY_FLAG],
  ['curry', WRAP_CURRY_FLAG],
  ['curryRight', WRAP_CURRY_RIGHT_FLAG],
  ['flip', WRAP_FLIP_FLAG],
  ['partial', WRAP_PARTIAL_FLAG],
  ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
  ['rearg', WRAP_REARG_FLAG]
];

/**
 * Updates wrapper `details` based on `bitmask` flags.
 *
 * @private
 * @returns {Array} details The details to modify.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @returns {Array} Returns `details`.
 */
function updateWrapDetails(details, bitmask) {
  arrayEach(wrapFlags, function(pair) {
    var value = '_.' + pair[0];
    if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
      details.push(value);
    }
  });
  return details.sort();
}

module.exports = updateWrapDetails;

},{"./_arrayEach":218,"./_arrayIncludes":220}],398:[function(require,module,exports){
var LazyWrapper = require('./_LazyWrapper'),
    LodashWrapper = require('./_LodashWrapper'),
    copyArray = require('./_copyArray');

/**
 * Creates a clone of `wrapper`.
 *
 * @private
 * @param {Object} wrapper The wrapper to clone.
 * @returns {Object} Returns the cloned wrapper.
 */
function wrapperClone(wrapper) {
  if (wrapper instanceof LazyWrapper) {
    return wrapper.clone();
  }
  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
  result.__actions__ = copyArray(wrapper.__actions__);
  result.__index__  = wrapper.__index__;
  result.__values__ = wrapper.__values__;
  return result;
}

module.exports = wrapperClone;

},{"./_LazyWrapper":203,"./_LodashWrapper":205,"./_copyArray":291}],399:[function(require,module,exports){
var createWrap = require('./_createWrap');

/** Used to compose bitmasks for function metadata. */
var WRAP_ARY_FLAG = 128;

/**
 * Creates a function that invokes `func`, with up to `n` arguments,
 * ignoring any additional arguments.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} func The function to cap arguments for.
 * @param {number} [n=func.length] The arity cap.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the new capped function.
 * @example
 *
 * _.map(['6', '8', '10'], _.ary(parseInt, 1));
 * // => [6, 8, 10]
 */
function ary(func, n, guard) {
  n = guard ? undefined : n;
  n = (func && n == null) ? func.length : n;
  return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
}

module.exports = ary;

},{"./_createWrap":309}],400:[function(require,module,exports){
var toString = require('./toString'),
    upperFirst = require('./upperFirst');

/**
 * Converts the first character of `string` to upper case and the remaining
 * to lower case.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to capitalize.
 * @returns {string} Returns the capitalized string.
 * @example
 *
 * _.capitalize('FRED');
 * // => 'Fred'
 */
function capitalize(string) {
  return upperFirst(toString(string).toLowerCase());
}

module.exports = capitalize;

},{"./toString":478,"./upperFirst":480}],401:[function(require,module,exports){
var baseSlice = require('./_baseSlice'),
    isIterateeCall = require('./_isIterateeCall'),
    toInteger = require('./toInteger');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeCeil = Math.ceil,
    nativeMax = Math.max;

/**
 * Creates an array of elements split into groups the length of `size`.
 * If `array` can't be split evenly, the final chunk will be the remaining
 * elements.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to process.
 * @param {number} [size=1] The length of each chunk
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the new array of chunks.
 * @example
 *
 * _.chunk(['a', 'b', 'c', 'd'], 2);
 * // => [['a', 'b'], ['c', 'd']]
 *
 * _.chunk(['a', 'b', 'c', 'd'], 3);
 * // => [['a', 'b', 'c'], ['d']]
 */
function chunk(array, size, guard) {
  if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
    size = 1;
  } else {
    size = nativeMax(toInteger(size), 0);
  }
  var length = array == null ? 0 : array.length;
  if (!length || size < 1) {
    return [];
  }
  var index = 0,
      resIndex = 0,
      result = Array(nativeCeil(length / size));

  while (index < length) {
    result[resIndex++] = baseSlice(array, index, (index += size));
  }
  return result;
}

module.exports = chunk;

},{"./_baseSlice":271,"./_isIterateeCall":345,"./toInteger":475}],402:[function(require,module,exports){
var baseClone = require('./_baseClone');

/** Used to compose bitmasks for cloning. */
var CLONE_SYMBOLS_FLAG = 4;

/**
 * Creates a shallow clone of `value`.
 *
 * **Note:** This method is loosely based on the
 * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
 * and supports cloning arrays, array buffers, booleans, date objects, maps,
 * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
 * arrays. The own enumerable properties of `arguments` objects are cloned
 * as plain objects. An empty object is returned for uncloneable values such
 * as error objects, functions, DOM nodes, and WeakMaps.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to clone.
 * @returns {*} Returns the cloned value.
 * @see _.cloneDeep
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var shallow = _.clone(objects);
 * console.log(shallow[0] === objects[0]);
 * // => true
 */
function clone(value) {
  return baseClone(value, CLONE_SYMBOLS_FLAG);
}

module.exports = clone;

},{"./_baseClone":233}],403:[function(require,module,exports){
/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

module.exports = constant;

},{}],404:[function(require,module,exports){
var createWrap = require('./_createWrap');

/** Used to compose bitmasks for function metadata. */
var WRAP_CURRY_FLAG = 8;

/**
 * Creates a function that accepts arguments of `func` and either invokes
 * `func` returning its result, if at least `arity` number of arguments have
 * been provided, or returns a function that accepts the remaining `func`
 * arguments, and so on. The arity of `func` may be specified if `func.length`
 * is not sufficient.
 *
 * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
 * may be used as a placeholder for provided arguments.
 *
 * **Note:** This method doesn't set the "length" property of curried functions.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Function
 * @param {Function} func The function to curry.
 * @param {number} [arity=func.length] The arity of `func`.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the new curried function.
 * @example
 *
 * var abc = function(a, b, c) {
 *   return [a, b, c];
 * };
 *
 * var curried = _.curry(abc);
 *
 * curried(1)(2)(3);
 * // => [1, 2, 3]
 *
 * curried(1, 2)(3);
 * // => [1, 2, 3]
 *
 * curried(1, 2, 3);
 * // => [1, 2, 3]
 *
 * // Curried with placeholders.
 * curried(1)(_, 3)(2);
 * // => [1, 2, 3]
 */
function curry(func, arity, guard) {
  arity = guard ? undefined : arity;
  var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
  result.placeholder = curry.placeholder;
  return result;
}

// Assign default placeholders.
curry.placeholder = {};

module.exports = curry;

},{"./_createWrap":309}],405:[function(require,module,exports){
var isObject = require('./isObject'),
    now = require('./now'),
    toNumber = require('./toNumber');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        result = wait - timeSinceLastCall;

    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

module.exports = debounce;

},{"./isObject":452,"./now":463,"./toNumber":476}],406:[function(require,module,exports){
var baseDifference = require('./_baseDifference'),
    baseFlatten = require('./_baseFlatten'),
    baseRest = require('./_baseRest'),
    isArrayLikeObject = require('./isArrayLikeObject');

/**
 * Creates an array of `array` values not included in the other given arrays
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. The order and references of result values are
 * determined by the first array.
 *
 * **Note:** Unlike `_.pullAll`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...Array} [values] The values to exclude.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.without, _.xor
 * @example
 *
 * _.difference([2, 1], [2, 3]);
 * // => [1]
 */
var difference = baseRest(function(array, values) {
  return isArrayLikeObject(array)
    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
    : [];
});

module.exports = difference;

},{"./_baseDifference":235,"./_baseFlatten":239,"./_baseRest":267,"./isArrayLikeObject":446}],407:[function(require,module,exports){
/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;

},{}],408:[function(require,module,exports){
var toString = require('./toString');

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
    reHasRegExpChar = RegExp(reRegExpChar.source);

/**
 * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
 * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to escape.
 * @returns {string} Returns the escaped string.
 * @example
 *
 * _.escapeRegExp('[lodash](https://lodash.com/)');
 * // => '\[lodash\]\(https://lodash\.com/\)'
 */
function escapeRegExp(string) {
  string = toString(string);
  return (string && reHasRegExpChar.test(string))
    ? string.replace(reRegExpChar, '\\$&')
    : string;
}

module.exports = escapeRegExp;

},{"./toString":478}],409:[function(require,module,exports){
var arrayFilter = require('./_arrayFilter'),
    baseFilter = require('./_baseFilter'),
    baseIteratee = require('./_baseIteratee'),
    isArray = require('./isArray');

/**
 * Iterates over elements of `collection`, returning an array of all elements
 * `predicate` returns truthy for. The predicate is invoked with three
 * arguments: (value, index|key, collection).
 *
 * **Note:** Unlike `_.remove`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 * @see _.reject
 * @example
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': true },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * _.filter(users, function(o) { return !o.active; });
 * // => objects for ['fred']
 *
 * // The `_.matches` iteratee shorthand.
 * _.filter(users, { 'age': 36, 'active': true });
 * // => objects for ['barney']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.filter(users, ['active', false]);
 * // => objects for ['fred']
 *
 * // The `_.property` iteratee shorthand.
 * _.filter(users, 'active');
 * // => objects for ['barney']
 */
function filter(collection, predicate) {
  var func = isArray(collection) ? arrayFilter : baseFilter;
  return func(collection, baseIteratee(predicate, 3));
}

module.exports = filter;

},{"./_arrayFilter":219,"./_baseFilter":237,"./_baseIteratee":255,"./isArray":444}],410:[function(require,module,exports){
var baseFindIndex = require('./_baseFindIndex'),
    baseIteratee = require('./_baseIteratee'),
    toInteger = require('./toInteger');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * This method is like `_.find` except that it returns the index of the first
 * element `predicate` returns truthy for instead of the element itself.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': false },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': true }
 * ];
 *
 * _.findIndex(users, function(o) { return o.user == 'barney'; });
 * // => 0
 *
 * // The `_.matches` iteratee shorthand.
 * _.findIndex(users, { 'user': 'fred', 'active': false });
 * // => 1
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findIndex(users, ['active', false]);
 * // => 0
 *
 * // The `_.property` iteratee shorthand.
 * _.findIndex(users, 'active');
 * // => 2
 */
function findIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = fromIndex == null ? 0 : toInteger(fromIndex);
  if (index < 0) {
    index = nativeMax(length + index, 0);
  }
  return baseFindIndex(array, baseIteratee(predicate, 3), index);
}

module.exports = findIndex;

},{"./_baseFindIndex":238,"./_baseIteratee":255,"./toInteger":475}],411:[function(require,module,exports){
var baseFindIndex = require('./_baseFindIndex'),
    baseIteratee = require('./_baseIteratee'),
    toInteger = require('./toInteger');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * This method is like `_.findIndex` except that it iterates over elements
 * of `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=array.length-1] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': true },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': false }
 * ];
 *
 * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
 * // => 2
 *
 * // The `_.matches` iteratee shorthand.
 * _.findLastIndex(users, { 'user': 'barney', 'active': true });
 * // => 0
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findLastIndex(users, ['active', false]);
 * // => 2
 *
 * // The `_.property` iteratee shorthand.
 * _.findLastIndex(users, 'active');
 * // => 0
 */
function findLastIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = length - 1;
  if (fromIndex !== undefined) {
    index = toInteger(fromIndex);
    index = fromIndex < 0
      ? nativeMax(length + index, 0)
      : nativeMin(index, length - 1);
  }
  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);
}

module.exports = findLastIndex;

},{"./_baseFindIndex":238,"./_baseIteratee":255,"./toInteger":475}],412:[function(require,module,exports){
var baseFlatten = require('./_baseFlatten');

/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */
function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten(array, 1) : [];
}

module.exports = flatten;

},{"./_baseFlatten":239}],413:[function(require,module,exports){
var createFlow = require('./_createFlow');

/**
 * Creates a function that returns the result of invoking the given functions
 * with the `this` binding of the created function, where each successive
 * invocation is supplied the return value of the previous.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Util
 * @param {...(Function|Function[])} [funcs] The functions to invoke.
 * @returns {Function} Returns the new composite function.
 * @see _.flowRight
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var addSquare = _.flow([_.add, square]);
 * addSquare(1, 2);
 * // => 9
 */
var flow = createFlow();

module.exports = flow;

},{"./_createFlow":303}],414:[function(require,module,exports){
var mapping = require('./_mapping'),
    fallbackHolder = require('./placeholder');

/** Built-in value reference. */
var push = Array.prototype.push;

/**
 * Creates a function, with an arity of `n`, that invokes `func` with the
 * arguments it receives.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} n The arity of the new function.
 * @returns {Function} Returns the new function.
 */
function baseArity(func, n) {
  return n == 2
    ? function(a, b) { return func.apply(undefined, arguments); }
    : function(a) { return func.apply(undefined, arguments); };
}

/**
 * Creates a function that invokes `func`, with up to `n` arguments, ignoring
 * any additional arguments.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @param {number} n The arity cap.
 * @returns {Function} Returns the new function.
 */
function baseAry(func, n) {
  return n == 2
    ? function(a, b) { return func(a, b); }
    : function(a) { return func(a); };
}

/**
 * Creates a clone of `array`.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the cloned array.
 */
function cloneArray(array) {
  var length = array ? array.length : 0,
      result = Array(length);

  while (length--) {
    result[length] = array[length];
  }
  return result;
}

/**
 * Creates a function that clones a given object using the assignment `func`.
 *
 * @private
 * @param {Function} func The assignment function.
 * @returns {Function} Returns the new cloner function.
 */
function createCloner(func) {
  return function(object) {
    return func({}, object);
  };
}

/**
 * A specialized version of `_.spread` which flattens the spread array into
 * the arguments of the invoked `func`.
 *
 * @private
 * @param {Function} func The function to spread arguments over.
 * @param {number} start The start position of the spread.
 * @returns {Function} Returns the new function.
 */
function flatSpread(func, start) {
  return function() {
    var length = arguments.length,
        lastIndex = length - 1,
        args = Array(length);

    while (length--) {
      args[length] = arguments[length];
    }
    var array = args[start],
        otherArgs = args.slice(0, start);

    if (array) {
      push.apply(otherArgs, array);
    }
    if (start != lastIndex) {
      push.apply(otherArgs, args.slice(start + 1));
    }
    return func.apply(this, otherArgs);
  };
}

/**
 * Creates a function that wraps `func` and uses `cloner` to clone the first
 * argument it receives.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} cloner The function to clone arguments.
 * @returns {Function} Returns the new immutable function.
 */
function wrapImmutable(func, cloner) {
  return function() {
    var length = arguments.length;
    if (!length) {
      return;
    }
    var args = Array(length);
    while (length--) {
      args[length] = arguments[length];
    }
    var result = args[0] = cloner.apply(undefined, args);
    func.apply(undefined, args);
    return result;
  };
}

/**
 * The base implementation of `convert` which accepts a `util` object of methods
 * required to perform conversions.
 *
 * @param {Object} util The util object.
 * @param {string} name The name of the function to convert.
 * @param {Function} func The function to convert.
 * @param {Object} [options] The options object.
 * @param {boolean} [options.cap=true] Specify capping iteratee arguments.
 * @param {boolean} [options.curry=true] Specify currying.
 * @param {boolean} [options.fixed=true] Specify fixed arity.
 * @param {boolean} [options.immutable=true] Specify immutable operations.
 * @param {boolean} [options.rearg=true] Specify rearranging arguments.
 * @returns {Function|Object} Returns the converted function or object.
 */
function baseConvert(util, name, func, options) {
  var setPlaceholder,
      isLib = typeof name == 'function',
      isObj = name === Object(name);

  if (isObj) {
    options = func;
    func = name;
    name = undefined;
  }
  if (func == null) {
    throw new TypeError;
  }
  options || (options = {});

  var config = {
    'cap': 'cap' in options ? options.cap : true,
    'curry': 'curry' in options ? options.curry : true,
    'fixed': 'fixed' in options ? options.fixed : true,
    'immutable': 'immutable' in options ? options.immutable : true,
    'rearg': 'rearg' in options ? options.rearg : true
  };

  var forceCurry = ('curry' in options) && options.curry,
      forceFixed = ('fixed' in options) && options.fixed,
      forceRearg = ('rearg' in options) && options.rearg,
      placeholder = isLib ? func : fallbackHolder,
      pristine = isLib ? func.runInContext() : undefined;

  var helpers = isLib ? func : {
    'ary': util.ary,
    'assign': util.assign,
    'clone': util.clone,
    'curry': util.curry,
    'forEach': util.forEach,
    'isArray': util.isArray,
    'isFunction': util.isFunction,
    'iteratee': util.iteratee,
    'keys': util.keys,
    'rearg': util.rearg,
    'toInteger': util.toInteger,
    'toPath': util.toPath
  };

  var ary = helpers.ary,
      assign = helpers.assign,
      clone = helpers.clone,
      curry = helpers.curry,
      each = helpers.forEach,
      isArray = helpers.isArray,
      isFunction = helpers.isFunction,
      keys = helpers.keys,
      rearg = helpers.rearg,
      toInteger = helpers.toInteger,
      toPath = helpers.toPath;

  var aryMethodKeys = keys(mapping.aryMethod);

  var wrappers = {
    'castArray': function(castArray) {
      return function() {
        var value = arguments[0];
        return isArray(value)
          ? castArray(cloneArray(value))
          : castArray.apply(undefined, arguments);
      };
    },
    'iteratee': function(iteratee) {
      return function() {
        var func = arguments[0],
            arity = arguments[1],
            result = iteratee(func, arity),
            length = result.length;

        if (config.cap && typeof arity == 'number') {
          arity = arity > 2 ? (arity - 2) : 1;
          return (length && length <= arity) ? result : baseAry(result, arity);
        }
        return result;
      };
    },
    'mixin': function(mixin) {
      return function(source) {
        var func = this;
        if (!isFunction(func)) {
          return mixin(func, Object(source));
        }
        var pairs = [];
        each(keys(source), function(key) {
          if (isFunction(source[key])) {
            pairs.push([key, func.prototype[key]]);
          }
        });

        mixin(func, Object(source));

        each(pairs, function(pair) {
          var value = pair[1];
          if (isFunction(value)) {
            func.prototype[pair[0]] = value;
          } else {
            delete func.prototype[pair[0]];
          }
        });
        return func;
      };
    },
    'nthArg': function(nthArg) {
      return function(n) {
        var arity = n < 0 ? 1 : (toInteger(n) + 1);
        return curry(nthArg(n), arity);
      };
    },
    'rearg': function(rearg) {
      return function(func, indexes) {
        var arity = indexes ? indexes.length : 0;
        return curry(rearg(func, indexes), arity);
      };
    },
    'runInContext': function(runInContext) {
      return function(context) {
        return baseConvert(util, runInContext(context), options);
      };
    }
  };

  /*--------------------------------------------------------------------------*/

  /**
   * Casts `func` to a function with an arity capped iteratee if needed.
   *
   * @private
   * @param {string} name The name of the function to inspect.
   * @param {Function} func The function to inspect.
   * @returns {Function} Returns the cast function.
   */
  function castCap(name, func) {
    if (config.cap) {
      var indexes = mapping.iterateeRearg[name];
      if (indexes) {
        return iterateeRearg(func, indexes);
      }
      var n = !isLib && mapping.iterateeAry[name];
      if (n) {
        return iterateeAry(func, n);
      }
    }
    return func;
  }

  /**
   * Casts `func` to a curried function if needed.
   *
   * @private
   * @param {string} name The name of the function to inspect.
   * @param {Function} func The function to inspect.
   * @param {number} n The arity of `func`.
   * @returns {Function} Returns the cast function.
   */
  function castCurry(name, func, n) {
    return (forceCurry || (config.curry && n > 1))
      ? curry(func, n)
      : func;
  }

  /**
   * Casts `func` to a fixed arity function if needed.
   *
   * @private
   * @param {string} name The name of the function to inspect.
   * @param {Function} func The function to inspect.
   * @param {number} n The arity cap.
   * @returns {Function} Returns the cast function.
   */
  function castFixed(name, func, n) {
    if (config.fixed && (forceFixed || !mapping.skipFixed[name])) {
      var data = mapping.methodSpread[name],
          start = data && data.start;

      return start  === undefined ? ary(func, n) : flatSpread(func, start);
    }
    return func;
  }

  /**
   * Casts `func` to an rearged function if needed.
   *
   * @private
   * @param {string} name The name of the function to inspect.
   * @param {Function} func The function to inspect.
   * @param {number} n The arity of `func`.
   * @returns {Function} Returns the cast function.
   */
  function castRearg(name, func, n) {
    return (config.rearg && n > 1 && (forceRearg || !mapping.skipRearg[name]))
      ? rearg(func, mapping.methodRearg[name] || mapping.aryRearg[n])
      : func;
  }

  /**
   * Creates a clone of `object` by `path`.
   *
   * @private
   * @param {Object} object The object to clone.
   * @param {Array|string} path The path to clone by.
   * @returns {Object} Returns the cloned object.
   */
  function cloneByPath(object, path) {
    path = toPath(path);

    var index = -1,
        length = path.length,
        lastIndex = length - 1,
        result = clone(Object(object)),
        nested = result;

    while (nested != null && ++index < length) {
      var key = path[index],
          value = nested[key];

      if (value != null) {
        nested[path[index]] = clone(index == lastIndex ? value : Object(value));
      }
      nested = nested[key];
    }
    return result;
  }

  /**
   * Converts `lodash` to an immutable auto-curried iteratee-first data-last
   * version with conversion `options` applied.
   *
   * @param {Object} [options] The options object. See `baseConvert` for more details.
   * @returns {Function} Returns the converted `lodash`.
   */
  function convertLib(options) {
    return _.runInContext.convert(options)(undefined);
  }

  /**
   * Create a converter function for `func` of `name`.
   *
   * @param {string} name The name of the function to convert.
   * @param {Function} func The function to convert.
   * @returns {Function} Returns the new converter function.
   */
  function createConverter(name, func) {
    var realName = mapping.aliasToReal[name] || name,
        methodName = mapping.remap[realName] || realName,
        oldOptions = options;

    return function(options) {
      var newUtil = isLib ? pristine : helpers,
          newFunc = isLib ? pristine[methodName] : func,
          newOptions = assign(assign({}, oldOptions), options);

      return baseConvert(newUtil, realName, newFunc, newOptions);
    };
  }

  /**
   * Creates a function that wraps `func` to invoke its iteratee, with up to `n`
   * arguments, ignoring any additional arguments.
   *
   * @private
   * @param {Function} func The function to cap iteratee arguments for.
   * @param {number} n The arity cap.
   * @returns {Function} Returns the new function.
   */
  function iterateeAry(func, n) {
    return overArg(func, function(func) {
      return typeof func == 'function' ? baseAry(func, n) : func;
    });
  }

  /**
   * Creates a function that wraps `func` to invoke its iteratee with arguments
   * arranged according to the specified `indexes` where the argument value at
   * the first index is provided as the first argument, the argument value at
   * the second index is provided as the second argument, and so on.
   *
   * @private
   * @param {Function} func The function to rearrange iteratee arguments for.
   * @param {number[]} indexes The arranged argument indexes.
   * @returns {Function} Returns the new function.
   */
  function iterateeRearg(func, indexes) {
    return overArg(func, function(func) {
      var n = indexes.length;
      return baseArity(rearg(baseAry(func, n), indexes), n);
    });
  }

  /**
   * Creates a function that invokes `func` with its first argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function() {
      var length = arguments.length;
      if (!length) {
        return func();
      }
      var args = Array(length);
      while (length--) {
        args[length] = arguments[length];
      }
      var index = config.rearg ? 0 : (length - 1);
      args[index] = transform(args[index]);
      return func.apply(undefined, args);
    };
  }

  /**
   * Creates a function that wraps `func` and applys the conversions
   * rules by `name`.
   *
   * @private
   * @param {string} name The name of the function to wrap.
   * @param {Function} func The function to wrap.
   * @returns {Function} Returns the converted function.
   */
  function wrap(name, func) {
    var result,
        realName = mapping.aliasToReal[name] || name,
        wrapped = func,
        wrapper = wrappers[realName];

    if (wrapper) {
      wrapped = wrapper(func);
    }
    else if (config.immutable) {
      if (mapping.mutate.array[realName]) {
        wrapped = wrapImmutable(func, cloneArray);
      }
      else if (mapping.mutate.object[realName]) {
        wrapped = wrapImmutable(func, createCloner(func));
      }
      else if (mapping.mutate.set[realName]) {
        wrapped = wrapImmutable(func, cloneByPath);
      }
    }
    each(aryMethodKeys, function(aryKey) {
      each(mapping.aryMethod[aryKey], function(otherName) {
        if (realName == otherName) {
          var data = mapping.methodSpread[realName],
              afterRearg = data && data.afterRearg;

          result = afterRearg
            ? castFixed(realName, castRearg(realName, wrapped, aryKey), aryKey)
            : castRearg(realName, castFixed(realName, wrapped, aryKey), aryKey);

          result = castCap(realName, result);
          result = castCurry(realName, result, aryKey);
          return false;
        }
      });
      return !result;
    });

    result || (result = wrapped);
    if (result == func) {
      result = forceCurry ? curry(result, 1) : function() {
        return func.apply(this, arguments);
      };
    }
    result.convert = createConverter(realName, func);
    if (mapping.placeholder[realName]) {
      setPlaceholder = true;
      result.placeholder = func.placeholder = placeholder;
    }
    return result;
  }

  /*--------------------------------------------------------------------------*/

  if (!isObj) {
    return wrap(name, func);
  }
  var _ = func;

  // Convert methods by ary cap.
  var pairs = [];
  each(aryMethodKeys, function(aryKey) {
    each(mapping.aryMethod[aryKey], function(key) {
      var func = _[mapping.remap[key] || key];
      if (func) {
        pairs.push([key, wrap(key, func)]);
      }
    });
  });

  // Convert remaining methods.
  each(keys(_), function(key) {
    var func = _[key];
    if (typeof func == 'function') {
      var length = pairs.length;
      while (length--) {
        if (pairs[length][0] == key) {
          return;
        }
      }
      func.convert = createConverter(key, func);
      pairs.push([key, func]);
    }
  });

  // Assign to `_` leaving `_.prototype` unchanged to allow chaining.
  each(pairs, function(pair) {
    _[pair[0]] = pair[1];
  });

  _.convert = convertLib;
  if (setPlaceholder) {
    _.placeholder = placeholder;
  }
  // Assign aliases.
  each(keys(_), function(key) {
    each(mapping.realToAlias[key] || [], function(alias) {
      _[alias] = _[key];
    });
  });

  return _;
}

module.exports = baseConvert;

},{"./_mapping":416,"./placeholder":432}],415:[function(require,module,exports){
module.exports = {
  'cap': false,
  'curry': false,
  'fixed': false,
  'immutable': false,
  'rearg': false
};

},{}],416:[function(require,module,exports){
/** Used to map aliases to their real names. */
exports.aliasToReal = {

  // Lodash aliases.
  'each': 'forEach',
  'eachRight': 'forEachRight',
  'entries': 'toPairs',
  'entriesIn': 'toPairsIn',
  'extend': 'assignIn',
  'extendAll': 'assignInAll',
  'extendAllWith': 'assignInAllWith',
  'extendWith': 'assignInWith',
  'first': 'head',

  // Methods that are curried variants of others.
  'conforms': 'conformsTo',
  'matches': 'isMatch',
  'property': 'get',

  // Ramda aliases.
  '__': 'placeholder',
  'F': 'stubFalse',
  'T': 'stubTrue',
  'all': 'every',
  'allPass': 'overEvery',
  'always': 'constant',
  'any': 'some',
  'anyPass': 'overSome',
  'apply': 'spread',
  'assoc': 'set',
  'assocPath': 'set',
  'complement': 'negate',
  'compose': 'flowRight',
  'contains': 'includes',
  'dissoc': 'unset',
  'dissocPath': 'unset',
  'dropLast': 'dropRight',
  'dropLastWhile': 'dropRightWhile',
  'equals': 'isEqual',
  'identical': 'eq',
  'indexBy': 'keyBy',
  'init': 'initial',
  'invertObj': 'invert',
  'juxt': 'over',
  'omitAll': 'omit',
  'nAry': 'ary',
  'path': 'get',
  'pathEq': 'matchesProperty',
  'pathOr': 'getOr',
  'paths': 'at',
  'pickAll': 'pick',
  'pipe': 'flow',
  'pluck': 'map',
  'prop': 'get',
  'propEq': 'matchesProperty',
  'propOr': 'getOr',
  'props': 'at',
  'symmetricDifference': 'xor',
  'symmetricDifferenceBy': 'xorBy',
  'symmetricDifferenceWith': 'xorWith',
  'takeLast': 'takeRight',
  'takeLastWhile': 'takeRightWhile',
  'unapply': 'rest',
  'unnest': 'flatten',
  'useWith': 'overArgs',
  'where': 'conformsTo',
  'whereEq': 'isMatch',
  'zipObj': 'zipObject'
};

/** Used to map ary to method names. */
exports.aryMethod = {
  '1': [
    'assignAll', 'assignInAll', 'attempt', 'castArray', 'ceil', 'create',
    'curry', 'curryRight', 'defaultsAll', 'defaultsDeepAll', 'floor', 'flow',
    'flowRight', 'fromPairs', 'invert', 'iteratee', 'memoize', 'method', 'mergeAll',
    'methodOf', 'mixin', 'nthArg', 'over', 'overEvery', 'overSome','rest', 'reverse',
    'round', 'runInContext', 'spread', 'template', 'trim', 'trimEnd', 'trimStart',
    'uniqueId', 'words', 'zipAll'
  ],
  '2': [
    'add', 'after', 'ary', 'assign', 'assignAllWith', 'assignIn', 'assignInAllWith',
    'at', 'before', 'bind', 'bindAll', 'bindKey', 'chunk', 'cloneDeepWith',
    'cloneWith', 'concat', 'conformsTo', 'countBy', 'curryN', 'curryRightN',
    'debounce', 'defaults', 'defaultsDeep', 'defaultTo', 'delay', 'difference',
    'divide', 'drop', 'dropRight', 'dropRightWhile', 'dropWhile', 'endsWith', 'eq',
    'every', 'filter', 'find', 'findIndex', 'findKey', 'findLast', 'findLastIndex',
    'findLastKey', 'flatMap', 'flatMapDeep', 'flattenDepth', 'forEach',
    'forEachRight', 'forIn', 'forInRight', 'forOwn', 'forOwnRight', 'get',
    'groupBy', 'gt', 'gte', 'has', 'hasIn', 'includes', 'indexOf', 'intersection',
    'invertBy', 'invoke', 'invokeMap', 'isEqual', 'isMatch', 'join', 'keyBy',
    'lastIndexOf', 'lt', 'lte', 'map', 'mapKeys', 'mapValues', 'matchesProperty',
    'maxBy', 'meanBy', 'merge', 'mergeAllWith', 'minBy', 'multiply', 'nth', 'omit',
    'omitBy', 'overArgs', 'pad', 'padEnd', 'padStart', 'parseInt', 'partial',
    'partialRight', 'partition', 'pick', 'pickBy', 'propertyOf', 'pull', 'pullAll',
    'pullAt', 'random', 'range', 'rangeRight', 'rearg', 'reject', 'remove',
    'repeat', 'restFrom', 'result', 'sampleSize', 'some', 'sortBy', 'sortedIndex',
    'sortedIndexOf', 'sortedLastIndex', 'sortedLastIndexOf', 'sortedUniqBy',
    'split', 'spreadFrom', 'startsWith', 'subtract', 'sumBy', 'take', 'takeRight',
    'takeRightWhile', 'takeWhile', 'tap', 'throttle', 'thru', 'times', 'trimChars',
    'trimCharsEnd', 'trimCharsStart', 'truncate', 'union', 'uniqBy', 'uniqWith',
    'unset', 'unzipWith', 'without', 'wrap', 'xor', 'zip', 'zipObject',
    'zipObjectDeep'
  ],
  '3': [
    'assignInWith', 'assignWith', 'clamp', 'differenceBy', 'differenceWith',
    'findFrom', 'findIndexFrom', 'findLastFrom', 'findLastIndexFrom', 'getOr',
    'includesFrom', 'indexOfFrom', 'inRange', 'intersectionBy', 'intersectionWith',
    'invokeArgs', 'invokeArgsMap', 'isEqualWith', 'isMatchWith', 'flatMapDepth',
    'lastIndexOfFrom', 'mergeWith', 'orderBy', 'padChars', 'padCharsEnd',
    'padCharsStart', 'pullAllBy', 'pullAllWith', 'rangeStep', 'rangeStepRight',
    'reduce', 'reduceRight', 'replace', 'set', 'slice', 'sortedIndexBy',
    'sortedLastIndexBy', 'transform', 'unionBy', 'unionWith', 'update', 'xorBy',
    'xorWith', 'zipWith'
  ],
  '4': [
    'fill', 'setWith', 'updateWith'
  ]
};

/** Used to map ary to rearg configs. */
exports.aryRearg = {
  '2': [1, 0],
  '3': [2, 0, 1],
  '4': [3, 2, 0, 1]
};

/** Used to map method names to their iteratee ary. */
exports.iterateeAry = {
  'dropRightWhile': 1,
  'dropWhile': 1,
  'every': 1,
  'filter': 1,
  'find': 1,
  'findFrom': 1,
  'findIndex': 1,
  'findIndexFrom': 1,
  'findKey': 1,
  'findLast': 1,
  'findLastFrom': 1,
  'findLastIndex': 1,
  'findLastIndexFrom': 1,
  'findLastKey': 1,
  'flatMap': 1,
  'flatMapDeep': 1,
  'flatMapDepth': 1,
  'forEach': 1,
  'forEachRight': 1,
  'forIn': 1,
  'forInRight': 1,
  'forOwn': 1,
  'forOwnRight': 1,
  'map': 1,
  'mapKeys': 1,
  'mapValues': 1,
  'partition': 1,
  'reduce': 2,
  'reduceRight': 2,
  'reject': 1,
  'remove': 1,
  'some': 1,
  'takeRightWhile': 1,
  'takeWhile': 1,
  'times': 1,
  'transform': 2
};

/** Used to map method names to iteratee rearg configs. */
exports.iterateeRearg = {
  'mapKeys': [1],
  'reduceRight': [1, 0]
};

/** Used to map method names to rearg configs. */
exports.methodRearg = {
  'assignInAllWith': [1, 0],
  'assignInWith': [1, 2, 0],
  'assignAllWith': [1, 0],
  'assignWith': [1, 2, 0],
  'differenceBy': [1, 2, 0],
  'differenceWith': [1, 2, 0],
  'getOr': [2, 1, 0],
  'intersectionBy': [1, 2, 0],
  'intersectionWith': [1, 2, 0],
  'isEqualWith': [1, 2, 0],
  'isMatchWith': [2, 1, 0],
  'mergeAllWith': [1, 0],
  'mergeWith': [1, 2, 0],
  'padChars': [2, 1, 0],
  'padCharsEnd': [2, 1, 0],
  'padCharsStart': [2, 1, 0],
  'pullAllBy': [2, 1, 0],
  'pullAllWith': [2, 1, 0],
  'rangeStep': [1, 2, 0],
  'rangeStepRight': [1, 2, 0],
  'setWith': [3, 1, 2, 0],
  'sortedIndexBy': [2, 1, 0],
  'sortedLastIndexBy': [2, 1, 0],
  'unionBy': [1, 2, 0],
  'unionWith': [1, 2, 0],
  'updateWith': [3, 1, 2, 0],
  'xorBy': [1, 2, 0],
  'xorWith': [1, 2, 0],
  'zipWith': [1, 2, 0]
};

/** Used to map method names to spread configs. */
exports.methodSpread = {
  'assignAll': { 'start': 0 },
  'assignAllWith': { 'start': 0 },
  'assignInAll': { 'start': 0 },
  'assignInAllWith': { 'start': 0 },
  'defaultsAll': { 'start': 0 },
  'defaultsDeepAll': { 'start': 0 },
  'invokeArgs': { 'start': 2 },
  'invokeArgsMap': { 'start': 2 },
  'mergeAll': { 'start': 0 },
  'mergeAllWith': { 'start': 0 },
  'partial': { 'start': 1 },
  'partialRight': { 'start': 1 },
  'without': { 'start': 1 },
  'zipAll': { 'start': 0 }
};

/** Used to identify methods which mutate arrays or objects. */
exports.mutate = {
  'array': {
    'fill': true,
    'pull': true,
    'pullAll': true,
    'pullAllBy': true,
    'pullAllWith': true,
    'pullAt': true,
    'remove': true,
    'reverse': true
  },
  'object': {
    'assign': true,
    'assignAll': true,
    'assignAllWith': true,
    'assignIn': true,
    'assignInAll': true,
    'assignInAllWith': true,
    'assignInWith': true,
    'assignWith': true,
    'defaults': true,
    'defaultsAll': true,
    'defaultsDeep': true,
    'defaultsDeepAll': true,
    'merge': true,
    'mergeAll': true,
    'mergeAllWith': true,
    'mergeWith': true,
  },
  'set': {
    'set': true,
    'setWith': true,
    'unset': true,
    'update': true,
    'updateWith': true
  }
};

/** Used to track methods with placeholder support */
exports.placeholder = {
  'bind': true,
  'bindKey': true,
  'curry': true,
  'curryRight': true,
  'partial': true,
  'partialRight': true
};

/** Used to map real names to their aliases. */
exports.realToAlias = (function() {
  var hasOwnProperty = Object.prototype.hasOwnProperty,
      object = exports.aliasToReal,
      result = {};

  for (var key in object) {
    var value = object[key];
    if (hasOwnProperty.call(result, value)) {
      result[value].push(key);
    } else {
      result[value] = [key];
    }
  }
  return result;
}());

/** Used to map method names to other names. */
exports.remap = {
  'assignAll': 'assign',
  'assignAllWith': 'assignWith',
  'assignInAll': 'assignIn',
  'assignInAllWith': 'assignInWith',
  'curryN': 'curry',
  'curryRightN': 'curryRight',
  'defaultsAll': 'defaults',
  'defaultsDeepAll': 'defaultsDeep',
  'findFrom': 'find',
  'findIndexFrom': 'findIndex',
  'findLastFrom': 'findLast',
  'findLastIndexFrom': 'findLastIndex',
  'getOr': 'get',
  'includesFrom': 'includes',
  'indexOfFrom': 'indexOf',
  'invokeArgs': 'invoke',
  'invokeArgsMap': 'invokeMap',
  'lastIndexOfFrom': 'lastIndexOf',
  'mergeAll': 'merge',
  'mergeAllWith': 'mergeWith',
  'padChars': 'pad',
  'padCharsEnd': 'padEnd',
  'padCharsStart': 'padStart',
  'propertyOf': 'get',
  'rangeStep': 'range',
  'rangeStepRight': 'rangeRight',
  'restFrom': 'rest',
  'spreadFrom': 'spread',
  'trimChars': 'trim',
  'trimCharsEnd': 'trimEnd',
  'trimCharsStart': 'trimStart',
  'zipAll': 'zip'
};

/** Used to track methods that skip fixing their arity. */
exports.skipFixed = {
  'castArray': true,
  'flow': true,
  'flowRight': true,
  'iteratee': true,
  'mixin': true,
  'rearg': true,
  'runInContext': true
};

/** Used to track methods that skip rearranging arguments. */
exports.skipRearg = {
  'add': true,
  'assign': true,
  'assignIn': true,
  'bind': true,
  'bindKey': true,
  'concat': true,
  'difference': true,
  'divide': true,
  'eq': true,
  'gt': true,
  'gte': true,
  'isEqual': true,
  'lt': true,
  'lte': true,
  'matchesProperty': true,
  'merge': true,
  'multiply': true,
  'overArgs': true,
  'partial': true,
  'partialRight': true,
  'propertyOf': true,
  'random': true,
  'range': true,
  'rangeRight': true,
  'subtract': true,
  'zip': true,
  'zipObject': true,
  'zipObjectDeep': true
};

},{}],417:[function(require,module,exports){
module.exports = {
  'ary': require('../ary'),
  'assign': require('../_baseAssign'),
  'clone': require('../clone'),
  'curry': require('../curry'),
  'forEach': require('../_arrayEach'),
  'isArray': require('../isArray'),
  'isFunction': require('../isFunction'),
  'iteratee': require('../iteratee'),
  'keys': require('../_baseKeys'),
  'rearg': require('../rearg'),
  'toInteger': require('../toInteger'),
  'toPath': require('../toPath')
};

},{"../_arrayEach":218,"../_baseAssign":230,"../_baseKeys":256,"../ary":399,"../clone":402,"../curry":404,"../isArray":444,"../isFunction":450,"../iteratee":457,"../rearg":469,"../toInteger":475,"../toPath":477}],418:[function(require,module,exports){
var convert = require('./convert'),
    func = convert('capitalize', require('../capitalize'), require('./_falseOptions'));

func.placeholder = require('./placeholder');
module.exports = func;

},{"../capitalize":400,"./_falseOptions":415,"./convert":420,"./placeholder":432}],419:[function(require,module,exports){
var convert = require('./convert'),
    func = convert('chunk', require('../chunk'));

func.placeholder = require('./placeholder');
module.exports = func;

},{"../chunk":401,"./convert":420,"./placeholder":432}],420:[function(require,module,exports){
var baseConvert = require('./_baseConvert'),
    util = require('./_util');

/**
 * Converts `func` of `name` to an immutable auto-curried iteratee-first data-last
 * version with conversion `options` applied. If `name` is an object its methods
 * will be converted.
 *
 * @param {string} name The name of the function to wrap.
 * @param {Function} [func] The function to wrap.
 * @param {Object} [options] The options object. See `baseConvert` for more details.
 * @returns {Function|Object} Returns the converted function or object.
 */
function convert(name, func, options) {
  return baseConvert(util, name, func, options);
}

module.exports = convert;

},{"./_baseConvert":414,"./_util":417}],421:[function(require,module,exports){
var convert = require('./convert'),
    func = convert('debounce', require('../debounce'));

func.placeholder = require('./placeholder');
module.exports = func;

},{"../debounce":405,"./convert":420,"./placeholder":432}],422:[function(require,module,exports){
var convert = require('./convert'),
    func = convert('escapeRegExp', require('../escapeRegExp'), require('./_falseOptions'));

func.placeholder = require('./placeholder');
module.exports = func;

},{"../escapeRegExp":408,"./_falseOptions":415,"./convert":420,"./placeholder":432}],423:[function(require,module,exports){
var convert = require('./convert'),
    func = convert('filter', require('../filter'));

func.placeholder = require('./placeholder');
module.exports = func;

},{"../filter":409,"./convert":420,"./placeholder":432}],424:[function(require,module,exports){
var convert = require('./convert'),
    func = convert('findIndex', require('../findIndex'));

func.placeholder = require('./placeholder');
module.exports = func;

},{"../findIndex":410,"./convert":420,"./placeholder":432}],425:[function(require,module,exports){
var convert = require('./convert'),
    func = convert('findLastIndex', require('../findLastIndex'));

func.placeholder = require('./placeholder');
module.exports = func;

},{"../findLastIndex":411,"./convert":420,"./placeholder":432}],426:[function(require,module,exports){
var convert = require('./convert'),
    func = convert('flow', require('../flow'));

func.placeholder = require('./placeholder');
module.exports = func;

},{"../flow":413,"./convert":420,"./placeholder":432}],427:[function(require,module,exports){
var convert = require('./convert'),
    func = convert('isEmpty', require('../isEmpty'), require('./_falseOptions'));

func.placeholder = require('./placeholder');
module.exports = func;

},{"../isEmpty":448,"./_falseOptions":415,"./convert":420,"./placeholder":432}],428:[function(require,module,exports){
var convert = require('./convert'),
    func = convert('isEqual', require('../isEqual'));

func.placeholder = require('./placeholder');
module.exports = func;

},{"../isEqual":449,"./convert":420,"./placeholder":432}],429:[function(require,module,exports){
var convert = require('./convert'),
    func = convert('omit', require('../omit'));

func.placeholder = require('./placeholder');
module.exports = func;

},{"../omit":464,"./convert":420,"./placeholder":432}],430:[function(require,module,exports){
var convert = require('./convert'),
    func = convert('pick', require('../pick'));

func.placeholder = require('./placeholder');
module.exports = func;

},{"../pick":465,"./convert":420,"./placeholder":432}],431:[function(require,module,exports){
var convert = require('./convert'),
    func = convert('pickBy', require('../pickBy'));

func.placeholder = require('./placeholder');
module.exports = func;

},{"../pickBy":466,"./convert":420,"./placeholder":432}],432:[function(require,module,exports){
/**
 * The default argument placeholder value for methods.
 *
 * @type {Object}
 */
module.exports = {};

},{}],433:[function(require,module,exports){
var convert = require('./convert'),
    func = convert('range', require('../range'));

func.placeholder = require('./placeholder');
module.exports = func;

},{"../range":468,"./convert":420,"./placeholder":432}],434:[function(require,module,exports){
var convert = require('./convert'),
    func = convert('reduce', require('../reduce'));

func.placeholder = require('./placeholder');
module.exports = func;

},{"../reduce":470,"./convert":420,"./placeholder":432}],435:[function(require,module,exports){
var convert = require('./convert'),
    func = convert('throttle', require('../throttle'));

func.placeholder = require('./placeholder');
module.exports = func;

},{"../throttle":473,"./convert":420,"./placeholder":432}],436:[function(require,module,exports){
var convert = require('./convert'),
    func = convert('upperFirst', require('../upperFirst'), require('./_falseOptions'));

func.placeholder = require('./placeholder');
module.exports = func;

},{"../upperFirst":480,"./_falseOptions":415,"./convert":420,"./placeholder":432}],437:[function(require,module,exports){
var convert = require('./convert'),
    func = convert('without', require('../without'));

func.placeholder = require('./placeholder');
module.exports = func;

},{"../without":481,"./convert":420,"./placeholder":432}],438:[function(require,module,exports){
var convert = require('./convert'),
    func = convert('xor', require('../xor'));

func.placeholder = require('./placeholder');
module.exports = func;

},{"../xor":483,"./convert":420,"./placeholder":432}],439:[function(require,module,exports){
var baseGet = require('./_baseGet');

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;

},{"./_baseGet":242}],440:[function(require,module,exports){
var baseHasIn = require('./_baseHasIn'),
    hasPath = require('./_hasPath');

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

module.exports = hasIn;

},{"./_baseHasIn":245,"./_hasPath":332}],441:[function(require,module,exports){
/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;

},{}],442:[function(require,module,exports){
var baseInRange = require('./_baseInRange'),
    toFinite = require('./toFinite'),
    toNumber = require('./toNumber');

/**
 * Checks if `n` is between `start` and up to, but not including, `end`. If
 * `end` is not specified, it's set to `start` with `start` then set to `0`.
 * If `start` is greater than `end` the params are swapped to support
 * negative ranges.
 *
 * @static
 * @memberOf _
 * @since 3.3.0
 * @category Number
 * @param {number} number The number to check.
 * @param {number} [start=0] The start of the range.
 * @param {number} end The end of the range.
 * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
 * @see _.range, _.rangeRight
 * @example
 *
 * _.inRange(3, 2, 4);
 * // => true
 *
 * _.inRange(4, 8);
 * // => true
 *
 * _.inRange(4, 2);
 * // => false
 *
 * _.inRange(2, 2);
 * // => false
 *
 * _.inRange(1.2, 2);
 * // => true
 *
 * _.inRange(5.2, 4);
 * // => false
 *
 * _.inRange(-3, -2, -6);
 * // => true
 */
function inRange(number, start, end) {
  start = toFinite(start);
  if (end === undefined) {
    end = start;
    start = 0;
  } else {
    end = toFinite(end);
  }
  number = toNumber(number);
  return baseInRange(number, start, end);
}

module.exports = inRange;

},{"./_baseInRange":246,"./toFinite":474,"./toNumber":476}],443:[function(require,module,exports){
var baseIsArguments = require('./_baseIsArguments'),
    isObjectLike = require('./isObjectLike');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;

},{"./_baseIsArguments":248,"./isObjectLike":453}],444:[function(require,module,exports){
/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;

},{}],445:[function(require,module,exports){
var isFunction = require('./isFunction'),
    isLength = require('./isLength');

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;

},{"./isFunction":450,"./isLength":451}],446:[function(require,module,exports){
var isArrayLike = require('./isArrayLike'),
    isObjectLike = require('./isObjectLike');

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

module.exports = isArrayLikeObject;

},{"./isArrayLike":445,"./isObjectLike":453}],447:[function(require,module,exports){
var root = require('./_root'),
    stubFalse = require('./stubFalse');

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;

},{"./_root":378,"./stubFalse":472}],448:[function(require,module,exports){
var baseKeys = require('./_baseKeys'),
    getTag = require('./_getTag'),
    isArguments = require('./isArguments'),
    isArray = require('./isArray'),
    isArrayLike = require('./isArrayLike'),
    isBuffer = require('./isBuffer'),
    isPrototype = require('./_isPrototype'),
    isTypedArray = require('./isTypedArray');

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if `value` is an empty object, collection, map, or set.
 *
 * Objects are considered empty if they have no own enumerable string keyed
 * properties.
 *
 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
 * jQuery-like collections are considered empty if they have a `length` of `0`.
 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
 * @example
 *
 * _.isEmpty(null);
 * // => true
 *
 * _.isEmpty(true);
 * // => true
 *
 * _.isEmpty(1);
 * // => true
 *
 * _.isEmpty([1, 2, 3]);
 * // => false
 *
 * _.isEmpty({ 'a': 1 });
 * // => false
 */
function isEmpty(value) {
  if (value == null) {
    return true;
  }
  if (isArrayLike(value) &&
      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
        isBuffer(value) || isTypedArray(value) || isArguments(value))) {
    return !value.length;
  }
  var tag = getTag(value);
  if (tag == mapTag || tag == setTag) {
    return !value.size;
  }
  if (isPrototype(value)) {
    return !baseKeys(value).length;
  }
  for (var key in value) {
    if (hasOwnProperty.call(value, key)) {
      return false;
    }
  }
  return true;
}

module.exports = isEmpty;

},{"./_baseKeys":256,"./_getTag":329,"./_isPrototype":350,"./isArguments":443,"./isArray":444,"./isArrayLike":445,"./isBuffer":447,"./isTypedArray":456}],449:[function(require,module,exports){
var baseIsEqual = require('./_baseIsEqual');

/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */
function isEqual(value, other) {
  return baseIsEqual(value, other);
}

module.exports = isEqual;

},{"./_baseIsEqual":249}],450:[function(require,module,exports){
var baseGetTag = require('./_baseGetTag'),
    isObject = require('./isObject');

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;

},{"./_baseGetTag":244,"./isObject":452}],451:[function(require,module,exports){
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;

},{}],452:[function(require,module,exports){
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;

},{}],453:[function(require,module,exports){
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;

},{}],454:[function(require,module,exports){
var baseGetTag = require('./_baseGetTag'),
    getPrototype = require('./_getPrototype'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;

},{"./_baseGetTag":244,"./_getPrototype":325,"./isObjectLike":453}],455:[function(require,module,exports){
var baseGetTag = require('./_baseGetTag'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;

},{"./_baseGetTag":244,"./isObjectLike":453}],456:[function(require,module,exports){
var baseIsTypedArray = require('./_baseIsTypedArray'),
    baseUnary = require('./_baseUnary'),
    nodeUtil = require('./_nodeUtil');

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;

},{"./_baseIsTypedArray":254,"./_baseUnary":274,"./_nodeUtil":370}],457:[function(require,module,exports){
var baseClone = require('./_baseClone'),
    baseIteratee = require('./_baseIteratee');

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1;

/**
 * Creates a function that invokes `func` with the arguments of the created
 * function. If `func` is a property name, the created function returns the
 * property value for a given element. If `func` is an array or object, the
 * created function returns `true` for elements that contain the equivalent
 * source properties, otherwise it returns `false`.
 *
 * @static
 * @since 4.0.0
 * @memberOf _
 * @category Util
 * @param {*} [func=_.identity] The value to convert to a callback.
 * @returns {Function} Returns the callback.
 * @example
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': true },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
 * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.filter(users, _.iteratee(['user', 'fred']));
 * // => [{ 'user': 'fred', 'age': 40 }]
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, _.iteratee('user'));
 * // => ['barney', 'fred']
 *
 * // Create custom iteratee shorthands.
 * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
 *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
 *     return func.test(string);
 *   };
 * });
 *
 * _.filter(['abc', 'def'], /ef/);
 * // => ['def']
 */
function iteratee(func) {
  return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
}

module.exports = iteratee;

},{"./_baseClone":233,"./_baseIteratee":255}],458:[function(require,module,exports){
var arrayLikeKeys = require('./_arrayLikeKeys'),
    baseKeys = require('./_baseKeys'),
    isArrayLike = require('./isArrayLike');

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;

},{"./_arrayLikeKeys":222,"./_baseKeys":256,"./isArrayLike":445}],459:[function(require,module,exports){
var arrayLikeKeys = require('./_arrayLikeKeys'),
    baseKeysIn = require('./_baseKeysIn'),
    isArrayLike = require('./isArrayLike');

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;

},{"./_arrayLikeKeys":222,"./_baseKeysIn":257,"./isArrayLike":445}],460:[function(require,module,exports){
/**
 * Gets the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the last element of `array`.
 * @example
 *
 * _.last([1, 2, 3]);
 * // => 3
 */
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : undefined;
}

module.exports = last;

},{}],461:[function(require,module,exports){
var MapCache = require('./_MapCache');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = MapCache;

module.exports = memoize;

},{"./_MapCache":207}],462:[function(require,module,exports){
/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {
  // No operation performed.
}

module.exports = noop;

},{}],463:[function(require,module,exports){
var root = require('./_root');

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

module.exports = now;

},{"./_root":378}],464:[function(require,module,exports){
var arrayMap = require('./_arrayMap'),
    baseClone = require('./_baseClone'),
    baseUnset = require('./_baseUnset'),
    castPath = require('./_castPath'),
    copyObject = require('./_copyObject'),
    customOmitClone = require('./_customOmitClone'),
    flatRest = require('./_flatRest'),
    getAllKeysIn = require('./_getAllKeysIn');

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/**
 * The opposite of `_.pick`; this method creates an object composed of the
 * own and inherited enumerable property paths of `object` that are not omitted.
 *
 * **Note:** This method is considerably slower than `_.pick`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to omit.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.omit(object, ['a', 'c']);
 * // => { 'b': '2' }
 */
var omit = flatRest(function(object, paths) {
  var result = {};
  if (object == null) {
    return result;
  }
  var isDeep = false;
  paths = arrayMap(paths, function(path) {
    path = castPath(path, object);
    isDeep || (isDeep = path.length > 1);
    return path;
  });
  copyObject(object, getAllKeysIn(object), result);
  if (isDeep) {
    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
  }
  var length = paths.length;
  while (length--) {
    baseUnset(result, paths[length]);
  }
  return result;
});

module.exports = omit;

},{"./_arrayMap":223,"./_baseClone":233,"./_baseUnset":276,"./_castPath":279,"./_copyObject":292,"./_customOmitClone":310,"./_flatRest":315,"./_getAllKeysIn":318}],465:[function(require,module,exports){
var basePick = require('./_basePick'),
    flatRest = require('./_flatRest');

/**
 * Creates an object composed of the picked `object` properties.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to pick.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pick(object, ['a', 'c']);
 * // => { 'a': 1, 'c': 3 }
 */
var pick = flatRest(function(object, paths) {
  return object == null ? {} : basePick(object, paths);
});

module.exports = pick;

},{"./_basePick":261,"./_flatRest":315}],466:[function(require,module,exports){
var arrayMap = require('./_arrayMap'),
    baseIteratee = require('./_baseIteratee'),
    basePickBy = require('./_basePickBy'),
    getAllKeysIn = require('./_getAllKeysIn');

/**
 * Creates an object composed of the `object` properties `predicate` returns
 * truthy for. The predicate is invoked with two arguments: (value, key).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The source object.
 * @param {Function} [predicate=_.identity] The function invoked per property.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pickBy(object, _.isNumber);
 * // => { 'a': 1, 'c': 3 }
 */
function pickBy(object, predicate) {
  if (object == null) {
    return {};
  }
  var props = arrayMap(getAllKeysIn(object), function(prop) {
    return [prop];
  });
  predicate = baseIteratee(predicate);
  return basePickBy(object, props, function(value, path) {
    return predicate(value, path[0]);
  });
}

module.exports = pickBy;

},{"./_arrayMap":223,"./_baseIteratee":255,"./_basePickBy":262,"./_getAllKeysIn":318}],467:[function(require,module,exports){
var baseProperty = require('./_baseProperty'),
    basePropertyDeep = require('./_basePropertyDeep'),
    isKey = require('./_isKey'),
    toKey = require('./_toKey');

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}

module.exports = property;

},{"./_baseProperty":263,"./_basePropertyDeep":264,"./_isKey":346,"./_toKey":394}],468:[function(require,module,exports){
var createRange = require('./_createRange');

/**
 * Creates an array of numbers (positive and/or negative) progressing from
 * `start` up to, but not including, `end`. A step of `-1` is used if a negative
 * `start` is specified without an `end` or `step`. If `end` is not specified,
 * it's set to `start` with `start` then set to `0`.
 *
 * **Note:** JavaScript follows the IEEE-754 standard for resolving
 * floating-point values which can produce unexpected results.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {number} [start=0] The start of the range.
 * @param {number} end The end of the range.
 * @param {number} [step=1] The value to increment or decrement by.
 * @returns {Array} Returns the range of numbers.
 * @see _.inRange, _.rangeRight
 * @example
 *
 * _.range(4);
 * // => [0, 1, 2, 3]
 *
 * _.range(-4);
 * // => [0, -1, -2, -3]
 *
 * _.range(1, 5);
 * // => [1, 2, 3, 4]
 *
 * _.range(0, 20, 5);
 * // => [0, 5, 10, 15]
 *
 * _.range(0, -4, -1);
 * // => [0, -1, -2, -3]
 *
 * _.range(1, 4, 0);
 * // => [1, 1, 1]
 *
 * _.range(0);
 * // => []
 */
var range = createRange();

module.exports = range;

},{"./_createRange":306}],469:[function(require,module,exports){
var createWrap = require('./_createWrap'),
    flatRest = require('./_flatRest');

/** Used to compose bitmasks for function metadata. */
var WRAP_REARG_FLAG = 256;

/**
 * Creates a function that invokes `func` with arguments arranged according
 * to the specified `indexes` where the argument value at the first index is
 * provided as the first argument, the argument value at the second index is
 * provided as the second argument, and so on.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} func The function to rearrange arguments for.
 * @param {...(number|number[])} indexes The arranged argument indexes.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var rearged = _.rearg(function(a, b, c) {
 *   return [a, b, c];
 * }, [2, 0, 1]);
 *
 * rearged('b', 'c', 'a')
 * // => ['a', 'b', 'c']
 */
var rearg = flatRest(function(func, indexes) {
  return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
});

module.exports = rearg;

},{"./_createWrap":309,"./_flatRest":315}],470:[function(require,module,exports){
var arrayReduce = require('./_arrayReduce'),
    baseEach = require('./_baseEach'),
    baseIteratee = require('./_baseIteratee'),
    baseReduce = require('./_baseReduce'),
    isArray = require('./isArray');

/**
 * Reduces `collection` to a value which is the accumulated result of running
 * each element in `collection` thru `iteratee`, where each successive
 * invocation is supplied the return value of the previous. If `accumulator`
 * is not given, the first element of `collection` is used as the initial
 * value. The iteratee is invoked with four arguments:
 * (accumulator, value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.reduce`, `_.reduceRight`, and `_.transform`.
 *
 * The guarded methods are:
 * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
 * and `sortBy`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @returns {*} Returns the accumulated value.
 * @see _.reduceRight
 * @example
 *
 * _.reduce([1, 2], function(sum, n) {
 *   return sum + n;
 * }, 0);
 * // => 3
 *
 * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
 *   (result[value] || (result[value] = [])).push(key);
 *   return result;
 * }, {});
 * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
 */
function reduce(collection, iteratee, accumulator) {
  var func = isArray(collection) ? arrayReduce : baseReduce,
      initAccum = arguments.length < 3;

  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);
}

module.exports = reduce;

},{"./_arrayReduce":225,"./_baseEach":236,"./_baseIteratee":255,"./_baseReduce":266,"./isArray":444}],471:[function(require,module,exports){
/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;

},{}],472:[function(require,module,exports){
/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;

},{}],473:[function(require,module,exports){
var debounce = require('./debounce'),
    isObject = require('./isObject');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */
function throttle(func, wait, options) {
  var leading = true,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (isObject(options)) {
    leading = 'leading' in options ? !!options.leading : leading;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }
  return debounce(func, wait, {
    'leading': leading,
    'maxWait': wait,
    'trailing': trailing
  });
}

module.exports = throttle;

},{"./debounce":405,"./isObject":452}],474:[function(require,module,exports){
var toNumber = require('./toNumber');

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber(value);
  if (value === INFINITY || value === -INFINITY) {
    var sign = (value < 0 ? -1 : 1);
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

module.exports = toFinite;

},{"./toNumber":476}],475:[function(require,module,exports){
var toFinite = require('./toFinite');

/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
function toInteger(value) {
  var result = toFinite(value),
      remainder = result % 1;

  return result === result ? (remainder ? result - remainder : result) : 0;
}

module.exports = toInteger;

},{"./toFinite":474}],476:[function(require,module,exports){
var isObject = require('./isObject'),
    isSymbol = require('./isSymbol');

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = toNumber;

},{"./isObject":452,"./isSymbol":455}],477:[function(require,module,exports){
var arrayMap = require('./_arrayMap'),
    copyArray = require('./_copyArray'),
    isArray = require('./isArray'),
    isSymbol = require('./isSymbol'),
    stringToPath = require('./_stringToPath'),
    toKey = require('./_toKey'),
    toString = require('./toString');

/**
 * Converts `value` to a property path array.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {*} value The value to convert.
 * @returns {Array} Returns the new property path array.
 * @example
 *
 * _.toPath('a.b.c');
 * // => ['a', 'b', 'c']
 *
 * _.toPath('a[0].b.c');
 * // => ['a', '0', 'b', 'c']
 */
function toPath(value) {
  if (isArray(value)) {
    return arrayMap(value, toKey);
  }
  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
}

module.exports = toPath;

},{"./_arrayMap":223,"./_copyArray":291,"./_stringToPath":393,"./_toKey":394,"./isArray":444,"./isSymbol":455,"./toString":478}],478:[function(require,module,exports){
var baseToString = require('./_baseToString');

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;

},{"./_baseToString":273}],479:[function(require,module,exports){
var baseUniq = require('./_baseUniq');

/**
 * Creates a duplicate-free version of an array, using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons, in which only the first occurrence of each element
 * is kept. The order of result values is determined by the order they occur
 * in the array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniq([2, 1, 2]);
 * // => [2, 1]
 */
function uniq(array) {
  return (array && array.length) ? baseUniq(array) : [];
}

module.exports = uniq;

},{"./_baseUniq":275}],480:[function(require,module,exports){
var createCaseFirst = require('./_createCaseFirst');

/**
 * Converts the first character of `string` to upper case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.upperFirst('fred');
 * // => 'Fred'
 *
 * _.upperFirst('FRED');
 * // => 'FRED'
 */
var upperFirst = createCaseFirst('toUpperCase');

module.exports = upperFirst;

},{"./_createCaseFirst":300}],481:[function(require,module,exports){
var baseDifference = require('./_baseDifference'),
    baseRest = require('./_baseRest'),
    isArrayLikeObject = require('./isArrayLikeObject');

/**
 * Creates an array excluding all given values using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * **Note:** Unlike `_.pull`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...*} [values] The values to exclude.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.difference, _.xor
 * @example
 *
 * _.without([2, 1, 2, 3], 1, 2);
 * // => [3]
 */
var without = baseRest(function(array, values) {
  return isArrayLikeObject(array)
    ? baseDifference(array, values)
    : [];
});

module.exports = without;

},{"./_baseDifference":235,"./_baseRest":267,"./isArrayLikeObject":446}],482:[function(require,module,exports){
var LazyWrapper = require('./_LazyWrapper'),
    LodashWrapper = require('./_LodashWrapper'),
    baseLodash = require('./_baseLodash'),
    isArray = require('./isArray'),
    isObjectLike = require('./isObjectLike'),
    wrapperClone = require('./_wrapperClone');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates a `lodash` object which wraps `value` to enable implicit method
 * chain sequences. Methods that operate on and return arrays, collections,
 * and functions can be chained together. Methods that retrieve a single value
 * or may return a primitive value will automatically end the chain sequence
 * and return the unwrapped value. Otherwise, the value must be unwrapped
 * with `_#value`.
 *
 * Explicit chain sequences, which must be unwrapped with `_#value`, may be
 * enabled using `_.chain`.
 *
 * The execution of chained methods is lazy, that is, it's deferred until
 * `_#value` is implicitly or explicitly called.
 *
 * Lazy evaluation allows several methods to support shortcut fusion.
 * Shortcut fusion is an optimization to merge iteratee calls; this avoids
 * the creation of intermediate arrays and can greatly reduce the number of
 * iteratee executions. Sections of a chain sequence qualify for shortcut
 * fusion if the section is applied to an array and iteratees accept only
 * one argument. The heuristic for whether a section qualifies for shortcut
 * fusion is subject to change.
 *
 * Chaining is supported in custom builds as long as the `_#value` method is
 * directly or indirectly included in the build.
 *
 * In addition to lodash methods, wrappers have `Array` and `String` methods.
 *
 * The wrapper `Array` methods are:
 * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
 *
 * The wrapper `String` methods are:
 * `replace` and `split`
 *
 * The wrapper methods that support shortcut fusion are:
 * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
 * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
 * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
 *
 * The chainable wrapper methods are:
 * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
 * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
 * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
 * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
 * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
 * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
 * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
 * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
 * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
 * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
 * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
 * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
 * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
 * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
 * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
 * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
 * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
 * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
 * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
 * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
 * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
 * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
 * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
 * `zipObject`, `zipObjectDeep`, and `zipWith`
 *
 * The wrapper methods that are **not** chainable by default are:
 * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
 * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
 * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
 * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
 * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
 * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
 * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
 * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
 * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
 * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
 * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
 * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
 * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
 * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
 * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
 * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
 * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
 * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
 * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
 * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
 * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
 * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
 * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
 * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
 * `upperFirst`, `value`, and `words`
 *
 * @name _
 * @constructor
 * @category Seq
 * @param {*} value The value to wrap in a `lodash` instance.
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var wrapped = _([1, 2, 3]);
 *
 * // Returns an unwrapped value.
 * wrapped.reduce(_.add);
 * // => 6
 *
 * // Returns a wrapped value.
 * var squares = wrapped.map(square);
 *
 * _.isArray(squares);
 * // => false
 *
 * _.isArray(squares.value());
 * // => true
 */
function lodash(value) {
  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
    if (value instanceof LodashWrapper) {
      return value;
    }
    if (hasOwnProperty.call(value, '__wrapped__')) {
      return wrapperClone(value);
    }
  }
  return new LodashWrapper(value);
}

// Ensure wrappers are instances of `baseLodash`.
lodash.prototype = baseLodash.prototype;
lodash.prototype.constructor = lodash;

module.exports = lodash;

},{"./_LazyWrapper":203,"./_LodashWrapper":205,"./_baseLodash":258,"./_wrapperClone":398,"./isArray":444,"./isObjectLike":453}],483:[function(require,module,exports){
var arrayFilter = require('./_arrayFilter'),
    baseRest = require('./_baseRest'),
    baseXor = require('./_baseXor'),
    isArrayLikeObject = require('./isArrayLikeObject');

/**
 * Creates an array of unique values that is the
 * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
 * of the given arrays. The order of result values is determined by the order
 * they occur in the arrays.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.difference, _.without
 * @example
 *
 * _.xor([2, 1], [2, 3]);
 * // => [1, 3]
 */
var xor = baseRest(function(arrays) {
  return baseXor(arrayFilter(arrays, isArrayLikeObject));
});

module.exports = xor;

},{"./_arrayFilter":219,"./_baseRest":267,"./_baseXor":277,"./isArrayLikeObject":446}],484:[function(require,module,exports){
(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('preact'), require('redux')) :
	typeof define === 'function' && define.amd ? define(['preact', 'redux'], factory) :
	(global.preactRedux = factory(global.preact,global.Redux));
}(this, (function (preact,redux) {

var Children = {
	only: function only(children) {
		return children && children[0] || null;
	}
};

function proptype() {}
proptype.isRequired = proptype;

var PropTypes = {
	element: proptype,
	func: proptype,
	shape: function shape() {
		return proptype;
	},
	instanceOf: function instanceOf() {
		return proptype;
	}
};

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
};





var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};









var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var get = function get(object, property, receiver) {
  if (object === null) object = Function.prototype;
  var desc = Object.getOwnPropertyDescriptor(object, property);

  if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);

    if (parent === null) {
      return undefined;
    } else {
      return get(parent, property, receiver);
    }
  } else if ("value" in desc) {
    return desc.value;
  } else {
    var getter = desc.get;

    if (getter === undefined) {
      return undefined;
    }

    return getter.call(receiver);
  }
};

var inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};









var objectWithoutProperties = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

var possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};



var set = function set(object, property, value, receiver) {
  var desc = Object.getOwnPropertyDescriptor(object, property);

  if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);

    if (parent !== null) {
      set(parent, property, value, receiver);
    }
  } else if ("value" in desc && desc.writable) {
    desc.value = value;
  } else {
    var setter = desc.set;

    if (setter !== undefined) {
      setter.call(receiver, value);
    }
  }

  return value;
};

// encapsulates the subscription logic for connecting a component to the redux store, as
// well as nesting subscriptions of descendant components, so that we can ensure the
// ancestor components re-render before descendants

var CLEARED = null;
var nullListeners = {
  notify: function notify() {}
};

function createListenerCollection() {
  // the current/next pattern is copied from redux's createStore code.
  // TODO: refactor+expose that code to be reusable here?
  var current = [];
  var next = [];

  return {
    clear: function clear() {
      next = CLEARED;
      current = CLEARED;
    },
    notify: function notify() {
      var listeners = current = next;
      for (var i = 0; i < listeners.length; i++) {
        listeners[i]();
      }
    },
    subscribe: function subscribe(listener) {
      var isSubscribed = true;
      if (next === current) next = current.slice();
      next.push(listener);

      return function unsubscribe() {
        if (!isSubscribed || current === CLEARED) return;
        isSubscribed = false;

        if (next === current) next = current.slice();
        next.splice(next.indexOf(listener), 1);
      };
    }
  };
}

var Subscription = function () {
  function Subscription(store, parentSub) {
    classCallCheck(this, Subscription);

    this.store = store;
    this.parentSub = parentSub;
    this.unsubscribe = null;
    this.listeners = nullListeners;
  }

  Subscription.prototype.addNestedSub = function addNestedSub(listener) {
    this.trySubscribe();
    return this.listeners.subscribe(listener);
  };

  Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {
    this.listeners.notify();
  };

  Subscription.prototype.isSubscribed = function isSubscribed() {
    return Boolean(this.unsubscribe);
  };

  Subscription.prototype.trySubscribe = function trySubscribe() {
    if (!this.unsubscribe) {
      // this.onStateChange is set by connectAdvanced.initSubscription()
      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);

      this.listeners = createListenerCollection();
    }
  };

  Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {
    if (this.unsubscribe) {
      this.unsubscribe();
      this.unsubscribe = null;
      this.listeners.clear();
      this.listeners = nullListeners;
    }
  };

  return Subscription;
}();

var storeShape = PropTypes.shape({
  subscribe: PropTypes.func.isRequired,
  dispatch: PropTypes.func.isRequired,
  getState: PropTypes.func.isRequired
});

/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */
  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
    /* eslint-disable no-empty */
  } catch (e) {}
  /* eslint-enable no-empty */
}

var didWarnAboutReceivingStore = false;
function warnAboutReceivingStore() {
  if (didWarnAboutReceivingStore) {
    return;
  }
  didWarnAboutReceivingStore = true;

  warning('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
}

var Provider = function (_Component) {
  inherits(Provider, _Component);

  Provider.prototype.getChildContext = function getChildContext() {
    return { store: this.store, storeSubscription: null };
  };

  function Provider(props, context) {
    classCallCheck(this, Provider);

    var _this = possibleConstructorReturn(this, _Component.call(this, props, context));

    _this.store = props.store;
    return _this;
  }

  Provider.prototype.render = function render() {
    return Children.only(this.props.children);
  };

  return Provider;
}(preact.Component);

{
  Provider.prototype.componentWillReceiveProps = function (nextProps) {
    var store = this.store;
    var nextStore = nextProps.store;


    if (store !== nextStore) {
      warnAboutReceivingStore();
    }
  };
}

Provider.childContextTypes = {
  store: storeShape.isRequired,
  storeSubscription: PropTypes.instanceOf(Subscription)
};
Provider.displayName = 'Provider';

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
    childContextTypes: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    mixins: true,
    propTypes: true,
    type: true
};

var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    arguments: true,
    arity: true
};

var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';

var index = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
    if (typeof sourceComponent !== 'string') {
        // don't hoist over string (html) components
        var keys = Object.getOwnPropertyNames(sourceComponent);

        /* istanbul ignore else */
        if (isGetOwnPropertySymbolsAvailable) {
            keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
        }

        for (var i = 0; i < keys.length; ++i) {
            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
                try {
                    targetComponent[keys[i]] = sourceComponent[keys[i]];
                } catch (error) {}
            }
        }
    }

    return targetComponent;
};

var invariant = function () {}

var hotReloadingVersion = 0;
function connectAdvanced(
/*
  selectorFactory is a func that is responsible for returning the selector function used to
  compute new props from state, props, and dispatch. For example:
     export default connectAdvanced((dispatch, options) => (state, props) => ({
      thing: state.things[props.thingId],
      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
    }))(YourComponent)
   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
  props. Do not use connectAdvanced directly without memoizing results between calls to your
  selector, otherwise the Connect component will re-render on every state or props change.
*/
selectorFactory) {
  var _contextTypes, _childContextTypes;

  var _ref = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

  var _ref$getDisplayName = _ref.getDisplayName;
  var getDisplayName = _ref$getDisplayName === undefined ? function (name) {
    return 'ConnectAdvanced(' + name + ')';
  } : _ref$getDisplayName;
  var _ref$methodName = _ref.methodName;
  var methodName = _ref$methodName === undefined ? 'connectAdvanced' : _ref$methodName;
  var _ref$renderCountProp = _ref.renderCountProp;
  var renderCountProp = _ref$renderCountProp === undefined ? undefined : _ref$renderCountProp;
  var _ref$shouldHandleStat = _ref.shouldHandleStateChanges;
  var shouldHandleStateChanges = _ref$shouldHandleStat === undefined ? true : _ref$shouldHandleStat;
  var _ref$storeKey = _ref.storeKey;
  var storeKey = _ref$storeKey === undefined ? 'store' : _ref$storeKey;
  var _ref$withRef = _ref.withRef;
  var withRef = _ref$withRef === undefined ? false : _ref$withRef;
  var connectOptions = objectWithoutProperties(_ref, ['getDisplayName', 'methodName', 'renderCountProp', 'shouldHandleStateChanges', 'storeKey', 'withRef']);

  var subscriptionKey = storeKey + 'Subscription';
  var version = hotReloadingVersion++;

  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = storeShape, _contextTypes[subscriptionKey] = PropTypes.instanceOf(Subscription), _contextTypes);
  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = PropTypes.instanceOf(Subscription), _childContextTypes);

  return function wrapWithConnect(WrappedComponent) {
    invariant(typeof WrappedComponent == 'function', 'You must pass a component to the function returned by ' + ('connect. Instead received ' + WrappedComponent));

    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';

    var displayName = getDisplayName(wrappedComponentName);

    var selectorFactoryOptions = _extends({}, connectOptions, {
      getDisplayName: getDisplayName,
      methodName: methodName,
      renderCountProp: renderCountProp,
      shouldHandleStateChanges: shouldHandleStateChanges,
      storeKey: storeKey,
      withRef: withRef,
      displayName: displayName,
      wrappedComponentName: wrappedComponentName,
      WrappedComponent: WrappedComponent
    });

    var Connect = function (_Component) {
      inherits(Connect, _Component);

      function Connect(props, context) {
        classCallCheck(this, Connect);

        var _this = possibleConstructorReturn(this, _Component.call(this, props, context));

        _this.version = version;
        _this.state = {};
        _this.renderCount = 0;
        _this.store = _this.props[storeKey] || _this.context[storeKey];
        _this.parentSub = props[subscriptionKey] || context[subscriptionKey];

        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);

        invariant(_this.store, 'Could not find "' + storeKey + '" in either the context or ' + ('props of "' + displayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "' + storeKey + '" as a prop to "' + displayName + '".'));

        // make sure `getState` is properly bound in order to avoid breaking
        // custom store implementations that rely on the store's context
        _this.getState = _this.store.getState.bind(_this.store);

        _this.initSelector();
        _this.initSubscription();
        return _this;
      }

      Connect.prototype.getChildContext = function getChildContext() {
        var _ref2;

        return _ref2 = {}, _ref2[subscriptionKey] = this.subscription || this.parentSub, _ref2;
      };

      Connect.prototype.componentDidMount = function componentDidMount() {
        if (!shouldHandleStateChanges) return;

        // componentWillMount fires during server side rendering, but componentDidMount and
        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.
        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.
        // To handle the case where a child component may have triggered a state change by
        // dispatching an action in its componentWillMount, we have to re-run the select and maybe
        // re-render.
        this.subscription.trySubscribe();
        this.selector.run(this.props);
        if (this.selector.shouldComponentUpdate) this.forceUpdate();
      };

      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
        this.selector.run(nextProps);
      };

      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
        return this.selector.shouldComponentUpdate;
      };

      Connect.prototype.componentWillUnmount = function componentWillUnmount() {
        if (this.subscription) this.subscription.tryUnsubscribe();
        // these are just to guard against extra memory leakage if a parent element doesn't
        // dereference this instance properly, such as an async callback that never finishes
        this.subscription = null;
        this.store = null;
        this.parentSub = null;
        this.selector.run = function () {};
      };

      Connect.prototype.getWrappedInstance = function getWrappedInstance() {
        invariant(withRef, 'To access the wrapped instance, you need to specify ' + ('{ withRef: true } in the options argument of the ' + methodName + '() call.'));
        return this.wrappedInstance;
      };

      Connect.prototype.setWrappedInstance = function setWrappedInstance(ref) {
        this.wrappedInstance = ref;
      };

      Connect.prototype.initSelector = function initSelector() {
        var dispatch = this.store.dispatch;
        var getState = this.getState;

        var sourceSelector = selectorFactory(dispatch, selectorFactoryOptions);

        // wrap the selector in an object that tracks its results between runs
        var selector = this.selector = {
          shouldComponentUpdate: true,
          props: sourceSelector(getState(), this.props),
          run: function runComponentSelector(props) {
            try {
              var nextProps = sourceSelector(getState(), props);
              if (selector.error || nextProps !== selector.props) {
                selector.shouldComponentUpdate = true;
                selector.props = nextProps;
                selector.error = null;
              }
            } catch (error) {
              selector.shouldComponentUpdate = true;
              selector.error = error;
            }
          }
        };
      };

      Connect.prototype.initSubscription = function initSubscription() {
        var _this2 = this;

        if (shouldHandleStateChanges) {
          (function () {
            var subscription = _this2.subscription = new Subscription(_this2.store, _this2.parentSub);
            var dummyState = {};

            subscription.onStateChange = function onStateChange() {
              this.selector.run(this.props);

              if (!this.selector.shouldComponentUpdate) {
                subscription.notifyNestedSubs();
              } else {
                this.componentDidUpdate = function componentDidUpdate() {
                  this.componentDidUpdate = undefined;
                  subscription.notifyNestedSubs();
                };

                this.setState(dummyState);
              }
            }.bind(_this2);
          })();
        }
      };

      Connect.prototype.isSubscribed = function isSubscribed() {
        return Boolean(this.subscription) && this.subscription.isSubscribed();
      };

      Connect.prototype.addExtraProps = function addExtraProps(props) {
        if (!withRef && !renderCountProp) return props;
        // make a shallow copy so that fields added don't leak to the original selector.
        // this is especially important for 'ref' since that's a reference back to the component
        // instance. a singleton memoized selector would then be holding a reference to the
        // instance, preventing the instance from being garbage collected, and that would be bad
        var withExtras = _extends({}, props);
        if (withRef) withExtras.ref = this.setWrappedInstance;
        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;
        return withExtras;
      };

      Connect.prototype.render = function render() {
        var selector = this.selector;
        selector.shouldComponentUpdate = false;

        if (selector.error) {
          throw selector.error;
        } else {
          return preact.h(WrappedComponent, this.addExtraProps(selector.props));
        }
      };

      return Connect;
    }(preact.Component);

    Connect.WrappedComponent = WrappedComponent;
    Connect.displayName = displayName;
    Connect.childContextTypes = childContextTypes;
    Connect.contextTypes = contextTypes;


    {
      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
        // We are hot reloading!
        if (this.version !== version) {
          this.version = version;
          this.initSelector();

          if (this.subscription) this.subscription.tryUnsubscribe();
          this.initSubscription();
          if (shouldHandleStateChanges) this.subscription.trySubscribe();
        }
      };
    }

    return index(Connect, WrappedComponent);
  };
}

var hasOwn = Object.prototype.hasOwnProperty;

function shallowEqual(a, b) {
  if (a === b) return true;

  var countA = 0;
  var countB = 0;

  for (var key in a) {
    if (hasOwn.call(a, key) && a[key] !== b[key]) return false;
    countA++;
  }

  for (var _key in b) {
    if (hasOwn.call(b, _key)) countB++;
  }

  return countA === countB;
}

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetPrototype = Object.getPrototypeOf;

/**
 * Gets the `[[Prototype]]` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {null|Object} Returns the `[[Prototype]]`.
 */
function getPrototype(value) {
  return nativeGetPrototype(Object(value));
}

/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object';
}

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = Function.prototype.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object,
 *  else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
}

function verifyPlainObject(value, displayName, methodName) {
  if (!isPlainObject(value)) {
    warning(methodName + '() in ' + displayName + ' must return a plain object. Instead received ' + value + '.');
  }
}

function wrapMapToPropsConstant(getConstant) {
  return function initConstantSelector(dispatch, options) {
    var constant = getConstant(dispatch, options);

    function constantSelector() {
      return constant;
    }
    constantSelector.dependsOnOwnProps = false;
    return constantSelector;
  };
}

// dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
// whether mapToProps needs to be invoked when props have changed.
// 
// A length of one signals that mapToProps does not depend on props from the parent component.
// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
// therefore not reporting its length accurately..
function getDependsOnOwnProps(mapToProps) {
  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
}

// Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
// this function wraps mapToProps in a proxy function which does several things:
// 
//  * Detects whether the mapToProps function being called depends on props, which
//    is used by selectorFactory to decide if it should reinvoke on props changes.
//    
//  * On first call, handles mapToProps if returns another function, and treats that
//    new function as the true mapToProps for subsequent calls.
//    
//  * On first call, verifies the first result is a plain object, in order to warn
//    the developer that their mapToProps function is not returning a valid result.
//    
function wrapMapToPropsFunc(mapToProps, methodName) {
  return function initProxySelector(dispatch, _ref) {
    var displayName = _ref.displayName;

    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
    };

    proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);

    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
      proxy.mapToProps = mapToProps;
      var props = proxy(stateOrDispatch, ownProps);

      if (typeof props === 'function') {
        proxy.mapToProps = props;
        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
        props = proxy(stateOrDispatch, ownProps);
      }

      verifyPlainObject(props, displayName, methodName);

      return props;
    };

    return proxy;
  };
}

function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
  return typeof mapDispatchToProps === 'function' ? wrapMapToPropsFunc(mapDispatchToProps, 'mapDispatchToProps') : undefined;
}

function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
  return !mapDispatchToProps ? wrapMapToPropsConstant(function (dispatch) {
    return { dispatch: dispatch };
  }) : undefined;
}

function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
  return mapDispatchToProps && (typeof mapDispatchToProps === 'undefined' ? 'undefined' : _typeof(mapDispatchToProps)) === 'object' ? wrapMapToPropsConstant(function (dispatch) {
    return redux.bindActionCreators(mapDispatchToProps, dispatch);
  }) : undefined;
}

var defaultMapDispatchToPropsFactories = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];

function whenMapStateToPropsIsFunction(mapStateToProps) {
  return typeof mapStateToProps === 'function' ? wrapMapToPropsFunc(mapStateToProps, 'mapStateToProps') : undefined;
}

function whenMapStateToPropsIsMissing(mapStateToProps) {
  return !mapStateToProps ? wrapMapToPropsConstant(function () {
    return {};
  }) : undefined;
}

var defaultMapStateToPropsFactories = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];

function defaultMergeProps(stateProps, dispatchProps, ownProps) {
  return _extends({}, ownProps, stateProps, dispatchProps);
}

function wrapMergePropsFunc(mergeProps) {
  return function initMergePropsProxy(dispatch, _ref) {
    var displayName = _ref.displayName;
    var pure = _ref.pure;
    var areMergedPropsEqual = _ref.areMergedPropsEqual;

    var hasRunOnce = false;
    var mergedProps = void 0;

    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);

      if (hasRunOnce) {
        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
      } else {
        hasRunOnce = true;
        mergedProps = nextMergedProps;

        verifyPlainObject(mergedProps, displayName, 'mergeProps');
      }

      return mergedProps;
    };
  };
}

function whenMergePropsIsFunction(mergeProps) {
  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
}

function whenMergePropsIsOmitted(mergeProps) {
  return !mergeProps ? function () {
    return defaultMergeProps;
  } : undefined;
}

var defaultMergePropsFactories = [whenMergePropsIsFunction, whenMergePropsIsOmitted];

function verify(selector, methodName, displayName) {
  if (!selector) {
    throw new Error('Unexpected value for ' + methodName + ' in ' + displayName + '.');
  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
    if (!selector.hasOwnProperty('dependsOnOwnProps')) {
      warning('The selector for ' + methodName + ' of ' + displayName + ' did not specify a value for dependsOnOwnProps.');
    }
  }
}

function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
  verify(mapStateToProps, 'mapStateToProps', displayName);
  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
  verify(mergeProps, 'mergeProps', displayName);
}

function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
  return function impureFinalPropsSelector(state, ownProps) {
    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
  };
}

function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
  var areStatesEqual = _ref.areStatesEqual;
  var areOwnPropsEqual = _ref.areOwnPropsEqual;
  var areStatePropsEqual = _ref.areStatePropsEqual;

  var hasRunAtLeastOnce = false;
  var state = void 0;
  var ownProps = void 0;
  var stateProps = void 0;
  var dispatchProps = void 0;
  var mergedProps = void 0;

  function handleFirstCall(firstState, firstOwnProps) {
    state = firstState;
    ownProps = firstOwnProps;
    stateProps = mapStateToProps(state, ownProps);
    dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    hasRunAtLeastOnce = true;
    return mergedProps;
  }

  function handleNewPropsAndNewState() {
    stateProps = mapStateToProps(state, ownProps);

    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);

    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewProps() {
    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);

    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);

    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewState() {
    var nextStateProps = mapStateToProps(state, ownProps);
    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
    stateProps = nextStateProps;

    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);

    return mergedProps;
  }

  function handleSubsequentCalls(nextState, nextOwnProps) {
    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
    var stateChanged = !areStatesEqual(nextState, state);
    state = nextState;
    ownProps = nextOwnProps;

    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
    if (propsChanged) return handleNewProps();
    if (stateChanged) return handleNewState();
    return mergedProps;
  }

  return function pureFinalPropsSelector(nextState, nextOwnProps) {
    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
  };
}

// TODO: Add more comments

// If pure is true, the selector returned by selectorFactory will memoize its results,
// allowing connectAdvanced's shouldComponentUpdate to return false if final
// props have not changed. If false, the selector will always return a new
// object and shouldComponentUpdate will always return true.

function finalPropsSelectorFactory(dispatch, _ref2) {
  var initMapStateToProps = _ref2.initMapStateToProps;
  var initMapDispatchToProps = _ref2.initMapDispatchToProps;
  var initMergeProps = _ref2.initMergeProps;
  var options = objectWithoutProperties(_ref2, ['initMapStateToProps', 'initMapDispatchToProps', 'initMergeProps']);

  var mapStateToProps = initMapStateToProps(dispatch, options);
  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
  var mergeProps = initMergeProps(dispatch, options);

  {
    verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
  }

  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;

  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
}

/*
  connect is a facade over connectAdvanced. It turns its args into a compatible
  selectorFactory, which has the signature:

    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
  
  connect passes its args to connectAdvanced as options, which will in turn pass them to
  selectorFactory each time a Connect component instance is instantiated or hot reloaded.

  selectorFactory returns a final props selector from its mapStateToProps,
  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
  mergePropsFactories, and pure args.

  The resulting final props selector is called by the Connect component instance whenever
  it receives new props or store state.
 */

function match(arg, factories, name) {
  for (var i = factories.length - 1; i >= 0; i--) {
    var result = factories[i](arg);
    if (result) return result;
  }

  return function (dispatch, options) {
    throw new Error('Invalid value of type ' + (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) + ' for ' + name + ' argument when connecting component ' + options.wrappedComponentName + '.');
  };
}

function strictEqual(a, b) {
  return a === b;
}

// createConnect with default args builds the 'official' connect behavior. Calling it with
// different options opens up some testing and extensibility scenarios
function createConnect() {
  var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  var _ref$connectHOC = _ref.connectHOC;
  var connectHOC = _ref$connectHOC === undefined ? connectAdvanced : _ref$connectHOC;
  var _ref$mapStateToPropsF = _ref.mapStateToPropsFactories;
  var mapStateToPropsFactories = _ref$mapStateToPropsF === undefined ? defaultMapStateToPropsFactories : _ref$mapStateToPropsF;
  var _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories;
  var mapDispatchToPropsFactories = _ref$mapDispatchToPro === undefined ? defaultMapDispatchToPropsFactories : _ref$mapDispatchToPro;
  var _ref$mergePropsFactor = _ref.mergePropsFactories;
  var mergePropsFactories = _ref$mergePropsFactor === undefined ? defaultMergePropsFactories : _ref$mergePropsFactor;
  var _ref$selectorFactory = _ref.selectorFactory;
  var selectorFactory = _ref$selectorFactory === undefined ? finalPropsSelectorFactory : _ref$selectorFactory;

  return function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
    var _ref2 = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];

    var _ref2$pure = _ref2.pure;
    var pure = _ref2$pure === undefined ? true : _ref2$pure;
    var _ref2$areStatesEqual = _ref2.areStatesEqual;
    var areStatesEqual = _ref2$areStatesEqual === undefined ? strictEqual : _ref2$areStatesEqual;
    var _ref2$areOwnPropsEqua = _ref2.areOwnPropsEqual;
    var areOwnPropsEqual = _ref2$areOwnPropsEqua === undefined ? shallowEqual : _ref2$areOwnPropsEqua;
    var _ref2$areStatePropsEq = _ref2.areStatePropsEqual;
    var areStatePropsEqual = _ref2$areStatePropsEq === undefined ? shallowEqual : _ref2$areStatePropsEq;
    var _ref2$areMergedPropsE = _ref2.areMergedPropsEqual;
    var areMergedPropsEqual = _ref2$areMergedPropsE === undefined ? shallowEqual : _ref2$areMergedPropsE;
    var extraOptions = objectWithoutProperties(_ref2, ['pure', 'areStatesEqual', 'areOwnPropsEqual', 'areStatePropsEqual', 'areMergedPropsEqual']);

    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');

    return connectHOC(selectorFactory, _extends({
      // used in error messages
      methodName: 'connect',

      // used to compute Connect's displayName from the wrapped component's displayName.
      getDisplayName: function getDisplayName(name) {
        return 'Connect(' + name + ')';
      },

      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
      shouldHandleStateChanges: Boolean(mapStateToProps),

      // passed through to selectorFactory
      initMapStateToProps: initMapStateToProps,
      initMapDispatchToProps: initMapDispatchToProps,
      initMergeProps: initMergeProps,
      pure: pure,
      areStatesEqual: areStatesEqual,
      areOwnPropsEqual: areOwnPropsEqual,
      areStatePropsEqual: areStatePropsEqual,
      areMergedPropsEqual: areMergedPropsEqual

    }, extraOptions));
  };
}

var connect$1 = createConnect();



var lib$1 = {
	Provider: Provider,
	connect: connect$1,
	connectAdvanced: connectAdvanced
};

return lib$1;

})));


},{"preact":485,"redux":505}],485:[function(require,module,exports){
!function() {
    'use strict';
    function VNode() {}
    function h(nodeName, attributes) {
        var lastSimple, child, simple, i, children = EMPTY_CHILDREN;
        for (i = arguments.length; i-- > 2; ) stack.push(arguments[i]);
        if (attributes && null != attributes.children) {
            if (!stack.length) stack.push(attributes.children);
            delete attributes.children;
        }
        while (stack.length) if ((child = stack.pop()) && void 0 !== child.pop) for (i = child.length; i--; ) stack.push(child[i]); else {
            if (child === !0 || child === !1) child = null;
            if (simple = 'function' != typeof nodeName) if (null == child) child = ''; else if ('number' == typeof child) child = String(child); else if ('string' != typeof child) simple = !1;
            if (simple && lastSimple) children[children.length - 1] += child; else if (children === EMPTY_CHILDREN) children = [ child ]; else children.push(child);
            lastSimple = simple;
        }
        var p = new VNode();
        p.nodeName = nodeName;
        p.children = children;
        p.attributes = null == attributes ? void 0 : attributes;
        p.key = null == attributes ? void 0 : attributes.key;
        if (void 0 !== options.vnode) options.vnode(p);
        return p;
    }
    function extend(obj, props) {
        for (var i in props) obj[i] = props[i];
        return obj;
    }
    function cloneElement(vnode, props) {
        return h(vnode.nodeName, extend(extend({}, vnode.attributes), props), arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children);
    }
    function enqueueRender(component) {
        if (!component.__d && (component.__d = !0) && 1 == items.push(component)) (options.debounceRendering || setTimeout)(rerender);
    }
    function rerender() {
        var p, list = items;
        items = [];
        while (p = list.pop()) if (p.__d) renderComponent(p);
    }
    function isSameNodeType(node, vnode, hydrating) {
        if ('string' == typeof vnode || 'number' == typeof vnode) return void 0 !== node.splitText;
        if ('string' == typeof vnode.nodeName) return !node._componentConstructor && isNamedNode(node, vnode.nodeName); else return hydrating || node._componentConstructor === vnode.nodeName;
    }
    function isNamedNode(node, nodeName) {
        return node.__n === nodeName || node.nodeName.toLowerCase() === nodeName.toLowerCase();
    }
    function getNodeProps(vnode) {
        var props = extend({}, vnode.attributes);
        props.children = vnode.children;
        var defaultProps = vnode.nodeName.defaultProps;
        if (void 0 !== defaultProps) for (var i in defaultProps) if (void 0 === props[i]) props[i] = defaultProps[i];
        return props;
    }
    function createNode(nodeName, isSvg) {
        var node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);
        node.__n = nodeName;
        return node;
    }
    function removeNode(node) {
        if (node.parentNode) node.parentNode.removeChild(node);
    }
    function setAccessor(node, name, old, value, isSvg) {
        if ('className' === name) name = 'class';
        if ('key' === name) ; else if ('ref' === name) {
            if (old) old(null);
            if (value) value(node);
        } else if ('class' === name && !isSvg) node.className = value || ''; else if ('style' === name) {
            if (!value || 'string' == typeof value || 'string' == typeof old) node.style.cssText = value || '';
            if (value && 'object' == typeof value) {
                if ('string' != typeof old) for (var i in old) if (!(i in value)) node.style[i] = '';
                for (var i in value) node.style[i] = 'number' == typeof value[i] && IS_NON_DIMENSIONAL.test(i) === !1 ? value[i] + 'px' : value[i];
            }
        } else if ('dangerouslySetInnerHTML' === name) {
            if (value) node.innerHTML = value.__html || '';
        } else if ('o' == name[0] && 'n' == name[1]) {
            var useCapture = name !== (name = name.replace(/Capture$/, ''));
            name = name.toLowerCase().substring(2);
            if (value) {
                if (!old) node.addEventListener(name, eventProxy, useCapture);
            } else node.removeEventListener(name, eventProxy, useCapture);
            (node.__l || (node.__l = {}))[name] = value;
        } else if ('list' !== name && 'type' !== name && !isSvg && name in node) {
            setProperty(node, name, null == value ? '' : value);
            if (null == value || value === !1) node.removeAttribute(name);
        } else {
            var ns = isSvg && name !== (name = name.replace(/^xlink\:?/, ''));
            if (null == value || value === !1) if (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase()); else node.removeAttribute(name); else if ('function' != typeof value) if (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value); else node.setAttribute(name, value);
        }
    }
    function setProperty(node, name, value) {
        try {
            node[name] = value;
        } catch (e) {}
    }
    function eventProxy(e) {
        return this.__l[e.type](options.event && options.event(e) || e);
    }
    function flushMounts() {
        var c;
        while (c = mounts.pop()) {
            if (options.afterMount) options.afterMount(c);
            if (c.componentDidMount) c.componentDidMount();
        }
    }
    function diff(dom, vnode, context, mountAll, parent, componentRoot) {
        if (!diffLevel++) {
            isSvgMode = null != parent && void 0 !== parent.ownerSVGElement;
            hydrating = null != dom && !('__preactattr_' in dom);
        }
        var ret = idiff(dom, vnode, context, mountAll, componentRoot);
        if (parent && ret.parentNode !== parent) parent.appendChild(ret);
        if (!--diffLevel) {
            hydrating = !1;
            if (!componentRoot) flushMounts();
        }
        return ret;
    }
    function idiff(dom, vnode, context, mountAll, componentRoot) {
        var out = dom, prevSvgMode = isSvgMode;
        if (null == vnode) vnode = '';
        if ('string' == typeof vnode) {
            if (dom && void 0 !== dom.splitText && dom.parentNode && (!dom._component || componentRoot)) {
                if (dom.nodeValue != vnode) dom.nodeValue = vnode;
            } else {
                out = document.createTextNode(vnode);
                if (dom) {
                    if (dom.parentNode) dom.parentNode.replaceChild(out, dom);
                    recollectNodeTree(dom, !0);
                }
            }
            out.__preactattr_ = !0;
            return out;
        }
        if ('function' == typeof vnode.nodeName) return buildComponentFromVNode(dom, vnode, context, mountAll);
        isSvgMode = 'svg' === vnode.nodeName ? !0 : 'foreignObject' === vnode.nodeName ? !1 : isSvgMode;
        if (!dom || !isNamedNode(dom, String(vnode.nodeName))) {
            out = createNode(String(vnode.nodeName), isSvgMode);
            if (dom) {
                while (dom.firstChild) out.appendChild(dom.firstChild);
                if (dom.parentNode) dom.parentNode.replaceChild(out, dom);
                recollectNodeTree(dom, !0);
            }
        }
        var fc = out.firstChild, props = out.__preactattr_ || (out.__preactattr_ = {}), vchildren = vnode.children;
        if (!hydrating && vchildren && 1 === vchildren.length && 'string' == typeof vchildren[0] && null != fc && void 0 !== fc.splitText && null == fc.nextSibling) {
            if (fc.nodeValue != vchildren[0]) fc.nodeValue = vchildren[0];
        } else if (vchildren && vchildren.length || null != fc) innerDiffNode(out, vchildren, context, mountAll, hydrating || null != props.dangerouslySetInnerHTML);
        diffAttributes(out, vnode.attributes, props);
        isSvgMode = prevSvgMode;
        return out;
    }
    function innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {
        var j, c, vchild, child, originalChildren = dom.childNodes, children = [], keyed = {}, keyedLen = 0, min = 0, len = originalChildren.length, childrenLen = 0, vlen = vchildren ? vchildren.length : 0;
        if (0 !== len) for (var i = 0; i < len; i++) {
            var _child = originalChildren[i], props = _child.__preactattr_, key = vlen && props ? _child._component ? _child._component.__k : props.key : null;
            if (null != key) {
                keyedLen++;
                keyed[key] = _child;
            } else if (props || (void 0 !== _child.splitText ? isHydrating ? _child.nodeValue.trim() : !0 : isHydrating)) children[childrenLen++] = _child;
        }
        if (0 !== vlen) for (var i = 0; i < vlen; i++) {
            vchild = vchildren[i];
            child = null;
            var key = vchild.key;
            if (null != key) {
                if (keyedLen && void 0 !== keyed[key]) {
                    child = keyed[key];
                    keyed[key] = void 0;
                    keyedLen--;
                }
            } else if (!child && min < childrenLen) for (j = min; j < childrenLen; j++) if (void 0 !== children[j] && isSameNodeType(c = children[j], vchild, isHydrating)) {
                child = c;
                children[j] = void 0;
                if (j === childrenLen - 1) childrenLen--;
                if (j === min) min++;
                break;
            }
            child = idiff(child, vchild, context, mountAll);
            if (child && child !== dom) if (i >= len) dom.appendChild(child); else if (child !== originalChildren[i]) if (child === originalChildren[i + 1]) removeNode(originalChildren[i]); else dom.insertBefore(child, originalChildren[i] || null);
        }
        if (keyedLen) for (var i in keyed) if (void 0 !== keyed[i]) recollectNodeTree(keyed[i], !1);
        while (min <= childrenLen) if (void 0 !== (child = children[childrenLen--])) recollectNodeTree(child, !1);
    }
    function recollectNodeTree(node, unmountOnly) {
        var component = node._component;
        if (component) unmountComponent(component); else {
            if (null != node.__preactattr_ && node.__preactattr_.ref) node.__preactattr_.ref(null);
            if (unmountOnly === !1 || null == node.__preactattr_) removeNode(node);
            removeChildren(node);
        }
    }
    function removeChildren(node) {
        node = node.lastChild;
        while (node) {
            var next = node.previousSibling;
            recollectNodeTree(node, !0);
            node = next;
        }
    }
    function diffAttributes(dom, attrs, old) {
        var name;
        for (name in old) if ((!attrs || null == attrs[name]) && null != old[name]) setAccessor(dom, name, old[name], old[name] = void 0, isSvgMode);
        for (name in attrs) if (!('children' === name || 'innerHTML' === name || name in old && attrs[name] === ('value' === name || 'checked' === name ? dom[name] : old[name]))) setAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);
    }
    function collectComponent(component) {
        var name = component.constructor.name;
        (components[name] || (components[name] = [])).push(component);
    }
    function createComponent(Ctor, props, context) {
        var inst, list = components[Ctor.name];
        if (Ctor.prototype && Ctor.prototype.render) {
            inst = new Ctor(props, context);
            Component.call(inst, props, context);
        } else {
            inst = new Component(props, context);
            inst.constructor = Ctor;
            inst.render = doRender;
        }
        if (list) for (var i = list.length; i--; ) if (list[i].constructor === Ctor) {
            inst.__b = list[i].__b;
            list.splice(i, 1);
            break;
        }
        return inst;
    }
    function doRender(props, state, context) {
        return this.constructor(props, context);
    }
    function setComponentProps(component, props, opts, context, mountAll) {
        if (!component.__x) {
            component.__x = !0;
            if (component.__r = props.ref) delete props.ref;
            if (component.__k = props.key) delete props.key;
            if (!component.base || mountAll) {
                if (component.componentWillMount) component.componentWillMount();
            } else if (component.componentWillReceiveProps) component.componentWillReceiveProps(props, context);
            if (context && context !== component.context) {
                if (!component.__c) component.__c = component.context;
                component.context = context;
            }
            if (!component.__p) component.__p = component.props;
            component.props = props;
            component.__x = !1;
            if (0 !== opts) if (1 === opts || options.syncComponentUpdates !== !1 || !component.base) renderComponent(component, 1, mountAll); else enqueueRender(component);
            if (component.__r) component.__r(component);
        }
    }
    function renderComponent(component, opts, mountAll, isChild) {
        if (!component.__x) {
            var rendered, inst, cbase, props = component.props, state = component.state, context = component.context, previousProps = component.__p || props, previousState = component.__s || state, previousContext = component.__c || context, isUpdate = component.base, nextBase = component.__b, initialBase = isUpdate || nextBase, initialChildComponent = component._component, skip = !1;
            if (isUpdate) {
                component.props = previousProps;
                component.state = previousState;
                component.context = previousContext;
                if (2 !== opts && component.shouldComponentUpdate && component.shouldComponentUpdate(props, state, context) === !1) skip = !0; else if (component.componentWillUpdate) component.componentWillUpdate(props, state, context);
                component.props = props;
                component.state = state;
                component.context = context;
            }
            component.__p = component.__s = component.__c = component.__b = null;
            component.__d = !1;
            if (!skip) {
                rendered = component.render(props, state, context);
                if (component.getChildContext) context = extend(extend({}, context), component.getChildContext());
                var toUnmount, base, childComponent = rendered && rendered.nodeName;
                if ('function' == typeof childComponent) {
                    var childProps = getNodeProps(rendered);
                    inst = initialChildComponent;
                    if (inst && inst.constructor === childComponent && childProps.key == inst.__k) setComponentProps(inst, childProps, 1, context, !1); else {
                        toUnmount = inst;
                        component._component = inst = createComponent(childComponent, childProps, context);
                        inst.__b = inst.__b || nextBase;
                        inst.__u = component;
                        setComponentProps(inst, childProps, 0, context, !1);
                        renderComponent(inst, 1, mountAll, !0);
                    }
                    base = inst.base;
                } else {
                    cbase = initialBase;
                    toUnmount = initialChildComponent;
                    if (toUnmount) cbase = component._component = null;
                    if (initialBase || 1 === opts) {
                        if (cbase) cbase._component = null;
                        base = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, !0);
                    }
                }
                if (initialBase && base !== initialBase && inst !== initialChildComponent) {
                    var baseParent = initialBase.parentNode;
                    if (baseParent && base !== baseParent) {
                        baseParent.replaceChild(base, initialBase);
                        if (!toUnmount) {
                            initialBase._component = null;
                            recollectNodeTree(initialBase, !1);
                        }
                    }
                }
                if (toUnmount) unmountComponent(toUnmount);
                component.base = base;
                if (base && !isChild) {
                    var componentRef = component, t = component;
                    while (t = t.__u) (componentRef = t).base = base;
                    base._component = componentRef;
                    base._componentConstructor = componentRef.constructor;
                }
            }
            if (!isUpdate || mountAll) mounts.unshift(component); else if (!skip) {
                flushMounts();
                if (component.componentDidUpdate) component.componentDidUpdate(previousProps, previousState, previousContext);
                if (options.afterUpdate) options.afterUpdate(component);
            }
            if (null != component.__h) while (component.__h.length) component.__h.pop().call(component);
            if (!diffLevel && !isChild) flushMounts();
        }
    }
    function buildComponentFromVNode(dom, vnode, context, mountAll) {
        var c = dom && dom._component, originalComponent = c, oldDom = dom, isDirectOwner = c && dom._componentConstructor === vnode.nodeName, isOwner = isDirectOwner, props = getNodeProps(vnode);
        while (c && !isOwner && (c = c.__u)) isOwner = c.constructor === vnode.nodeName;
        if (c && isOwner && (!mountAll || c._component)) {
            setComponentProps(c, props, 3, context, mountAll);
            dom = c.base;
        } else {
            if (originalComponent && !isDirectOwner) {
                unmountComponent(originalComponent);
                dom = oldDom = null;
            }
            c = createComponent(vnode.nodeName, props, context);
            if (dom && !c.__b) {
                c.__b = dom;
                oldDom = null;
            }
            setComponentProps(c, props, 1, context, mountAll);
            dom = c.base;
            if (oldDom && dom !== oldDom) {
                oldDom._component = null;
                recollectNodeTree(oldDom, !1);
            }
        }
        return dom;
    }
    function unmountComponent(component) {
        if (options.beforeUnmount) options.beforeUnmount(component);
        var base = component.base;
        component.__x = !0;
        if (component.componentWillUnmount) component.componentWillUnmount();
        component.base = null;
        var inner = component._component;
        if (inner) unmountComponent(inner); else if (base) {
            if (base.__preactattr_ && base.__preactattr_.ref) base.__preactattr_.ref(null);
            component.__b = base;
            removeNode(base);
            collectComponent(component);
            removeChildren(base);
        }
        if (component.__r) component.__r(null);
    }
    function Component(props, context) {
        this.__d = !0;
        this.context = context;
        this.props = props;
        this.state = this.state || {};
    }
    function render(vnode, parent, merge) {
        return diff(merge, vnode, {}, !1, parent, !1);
    }
    var options = {};
    var stack = [];
    var EMPTY_CHILDREN = [];
    var IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;
    var items = [];
    var mounts = [];
    var diffLevel = 0;
    var isSvgMode = !1;
    var hydrating = !1;
    var components = {};
    extend(Component.prototype, {
        setState: function(state, callback) {
            var s = this.state;
            if (!this.__s) this.__s = extend({}, s);
            extend(s, 'function' == typeof state ? state(s, this.props) : state);
            if (callback) (this.__h = this.__h || []).push(callback);
            enqueueRender(this);
        },
        forceUpdate: function(callback) {
            if (callback) (this.__h = this.__h || []).push(callback);
            renderComponent(this, 2);
        },
        render: function() {}
    });
    var preact = {
        h: h,
        createElement: h,
        cloneElement: cloneElement,
        Component: Component,
        render: render,
        rerender: rerender,
        options: options
    };
    if ('undefined' != typeof module) module.exports = preact; else self.preact = preact;
}();

},{}],486:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],487:[function(require,module,exports){
'use strict';

module.exports = require('./lib/core.js')
require('./lib/done.js')
require('./lib/es6-extensions.js')
require('./lib/node-extensions.js')
},{"./lib/core.js":488,"./lib/done.js":489,"./lib/es6-extensions.js":490,"./lib/node-extensions.js":491}],488:[function(require,module,exports){
'use strict';

var asap = require('asap')

module.exports = Promise;
function Promise(fn) {
  if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new')
  if (typeof fn !== 'function') throw new TypeError('not a function')
  var state = null
  var value = null
  var deferreds = []
  var self = this

  this.then = function(onFulfilled, onRejected) {
    return new self.constructor(function(resolve, reject) {
      handle(new Handler(onFulfilled, onRejected, resolve, reject))
    })
  }

  function handle(deferred) {
    if (state === null) {
      deferreds.push(deferred)
      return
    }
    asap(function() {
      var cb = state ? deferred.onFulfilled : deferred.onRejected
      if (cb === null) {
        (state ? deferred.resolve : deferred.reject)(value)
        return
      }
      var ret
      try {
        ret = cb(value)
      }
      catch (e) {
        deferred.reject(e)
        return
      }
      deferred.resolve(ret)
    })
  }

  function resolve(newValue) {
    try { //Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.')
      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {
        var then = newValue.then
        if (typeof then === 'function') {
          doResolve(then.bind(newValue), resolve, reject)
          return
        }
      }
      state = true
      value = newValue
      finale()
    } catch (e) { reject(e) }
  }

  function reject(newValue) {
    state = false
    value = newValue
    finale()
  }

  function finale() {
    for (var i = 0, len = deferreds.length; i < len; i++)
      handle(deferreds[i])
    deferreds = null
  }

  doResolve(fn, resolve, reject)
}


function Handler(onFulfilled, onRejected, resolve, reject){
  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null
  this.onRejected = typeof onRejected === 'function' ? onRejected : null
  this.resolve = resolve
  this.reject = reject
}

/**
 * Take a potentially misbehaving resolver function and make sure
 * onFulfilled and onRejected are only called once.
 *
 * Makes no guarantees about asynchrony.
 */
function doResolve(fn, onFulfilled, onRejected) {
  var done = false;
  try {
    fn(function (value) {
      if (done) return
      done = true
      onFulfilled(value)
    }, function (reason) {
      if (done) return
      done = true
      onRejected(reason)
    })
  } catch (ex) {
    if (done) return
    done = true
    onRejected(ex)
  }
}

},{"asap":1}],489:[function(require,module,exports){
'use strict';

var Promise = require('./core.js')
var asap = require('asap')

module.exports = Promise
Promise.prototype.done = function (onFulfilled, onRejected) {
  var self = arguments.length ? this.then.apply(this, arguments) : this
  self.then(null, function (err) {
    asap(function () {
      throw err
    })
  })
}
},{"./core.js":488,"asap":1}],490:[function(require,module,exports){
'use strict';

//This file contains the ES6 extensions to the core Promises/A+ API

var Promise = require('./core.js')
var asap = require('asap')

module.exports = Promise

/* Static Functions */

function ValuePromise(value) {
  this.then = function (onFulfilled) {
    if (typeof onFulfilled !== 'function') return this
    return new Promise(function (resolve, reject) {
      asap(function () {
        try {
          resolve(onFulfilled(value))
        } catch (ex) {
          reject(ex);
        }
      })
    })
  }
}
ValuePromise.prototype = Promise.prototype

var TRUE = new ValuePromise(true)
var FALSE = new ValuePromise(false)
var NULL = new ValuePromise(null)
var UNDEFINED = new ValuePromise(undefined)
var ZERO = new ValuePromise(0)
var EMPTYSTRING = new ValuePromise('')

Promise.resolve = function (value) {
  if (value instanceof Promise) return value

  if (value === null) return NULL
  if (value === undefined) return UNDEFINED
  if (value === true) return TRUE
  if (value === false) return FALSE
  if (value === 0) return ZERO
  if (value === '') return EMPTYSTRING

  if (typeof value === 'object' || typeof value === 'function') {
    try {
      var then = value.then
      if (typeof then === 'function') {
        return new Promise(then.bind(value))
      }
    } catch (ex) {
      return new Promise(function (resolve, reject) {
        reject(ex)
      })
    }
  }

  return new ValuePromise(value)
}

Promise.all = function (arr) {
  var args = Array.prototype.slice.call(arr)

  return new Promise(function (resolve, reject) {
    if (args.length === 0) return resolve([])
    var remaining = args.length
    function res(i, val) {
      try {
        if (val && (typeof val === 'object' || typeof val === 'function')) {
          var then = val.then
          if (typeof then === 'function') {
            then.call(val, function (val) { res(i, val) }, reject)
            return
          }
        }
        args[i] = val
        if (--remaining === 0) {
          resolve(args);
        }
      } catch (ex) {
        reject(ex)
      }
    }
    for (var i = 0; i < args.length; i++) {
      res(i, args[i])
    }
  })
}

Promise.reject = function (value) {
  return new Promise(function (resolve, reject) { 
    reject(value);
  });
}

Promise.race = function (values) {
  return new Promise(function (resolve, reject) { 
    values.forEach(function(value){
      Promise.resolve(value).then(resolve, reject);
    })
  });
}

/* Prototype Methods */

Promise.prototype['catch'] = function (onRejected) {
  return this.then(null, onRejected);
}

},{"./core.js":488,"asap":1}],491:[function(require,module,exports){
'use strict';

//This file contains then/promise specific extensions that are only useful for node.js interop

var Promise = require('./core.js')
var asap = require('asap')

module.exports = Promise

/* Static Functions */

Promise.denodeify = function (fn, argumentCount) {
  argumentCount = argumentCount || Infinity
  return function () {
    var self = this
    var args = Array.prototype.slice.call(arguments)
    return new Promise(function (resolve, reject) {
      while (args.length && args.length > argumentCount) {
        args.pop()
      }
      args.push(function (err, res) {
        if (err) reject(err)
        else resolve(res)
      })
      var res = fn.apply(self, args)
      if (res && (typeof res === 'object' || typeof res === 'function') && typeof res.then === 'function') {
        resolve(res)
      }
    })
  }
}
Promise.nodeify = function (fn) {
  return function () {
    var args = Array.prototype.slice.call(arguments)
    var callback = typeof args[args.length - 1] === 'function' ? args.pop() : null
    var ctx = this
    try {
      return fn.apply(this, arguments).nodeify(callback, ctx)
    } catch (ex) {
      if (callback === null || typeof callback == 'undefined') {
        return new Promise(function (resolve, reject) { reject(ex) })
      } else {
        asap(function () {
          callback.call(ctx, ex)
        })
      }
    }
  }
}

Promise.prototype.nodeify = function (callback, ctx) {
  if (typeof callback != 'function') return this

  this.then(function (value) {
    asap(function () {
      callback.call(ctx, null, value)
    })
  }, function (err) {
    asap(function () {
      callback.call(ctx, err)
    })
  })
}

},{"./core.js":488,"asap":1}],492:[function(require,module,exports){
(function (global){
/*! https://mths.be/punycode v1.4.1 by @mathias */
;(function(root) {

	/** Detect free variables */
	var freeExports = typeof exports == 'object' && exports &&
		!exports.nodeType && exports;
	var freeModule = typeof module == 'object' && module &&
		!module.nodeType && module;
	var freeGlobal = typeof global == 'object' && global;
	if (
		freeGlobal.global === freeGlobal ||
		freeGlobal.window === freeGlobal ||
		freeGlobal.self === freeGlobal
	) {
		root = freeGlobal;
	}

	/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
	var punycode,

	/** Highest positive signed 32-bit float value */
	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

	/** Bootstring parameters */
	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'

	/** Regular expressions */
	regexPunycode = /^xn--/,
	regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

	/** Error messages */
	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},

	/** Convenience shortcuts */
	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,

	/** Temporary variable */
	key;

	/*--------------------------------------------------------------------------*/

	/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
	function error(type) {
		throw new RangeError(errors[type]);
	}

	/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
	function map(array, fn) {
		var length = array.length;
		var result = [];
		while (length--) {
			result[length] = fn(array[length]);
		}
		return result;
	}

	/**
	 * A simple `Array#map`-like wrapper to work with domain name strings or email
	 * addresses.
	 * @private
	 * @param {String} domain The domain name or email address.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
	function mapDomain(string, fn) {
		var parts = string.split('@');
		var result = '';
		if (parts.length > 1) {
			// In email addresses, only the domain name should be punycoded. Leave
			// the local part (i.e. everything up to `@`) intact.
			result = parts[0] + '@';
			string = parts[1];
		}
		// Avoid `split(regex)` for IE8 compatibility. See #17.
		string = string.replace(regexSeparators, '\x2E');
		var labels = string.split('.');
		var encoded = map(labels, fn).join('.');
		return result + encoded;
	}

	/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
	function ucs2encode(array) {
		return map(array, function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		}).join('');
	}

	/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}

	/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
	function digitToBasic(digit, flag) {
		//  0..25 map to ASCII a..z or A..Z
		// 26..35 map to ASCII 0..9
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}

	/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * https://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}

	/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
	function decode(input) {
		// Don't use UCS-2
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    /** Cached calculation results */
		    baseMinusT;

		// Handle the basic code points: let `basic` be the number of input code
		// points before the last delimiter, or `0` if there is none, then copy
		// the first basic code points to the output.

		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			// if it's not a basic code point
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}

		// Main decoding loop: start just after the last delimiter if any basic code
		// points were copied; start at the beginning otherwise.

		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			// `index` is the index of the next character to be consumed.
			// Decode a generalized variable-length integer into `delta`,
			// which gets added to `i`. The overflow checking is easier
			// if we increase `i` as we go, then subtract off its starting
			// value at the end to obtain `delta`.
			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			// `i` was supposed to wrap around from `out` to `0`,
			// incrementing `n` each time, so we'll fix that now:
			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			// Insert `n` at position `i` of the output
			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}

	/**
	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
	 * Punycode string of ASCII-only symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],
		    /** `inputLength` will hold the number of code points in `input`. */
		    inputLength,
		    /** Cached calculation results */
		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		// Convert the input in UCS-2 to Unicode
		input = ucs2decode(input);

		// Cache the length
		inputLength = input.length;

		// Initialize the state
		n = initialN;
		delta = 0;
		bias = initialBias;

		// Handle the basic code points
		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;

		// `handledCPCount` is the number of code points that have been handled;
		// `basicLength` is the number of basic code points.

		// Finish the basic string - if it is not empty - with a delimiter
		if (basicLength) {
			output.push(delimiter);
		}

		// Main encoding loop:
		while (handledCPCount < inputLength) {

			// All non-basic code points < n have been handled already. Find the next
			// larger one:
			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow
			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					// Represent delta as a generalized variable-length integer
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}

	/**
	 * Converts a Punycode string representing a domain name or an email address
	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
	 * it doesn't matter if you call it on a string that has already been
	 * converted to Unicode.
	 * @memberOf punycode
	 * @param {String} input The Punycoded domain name or email address to
	 * convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
	function toUnicode(input) {
		return mapDomain(input, function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		});
	}

	/**
	 * Converts a Unicode string representing a domain name or an email address to
	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
	 * i.e. it doesn't matter if you call it with a domain that's already in
	 * ASCII.
	 * @memberOf punycode
	 * @param {String} input The domain name or email address to convert, as a
	 * Unicode string.
	 * @returns {String} The Punycode representation of the given domain name or
	 * email address.
	 */
	function toASCII(input) {
		return mapDomain(input, function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		});
	}

	/*--------------------------------------------------------------------------*/

	/** Define the public API */
	punycode = {
		/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
		'version': '1.4.1',
		/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};

	/** Expose `punycode` */
	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		typeof define == 'function' &&
		typeof define.amd == 'object' &&
		define.amd
	) {
		define('punycode', function() {
			return punycode;
		});
	} else if (freeExports && freeModule) {
		if (module.exports == freeExports) {
			// in Node.js, io.js, or RingoJS v0.8.0+
			freeModule.exports = punycode;
		} else {
			// in Narwhal or RingoJS v0.7.0-
			for (key in punycode) {
				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
			}
		}
	} else {
		// in Rhino or a web browser
		root.punycode = punycode;
	}

}(this));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],493:[function(require,module,exports){
'use strict';
var strictUriEncode = require('strict-uri-encode');

exports.extract = function (str) {
	return str.split('?')[1] || '';
};

exports.parse = function (str) {
	if (typeof str !== 'string') {
		return {};
	}

	str = str.trim().replace(/^(\?|#|&)/, '');

	if (!str) {
		return {};
	}

	return str.split('&').reduce(function (ret, param) {
		var parts = param.replace(/\+/g, ' ').split('=');
		// Firefox (pre 40) decodes `%3D` to `=`
		// https://github.com/sindresorhus/query-string/pull/37
		var key = parts.shift();
		var val = parts.length > 0 ? parts.join('=') : undefined;

		key = decodeURIComponent(key);

		// missing `=` should be `null`:
		// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
		val = val === undefined ? null : decodeURIComponent(val);

		if (!ret.hasOwnProperty(key)) {
			ret[key] = val;
		} else if (Array.isArray(ret[key])) {
			ret[key].push(val);
		} else {
			ret[key] = [ret[key], val];
		}

		return ret;
	}, {});
};

exports.stringify = function (obj) {
	return obj ? Object.keys(obj).sort().map(function (key) {
		var val = obj[key];

		if (Array.isArray(val)) {
			return val.sort().map(function (val2) {
				return strictUriEncode(key) + '=' + strictUriEncode(val2);
			}).join('&');
		}

		return strictUriEncode(key) + '=' + strictUriEncode(val);
	}).filter(function (x) {
		return x.length > 0;
	}).join('&') : '';
};

},{"strict-uri-encode":509}],494:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

},{}],495:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};

},{}],496:[function(require,module,exports){
'use strict';

exports.decode = exports.parse = require('./decode');
exports.encode = exports.stringify = require('./encode');

},{"./decode":494,"./encode":495}],497:[function(require,module,exports){
!function t(e,r){"object"==typeof exports&&"object"==typeof module?module.exports=r():"function"==typeof define&&define.amd?define([],r):"object"==typeof exports?exports.Raphael=r():e.Raphael=r()}(this,function(){return function(t){function e(i){if(r[i])return r[i].exports;var n=r[i]={exports:{},id:i,loaded:!1};return t[i].call(n.exports,n,n.exports,e),n.loaded=!0,n.exports}var r={};return e.m=t,e.c=r,e.p="",e(0)}([function(t,e,r){var i,n;i=[r(1),r(3),r(4)],n=function(t){return t}.apply(e,i),!(void 0!==n&&(t.exports=n))},function(t,e,r){var i,n;i=[r(2)],n=function(t){function e(r){if(e.is(r,"function"))return w?r():t.on("raphael.DOMload",r);if(e.is(r,Q))return e._engine.create[z](e,r.splice(0,3+e.is(r[0],$))).add(r);var i=Array.prototype.slice.call(arguments,0);if(e.is(i[i.length-1],"function")){var n=i.pop();return w?n.call(e._engine.create[z](e,i)):t.on("raphael.DOMload",function(){n.call(e._engine.create[z](e,i))})}return e._engine.create[z](e,arguments)}function r(t){if("function"==typeof t||Object(t)!==t)return t;var e=new t.constructor;for(var i in t)t[A](i)&&(e[i]=r(t[i]));return e}function i(t,e){for(var r=0,i=t.length;r<i;r++)if(t[r]===e)return t.push(t.splice(r,1)[0])}function n(t,e,r){function n(){var a=Array.prototype.slice.call(arguments,0),s=a.join("␀"),o=n.cache=n.cache||{},l=n.count=n.count||[];return o[A](s)?(i(l,s),r?r(o[s]):o[s]):(l.length>=1e3&&delete o[l.shift()],l.push(s),o[s]=t[z](e,a),r?r(o[s]):o[s])}return n}function a(){return this.hex}function s(t,e){for(var r=[],i=0,n=t.length;n-2*!e>i;i+=2){var a=[{x:+t[i-2],y:+t[i-1]},{x:+t[i],y:+t[i+1]},{x:+t[i+2],y:+t[i+3]},{x:+t[i+4],y:+t[i+5]}];e?i?n-4==i?a[3]={x:+t[0],y:+t[1]}:n-2==i&&(a[2]={x:+t[0],y:+t[1]},a[3]={x:+t[2],y:+t[3]}):a[0]={x:+t[n-2],y:+t[n-1]}:n-4==i?a[3]=a[2]:i||(a[0]={x:+t[i],y:+t[i+1]}),r.push(["C",(-a[0].x+6*a[1].x+a[2].x)/6,(-a[0].y+6*a[1].y+a[2].y)/6,(a[1].x+6*a[2].x-a[3].x)/6,(a[1].y+6*a[2].y-a[3].y)/6,a[2].x,a[2].y])}return r}function o(t,e,r,i,n){var a=-3*e+9*r-9*i+3*n,s=t*a+6*e-12*r+6*i;return t*s-3*e+3*r}function l(t,e,r,i,n,a,s,l,h){null==h&&(h=1),h=h>1?1:h<0?0:h;for(var u=h/2,c=12,f=[-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],p=[.2491,.2491,.2335,.2335,.2032,.2032,.1601,.1601,.1069,.1069,.0472,.0472],d=0,g=0;g<c;g++){var v=u*f[g]+u,x=o(v,t,r,n,s),y=o(v,e,i,a,l),m=x*x+y*y;d+=p[g]*Y.sqrt(m)}return u*d}function h(t,e,r,i,n,a,s,o,h){if(!(h<0||l(t,e,r,i,n,a,s,o)<h)){var u=1,c=u/2,f=u-c,p,d=.01;for(p=l(t,e,r,i,n,a,s,o,f);H(p-h)>d;)c/=2,f+=(p<h?1:-1)*c,p=l(t,e,r,i,n,a,s,o,f);return f}}function u(t,e,r,i,n,a,s,o){if(!(W(t,r)<G(n,s)||G(t,r)>W(n,s)||W(e,i)<G(a,o)||G(e,i)>W(a,o))){var l=(t*i-e*r)*(n-s)-(t-r)*(n*o-a*s),h=(t*i-e*r)*(a-o)-(e-i)*(n*o-a*s),u=(t-r)*(a-o)-(e-i)*(n-s);if(u){var c=l/u,f=h/u,p=+c.toFixed(2),d=+f.toFixed(2);if(!(p<+G(t,r).toFixed(2)||p>+W(t,r).toFixed(2)||p<+G(n,s).toFixed(2)||p>+W(n,s).toFixed(2)||d<+G(e,i).toFixed(2)||d>+W(e,i).toFixed(2)||d<+G(a,o).toFixed(2)||d>+W(a,o).toFixed(2)))return{x:c,y:f}}}}function c(t,e){return p(t,e)}function f(t,e){return p(t,e,1)}function p(t,r,i){var n=e.bezierBBox(t),a=e.bezierBBox(r);if(!e.isBBoxIntersect(n,a))return i?0:[];for(var s=l.apply(0,t),o=l.apply(0,r),h=W(~~(s/5),1),c=W(~~(o/5),1),f=[],p=[],d={},g=i?0:[],v=0;v<h+1;v++){var x=e.findDotsAtSegment.apply(e,t.concat(v/h));f.push({x:x.x,y:x.y,t:v/h})}for(v=0;v<c+1;v++)x=e.findDotsAtSegment.apply(e,r.concat(v/c)),p.push({x:x.x,y:x.y,t:v/c});for(v=0;v<h;v++)for(var y=0;y<c;y++){var m=f[v],b=f[v+1],_=p[y],w=p[y+1],k=H(b.x-m.x)<.001?"y":"x",B=H(w.x-_.x)<.001?"y":"x",C=u(m.x,m.y,b.x,b.y,_.x,_.y,w.x,w.y);if(C){if(d[C.x.toFixed(4)]==C.y.toFixed(4))continue;d[C.x.toFixed(4)]=C.y.toFixed(4);var S=m.t+H((C[k]-m[k])/(b[k]-m[k]))*(b.t-m.t),A=_.t+H((C[B]-_[B])/(w[B]-_[B]))*(w.t-_.t);S>=0&&S<=1.001&&A>=0&&A<=1.001&&(i?g++:g.push({x:C.x,y:C.y,t1:G(S,1),t2:G(A,1)}))}}return g}function d(t,r,i){t=e._path2curve(t),r=e._path2curve(r);for(var n,a,s,o,l,h,u,c,f,d,g=i?0:[],v=0,x=t.length;v<x;v++){var y=t[v];if("M"==y[0])n=l=y[1],a=h=y[2];else{"C"==y[0]?(f=[n,a].concat(y.slice(1)),n=f[6],a=f[7]):(f=[n,a,n,a,l,h,l,h],n=l,a=h);for(var m=0,b=r.length;m<b;m++){var _=r[m];if("M"==_[0])s=u=_[1],o=c=_[2];else{"C"==_[0]?(d=[s,o].concat(_.slice(1)),s=d[6],o=d[7]):(d=[s,o,s,o,u,c,u,c],s=u,o=c);var w=p(f,d,i);if(i)g+=w;else{for(var k=0,B=w.length;k<B;k++)w[k].segment1=v,w[k].segment2=m,w[k].bez1=f,w[k].bez2=d;g=g.concat(w)}}}}}return g}function g(t,e,r,i,n,a){null!=t?(this.a=+t,this.b=+e,this.c=+r,this.d=+i,this.e=+n,this.f=+a):(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0)}function v(){return this.x+j+this.y}function x(){return this.x+j+this.y+j+this.width+" × "+this.height}function y(t,e,r,i,n,a){function s(t){return((c*t+u)*t+h)*t}function o(t,e){var r=l(t,e);return((d*r+p)*r+f)*r}function l(t,e){var r,i,n,a,o,l;for(n=t,l=0;l<8;l++){if(a=s(n)-t,H(a)<e)return n;if(o=(3*c*n+2*u)*n+h,H(o)<1e-6)break;n-=a/o}if(r=0,i=1,n=t,n<r)return r;if(n>i)return i;for(;r<i;){if(a=s(n),H(a-t)<e)return n;t>a?r=n:i=n,n=(i-r)/2+r}return n}var h=3*e,u=3*(i-e)-h,c=1-h-u,f=3*r,p=3*(n-r)-f,d=1-f-p;return o(t,1/(200*a))}function m(t,e){var r=[],i={};if(this.ms=e,this.times=1,t){for(var n in t)t[A](n)&&(i[ht(n)]=t[n],r.push(ht(n)));r.sort(Bt)}this.anim=i,this.top=r[r.length-1],this.percents=r}function b(r,i,n,a,s,o){n=ht(n);var l,h,u,c=[],f,p,d,v=r.ms,x={},m={},b={};if(a)for(w=0,B=Ee.length;w<B;w++){var _=Ee[w];if(_.el.id==i.id&&_.anim==r){_.percent!=n?(Ee.splice(w,1),u=1):h=_,i.attr(_.totalOrigin);break}}else a=+m;for(var w=0,B=r.percents.length;w<B;w++){if(r.percents[w]==n||r.percents[w]>a*r.top){n=r.percents[w],p=r.percents[w-1]||0,v=v/r.top*(n-p),f=r.percents[w+1],l=r.anim[n];break}a&&i.attr(r.anim[r.percents[w]])}if(l){if(h)h.initstatus=a,h.start=new Date-h.ms*a;else{for(var C in l)if(l[A](C)&&(pt[A](C)||i.paper.customAttributes[A](C)))switch(x[C]=i.attr(C),null==x[C]&&(x[C]=ft[C]),m[C]=l[C],pt[C]){case $:b[C]=(m[C]-x[C])/v;break;case"colour":x[C]=e.getRGB(x[C]);var S=e.getRGB(m[C]);b[C]={r:(S.r-x[C].r)/v,g:(S.g-x[C].g)/v,b:(S.b-x[C].b)/v};break;case"path":var T=Qt(x[C],m[C]),E=T[1];for(x[C]=T[0],b[C]=[],w=0,B=x[C].length;w<B;w++){b[C][w]=[0];for(var M=1,N=x[C][w].length;M<N;M++)b[C][w][M]=(E[w][M]-x[C][w][M])/v}break;case"transform":var L=i._,z=le(L[C],m[C]);if(z)for(x[C]=z.from,m[C]=z.to,b[C]=[],b[C].real=!0,w=0,B=x[C].length;w<B;w++)for(b[C][w]=[x[C][w][0]],M=1,N=x[C][w].length;M<N;M++)b[C][w][M]=(m[C][w][M]-x[C][w][M])/v;else{var F=i.matrix||new g,R={_:{transform:L.transform},getBBox:function(){return i.getBBox(1)}};x[C]=[F.a,F.b,F.c,F.d,F.e,F.f],se(R,m[C]),m[C]=R._.transform,b[C]=[(R.matrix.a-F.a)/v,(R.matrix.b-F.b)/v,(R.matrix.c-F.c)/v,(R.matrix.d-F.d)/v,(R.matrix.e-F.e)/v,(R.matrix.f-F.f)/v]}break;case"csv":var j=I(l[C])[q](k),D=I(x[C])[q](k);if("clip-rect"==C)for(x[C]=D,b[C]=[],w=D.length;w--;)b[C][w]=(j[w]-x[C][w])/v;m[C]=j;break;default:for(j=[][P](l[C]),D=[][P](x[C]),b[C]=[],w=i.paper.customAttributes[C].length;w--;)b[C][w]=((j[w]||0)-(D[w]||0))/v}var V=l.easing,O=e.easing_formulas[V];if(!O)if(O=I(V).match(st),O&&5==O.length){var Y=O;O=function(t){return y(t,+Y[1],+Y[2],+Y[3],+Y[4],v)}}else O=St;if(d=l.start||r.start||+new Date,_={anim:r,percent:n,timestamp:d,start:d+(r.del||0),status:0,initstatus:a||0,stop:!1,ms:v,easing:O,from:x,diff:b,to:m,el:i,callback:l.callback,prev:p,next:f,repeat:o||r.times,origin:i.attr(),totalOrigin:s},Ee.push(_),a&&!h&&!u&&(_.stop=!0,_.start=new Date-v*a,1==Ee.length))return Ne();u&&(_.start=new Date-_.ms*a),1==Ee.length&&Me(Ne)}t("raphael.anim.start."+i.id,i,r)}}function _(t){for(var e=0;e<Ee.length;e++)Ee[e].el.paper==t&&Ee.splice(e--,1)}e.version="2.2.0",e.eve=t;var w,k=/[, ]+/,B={circle:1,rect:1,path:1,ellipse:1,text:1,image:1},C=/\{(\d+)\}/g,S="prototype",A="hasOwnProperty",T={doc:document,win:window},E={was:Object.prototype[A].call(T.win,"Raphael"),is:T.win.Raphael},M=function(){this.ca=this.customAttributes={}},N,L="appendChild",z="apply",P="concat",F="ontouchstart"in T.win||T.win.DocumentTouch&&T.doc instanceof DocumentTouch,R="",j=" ",I=String,q="split",D="click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel"[q](j),V={mousedown:"touchstart",mousemove:"touchmove",mouseup:"touchend"},O=I.prototype.toLowerCase,Y=Math,W=Y.max,G=Y.min,H=Y.abs,X=Y.pow,U=Y.PI,$="number",Z="string",Q="array",J="toString",K="fill",tt=Object.prototype.toString,et={},rt="push",it=e._ISURL=/^url\(['"]?(.+?)['"]?\)$/i,nt=/^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\))\s*$/i,at={NaN:1,Infinity:1,"-Infinity":1},st=/^(?:cubic-)?bezier\(([^,]+),([^,]+),([^,]+),([^\)]+)\)/,ot=Y.round,lt="setAttribute",ht=parseFloat,ut=parseInt,ct=I.prototype.toUpperCase,ft=e._availableAttrs={"arrow-end":"none","arrow-start":"none",blur:0,"clip-rect":"0 0 1e9 1e9",cursor:"default",cx:0,cy:0,fill:"#fff","fill-opacity":1,font:'10px "Arial"',"font-family":'"Arial"',"font-size":"10","font-style":"normal","font-weight":400,gradient:0,height:0,href:"http://raphaeljs.com/","letter-spacing":0,opacity:1,path:"M0,0",r:0,rx:0,ry:0,src:"",stroke:"#000","stroke-dasharray":"","stroke-linecap":"butt","stroke-linejoin":"butt","stroke-miterlimit":0,"stroke-opacity":1,"stroke-width":1,target:"_blank","text-anchor":"middle",title:"Raphael",transform:"",width:0,x:0,y:0,"class":""},pt=e._availableAnimAttrs={blur:$,"clip-rect":"csv",cx:$,cy:$,fill:"colour","fill-opacity":$,"font-size":$,height:$,opacity:$,path:"path",r:$,rx:$,ry:$,stroke:"colour","stroke-opacity":$,"stroke-width":$,transform:"transform",width:$,x:$,y:$},dt=/[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]/g,gt=/[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/,vt={hs:1,rg:1},xt=/,?([achlmqrstvxz]),?/gi,yt=/([achlmrqstvz])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/gi,mt=/([rstm])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/gi,bt=/(-?\d*\.?\d*(?:e[\-+]?\d+)?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/gi,_t=e._radial_gradient=/^r(?:\(([^,]+?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*([^\)]+?)\))?/,wt={},kt=function(t,e){return t.key-e.key},Bt=function(t,e){return ht(t)-ht(e)},Ct=function(){},St=function(t){return t},At=e._rectPath=function(t,e,r,i,n){return n?[["M",t+n,e],["l",r-2*n,0],["a",n,n,0,0,1,n,n],["l",0,i-2*n],["a",n,n,0,0,1,-n,n],["l",2*n-r,0],["a",n,n,0,0,1,-n,-n],["l",0,2*n-i],["a",n,n,0,0,1,n,-n],["z"]]:[["M",t,e],["l",r,0],["l",0,i],["l",-r,0],["z"]]},Tt=function(t,e,r,i){return null==i&&(i=r),[["M",t,e],["m",0,-i],["a",r,i,0,1,1,0,2*i],["a",r,i,0,1,1,0,-2*i],["z"]]},Et=e._getPath={path:function(t){return t.attr("path")},circle:function(t){var e=t.attrs;return Tt(e.cx,e.cy,e.r)},ellipse:function(t){var e=t.attrs;return Tt(e.cx,e.cy,e.rx,e.ry)},rect:function(t){var e=t.attrs;return At(e.x,e.y,e.width,e.height,e.r)},image:function(t){var e=t.attrs;return At(e.x,e.y,e.width,e.height)},text:function(t){var e=t._getBBox();return At(e.x,e.y,e.width,e.height)},set:function(t){var e=t._getBBox();return At(e.x,e.y,e.width,e.height)}},Mt=e.mapPath=function(t,e){if(!e)return t;var r,i,n,a,s,o,l;for(t=Qt(t),n=0,s=t.length;n<s;n++)for(l=t[n],a=1,o=l.length;a<o;a+=2)r=e.x(l[a],l[a+1]),i=e.y(l[a],l[a+1]),l[a]=r,l[a+1]=i;return t};if(e._g=T,e.type=T.win.SVGAngle||T.doc.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure","1.1")?"SVG":"VML","VML"==e.type){var Nt=T.doc.createElement("div"),Lt;if(Nt.innerHTML='<v:shape adj="1"/>',Lt=Nt.firstChild,Lt.style.behavior="url(#default#VML)",!Lt||"object"!=typeof Lt.adj)return e.type=R;Nt=null}e.svg=!(e.vml="VML"==e.type),e._Paper=M,e.fn=N=M.prototype=e.prototype,e._id=0,e.is=function(t,e){return e=O.call(e),"finite"==e?!at[A](+t):"array"==e?t instanceof Array:"null"==e&&null===t||e==typeof t&&null!==t||"object"==e&&t===Object(t)||"array"==e&&Array.isArray&&Array.isArray(t)||tt.call(t).slice(8,-1).toLowerCase()==e},e.angle=function(t,r,i,n,a,s){if(null==a){var o=t-i,l=r-n;return o||l?(180+180*Y.atan2(-l,-o)/U+360)%360:0}return e.angle(t,r,a,s)-e.angle(i,n,a,s)},e.rad=function(t){return t%360*U/180},e.deg=function(t){return Math.round(180*t/U%360*1e3)/1e3},e.snapTo=function(t,r,i){if(i=e.is(i,"finite")?i:10,e.is(t,Q)){for(var n=t.length;n--;)if(H(t[n]-r)<=i)return t[n]}else{t=+t;var a=r%t;if(a<i)return r-a;if(a>t-i)return r-a+t}return r};var zt=e.createUUID=function(t,e){return function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(t,e).toUpperCase()}}(/[xy]/g,function(t){var e=16*Y.random()|0,r="x"==t?e:3&e|8;return r.toString(16)});e.setWindow=function(r){t("raphael.setWindow",e,T.win,r),T.win=r,T.doc=T.win.document,e._engine.initWin&&e._engine.initWin(T.win)};var Pt=function(t){if(e.vml){var r=/^\s+|\s+$/g,i;try{var a=new ActiveXObject("htmlfile");a.write("<body>"),a.close(),i=a.body}catch(s){i=createPopup().document.body}var o=i.createTextRange();Pt=n(function(t){try{i.style.color=I(t).replace(r,R);var e=o.queryCommandValue("ForeColor");return e=(255&e)<<16|65280&e|(16711680&e)>>>16,"#"+("000000"+e.toString(16)).slice(-6)}catch(n){return"none"}})}else{var l=T.doc.createElement("i");l.title="Raphaël Colour Picker",l.style.display="none",T.doc.body.appendChild(l),Pt=n(function(t){return l.style.color=t,T.doc.defaultView.getComputedStyle(l,R).getPropertyValue("color")})}return Pt(t)},Ft=function(){return"hsb("+[this.h,this.s,this.b]+")"},Rt=function(){return"hsl("+[this.h,this.s,this.l]+")"},jt=function(){return this.hex},It=function(t,r,i){if(null==r&&e.is(t,"object")&&"r"in t&&"g"in t&&"b"in t&&(i=t.b,r=t.g,t=t.r),null==r&&e.is(t,Z)){var n=e.getRGB(t);t=n.r,r=n.g,i=n.b}return(t>1||r>1||i>1)&&(t/=255,r/=255,i/=255),[t,r,i]},qt=function(t,r,i,n){t*=255,r*=255,i*=255;var a={r:t,g:r,b:i,hex:e.rgb(t,r,i),toString:jt};return e.is(n,"finite")&&(a.opacity=n),a};e.color=function(t){var r;return e.is(t,"object")&&"h"in t&&"s"in t&&"b"in t?(r=e.hsb2rgb(t),t.r=r.r,t.g=r.g,t.b=r.b,t.hex=r.hex):e.is(t,"object")&&"h"in t&&"s"in t&&"l"in t?(r=e.hsl2rgb(t),t.r=r.r,t.g=r.g,t.b=r.b,t.hex=r.hex):(e.is(t,"string")&&(t=e.getRGB(t)),e.is(t,"object")&&"r"in t&&"g"in t&&"b"in t?(r=e.rgb2hsl(t),t.h=r.h,t.s=r.s,t.l=r.l,r=e.rgb2hsb(t),t.v=r.b):(t={hex:"none"},t.r=t.g=t.b=t.h=t.s=t.v=t.l=-1)),t.toString=jt,t},e.hsb2rgb=function(t,e,r,i){this.is(t,"object")&&"h"in t&&"s"in t&&"b"in t&&(r=t.b,e=t.s,i=t.o,t=t.h),t*=360;var n,a,s,o,l;return t=t%360/60,l=r*e,o=l*(1-H(t%2-1)),n=a=s=r-l,t=~~t,n+=[l,o,0,0,o,l][t],a+=[o,l,l,o,0,0][t],s+=[0,0,o,l,l,o][t],qt(n,a,s,i)},e.hsl2rgb=function(t,e,r,i){this.is(t,"object")&&"h"in t&&"s"in t&&"l"in t&&(r=t.l,e=t.s,t=t.h),(t>1||e>1||r>1)&&(t/=360,e/=100,r/=100),t*=360;var n,a,s,o,l;return t=t%360/60,l=2*e*(r<.5?r:1-r),o=l*(1-H(t%2-1)),n=a=s=r-l/2,t=~~t,n+=[l,o,0,0,o,l][t],a+=[o,l,l,o,0,0][t],s+=[0,0,o,l,l,o][t],qt(n,a,s,i)},e.rgb2hsb=function(t,e,r){r=It(t,e,r),t=r[0],e=r[1],r=r[2];var i,n,a,s;return a=W(t,e,r),s=a-G(t,e,r),i=0==s?null:a==t?(e-r)/s:a==e?(r-t)/s+2:(t-e)/s+4,i=(i+360)%6*60/360,n=0==s?0:s/a,{h:i,s:n,b:a,toString:Ft}},e.rgb2hsl=function(t,e,r){r=It(t,e,r),t=r[0],e=r[1],r=r[2];var i,n,a,s,o,l;return s=W(t,e,r),o=G(t,e,r),l=s-o,i=0==l?null:s==t?(e-r)/l:s==e?(r-t)/l+2:(t-e)/l+4,i=(i+360)%6*60/360,a=(s+o)/2,n=0==l?0:a<.5?l/(2*a):l/(2-2*a),{h:i,s:n,l:a,toString:Rt}},e._path2string=function(){return this.join(",").replace(xt,"$1")};var Dt=e._preload=function(t,e){var r=T.doc.createElement("img");r.style.cssText="position:absolute;left:-9999em;top:-9999em",r.onload=function(){e.call(this),this.onload=null,T.doc.body.removeChild(this)},r.onerror=function(){T.doc.body.removeChild(this)},T.doc.body.appendChild(r),r.src=t};e.getRGB=n(function(t){if(!t||(t=I(t)).indexOf("-")+1)return{r:-1,g:-1,b:-1,hex:"none",error:1,toString:a};if("none"==t)return{r:-1,g:-1,b:-1,hex:"none",toString:a};!(vt[A](t.toLowerCase().substring(0,2))||"#"==t.charAt())&&(t=Pt(t));var r,i,n,s,o,l,h,u=t.match(nt);return u?(u[2]&&(s=ut(u[2].substring(5),16),n=ut(u[2].substring(3,5),16),i=ut(u[2].substring(1,3),16)),u[3]&&(s=ut((l=u[3].charAt(3))+l,16),n=ut((l=u[3].charAt(2))+l,16),i=ut((l=u[3].charAt(1))+l,16)),u[4]&&(h=u[4][q](gt),i=ht(h[0]),"%"==h[0].slice(-1)&&(i*=2.55),n=ht(h[1]),"%"==h[1].slice(-1)&&(n*=2.55),s=ht(h[2]),"%"==h[2].slice(-1)&&(s*=2.55),"rgba"==u[1].toLowerCase().slice(0,4)&&(o=ht(h[3])),h[3]&&"%"==h[3].slice(-1)&&(o/=100)),u[5]?(h=u[5][q](gt),i=ht(h[0]),"%"==h[0].slice(-1)&&(i*=2.55),n=ht(h[1]),"%"==h[1].slice(-1)&&(n*=2.55),s=ht(h[2]),"%"==h[2].slice(-1)&&(s*=2.55),("deg"==h[0].slice(-3)||"°"==h[0].slice(-1))&&(i/=360),"hsba"==u[1].toLowerCase().slice(0,4)&&(o=ht(h[3])),h[3]&&"%"==h[3].slice(-1)&&(o/=100),e.hsb2rgb(i,n,s,o)):u[6]?(h=u[6][q](gt),i=ht(h[0]),"%"==h[0].slice(-1)&&(i*=2.55),n=ht(h[1]),"%"==h[1].slice(-1)&&(n*=2.55),s=ht(h[2]),"%"==h[2].slice(-1)&&(s*=2.55),("deg"==h[0].slice(-3)||"°"==h[0].slice(-1))&&(i/=360),"hsla"==u[1].toLowerCase().slice(0,4)&&(o=ht(h[3])),h[3]&&"%"==h[3].slice(-1)&&(o/=100),e.hsl2rgb(i,n,s,o)):(u={r:i,g:n,b:s,toString:a},u.hex="#"+(16777216|s|n<<8|i<<16).toString(16).slice(1),e.is(o,"finite")&&(u.opacity=o),u)):{r:-1,g:-1,b:-1,hex:"none",error:1,toString:a}},e),e.hsb=n(function(t,r,i){return e.hsb2rgb(t,r,i).hex}),e.hsl=n(function(t,r,i){return e.hsl2rgb(t,r,i).hex}),e.rgb=n(function(t,e,r){function i(t){return t+.5|0}return"#"+(16777216|i(r)|i(e)<<8|i(t)<<16).toString(16).slice(1)}),e.getColor=function(t){var e=this.getColor.start=this.getColor.start||{h:0,s:1,b:t||.75},r=this.hsb2rgb(e.h,e.s,e.b);return e.h+=.075,e.h>1&&(e.h=0,e.s-=.2,e.s<=0&&(this.getColor.start={h:0,s:1,b:e.b})),r.hex},e.getColor.reset=function(){delete this.start},e.parsePathString=function(t){if(!t)return null;var r=Vt(t);if(r.arr)return Yt(r.arr);var i={a:7,c:6,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,z:0},n=[];return e.is(t,Q)&&e.is(t[0],Q)&&(n=Yt(t)),n.length||I(t).replace(yt,function(t,e,r){var a=[],s=e.toLowerCase();if(r.replace(bt,function(t,e){e&&a.push(+e)}),"m"==s&&a.length>2&&(n.push([e][P](a.splice(0,2))),s="l",e="m"==e?"l":"L"),"r"==s)n.push([e][P](a));else for(;a.length>=i[s]&&(n.push([e][P](a.splice(0,i[s]))),i[s]););}),n.toString=e._path2string,r.arr=Yt(n),n},e.parseTransformString=n(function(t){if(!t)return null;var r={r:3,s:4,t:2,m:6},i=[];return e.is(t,Q)&&e.is(t[0],Q)&&(i=Yt(t)),i.length||I(t).replace(mt,function(t,e,r){var n=[],a=O.call(e);r.replace(bt,function(t,e){e&&n.push(+e)}),i.push([e][P](n))}),i.toString=e._path2string,i});var Vt=function(t){var e=Vt.ps=Vt.ps||{};return e[t]?e[t].sleep=100:e[t]={sleep:100},setTimeout(function(){for(var r in e)e[A](r)&&r!=t&&(e[r].sleep--,!e[r].sleep&&delete e[r])}),e[t]};e.findDotsAtSegment=function(t,e,r,i,n,a,s,o,l){var h=1-l,u=X(h,3),c=X(h,2),f=l*l,p=f*l,d=u*t+3*c*l*r+3*h*l*l*n+p*s,g=u*e+3*c*l*i+3*h*l*l*a+p*o,v=t+2*l*(r-t)+f*(n-2*r+t),x=e+2*l*(i-e)+f*(a-2*i+e),y=r+2*l*(n-r)+f*(s-2*n+r),m=i+2*l*(a-i)+f*(o-2*a+i),b=h*t+l*r,_=h*e+l*i,w=h*n+l*s,k=h*a+l*o,B=90-180*Y.atan2(v-y,x-m)/U;return(v>y||x<m)&&(B+=180),{x:d,y:g,m:{x:v,y:x},n:{x:y,y:m},start:{x:b,y:_},end:{x:w,y:k},alpha:B}},e.bezierBBox=function(t,r,i,n,a,s,o,l){e.is(t,"array")||(t=[t,r,i,n,a,s,o,l]);var h=Zt.apply(null,t);return{x:h.min.x,y:h.min.y,x2:h.max.x,y2:h.max.y,width:h.max.x-h.min.x,height:h.max.y-h.min.y}},e.isPointInsideBBox=function(t,e,r){return e>=t.x&&e<=t.x2&&r>=t.y&&r<=t.y2},e.isBBoxIntersect=function(t,r){var i=e.isPointInsideBBox;return i(r,t.x,t.y)||i(r,t.x2,t.y)||i(r,t.x,t.y2)||i(r,t.x2,t.y2)||i(t,r.x,r.y)||i(t,r.x2,r.y)||i(t,r.x,r.y2)||i(t,r.x2,r.y2)||(t.x<r.x2&&t.x>r.x||r.x<t.x2&&r.x>t.x)&&(t.y<r.y2&&t.y>r.y||r.y<t.y2&&r.y>t.y)},e.pathIntersection=function(t,e){return d(t,e)},e.pathIntersectionNumber=function(t,e){return d(t,e,1)},e.isPointInsidePath=function(t,r,i){var n=e.pathBBox(t);return e.isPointInsideBBox(n,r,i)&&d(t,[["M",r,i],["H",n.x2+10]],1)%2==1},e._removedFactory=function(e){return function(){t("raphael.log",null,"Raphaël: you are calling to method “"+e+"” of removed object",e)}};var Ot=e.pathBBox=function(t){var e=Vt(t);if(e.bbox)return r(e.bbox);if(!t)return{x:0,y:0,width:0,height:0,x2:0,y2:0};t=Qt(t);for(var i=0,n=0,a=[],s=[],o,l=0,h=t.length;l<h;l++)if(o=t[l],"M"==o[0])i=o[1],n=o[2],a.push(i),s.push(n);else{var u=Zt(i,n,o[1],o[2],o[3],o[4],o[5],o[6]);a=a[P](u.min.x,u.max.x),s=s[P](u.min.y,u.max.y),i=o[5],n=o[6]}var c=G[z](0,a),f=G[z](0,s),p=W[z](0,a),d=W[z](0,s),g=p-c,v=d-f,x={x:c,y:f,x2:p,y2:d,width:g,height:v,cx:c+g/2,cy:f+v/2};return e.bbox=r(x),x},Yt=function(t){var i=r(t);return i.toString=e._path2string,i},Wt=e._pathToRelative=function(t){var r=Vt(t);if(r.rel)return Yt(r.rel);e.is(t,Q)&&e.is(t&&t[0],Q)||(t=e.parsePathString(t));var i=[],n=0,a=0,s=0,o=0,l=0;"M"==t[0][0]&&(n=t[0][1],a=t[0][2],s=n,o=a,l++,i.push(["M",n,a]));for(var h=l,u=t.length;h<u;h++){var c=i[h]=[],f=t[h];if(f[0]!=O.call(f[0]))switch(c[0]=O.call(f[0]),c[0]){case"a":c[1]=f[1],c[2]=f[2],c[3]=f[3],c[4]=f[4],c[5]=f[5],c[6]=+(f[6]-n).toFixed(3),c[7]=+(f[7]-a).toFixed(3);break;case"v":c[1]=+(f[1]-a).toFixed(3);break;case"m":s=f[1],o=f[2];default:for(var p=1,d=f.length;p<d;p++)c[p]=+(f[p]-(p%2?n:a)).toFixed(3)}else{c=i[h]=[],"m"==f[0]&&(s=f[1]+n,o=f[2]+a);for(var g=0,v=f.length;g<v;g++)i[h][g]=f[g]}var x=i[h].length;switch(i[h][0]){case"z":n=s,a=o;break;case"h":n+=+i[h][x-1];break;case"v":a+=+i[h][x-1];break;default:n+=+i[h][x-2],a+=+i[h][x-1]}}return i.toString=e._path2string,r.rel=Yt(i),i},Gt=e._pathToAbsolute=function(t){var r=Vt(t);if(r.abs)return Yt(r.abs);if(e.is(t,Q)&&e.is(t&&t[0],Q)||(t=e.parsePathString(t)),!t||!t.length)return[["M",0,0]];var i=[],n=0,a=0,o=0,l=0,h=0;"M"==t[0][0]&&(n=+t[0][1],a=+t[0][2],o=n,l=a,h++,i[0]=["M",n,a]);for(var u=3==t.length&&"M"==t[0][0]&&"R"==t[1][0].toUpperCase()&&"Z"==t[2][0].toUpperCase(),c,f,p=h,d=t.length;p<d;p++){if(i.push(c=[]),f=t[p],f[0]!=ct.call(f[0]))switch(c[0]=ct.call(f[0]),c[0]){case"A":c[1]=f[1],c[2]=f[2],c[3]=f[3],c[4]=f[4],c[5]=f[5],c[6]=+(f[6]+n),c[7]=+(f[7]+a);break;case"V":c[1]=+f[1]+a;break;case"H":c[1]=+f[1]+n;break;case"R":for(var g=[n,a][P](f.slice(1)),v=2,x=g.length;v<x;v++)g[v]=+g[v]+n,g[++v]=+g[v]+a;i.pop(),i=i[P](s(g,u));break;case"M":o=+f[1]+n,l=+f[2]+a;default:for(v=1,x=f.length;v<x;v++)c[v]=+f[v]+(v%2?n:a)}else if("R"==f[0])g=[n,a][P](f.slice(1)),i.pop(),i=i[P](s(g,u)),c=["R"][P](f.slice(-2));else for(var y=0,m=f.length;y<m;y++)c[y]=f[y];switch(c[0]){case"Z":n=o,a=l;break;case"H":n=c[1];break;case"V":a=c[1];break;case"M":o=c[c.length-2],l=c[c.length-1];default:n=c[c.length-2],a=c[c.length-1]}}return i.toString=e._path2string,r.abs=Yt(i),i},Ht=function(t,e,r,i){return[t,e,r,i,r,i]},Xt=function(t,e,r,i,n,a){var s=1/3,o=2/3;return[s*t+o*r,s*e+o*i,s*n+o*r,s*a+o*i,n,a]},Ut=function(t,e,r,i,a,s,o,l,h,u){var c=120*U/180,f=U/180*(+a||0),p=[],d,g=n(function(t,e,r){var i=t*Y.cos(r)-e*Y.sin(r),n=t*Y.sin(r)+e*Y.cos(r);return{x:i,y:n}});if(u)S=u[0],A=u[1],B=u[2],C=u[3];else{d=g(t,e,-f),t=d.x,e=d.y,d=g(l,h,-f),l=d.x,h=d.y;var v=Y.cos(U/180*a),x=Y.sin(U/180*a),y=(t-l)/2,m=(e-h)/2,b=y*y/(r*r)+m*m/(i*i);b>1&&(b=Y.sqrt(b),r=b*r,i=b*i);var _=r*r,w=i*i,k=(s==o?-1:1)*Y.sqrt(H((_*w-_*m*m-w*y*y)/(_*m*m+w*y*y))),B=k*r*m/i+(t+l)/2,C=k*-i*y/r+(e+h)/2,S=Y.asin(((e-C)/i).toFixed(9)),A=Y.asin(((h-C)/i).toFixed(9));S=t<B?U-S:S,A=l<B?U-A:A,S<0&&(S=2*U+S),A<0&&(A=2*U+A),o&&S>A&&(S-=2*U),!o&&A>S&&(A-=2*U)}var T=A-S;if(H(T)>c){var E=A,M=l,N=h;A=S+c*(o&&A>S?1:-1),l=B+r*Y.cos(A),h=C+i*Y.sin(A),p=Ut(l,h,r,i,a,0,o,M,N,[A,E,B,C])}T=A-S;var L=Y.cos(S),z=Y.sin(S),F=Y.cos(A),R=Y.sin(A),j=Y.tan(T/4),I=4/3*r*j,D=4/3*i*j,V=[t,e],O=[t+I*z,e-D*L],W=[l+I*R,h-D*F],G=[l,h];if(O[0]=2*V[0]-O[0],O[1]=2*V[1]-O[1],u)return[O,W,G][P](p);p=[O,W,G][P](p).join()[q](",");for(var X=[],$=0,Z=p.length;$<Z;$++)X[$]=$%2?g(p[$-1],p[$],f).y:g(p[$],p[$+1],f).x;return X},$t=function(t,e,r,i,n,a,s,o,l){var h=1-l;return{x:X(h,3)*t+3*X(h,2)*l*r+3*h*l*l*n+X(l,3)*s,y:X(h,3)*e+3*X(h,2)*l*i+3*h*l*l*a+X(l,3)*o}},Zt=n(function(t,e,r,i,n,a,s,o){var l=n-2*r+t-(s-2*n+r),h=2*(r-t)-2*(n-r),u=t-r,c=(-h+Y.sqrt(h*h-4*l*u))/2/l,f=(-h-Y.sqrt(h*h-4*l*u))/2/l,p=[e,o],d=[t,s],g;return H(c)>"1e12"&&(c=.5),H(f)>"1e12"&&(f=.5),c>0&&c<1&&(g=$t(t,e,r,i,n,a,s,o,c),d.push(g.x),p.push(g.y)),f>0&&f<1&&(g=$t(t,e,r,i,n,a,s,o,f),d.push(g.x),p.push(g.y)),l=a-2*i+e-(o-2*a+i),h=2*(i-e)-2*(a-i),u=e-i,c=(-h+Y.sqrt(h*h-4*l*u))/2/l,f=(-h-Y.sqrt(h*h-4*l*u))/2/l,H(c)>"1e12"&&(c=.5),H(f)>"1e12"&&(f=.5),c>0&&c<1&&(g=$t(t,e,r,i,n,a,s,o,c),d.push(g.x),p.push(g.y)),f>0&&f<1&&(g=$t(t,e,r,i,n,a,s,o,f),d.push(g.x),p.push(g.y)),{min:{x:G[z](0,d),y:G[z](0,p)},max:{x:W[z](0,d),y:W[z](0,p)}}}),Qt=e._path2curve=n(function(t,e){var r=!e&&Vt(t);if(!e&&r.curve)return Yt(r.curve);for(var i=Gt(t),n=e&&Gt(e),a={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},s={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},o=(function(t,e,r){var i,n,a={T:1,Q:1};if(!t)return["C",e.x,e.y,e.x,e.y,e.x,e.y];switch(!(t[0]in a)&&(e.qx=e.qy=null),t[0]){case"M":e.X=t[1],e.Y=t[2];break;case"A":t=["C"][P](Ut[z](0,[e.x,e.y][P](t.slice(1))));break;case"S":"C"==r||"S"==r?(i=2*e.x-e.bx,n=2*e.y-e.by):(i=e.x,n=e.y),t=["C",i,n][P](t.slice(1));break;case"T":"Q"==r||"T"==r?(e.qx=2*e.x-e.qx,e.qy=2*e.y-e.qy):(e.qx=e.x,e.qy=e.y),t=["C"][P](Xt(e.x,e.y,e.qx,e.qy,t[1],t[2]));break;case"Q":e.qx=t[1],e.qy=t[2],t=["C"][P](Xt(e.x,e.y,t[1],t[2],t[3],t[4]));break;case"L":t=["C"][P](Ht(e.x,e.y,t[1],t[2]));break;case"H":t=["C"][P](Ht(e.x,e.y,t[1],e.y));break;case"V":t=["C"][P](Ht(e.x,e.y,e.x,t[1]));break;case"Z":t=["C"][P](Ht(e.x,e.y,e.X,e.Y))}return t}),l=function(t,e){if(t[e].length>7){t[e].shift();for(var r=t[e];r.length;)u[e]="A",n&&(c[e]="A"),t.splice(e++,0,["C"][P](r.splice(0,6)));t.splice(e,1),g=W(i.length,n&&n.length||0)}},h=function(t,e,r,a,s){t&&e&&"M"==t[s][0]&&"M"!=e[s][0]&&(e.splice(s,0,["M",a.x,a.y]),r.bx=0,r.by=0,r.x=t[s][1],r.y=t[s][2],g=W(i.length,n&&n.length||0))},u=[],c=[],f="",p="",d=0,g=W(i.length,n&&n.length||0);d<g;d++){i[d]&&(f=i[d][0]),"C"!=f&&(u[d]=f,d&&(p=u[d-1])),i[d]=o(i[d],a,p),"A"!=u[d]&&"C"==f&&(u[d]="C"),l(i,d),n&&(n[d]&&(f=n[d][0]),"C"!=f&&(c[d]=f,d&&(p=c[d-1])),n[d]=o(n[d],s,p),"A"!=c[d]&&"C"==f&&(c[d]="C"),l(n,d)),h(i,n,a,s,d),h(n,i,s,a,d);var v=i[d],x=n&&n[d],y=v.length,m=n&&x.length;a.x=v[y-2],a.y=v[y-1],a.bx=ht(v[y-4])||a.x,a.by=ht(v[y-3])||a.y,s.bx=n&&(ht(x[m-4])||s.x),s.by=n&&(ht(x[m-3])||s.y),s.x=n&&x[m-2],s.y=n&&x[m-1]}return n||(r.curve=Yt(i)),n?[i,n]:i},null,Yt),Jt=e._parseDots=n(function(t){for(var r=[],i=0,n=t.length;i<n;i++){var a={},s=t[i].match(/^([^:]*):?([\d\.]*)/);if(a.color=e.getRGB(s[1]),a.color.error)return null;a.opacity=a.color.opacity,a.color=a.color.hex,s[2]&&(a.offset=s[2]+"%"),r.push(a)}for(i=1,n=r.length-1;i<n;i++)if(!r[i].offset){for(var o=ht(r[i-1].offset||0),l=0,h=i+1;h<n;h++)if(r[h].offset){l=r[h].offset;break}l||(l=100,h=n),l=ht(l);for(var u=(l-o)/(h-i+1);i<h;i++)o+=u,r[i].offset=o+"%"}return r}),Kt=e._tear=function(t,e){t==e.top&&(e.top=t.prev),t==e.bottom&&(e.bottom=t.next),t.next&&(t.next.prev=t.prev),t.prev&&(t.prev.next=t.next)},te=e._tofront=function(t,e){e.top!==t&&(Kt(t,e),t.next=null,t.prev=e.top,e.top.next=t,e.top=t)},ee=e._toback=function(t,e){e.bottom!==t&&(Kt(t,e),t.next=e.bottom,t.prev=null,e.bottom.prev=t,e.bottom=t)},re=e._insertafter=function(t,e,r){Kt(t,r),e==r.top&&(r.top=t),e.next&&(e.next.prev=t),t.next=e.next,t.prev=e,e.next=t},ie=e._insertbefore=function(t,e,r){Kt(t,r),e==r.bottom&&(r.bottom=t),e.prev&&(e.prev.next=t),t.prev=e.prev,e.prev=t,t.next=e},ne=e.toMatrix=function(t,e){var r=Ot(t),i={_:{transform:R},getBBox:function(){return r}};return se(i,e),i.matrix},ae=e.transformPath=function(t,e){return Mt(t,ne(t,e))},se=e._extractTransform=function(t,r){if(null==r)return t._.transform;r=I(r).replace(/\.{3}|\u2026/g,t._.transform||R);var i=e.parseTransformString(r),n=0,a=0,s=0,o=1,l=1,h=t._,u=new g;if(h.transform=i||[],i)for(var c=0,f=i.length;c<f;c++){var p=i[c],d=p.length,v=I(p[0]).toLowerCase(),x=p[0]!=v,y=x?u.invert():0,m,b,_,w,k;"t"==v&&3==d?x?(m=y.x(0,0),b=y.y(0,0),_=y.x(p[1],p[2]),w=y.y(p[1],p[2]),u.translate(_-m,w-b)):u.translate(p[1],p[2]):"r"==v?2==d?(k=k||t.getBBox(1),u.rotate(p[1],k.x+k.width/2,k.y+k.height/2),n+=p[1]):4==d&&(x?(_=y.x(p[2],p[3]),w=y.y(p[2],p[3]),u.rotate(p[1],_,w)):u.rotate(p[1],p[2],p[3]),n+=p[1]):"s"==v?2==d||3==d?(k=k||t.getBBox(1),u.scale(p[1],p[d-1],k.x+k.width/2,k.y+k.height/2),o*=p[1],l*=p[d-1]):5==d&&(x?(_=y.x(p[3],p[4]),w=y.y(p[3],p[4]),u.scale(p[1],p[2],_,w)):u.scale(p[1],p[2],p[3],p[4]),o*=p[1],l*=p[2]):"m"==v&&7==d&&u.add(p[1],p[2],p[3],p[4],p[5],p[6]),h.dirtyT=1,t.matrix=u}t.matrix=u,h.sx=o,h.sy=l,h.deg=n,h.dx=a=u.e,h.dy=s=u.f,1==o&&1==l&&!n&&h.bbox?(h.bbox.x+=+a,h.bbox.y+=+s):h.dirtyT=1},oe=function(t){var e=t[0];switch(e.toLowerCase()){case"t":return[e,0,0];case"m":return[e,1,0,0,1,0,0];case"r":return 4==t.length?[e,0,t[2],t[3]]:[e,0];case"s":return 5==t.length?[e,1,1,t[3],t[4]]:3==t.length?[e,1,1]:[e,1]}},le=e._equaliseTransform=function(t,r){r=I(r).replace(/\.{3}|\u2026/g,t),t=e.parseTransformString(t)||[],r=e.parseTransformString(r)||[];for(var i=W(t.length,r.length),n=[],a=[],s=0,o,l,h,u;s<i;s++){if(h=t[s]||oe(r[s]),u=r[s]||oe(h),h[0]!=u[0]||"r"==h[0].toLowerCase()&&(h[2]!=u[2]||h[3]!=u[3])||"s"==h[0].toLowerCase()&&(h[3]!=u[3]||h[4]!=u[4]))return;for(n[s]=[],a[s]=[],o=0,l=W(h.length,u.length);o<l;o++)o in h&&(n[s][o]=h[o]),o in u&&(a[s][o]=u[o])}return{from:n,to:a}};e._getContainer=function(t,r,i,n){var a;if(a=null!=n||e.is(t,"object")?t:T.doc.getElementById(t),null!=a)return a.tagName?null==r?{container:a,width:a.style.pixelWidth||a.offsetWidth,height:a.style.pixelHeight||a.offsetHeight}:{container:a,width:r,height:i}:{container:1,x:t,y:r,width:i,height:n}},e.pathToRelative=Wt,e._engine={},e.path2curve=Qt,e.matrix=function(t,e,r,i,n,a){return new g(t,e,r,i,n,a)},function(t){function r(t){return t[0]*t[0]+t[1]*t[1]}function i(t){var e=Y.sqrt(r(t));t[0]&&(t[0]/=e),t[1]&&(t[1]/=e)}t.add=function(t,e,r,i,n,a){var s=[[],[],[]],o=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1]],l=[[t,r,n],[e,i,a],[0,0,1]],h,u,c,f;for(t&&t instanceof g&&(l=[[t.a,t.c,t.e],[t.b,t.d,t.f],[0,0,1]]),h=0;h<3;h++)for(u=0;u<3;u++){for(f=0,c=0;c<3;c++)f+=o[h][c]*l[c][u];s[h][u]=f}this.a=s[0][0],this.b=s[1][0],this.c=s[0][1],this.d=s[1][1],this.e=s[0][2],this.f=s[1][2]},t.invert=function(){var t=this,e=t.a*t.d-t.b*t.c;return new g(t.d/e,-t.b/e,-t.c/e,t.a/e,(t.c*t.f-t.d*t.e)/e,(t.b*t.e-t.a*t.f)/e)},t.clone=function(){return new g(this.a,this.b,this.c,this.d,this.e,this.f)},t.translate=function(t,e){
this.add(1,0,0,1,t,e)},t.scale=function(t,e,r,i){null==e&&(e=t),(r||i)&&this.add(1,0,0,1,r,i),this.add(t,0,0,e,0,0),(r||i)&&this.add(1,0,0,1,-r,-i)},t.rotate=function(t,r,i){t=e.rad(t),r=r||0,i=i||0;var n=+Y.cos(t).toFixed(9),a=+Y.sin(t).toFixed(9);this.add(n,a,-a,n,r,i),this.add(1,0,0,1,-r,-i)},t.x=function(t,e){return t*this.a+e*this.c+this.e},t.y=function(t,e){return t*this.b+e*this.d+this.f},t.get=function(t){return+this[I.fromCharCode(97+t)].toFixed(4)},t.toString=function(){return e.svg?"matrix("+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+")":[this.get(0),this.get(2),this.get(1),this.get(3),0,0].join()},t.toFilter=function(){return"progid:DXImageTransform.Microsoft.Matrix(M11="+this.get(0)+", M12="+this.get(2)+", M21="+this.get(1)+", M22="+this.get(3)+", Dx="+this.get(4)+", Dy="+this.get(5)+", sizingmethod='auto expand')"},t.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]},t.split=function(){var t={};t.dx=this.e,t.dy=this.f;var n=[[this.a,this.c],[this.b,this.d]];t.scalex=Y.sqrt(r(n[0])),i(n[0]),t.shear=n[0][0]*n[1][0]+n[0][1]*n[1][1],n[1]=[n[1][0]-n[0][0]*t.shear,n[1][1]-n[0][1]*t.shear],t.scaley=Y.sqrt(r(n[1])),i(n[1]),t.shear/=t.scaley;var a=-n[0][1],s=n[1][1];return s<0?(t.rotate=e.deg(Y.acos(s)),a<0&&(t.rotate=360-t.rotate)):t.rotate=e.deg(Y.asin(a)),t.isSimple=!(+t.shear.toFixed(9)||t.scalex.toFixed(9)!=t.scaley.toFixed(9)&&t.rotate),t.isSuperSimple=!+t.shear.toFixed(9)&&t.scalex.toFixed(9)==t.scaley.toFixed(9)&&!t.rotate,t.noRotation=!+t.shear.toFixed(9)&&!t.rotate,t},t.toTransformString=function(t){var e=t||this[q]();return e.isSimple?(e.scalex=+e.scalex.toFixed(4),e.scaley=+e.scaley.toFixed(4),e.rotate=+e.rotate.toFixed(4),(e.dx||e.dy?"t"+[e.dx,e.dy]:R)+(1!=e.scalex||1!=e.scaley?"s"+[e.scalex,e.scaley,0,0]:R)+(e.rotate?"r"+[e.rotate,0,0]:R)):"m"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)]}}(g.prototype);for(var he=function(){this.returnValue=!1},ue=function(){return this.originalEvent.preventDefault()},ce=function(){this.cancelBubble=!0},fe=function(){return this.originalEvent.stopPropagation()},pe=function(t){var e=T.doc.documentElement.scrollTop||T.doc.body.scrollTop,r=T.doc.documentElement.scrollLeft||T.doc.body.scrollLeft;return{x:t.clientX+r,y:t.clientY+e}},de=function(){return T.doc.addEventListener?function(t,e,r,i){var n=function(t){var e=pe(t);return r.call(i,t,e.x,e.y)};if(t.addEventListener(e,n,!1),F&&V[e]){var a=function(e){for(var n=pe(e),a=e,s=0,o=e.targetTouches&&e.targetTouches.length;s<o;s++)if(e.targetTouches[s].target==t){e=e.targetTouches[s],e.originalEvent=a,e.preventDefault=ue,e.stopPropagation=fe;break}return r.call(i,e,n.x,n.y)};t.addEventListener(V[e],a,!1)}return function(){return t.removeEventListener(e,n,!1),F&&V[e]&&t.removeEventListener(V[e],a,!1),!0}}:T.doc.attachEvent?function(t,e,r,i){var n=function(t){t=t||T.win.event;var e=T.doc.documentElement.scrollTop||T.doc.body.scrollTop,n=T.doc.documentElement.scrollLeft||T.doc.body.scrollLeft,a=t.clientX+n,s=t.clientY+e;return t.preventDefault=t.preventDefault||he,t.stopPropagation=t.stopPropagation||ce,r.call(i,t,a,s)};t.attachEvent("on"+e,n);var a=function(){return t.detachEvent("on"+e,n),!0};return a}:void 0}(),ge=[],ve=function(e){for(var r=e.clientX,i=e.clientY,n=T.doc.documentElement.scrollTop||T.doc.body.scrollTop,a=T.doc.documentElement.scrollLeft||T.doc.body.scrollLeft,s,o=ge.length;o--;){if(s=ge[o],F&&e.touches){for(var l=e.touches.length,h;l--;)if(h=e.touches[l],h.identifier==s.el._drag.id){r=h.clientX,i=h.clientY,(e.originalEvent?e.originalEvent:e).preventDefault();break}}else e.preventDefault();var u=s.el.node,c,f=u.nextSibling,p=u.parentNode,d=u.style.display;T.win.opera&&p.removeChild(u),u.style.display="none",c=s.el.paper.getElementByPoint(r,i),u.style.display=d,T.win.opera&&(f?p.insertBefore(u,f):p.appendChild(u)),c&&t("raphael.drag.over."+s.el.id,s.el,c),r+=a,i+=n,t("raphael.drag.move."+s.el.id,s.move_scope||s.el,r-s.el._drag.x,i-s.el._drag.y,r,i,e)}},xe=function(r){e.unmousemove(ve).unmouseup(xe);for(var i=ge.length,n;i--;)n=ge[i],n.el._drag={},t("raphael.drag.end."+n.el.id,n.end_scope||n.start_scope||n.move_scope||n.el,r);ge=[]},ye=e.el={},me=D.length;me--;)!function(t){e[t]=ye[t]=function(r,i){return e.is(r,"function")&&(this.events=this.events||[],this.events.push({name:t,f:r,unbind:de(this.shape||this.node||T.doc,t,r,i||this)})),this},e["un"+t]=ye["un"+t]=function(r){for(var i=this.events||[],n=i.length;n--;)i[n].name!=t||!e.is(r,"undefined")&&i[n].f!=r||(i[n].unbind(),i.splice(n,1),!i.length&&delete this.events);return this}}(D[me]);ye.data=function(r,i){var n=wt[this.id]=wt[this.id]||{};if(0==arguments.length)return n;if(1==arguments.length){if(e.is(r,"object")){for(var a in r)r[A](a)&&this.data(a,r[a]);return this}return t("raphael.data.get."+this.id,this,n[r],r),n[r]}return n[r]=i,t("raphael.data.set."+this.id,this,i,r),this},ye.removeData=function(t){return null==t?wt[this.id]={}:wt[this.id]&&delete wt[this.id][t],this},ye.getData=function(){return r(wt[this.id]||{})},ye.hover=function(t,e,r,i){return this.mouseover(t,r).mouseout(e,i||r)},ye.unhover=function(t,e){return this.unmouseover(t).unmouseout(e)};var be=[];ye.drag=function(r,i,n,a,s,o){function l(l){(l.originalEvent||l).preventDefault();var h=l.clientX,u=l.clientY,c=T.doc.documentElement.scrollTop||T.doc.body.scrollTop,f=T.doc.documentElement.scrollLeft||T.doc.body.scrollLeft;if(this._drag.id=l.identifier,F&&l.touches)for(var p=l.touches.length,d;p--;)if(d=l.touches[p],this._drag.id=d.identifier,d.identifier==this._drag.id){h=d.clientX,u=d.clientY;break}this._drag.x=h+f,this._drag.y=u+c,!ge.length&&e.mousemove(ve).mouseup(xe),ge.push({el:this,move_scope:a,start_scope:s,end_scope:o}),i&&t.on("raphael.drag.start."+this.id,i),r&&t.on("raphael.drag.move."+this.id,r),n&&t.on("raphael.drag.end."+this.id,n),t("raphael.drag.start."+this.id,s||a||this,l.clientX+f,l.clientY+c,l)}return this._drag={},be.push({el:this,start:l}),this.mousedown(l),this},ye.onDragOver=function(e){e?t.on("raphael.drag.over."+this.id,e):t.unbind("raphael.drag.over."+this.id)},ye.undrag=function(){for(var r=be.length;r--;)be[r].el==this&&(this.unmousedown(be[r].start),be.splice(r,1),t.unbind("raphael.drag.*."+this.id));!be.length&&e.unmousemove(ve).unmouseup(xe),ge=[]},N.circle=function(t,r,i){var n=e._engine.circle(this,t||0,r||0,i||0);return this.__set__&&this.__set__.push(n),n},N.rect=function(t,r,i,n,a){var s=e._engine.rect(this,t||0,r||0,i||0,n||0,a||0);return this.__set__&&this.__set__.push(s),s},N.ellipse=function(t,r,i,n){var a=e._engine.ellipse(this,t||0,r||0,i||0,n||0);return this.__set__&&this.__set__.push(a),a},N.path=function(t){t&&!e.is(t,Z)&&!e.is(t[0],Q)&&(t+=R);var r=e._engine.path(e.format[z](e,arguments),this);return this.__set__&&this.__set__.push(r),r},N.image=function(t,r,i,n,a){var s=e._engine.image(this,t||"about:blank",r||0,i||0,n||0,a||0);return this.__set__&&this.__set__.push(s),s},N.text=function(t,r,i){var n=e._engine.text(this,t||0,r||0,I(i));return this.__set__&&this.__set__.push(n),n},N.set=function(t){!e.is(t,"array")&&(t=Array.prototype.splice.call(arguments,0,arguments.length));var r=new ze(t);return this.__set__&&this.__set__.push(r),r.paper=this,r.type="set",r},N.setStart=function(t){this.__set__=t||this.set()},N.setFinish=function(t){var e=this.__set__;return delete this.__set__,e},N.getSize=function(){var t=this.canvas.parentNode;return{width:t.offsetWidth,height:t.offsetHeight}},N.setSize=function(t,r){return e._engine.setSize.call(this,t,r)},N.setViewBox=function(t,r,i,n,a){return e._engine.setViewBox.call(this,t,r,i,n,a)},N.top=N.bottom=null,N.raphael=e;var _e=function(t){var e=t.getBoundingClientRect(),r=t.ownerDocument,i=r.body,n=r.documentElement,a=n.clientTop||i.clientTop||0,s=n.clientLeft||i.clientLeft||0,o=e.top+(T.win.pageYOffset||n.scrollTop||i.scrollTop)-a,l=e.left+(T.win.pageXOffset||n.scrollLeft||i.scrollLeft)-s;return{y:o,x:l}};N.getElementByPoint=function(t,e){var r=this,i=r.canvas,n=T.doc.elementFromPoint(t,e);if(T.win.opera&&"svg"==n.tagName){var a=_e(i),s=i.createSVGRect();s.x=t-a.x,s.y=e-a.y,s.width=s.height=1;var o=i.getIntersectionList(s,null);o.length&&(n=o[o.length-1])}if(!n)return null;for(;n.parentNode&&n!=i.parentNode&&!n.raphael;)n=n.parentNode;return n==r.canvas.parentNode&&(n=i),n=n&&n.raphael?r.getById(n.raphaelid):null},N.getElementsByBBox=function(t){var r=this.set();return this.forEach(function(i){e.isBBoxIntersect(i.getBBox(),t)&&r.push(i)}),r},N.getById=function(t){for(var e=this.bottom;e;){if(e.id==t)return e;e=e.next}return null},N.forEach=function(t,e){for(var r=this.bottom;r;){if(t.call(e,r)===!1)return this;r=r.next}return this},N.getElementsByPoint=function(t,e){var r=this.set();return this.forEach(function(i){i.isPointInside(t,e)&&r.push(i)}),r},ye.isPointInside=function(t,r){var i=this.realPath=Et[this.type](this);return this.attr("transform")&&this.attr("transform").length&&(i=e.transformPath(i,this.attr("transform"))),e.isPointInsidePath(i,t,r)},ye.getBBox=function(t){if(this.removed)return{};var e=this._;return t?(!e.dirty&&e.bboxwt||(this.realPath=Et[this.type](this),e.bboxwt=Ot(this.realPath),e.bboxwt.toString=x,e.dirty=0),e.bboxwt):((e.dirty||e.dirtyT||!e.bbox)&&(!e.dirty&&this.realPath||(e.bboxwt=0,this.realPath=Et[this.type](this)),e.bbox=Ot(Mt(this.realPath,this.matrix)),e.bbox.toString=x,e.dirty=e.dirtyT=0),e.bbox)},ye.clone=function(){if(this.removed)return null;var t=this.paper[this.type]().attr(this.attr());return this.__set__&&this.__set__.push(t),t},ye.glow=function(t){if("text"==this.type)return null;t=t||{};var e={width:(t.width||10)+(+this.attr("stroke-width")||1),fill:t.fill||!1,opacity:null==t.opacity?.5:t.opacity,offsetx:t.offsetx||0,offsety:t.offsety||0,color:t.color||"#000"},r=e.width/2,i=this.paper,n=i.set(),a=this.realPath||Et[this.type](this);a=this.matrix?Mt(a,this.matrix):a;for(var s=1;s<r+1;s++)n.push(i.path(a).attr({stroke:e.color,fill:e.fill?e.color:"none","stroke-linejoin":"round","stroke-linecap":"round","stroke-width":+(e.width/r*s).toFixed(3),opacity:+(e.opacity/r).toFixed(3)}));return n.insertBefore(this).translate(e.offsetx,e.offsety)};var we={},ke=function(t,r,i,n,a,s,o,u,c){return null==c?l(t,r,i,n,a,s,o,u):e.findDotsAtSegment(t,r,i,n,a,s,o,u,h(t,r,i,n,a,s,o,u,c))},Be=function(t,r){return function(i,n,a){i=Qt(i);for(var s,o,l,h,u="",c={},f,p=0,d=0,g=i.length;d<g;d++){if(l=i[d],"M"==l[0])s=+l[1],o=+l[2];else{if(h=ke(s,o,l[1],l[2],l[3],l[4],l[5],l[6]),p+h>n){if(r&&!c.start){if(f=ke(s,o,l[1],l[2],l[3],l[4],l[5],l[6],n-p),u+=["C"+f.start.x,f.start.y,f.m.x,f.m.y,f.x,f.y],a)return u;c.start=u,u=["M"+f.x,f.y+"C"+f.n.x,f.n.y,f.end.x,f.end.y,l[5],l[6]].join(),p+=h,s=+l[5],o=+l[6];continue}if(!t&&!r)return f=ke(s,o,l[1],l[2],l[3],l[4],l[5],l[6],n-p),{x:f.x,y:f.y,alpha:f.alpha}}p+=h,s=+l[5],o=+l[6]}u+=l.shift()+l}return c.end=u,f=t?p:r?c:e.findDotsAtSegment(s,o,l[0],l[1],l[2],l[3],l[4],l[5],1),f.alpha&&(f={x:f.x,y:f.y,alpha:f.alpha}),f}},Ce=Be(1),Se=Be(),Ae=Be(0,1);e.getTotalLength=Ce,e.getPointAtLength=Se,e.getSubpath=function(t,e,r){if(this.getTotalLength(t)-r<1e-6)return Ae(t,e).end;var i=Ae(t,r,1);return e?Ae(i,e).end:i},ye.getTotalLength=function(){var t=this.getPath();if(t)return this.node.getTotalLength?this.node.getTotalLength():Ce(t)},ye.getPointAtLength=function(t){var e=this.getPath();if(e)return Se(e,t)},ye.getPath=function(){var t,r=e._getPath[this.type];if("text"!=this.type&&"set"!=this.type)return r&&(t=r(this)),t},ye.getSubpath=function(t,r){var i=this.getPath();if(i)return e.getSubpath(i,t,r)};var Te=e.easing_formulas={linear:function(t){return t},"<":function(t){return X(t,1.7)},">":function(t){return X(t,.48)},"<>":function(t){var e=.48-t/1.04,r=Y.sqrt(.1734+e*e),i=r-e,n=X(H(i),1/3)*(i<0?-1:1),a=-r-e,s=X(H(a),1/3)*(a<0?-1:1),o=n+s+.5;return 3*(1-o)*o*o+o*o*o},backIn:function(t){var e=1.70158;return t*t*((e+1)*t-e)},backOut:function(t){t-=1;var e=1.70158;return t*t*((e+1)*t+e)+1},elastic:function(t){return t==!!t?t:X(2,-10*t)*Y.sin((t-.075)*(2*U)/.3)+1},bounce:function(t){var e=7.5625,r=2.75,i;return t<1/r?i=e*t*t:t<2/r?(t-=1.5/r,i=e*t*t+.75):t<2.5/r?(t-=2.25/r,i=e*t*t+.9375):(t-=2.625/r,i=e*t*t+.984375),i}};Te.easeIn=Te["ease-in"]=Te["<"],Te.easeOut=Te["ease-out"]=Te[">"],Te.easeInOut=Te["ease-in-out"]=Te["<>"],Te["back-in"]=Te.backIn,Te["back-out"]=Te.backOut;var Ee=[],Me=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){setTimeout(t,16)},Ne=function(){for(var r=+new Date,i=0;i<Ee.length;i++){var n=Ee[i];if(!n.el.removed&&!n.paused){var a=r-n.start,s=n.ms,o=n.easing,l=n.from,h=n.diff,u=n.to,c=n.t,f=n.el,p={},d,g={},v;if(n.initstatus?(a=(n.initstatus*n.anim.top-n.prev)/(n.percent-n.prev)*s,n.status=n.initstatus,delete n.initstatus,n.stop&&Ee.splice(i--,1)):n.status=(n.prev+(n.percent-n.prev)*(a/s))/n.anim.top,!(a<0))if(a<s){var x=o(a/s);for(var y in l)if(l[A](y)){switch(pt[y]){case $:d=+l[y]+x*s*h[y];break;case"colour":d="rgb("+[Le(ot(l[y].r+x*s*h[y].r)),Le(ot(l[y].g+x*s*h[y].g)),Le(ot(l[y].b+x*s*h[y].b))].join(",")+")";break;case"path":d=[];for(var m=0,_=l[y].length;m<_;m++){d[m]=[l[y][m][0]];for(var w=1,k=l[y][m].length;w<k;w++)d[m][w]=+l[y][m][w]+x*s*h[y][m][w];d[m]=d[m].join(j)}d=d.join(j);break;case"transform":if(h[y].real)for(d=[],m=0,_=l[y].length;m<_;m++)for(d[m]=[l[y][m][0]],w=1,k=l[y][m].length;w<k;w++)d[m][w]=l[y][m][w]+x*s*h[y][m][w];else{var B=function(t){return+l[y][t]+x*s*h[y][t]};d=[["m",B(0),B(1),B(2),B(3),B(4),B(5)]]}break;case"csv":if("clip-rect"==y)for(d=[],m=4;m--;)d[m]=+l[y][m]+x*s*h[y][m];break;default:var C=[][P](l[y]);for(d=[],m=f.paper.customAttributes[y].length;m--;)d[m]=+C[m]+x*s*h[y][m]}p[y]=d}f.attr(p),function(e,r,i){setTimeout(function(){t("raphael.anim.frame."+e,r,i)})}(f.id,f,n.anim)}else{if(function(r,i,n){setTimeout(function(){t("raphael.anim.frame."+i.id,i,n),t("raphael.anim.finish."+i.id,i,n),e.is(r,"function")&&r.call(i)})}(n.callback,f,n.anim),f.attr(u),Ee.splice(i--,1),n.repeat>1&&!n.next){for(v in u)u[A](v)&&(g[v]=n.totalOrigin[v]);n.el.attr(g),b(n.anim,n.el,n.anim.percents[0],null,n.totalOrigin,n.repeat-1)}n.next&&!n.stop&&b(n.anim,n.el,n.next,null,n.totalOrigin,n.repeat)}}}Ee.length&&Me(Ne)},Le=function(t){return t>255?255:t<0?0:t};ye.animateWith=function(t,r,i,n,a,s){var o=this;if(o.removed)return s&&s.call(o),o;var l=i instanceof m?i:e.animation(i,n,a,s),h,u;b(l,o,l.percents[0],null,o.attr());for(var c=0,f=Ee.length;c<f;c++)if(Ee[c].anim==r&&Ee[c].el==t){Ee[f-1].start=Ee[c].start;break}return o},ye.onAnimation=function(e){return e?t.on("raphael.anim.frame."+this.id,e):t.unbind("raphael.anim.frame."+this.id),this},m.prototype.delay=function(t){var e=new m(this.anim,this.ms);return e.times=this.times,e.del=+t||0,e},m.prototype.repeat=function(t){var e=new m(this.anim,this.ms);return e.del=this.del,e.times=Y.floor(W(t,0))||1,e},e.animation=function(t,r,i,n){if(t instanceof m)return t;!e.is(i,"function")&&i||(n=n||i||null,i=null),t=Object(t),r=+r||0;var a={},s,o;for(o in t)t[A](o)&&ht(o)!=o&&ht(o)+"%"!=o&&(s=!0,a[o]=t[o]);if(s)return i&&(a.easing=i),n&&(a.callback=n),new m({100:a},r);if(n){var l=0;for(var h in t){var u=ut(h);t[A](h)&&u>l&&(l=u)}l+="%",!t[l].callback&&(t[l].callback=n)}return new m(t,r)},ye.animate=function(t,r,i,n){var a=this;if(a.removed)return n&&n.call(a),a;var s=t instanceof m?t:e.animation(t,r,i,n);return b(s,a,s.percents[0],null,a.attr()),a},ye.setTime=function(t,e){return t&&null!=e&&this.status(t,G(e,t.ms)/t.ms),this},ye.status=function(t,e){var r=[],i=0,n,a;if(null!=e)return b(t,this,-1,G(e,1)),this;for(n=Ee.length;i<n;i++)if(a=Ee[i],a.el.id==this.id&&(!t||a.anim==t)){if(t)return a.status;r.push({anim:a.anim,status:a.status})}return t?0:r},ye.pause=function(e){for(var r=0;r<Ee.length;r++)Ee[r].el.id!=this.id||e&&Ee[r].anim!=e||t("raphael.anim.pause."+this.id,this,Ee[r].anim)!==!1&&(Ee[r].paused=!0);return this},ye.resume=function(e){for(var r=0;r<Ee.length;r++)if(Ee[r].el.id==this.id&&(!e||Ee[r].anim==e)){var i=Ee[r];t("raphael.anim.resume."+this.id,this,i.anim)!==!1&&(delete i.paused,this.status(i.anim,i.status))}return this},ye.stop=function(e){for(var r=0;r<Ee.length;r++)Ee[r].el.id!=this.id||e&&Ee[r].anim!=e||t("raphael.anim.stop."+this.id,this,Ee[r].anim)!==!1&&Ee.splice(r--,1);return this},t.on("raphael.remove",_),t.on("raphael.clear",_),ye.toString=function(){return"Raphaël’s object"};var ze=function(t){if(this.items=[],this.length=0,this.type="set",t)for(var e=0,r=t.length;e<r;e++)!t[e]||t[e].constructor!=ye.constructor&&t[e].constructor!=ze||(this[this.items.length]=this.items[this.items.length]=t[e],this.length++)},Pe=ze.prototype;Pe.push=function(){for(var t,e,r=0,i=arguments.length;r<i;r++)t=arguments[r],!t||t.constructor!=ye.constructor&&t.constructor!=ze||(e=this.items.length,this[e]=this.items[e]=t,this.length++);return this},Pe.pop=function(){return this.length&&delete this[this.length--],this.items.pop()},Pe.forEach=function(t,e){for(var r=0,i=this.items.length;r<i;r++)if(t.call(e,this.items[r],r)===!1)return this;return this};for(var Fe in ye)ye[A](Fe)&&(Pe[Fe]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t][z](r,e)})}}(Fe));return Pe.attr=function(t,r){if(t&&e.is(t,Q)&&e.is(t[0],"object"))for(var i=0,n=t.length;i<n;i++)this.items[i].attr(t[i]);else for(var a=0,s=this.items.length;a<s;a++)this.items[a].attr(t,r);return this},Pe.clear=function(){for(;this.length;)this.pop()},Pe.splice=function(t,e,r){t=t<0?W(this.length+t,0):t,e=W(0,G(this.length-t,e));var i=[],n=[],a=[],s;for(s=2;s<arguments.length;s++)a.push(arguments[s]);for(s=0;s<e;s++)n.push(this[t+s]);for(;s<this.length-t;s++)i.push(this[t+s]);var o=a.length;for(s=0;s<o+i.length;s++)this.items[t+s]=this[t+s]=s<o?a[s]:i[s-o];for(s=this.items.length=this.length-=e-o;this[s];)delete this[s++];return new ze(n)},Pe.exclude=function(t){for(var e=0,r=this.length;e<r;e++)if(this[e]==t)return this.splice(e,1),!0},Pe.animate=function(t,r,i,n){(e.is(i,"function")||!i)&&(n=i||null);var a=this.items.length,s=a,o,l=this,h;if(!a)return this;n&&(h=function(){!--a&&n.call(l)}),i=e.is(i,Z)?i:h;var u=e.animation(t,r,i,h);for(o=this.items[--s].animate(u);s--;)this.items[s]&&!this.items[s].removed&&this.items[s].animateWith(o,u,u),this.items[s]&&!this.items[s].removed||a--;return this},Pe.insertAfter=function(t){for(var e=this.items.length;e--;)this.items[e].insertAfter(t);return this},Pe.getBBox=function(){for(var t=[],e=[],r=[],i=[],n=this.items.length;n--;)if(!this.items[n].removed){var a=this.items[n].getBBox();t.push(a.x),e.push(a.y),r.push(a.x+a.width),i.push(a.y+a.height)}return t=G[z](0,t),e=G[z](0,e),r=W[z](0,r),i=W[z](0,i),{x:t,y:e,x2:r,y2:i,width:r-t,height:i-e}},Pe.clone=function(t){t=this.paper.set();for(var e=0,r=this.items.length;e<r;e++)t.push(this.items[e].clone());return t},Pe.toString=function(){return"Raphaël‘s set"},Pe.glow=function(t){var e=this.paper.set();return this.forEach(function(r,i){var n=r.glow(t);null!=n&&n.forEach(function(t,r){e.push(t)})}),e},Pe.isPointInside=function(t,e){var r=!1;return this.forEach(function(i){if(i.isPointInside(t,e))return r=!0,!1}),r},e.registerFont=function(t){if(!t.face)return t;this.fonts=this.fonts||{};var e={w:t.w,face:{},glyphs:{}},r=t.face["font-family"];for(var i in t.face)t.face[A](i)&&(e.face[i]=t.face[i]);if(this.fonts[r]?this.fonts[r].push(e):this.fonts[r]=[e],!t.svg){e.face["units-per-em"]=ut(t.face["units-per-em"],10);for(var n in t.glyphs)if(t.glyphs[A](n)){var a=t.glyphs[n];if(e.glyphs[n]={w:a.w,k:{},d:a.d&&"M"+a.d.replace(/[mlcxtrv]/g,function(t){return{l:"L",c:"C",x:"z",t:"m",r:"l",v:"c"}[t]||"M"})+"z"},a.k)for(var s in a.k)a[A](s)&&(e.glyphs[n].k[s]=a.k[s])}}return t},N.getFont=function(t,r,i,n){if(n=n||"normal",i=i||"normal",r=+r||{normal:400,bold:700,lighter:300,bolder:800}[r]||400,e.fonts){var a=e.fonts[t];if(!a){var s=new RegExp("(^|\\s)"+t.replace(/[^\w\d\s+!~.:_-]/g,R)+"(\\s|$)","i");for(var o in e.fonts)if(e.fonts[A](o)&&s.test(o)){a=e.fonts[o];break}}var l;if(a)for(var h=0,u=a.length;h<u&&(l=a[h],l.face["font-weight"]!=r||l.face["font-style"]!=i&&l.face["font-style"]||l.face["font-stretch"]!=n);h++);return l}},N.print=function(t,r,i,n,a,s,o,l){s=s||"middle",o=W(G(o||0,1),-1),l=W(G(l||1,3),1);var h=I(i)[q](R),u=0,c=0,f=R,p;if(e.is(n,"string")&&(n=this.getFont(n)),n){p=(a||16)/n.face["units-per-em"];for(var d=n.face.bbox[q](k),g=+d[0],v=d[3]-d[1],x=0,y=+d[1]+("baseline"==s?v+ +n.face.descent:v/2),m=0,b=h.length;m<b;m++){if("\n"==h[m])u=0,w=0,c=0,x+=v*l;else{var _=c&&n.glyphs[h[m-1]]||{},w=n.glyphs[h[m]];u+=c?(_.w||n.w)+(_.k&&_.k[h[m]]||0)+n.w*o:0,c=1}w&&w.d&&(f+=e.transformPath(w.d,["t",u*p,x*p,"s",p,p,g,y,"t",(t-g)/p,(r-y)/p]))}}return this.path(f).attr({fill:"#000",stroke:"none"})},N.add=function(t){if(e.is(t,"array"))for(var r=this.set(),i=0,n=t.length,a;i<n;i++)a=t[i]||{},B[A](a.type)&&r.push(this[a.type]().attr(a));return r},e.format=function(t,r){var i=e.is(r,Q)?[0][P](r):arguments;return t&&e.is(t,Z)&&i.length-1&&(t=t.replace(C,function(t,e){return null==i[++e]?R:i[e]})),t||R},e.fullfill=function(){var t=/\{([^\}]+)\}/g,e=/(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[('|")(.+?)\2\])(\(\))?/g,r=function(t,r,i){var n=i;return r.replace(e,function(t,e,r,i,a){e=e||i,n&&(e in n&&(n=n[e]),"function"==typeof n&&a&&(n=n()))}),n=(null==n||n==i?t:n)+""};return function(e,i){return String(e).replace(t,function(t,e){return r(t,e,i)})}}(),e.ninja=function(){if(E.was)T.win.Raphael=E.is;else{window.Raphael=void 0;try{delete window.Raphael}catch(t){}}return e},e.st=Pe,t.on("raphael.DOMload",function(){w=!0}),function(t,r,i){function n(){/in/.test(t.readyState)?setTimeout(n,9):e.eve("raphael.DOMload")}null==t.readyState&&t.addEventListener&&(t.addEventListener(r,i=function(){t.removeEventListener(r,i,!1),t.readyState="complete"},!1),t.readyState="loading"),n()}(document,"DOMContentLoaded"),e}.apply(e,i),!(void 0!==n&&(t.exports=n))},function(t,e,r){var i,n;!function(r){var a="0.5.0",s="hasOwnProperty",o=/[\.\/]/,l=/\s*,\s*/,h="*",u=function(){},c=function(t,e){return t-e},f,p,d={n:{}},g=function(){for(var t=0,e=this.length;t<e;t++)if("undefined"!=typeof this[t])return this[t]},v=function(){for(var t=this.length;--t;)if("undefined"!=typeof this[t])return this[t]},x=Object.prototype.toString,y=String,m=Array.isArray||function(t){return t instanceof Array||"[object Array]"==x.call(t)};eve=function(t,e){var r=d,i=p,n=Array.prototype.slice.call(arguments,2),a=eve.listeners(t),s=0,o=!1,l,h=[],u={},x=[],y=f,m=[];x.firstDefined=g,x.lastDefined=v,f=t,p=0;for(var b=0,_=a.length;b<_;b++)"zIndex"in a[b]&&(h.push(a[b].zIndex),a[b].zIndex<0&&(u[a[b].zIndex]=a[b]));for(h.sort(c);h[s]<0;)if(l=u[h[s++]],x.push(l.apply(e,n)),p)return p=i,x;for(b=0;b<_;b++)if(l=a[b],"zIndex"in l)if(l.zIndex==h[s]){if(x.push(l.apply(e,n)),p)break;do if(s++,l=u[h[s]],l&&x.push(l.apply(e,n)),p)break;while(l)}else u[l.zIndex]=l;else if(x.push(l.apply(e,n)),p)break;return p=i,f=y,x},eve._events=d,eve.listeners=function(t){var e=m(t)?t:t.split(o),r=d,i,n,a,s,l,u,c,f,p=[r],g=[];for(s=0,l=e.length;s<l;s++){for(f=[],u=0,c=p.length;u<c;u++)for(r=p[u].n,n=[r[e[s]],r[h]],a=2;a--;)i=n[a],i&&(f.push(i),g=g.concat(i.f||[]));p=f}return g},eve.separator=function(t){t?(t=y(t).replace(/(?=[\.\^\]\[\-])/g,"\\"),t="["+t+"]",o=new RegExp(t)):o=/[\.\/]/},eve.on=function(t,e){if("function"!=typeof e)return function(){};for(var r=m(t)?m(t[0])?t:[t]:y(t).split(l),i=0,n=r.length;i<n;i++)!function(t){for(var r=m(t)?t:y(t).split(o),i=d,n,a=0,s=r.length;a<s;a++)i=i.n,i=i.hasOwnProperty(r[a])&&i[r[a]]||(i[r[a]]={n:{}});for(i.f=i.f||[],a=0,s=i.f.length;a<s;a++)if(i.f[a]==e){n=!0;break}!n&&i.f.push(e)}(r[i]);return function(t){+t==+t&&(e.zIndex=+t)}},eve.f=function(t){var e=[].slice.call(arguments,1);return function(){eve.apply(null,[t,null].concat(e).concat([].slice.call(arguments,0)))}},eve.stop=function(){p=1},eve.nt=function(t){var e=m(f)?f.join("."):f;return t?new RegExp("(?:\\.|\\/|^)"+t+"(?:\\.|\\/|$)").test(e):e},eve.nts=function(){return m(f)?f:f.split(o)},eve.off=eve.unbind=function(t,e){if(!t)return void(eve._events=d={n:{}});var r=m(t)?m(t[0])?t:[t]:y(t).split(l);if(r.length>1)for(var i=0,n=r.length;i<n;i++)eve.off(r[i],e);else{r=m(t)?t:y(t).split(o);var a,u,c,i,n,f,p,g=[d];for(i=0,n=r.length;i<n;i++)for(f=0;f<g.length;f+=c.length-2){if(c=[f,1],a=g[f].n,r[i]!=h)a[r[i]]&&c.push(a[r[i]]);else for(u in a)a[s](u)&&c.push(a[u]);g.splice.apply(g,c)}for(i=0,n=g.length;i<n;i++)for(a=g[i];a.n;){if(e){if(a.f){for(f=0,p=a.f.length;f<p;f++)if(a.f[f]==e){a.f.splice(f,1);break}!a.f.length&&delete a.f}for(u in a.n)if(a.n[s](u)&&a.n[u].f){var v=a.n[u].f;for(f=0,p=v.length;f<p;f++)if(v[f]==e){v.splice(f,1);break}!v.length&&delete a.n[u].f}}else{delete a.f;for(u in a.n)a.n[s](u)&&a.n[u].f&&delete a.n[u].f}a=a.n}}},eve.once=function(t,e){var r=function(){return eve.off(t,r),e.apply(this,arguments)};return eve.on(t,r)},eve.version=a,eve.toString=function(){return"You are running Eve "+a},"undefined"!=typeof t&&t.exports?t.exports=eve:(i=[],n=function(){return eve}.apply(e,i),!(void 0!==n&&(t.exports=n)))}(this)},function(t,e,r){var i,n;i=[r(1)],n=function(t){if(!t||t.svg){var e="hasOwnProperty",r=String,i=parseFloat,n=parseInt,a=Math,s=a.max,o=a.abs,l=a.pow,h=/[, ]+/,u=t.eve,c="",f=" ",p="http://www.w3.org/1999/xlink",d={block:"M5,0 0,2.5 5,5z",classic:"M5,0 0,2.5 5,5 3.5,3 3.5,2z",diamond:"M2.5,0 5,2.5 2.5,5 0,2.5z",open:"M6,1 1,3.5 6,6",oval:"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z"},g={};t.toString=function(){return"Your browser supports SVG.\nYou are running Raphaël "+this.version};var v=function(i,n){if(n){"string"==typeof i&&(i=v(i));for(var a in n)n[e](a)&&("xlink:"==a.substring(0,6)?i.setAttributeNS(p,a.substring(6),r(n[a])):i.setAttribute(a,r(n[a])))}else i=t._g.doc.createElementNS("http://www.w3.org/2000/svg",i),i.style&&(i.style.webkitTapHighlightColor="rgba(0,0,0,0)");return i},x=function(e,n){var h="linear",u=e.id+n,f=.5,p=.5,d=e.node,g=e.paper,x=d.style,y=t._g.doc.getElementById(u);if(!y){if(n=r(n).replace(t._radial_gradient,function(t,e,r){if(h="radial",e&&r){f=i(e),p=i(r);var n=2*(p>.5)-1;l(f-.5,2)+l(p-.5,2)>.25&&(p=a.sqrt(.25-l(f-.5,2))*n+.5)&&.5!=p&&(p=p.toFixed(5)-1e-5*n)}return c}),n=n.split(/\s*\-\s*/),"linear"==h){var b=n.shift();if(b=-i(b),isNaN(b))return null;var _=[0,0,a.cos(t.rad(b)),a.sin(t.rad(b))],w=1/(s(o(_[2]),o(_[3]))||1);_[2]*=w,_[3]*=w,_[2]<0&&(_[0]=-_[2],_[2]=0),_[3]<0&&(_[1]=-_[3],_[3]=0)}var k=t._parseDots(n);if(!k)return null;if(u=u.replace(/[\(\)\s,\xb0#]/g,"_"),e.gradient&&u!=e.gradient.id&&(g.defs.removeChild(e.gradient),delete e.gradient),!e.gradient){y=v(h+"Gradient",{id:u}),e.gradient=y,v(y,"radial"==h?{fx:f,fy:p}:{x1:_[0],y1:_[1],x2:_[2],y2:_[3],gradientTransform:e.matrix.invert()}),g.defs.appendChild(y);for(var B=0,C=k.length;B<C;B++)y.appendChild(v("stop",{offset:k[B].offset?k[B].offset:B?"100%":"0%","stop-color":k[B].color||"#fff","stop-opacity":isFinite(k[B].opacity)?k[B].opacity:1}))}}return v(d,{fill:m(u),opacity:1,"fill-opacity":1}),x.fill=c,x.opacity=1,x.fillOpacity=1,1},y=function(){var t=document.documentMode;return t&&(9===t||10===t)},m=function(t){if(y())return"url('#"+t+"')";var e=document.location,r=e.protocol+"//"+e.host+e.pathname+e.search;return"url('"+r+"#"+t+"')"},b=function(t){var e=t.getBBox(1);v(t.pattern,{patternTransform:t.matrix.invert()+" translate("+e.x+","+e.y+")"})},_=function(i,n,a){if("path"==i.type){for(var s=r(n).toLowerCase().split("-"),o=i.paper,l=a?"end":"start",h=i.node,u=i.attrs,f=u["stroke-width"],p=s.length,x="classic",y,m,b,_,w,k=3,B=3,C=5;p--;)switch(s[p]){case"block":case"classic":case"oval":case"diamond":case"open":case"none":x=s[p];break;case"wide":B=5;break;case"narrow":B=2;break;case"long":k=5;break;case"short":k=2}if("open"==x?(k+=2,B+=2,C+=2,b=1,_=a?4:1,w={fill:"none",stroke:u.stroke}):(_=b=k/2,w={fill:u.stroke,stroke:"none"}),i._.arrows?a?(i._.arrows.endPath&&g[i._.arrows.endPath]--,i._.arrows.endMarker&&g[i._.arrows.endMarker]--):(i._.arrows.startPath&&g[i._.arrows.startPath]--,i._.arrows.startMarker&&g[i._.arrows.startMarker]--):i._.arrows={},"none"!=x){var S="raphael-marker-"+x,A="raphael-marker-"+l+x+k+B+"-obj"+i.id;t._g.doc.getElementById(S)?g[S]++:(o.defs.appendChild(v(v("path"),{"stroke-linecap":"round",d:d[x],id:S})),g[S]=1);var T=t._g.doc.getElementById(A),E;T?(g[A]++,E=T.getElementsByTagName("use")[0]):(T=v(v("marker"),{id:A,markerHeight:B,markerWidth:k,orient:"auto",refX:_,refY:B/2}),E=v(v("use"),{"xlink:href":"#"+S,transform:(a?"rotate(180 "+k/2+" "+B/2+") ":c)+"scale("+k/C+","+B/C+")","stroke-width":(1/((k/C+B/C)/2)).toFixed(4)}),T.appendChild(E),o.defs.appendChild(T),g[A]=1),v(E,w);var M=b*("diamond"!=x&&"oval"!=x);a?(y=i._.arrows.startdx*f||0,m=t.getTotalLength(u.path)-M*f):(y=M*f,m=t.getTotalLength(u.path)-(i._.arrows.enddx*f||0)),w={},w["marker-"+l]="url(#"+A+")",(m||y)&&(w.d=t.getSubpath(u.path,y,m)),v(h,w),i._.arrows[l+"Path"]=S,i._.arrows[l+"Marker"]=A,i._.arrows[l+"dx"]=M,i._.arrows[l+"Type"]=x,i._.arrows[l+"String"]=n}else a?(y=i._.arrows.startdx*f||0,m=t.getTotalLength(u.path)-y):(y=0,m=t.getTotalLength(u.path)-(i._.arrows.enddx*f||0)),i._.arrows[l+"Path"]&&v(h,{d:t.getSubpath(u.path,y,m)}),delete i._.arrows[l+"Path"],delete i._.arrows[l+"Marker"],delete i._.arrows[l+"dx"],delete i._.arrows[l+"Type"],delete i._.arrows[l+"String"];for(w in g)if(g[e](w)&&!g[w]){var N=t._g.doc.getElementById(w);N&&N.parentNode.removeChild(N)}}},w={"-":[3,1],".":[1,1],"-.":[3,1,1,1],"-..":[3,1,1,1,1,1],". ":[1,3],"- ":[4,3],"--":[8,3],"- .":[4,3,1,3],"--.":[8,3,1,3],"--..":[8,3,1,3,1,3]},k=function(t,e,i){if(e=w[r(e).toLowerCase()]){for(var n=t.attrs["stroke-width"]||"1",a={round:n,square:n,butt:0}[t.attrs["stroke-linecap"]||i["stroke-linecap"]]||0,s=[],o=e.length;o--;)s[o]=e[o]*n+(o%2?1:-1)*a;v(t.node,{"stroke-dasharray":s.join(",")})}else v(t.node,{"stroke-dasharray":"none"})},B=function(i,a){var l=i.node,u=i.attrs,f=l.style.visibility;l.style.visibility="hidden";for(var d in a)if(a[e](d)){if(!t._availableAttrs[e](d))continue;var g=a[d];switch(u[d]=g,d){case"blur":i.blur(g);break;case"title":var y=l.getElementsByTagName("title");if(y.length&&(y=y[0]))y.firstChild.nodeValue=g;else{y=v("title");var m=t._g.doc.createTextNode(g);y.appendChild(m),l.appendChild(y)}break;case"href":case"target":var w=l.parentNode;if("a"!=w.tagName.toLowerCase()){var B=v("a");w.insertBefore(B,l),B.appendChild(l),w=B}"target"==d?w.setAttributeNS(p,"show","blank"==g?"new":g):w.setAttributeNS(p,d,g);break;case"cursor":l.style.cursor=g;break;case"transform":i.transform(g);break;case"arrow-start":_(i,g);break;case"arrow-end":_(i,g,1);break;case"clip-rect":var C=r(g).split(h);if(4==C.length){i.clip&&i.clip.parentNode.parentNode.removeChild(i.clip.parentNode);var A=v("clipPath"),T=v("rect");A.id=t.createUUID(),v(T,{x:C[0],y:C[1],width:C[2],height:C[3]}),A.appendChild(T),i.paper.defs.appendChild(A),v(l,{"clip-path":"url(#"+A.id+")"}),i.clip=T}if(!g){var E=l.getAttribute("clip-path");if(E){var M=t._g.doc.getElementById(E.replace(/(^url\(#|\)$)/g,c));M&&M.parentNode.removeChild(M),v(l,{"clip-path":c}),delete i.clip}}break;case"path":"path"==i.type&&(v(l,{d:g?u.path=t._pathToAbsolute(g):"M0,0"}),i._.dirty=1,i._.arrows&&("startString"in i._.arrows&&_(i,i._.arrows.startString),"endString"in i._.arrows&&_(i,i._.arrows.endString,1)));break;case"width":if(l.setAttribute(d,g),i._.dirty=1,!u.fx)break;d="x",g=u.x;case"x":u.fx&&(g=-u.x-(u.width||0));case"rx":if("rx"==d&&"rect"==i.type)break;case"cx":l.setAttribute(d,g),i.pattern&&b(i),i._.dirty=1;break;case"height":if(l.setAttribute(d,g),i._.dirty=1,!u.fy)break;d="y",g=u.y;case"y":u.fy&&(g=-u.y-(u.height||0));case"ry":if("ry"==d&&"rect"==i.type)break;case"cy":l.setAttribute(d,g),i.pattern&&b(i),i._.dirty=1;break;case"r":"rect"==i.type?v(l,{rx:g,ry:g}):l.setAttribute(d,g),i._.dirty=1;break;case"src":"image"==i.type&&l.setAttributeNS(p,"href",g);break;case"stroke-width":1==i._.sx&&1==i._.sy||(g/=s(o(i._.sx),o(i._.sy))||1),l.setAttribute(d,g),u["stroke-dasharray"]&&k(i,u["stroke-dasharray"],a),
i._.arrows&&("startString"in i._.arrows&&_(i,i._.arrows.startString),"endString"in i._.arrows&&_(i,i._.arrows.endString,1));break;case"stroke-dasharray":k(i,g,a);break;case"fill":var N=r(g).match(t._ISURL);if(N){A=v("pattern");var L=v("image");A.id=t.createUUID(),v(A,{x:0,y:0,patternUnits:"userSpaceOnUse",height:1,width:1}),v(L,{x:0,y:0,"xlink:href":N[1]}),A.appendChild(L),function(e){t._preload(N[1],function(){var t=this.offsetWidth,r=this.offsetHeight;v(e,{width:t,height:r}),v(L,{width:t,height:r})})}(A),i.paper.defs.appendChild(A),v(l,{fill:"url(#"+A.id+")"}),i.pattern=A,i.pattern&&b(i);break}var z=t.getRGB(g);if(z.error){if(("circle"==i.type||"ellipse"==i.type||"r"!=r(g).charAt())&&x(i,g)){if("opacity"in u||"fill-opacity"in u){var P=t._g.doc.getElementById(l.getAttribute("fill").replace(/^url\(#|\)$/g,c));if(P){var F=P.getElementsByTagName("stop");v(F[F.length-1],{"stop-opacity":("opacity"in u?u.opacity:1)*("fill-opacity"in u?u["fill-opacity"]:1)})}}u.gradient=g,u.fill="none";break}}else delete a.gradient,delete u.gradient,!t.is(u.opacity,"undefined")&&t.is(a.opacity,"undefined")&&v(l,{opacity:u.opacity}),!t.is(u["fill-opacity"],"undefined")&&t.is(a["fill-opacity"],"undefined")&&v(l,{"fill-opacity":u["fill-opacity"]});z[e]("opacity")&&v(l,{"fill-opacity":z.opacity>1?z.opacity/100:z.opacity});case"stroke":z=t.getRGB(g),l.setAttribute(d,z.hex),"stroke"==d&&z[e]("opacity")&&v(l,{"stroke-opacity":z.opacity>1?z.opacity/100:z.opacity}),"stroke"==d&&i._.arrows&&("startString"in i._.arrows&&_(i,i._.arrows.startString),"endString"in i._.arrows&&_(i,i._.arrows.endString,1));break;case"gradient":("circle"==i.type||"ellipse"==i.type||"r"!=r(g).charAt())&&x(i,g);break;case"opacity":u.gradient&&!u[e]("stroke-opacity")&&v(l,{"stroke-opacity":g>1?g/100:g});case"fill-opacity":if(u.gradient){P=t._g.doc.getElementById(l.getAttribute("fill").replace(/^url\(#|\)$/g,c)),P&&(F=P.getElementsByTagName("stop"),v(F[F.length-1],{"stop-opacity":g}));break}default:"font-size"==d&&(g=n(g,10)+"px");var R=d.replace(/(\-.)/g,function(t){return t.substring(1).toUpperCase()});l.style[R]=g,i._.dirty=1,l.setAttribute(d,g)}}S(i,a),l.style.visibility=f},C=1.2,S=function(i,a){if("text"==i.type&&(a[e]("text")||a[e]("font")||a[e]("font-size")||a[e]("x")||a[e]("y"))){var s=i.attrs,o=i.node,l=o.firstChild?n(t._g.doc.defaultView.getComputedStyle(o.firstChild,c).getPropertyValue("font-size"),10):10;if(a[e]("text")){for(s.text=a.text;o.firstChild;)o.removeChild(o.firstChild);for(var h=r(a.text).split("\n"),u=[],f,p=0,d=h.length;p<d;p++)f=v("tspan"),p&&v(f,{dy:l*C,x:s.x}),f.appendChild(t._g.doc.createTextNode(h[p])),o.appendChild(f),u[p]=f}else for(u=o.getElementsByTagName("tspan"),p=0,d=u.length;p<d;p++)p?v(u[p],{dy:l*C,x:s.x}):v(u[0],{dy:0});v(o,{x:s.x,y:s.y}),i._.dirty=1;var g=i._getBBox(),x=s.y-(g.y+g.height/2);x&&t.is(x,"finite")&&v(u[0],{dy:x})}},A=function(t){return t.parentNode&&"a"===t.parentNode.tagName.toLowerCase()?t.parentNode:t},T=function(e,r){function i(){return("0000"+(Math.random()*Math.pow(36,5)<<0).toString(36)).slice(-5)}var n=0,a=0;this[0]=this.node=e,e.raphael=!0,this.id=i(),e.raphaelid=this.id,this.matrix=t.matrix(),this.realPath=null,this.paper=r,this.attrs=this.attrs||{},this._={transform:[],sx:1,sy:1,deg:0,dx:0,dy:0,dirty:1},!r.bottom&&(r.bottom=this),this.prev=r.top,r.top&&(r.top.next=this),r.top=this,this.next=null},E=t.el;T.prototype=E,E.constructor=T,t._engine.path=function(t,e){var r=v("path");e.canvas&&e.canvas.appendChild(r);var i=new T(r,e);return i.type="path",B(i,{fill:"none",stroke:"#000",path:t}),i},E.rotate=function(t,e,n){if(this.removed)return this;if(t=r(t).split(h),t.length-1&&(e=i(t[1]),n=i(t[2])),t=i(t[0]),null==n&&(e=n),null==e||null==n){var a=this.getBBox(1);e=a.x+a.width/2,n=a.y+a.height/2}return this.transform(this._.transform.concat([["r",t,e,n]])),this},E.scale=function(t,e,n,a){if(this.removed)return this;if(t=r(t).split(h),t.length-1&&(e=i(t[1]),n=i(t[2]),a=i(t[3])),t=i(t[0]),null==e&&(e=t),null==a&&(n=a),null==n||null==a)var s=this.getBBox(1);return n=null==n?s.x+s.width/2:n,a=null==a?s.y+s.height/2:a,this.transform(this._.transform.concat([["s",t,e,n,a]])),this},E.translate=function(t,e){return this.removed?this:(t=r(t).split(h),t.length-1&&(e=i(t[1])),t=i(t[0])||0,e=+e||0,this.transform(this._.transform.concat([["t",t,e]])),this)},E.transform=function(r){var i=this._;if(null==r)return i.transform;if(t._extractTransform(this,r),this.clip&&v(this.clip,{transform:this.matrix.invert()}),this.pattern&&b(this),this.node&&v(this.node,{transform:this.matrix}),1!=i.sx||1!=i.sy){var n=this.attrs[e]("stroke-width")?this.attrs["stroke-width"]:1;this.attr({"stroke-width":n})}return this},E.hide=function(){return this.removed||(this.node.style.display="none"),this},E.show=function(){return this.removed||(this.node.style.display=""),this},E.remove=function(){var e=A(this.node);if(!this.removed&&e.parentNode){var r=this.paper;r.__set__&&r.__set__.exclude(this),u.unbind("raphael.*.*."+this.id),this.gradient&&r.defs.removeChild(this.gradient),t._tear(this,r),e.parentNode.removeChild(e),this.removeData();for(var i in this)this[i]="function"==typeof this[i]?t._removedFactory(i):null;this.removed=!0}},E._getBBox=function(){if("none"==this.node.style.display){this.show();var t=!0}var e=!1,r;this.paper.canvas.parentElement?r=this.paper.canvas.parentElement.style:this.paper.canvas.parentNode&&(r=this.paper.canvas.parentNode.style),r&&"none"==r.display&&(e=!0,r.display="");var i={};try{i=this.node.getBBox()}catch(n){i={x:this.node.clientLeft,y:this.node.clientTop,width:this.node.clientWidth,height:this.node.clientHeight}}finally{i=i||{},e&&(r.display="none")}return t&&this.hide(),i},E.attr=function(r,i){if(this.removed)return this;if(null==r){var n={};for(var a in this.attrs)this.attrs[e](a)&&(n[a]=this.attrs[a]);return n.gradient&&"none"==n.fill&&(n.fill=n.gradient)&&delete n.gradient,n.transform=this._.transform,n}if(null==i&&t.is(r,"string")){if("fill"==r&&"none"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;if("transform"==r)return this._.transform;for(var s=r.split(h),o={},l=0,c=s.length;l<c;l++)r=s[l],r in this.attrs?o[r]=this.attrs[r]:t.is(this.paper.customAttributes[r],"function")?o[r]=this.paper.customAttributes[r].def:o[r]=t._availableAttrs[r];return c-1?o:o[s[0]]}if(null==i&&t.is(r,"array")){for(o={},l=0,c=r.length;l<c;l++)o[r[l]]=this.attr(r[l]);return o}if(null!=i){var f={};f[r]=i}else null!=r&&t.is(r,"object")&&(f=r);for(var p in f)u("raphael.attr."+p+"."+this.id,this,f[p]);for(p in this.paper.customAttributes)if(this.paper.customAttributes[e](p)&&f[e](p)&&t.is(this.paper.customAttributes[p],"function")){var d=this.paper.customAttributes[p].apply(this,[].concat(f[p]));this.attrs[p]=f[p];for(var g in d)d[e](g)&&(f[g]=d[g])}return B(this,f),this},E.toFront=function(){if(this.removed)return this;var e=A(this.node);e.parentNode.appendChild(e);var r=this.paper;return r.top!=this&&t._tofront(this,r),this},E.toBack=function(){if(this.removed)return this;var e=A(this.node),r=e.parentNode;r.insertBefore(e,r.firstChild),t._toback(this,this.paper);var i=this.paper;return this},E.insertAfter=function(e){if(this.removed||!e)return this;var r=A(this.node),i=A(e.node||e[e.length-1].node);return i.nextSibling?i.parentNode.insertBefore(r,i.nextSibling):i.parentNode.appendChild(r),t._insertafter(this,e,this.paper),this},E.insertBefore=function(e){if(this.removed||!e)return this;var r=A(this.node),i=A(e.node||e[0].node);return i.parentNode.insertBefore(r,i),t._insertbefore(this,e,this.paper),this},E.blur=function(e){var r=this;if(0!==+e){var i=v("filter"),n=v("feGaussianBlur");r.attrs.blur=e,i.id=t.createUUID(),v(n,{stdDeviation:+e||1.5}),i.appendChild(n),r.paper.defs.appendChild(i),r._blur=i,v(r.node,{filter:"url(#"+i.id+")"})}else r._blur&&(r._blur.parentNode.removeChild(r._blur),delete r._blur,delete r.attrs.blur),r.node.removeAttribute("filter");return r},t._engine.circle=function(t,e,r,i){var n=v("circle");t.canvas&&t.canvas.appendChild(n);var a=new T(n,t);return a.attrs={cx:e,cy:r,r:i,fill:"none",stroke:"#000"},a.type="circle",v(n,a.attrs),a},t._engine.rect=function(t,e,r,i,n,a){var s=v("rect");t.canvas&&t.canvas.appendChild(s);var o=new T(s,t);return o.attrs={x:e,y:r,width:i,height:n,rx:a||0,ry:a||0,fill:"none",stroke:"#000"},o.type="rect",v(s,o.attrs),o},t._engine.ellipse=function(t,e,r,i,n){var a=v("ellipse");t.canvas&&t.canvas.appendChild(a);var s=new T(a,t);return s.attrs={cx:e,cy:r,rx:i,ry:n,fill:"none",stroke:"#000"},s.type="ellipse",v(a,s.attrs),s},t._engine.image=function(t,e,r,i,n,a){var s=v("image");v(s,{x:r,y:i,width:n,height:a,preserveAspectRatio:"none"}),s.setAttributeNS(p,"href",e),t.canvas&&t.canvas.appendChild(s);var o=new T(s,t);return o.attrs={x:r,y:i,width:n,height:a,src:e},o.type="image",o},t._engine.text=function(e,r,i,n){var a=v("text");e.canvas&&e.canvas.appendChild(a);var s=new T(a,e);return s.attrs={x:r,y:i,"text-anchor":"middle",text:n,"font-family":t._availableAttrs["font-family"],"font-size":t._availableAttrs["font-size"],stroke:"none",fill:"#000"},s.type="text",B(s,s.attrs),s},t._engine.setSize=function(t,e){return this.width=t||this.width,this.height=e||this.height,this.canvas.setAttribute("width",this.width),this.canvas.setAttribute("height",this.height),this._viewBox&&this.setViewBox.apply(this,this._viewBox),this},t._engine.create=function(){var e=t._getContainer.apply(0,arguments),r=e&&e.container,i=e.x,n=e.y,a=e.width,s=e.height;if(!r)throw new Error("SVG container not found.");var o=v("svg"),l="overflow:hidden;",h;return i=i||0,n=n||0,a=a||512,s=s||342,v(o,{height:s,version:1.1,width:a,xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink"}),1==r?(o.style.cssText=l+"position:absolute;left:"+i+"px;top:"+n+"px",t._g.doc.body.appendChild(o),h=1):(o.style.cssText=l+"position:relative",r.firstChild?r.insertBefore(o,r.firstChild):r.appendChild(o)),r=new t._Paper,r.width=a,r.height=s,r.canvas=o,r.clear(),r._left=r._top=0,h&&(r.renderfix=function(){}),r.renderfix(),r},t._engine.setViewBox=function(t,e,r,i,n){u("raphael.setViewBox",this,this._viewBox,[t,e,r,i,n]);var a=this.getSize(),o=s(r/a.width,i/a.height),l=this.top,h=n?"xMidYMid meet":"xMinYMin",c,p;for(null==t?(this._vbSize&&(o=1),delete this._vbSize,c="0 0 "+this.width+f+this.height):(this._vbSize=o,c=t+f+e+f+r+f+i),v(this.canvas,{viewBox:c,preserveAspectRatio:h});o&&l;)p="stroke-width"in l.attrs?l.attrs["stroke-width"]:1,l.attr({"stroke-width":p}),l._.dirty=1,l._.dirtyT=1,l=l.prev;return this._viewBox=[t,e,r,i,!!n],this},t.prototype.renderfix=function(){var t=this.canvas,e=t.style,r;try{r=t.getScreenCTM()||t.createSVGMatrix()}catch(i){r=t.createSVGMatrix()}var n=-r.e%1,a=-r.f%1;(n||a)&&(n&&(this._left=(this._left+n)%1,e.left=this._left+"px"),a&&(this._top=(this._top+a)%1,e.top=this._top+"px"))},t.prototype.clear=function(){t.eve("raphael.clear",this);for(var e=this.canvas;e.firstChild;)e.removeChild(e.firstChild);this.bottom=this.top=null,(this.desc=v("desc")).appendChild(t._g.doc.createTextNode("Created with Raphaël "+t.version)),e.appendChild(this.desc),e.appendChild(this.defs=v("defs"))},t.prototype.remove=function(){u("raphael.remove",this),this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas);for(var e in this)this[e]="function"==typeof this[e]?t._removedFactory(e):null};var M=t.st;for(var N in E)E[e](N)&&!M[e](N)&&(M[N]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t].apply(r,e)})}}(N))}}.apply(e,i),!(void 0!==n&&(t.exports=n))},function(t,e,r){var i,n;i=[r(1)],n=function(t){if(!t||t.vml){var e="hasOwnProperty",r=String,i=parseFloat,n=Math,a=n.round,s=n.max,o=n.min,l=n.abs,h="fill",u=/[, ]+/,c=t.eve,f=" progid:DXImageTransform.Microsoft",p=" ",d="",g={M:"m",L:"l",C:"c",Z:"x",m:"t",l:"r",c:"v",z:"x"},v=/([clmz]),?([^clmz]*)/gi,x=/ progid:\S+Blur\([^\)]+\)/g,y=/-?[^,\s-]+/g,m="position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)",b=21600,_={path:1,rect:1,image:1},w={circle:1,ellipse:1},k=function(e){var i=/[ahqstv]/gi,n=t._pathToAbsolute;if(r(e).match(i)&&(n=t._path2curve),i=/[clmz]/g,n==t._pathToAbsolute&&!r(e).match(i)){var s=r(e).replace(v,function(t,e,r){var i=[],n="m"==e.toLowerCase(),s=g[e];return r.replace(y,function(t){n&&2==i.length&&(s+=i+g["m"==e?"l":"L"],i=[]),i.push(a(t*b))}),s+i});return s}var o=n(e),l,h;s=[];for(var u=0,c=o.length;u<c;u++){l=o[u],h=o[u][0].toLowerCase(),"z"==h&&(h="x");for(var f=1,x=l.length;f<x;f++)h+=a(l[f]*b)+(f!=x-1?",":d);s.push(h)}return s.join(p)},B=function(e,r,i){var n=t.matrix();return n.rotate(-e,.5,.5),{dx:n.x(r,i),dy:n.y(r,i)}},C=function(t,e,r,i,n,a){var s=t._,o=t.matrix,u=s.fillpos,c=t.node,f=c.style,d=1,g="",v,x=b/e,y=b/r;if(f.visibility="hidden",e&&r){if(c.coordsize=l(x)+p+l(y),f.rotation=a*(e*r<0?-1:1),a){var m=B(a,i,n);i=m.dx,n=m.dy}if(e<0&&(g+="x"),r<0&&(g+=" y")&&(d=-1),f.flip=g,c.coordorigin=i*-x+p+n*-y,u||s.fillsize){var _=c.getElementsByTagName(h);_=_&&_[0],c.removeChild(_),u&&(m=B(a,o.x(u[0],u[1]),o.y(u[0],u[1])),_.position=m.dx*d+p+m.dy*d),s.fillsize&&(_.size=s.fillsize[0]*l(e)+p+s.fillsize[1]*l(r)),c.appendChild(_)}f.visibility="visible"}};t.toString=function(){return"Your browser doesn’t support SVG. Falling down to VML.\nYou are running Raphaël "+this.version};var S=function(t,e,i){for(var n=r(e).toLowerCase().split("-"),a=i?"end":"start",s=n.length,o="classic",l="medium",h="medium";s--;)switch(n[s]){case"block":case"classic":case"oval":case"diamond":case"open":case"none":o=n[s];break;case"wide":case"narrow":h=n[s];break;case"long":case"short":l=n[s]}var u=t.node.getElementsByTagName("stroke")[0];u[a+"arrow"]=o,u[a+"arrowlength"]=l,u[a+"arrowwidth"]=h},A=function(n,l){n.attrs=n.attrs||{};var c=n.node,f=n.attrs,g=c.style,v,x=_[n.type]&&(l.x!=f.x||l.y!=f.y||l.width!=f.width||l.height!=f.height||l.cx!=f.cx||l.cy!=f.cy||l.rx!=f.rx||l.ry!=f.ry||l.r!=f.r),y=w[n.type]&&(f.cx!=l.cx||f.cy!=l.cy||f.r!=l.r||f.rx!=l.rx||f.ry!=l.ry),m=n;for(var B in l)l[e](B)&&(f[B]=l[B]);if(x&&(f.path=t._getPath[n.type](n),n._.dirty=1),l.href&&(c.href=l.href),l.title&&(c.title=l.title),l.target&&(c.target=l.target),l.cursor&&(g.cursor=l.cursor),"blur"in l&&n.blur(l.blur),(l.path&&"path"==n.type||x)&&(c.path=k(~r(f.path).toLowerCase().indexOf("r")?t._pathToAbsolute(f.path):f.path),n._.dirty=1,"image"==n.type&&(n._.fillpos=[f.x,f.y],n._.fillsize=[f.width,f.height],C(n,1,1,0,0,0))),"transform"in l&&n.transform(l.transform),y){var A=+f.cx,E=+f.cy,M=+f.rx||+f.r||0,L=+f.ry||+f.r||0;c.path=t.format("ar{0},{1},{2},{3},{4},{1},{4},{1}x",a((A-M)*b),a((E-L)*b),a((A+M)*b),a((E+L)*b),a(A*b)),n._.dirty=1}if("clip-rect"in l){var z=r(l["clip-rect"]).split(u);if(4==z.length){z[2]=+z[2]+ +z[0],z[3]=+z[3]+ +z[1];var P=c.clipRect||t._g.doc.createElement("div"),F=P.style;F.clip=t.format("rect({1}px {2}px {3}px {0}px)",z),c.clipRect||(F.position="absolute",F.top=0,F.left=0,F.width=n.paper.width+"px",F.height=n.paper.height+"px",c.parentNode.insertBefore(P,c),P.appendChild(c),c.clipRect=P)}l["clip-rect"]||c.clipRect&&(c.clipRect.style.clip="auto")}if(n.textpath){var R=n.textpath.style;l.font&&(R.font=l.font),l["font-family"]&&(R.fontFamily='"'+l["font-family"].split(",")[0].replace(/^['"]+|['"]+$/g,d)+'"'),l["font-size"]&&(R.fontSize=l["font-size"]),l["font-weight"]&&(R.fontWeight=l["font-weight"]),l["font-style"]&&(R.fontStyle=l["font-style"])}if("arrow-start"in l&&S(m,l["arrow-start"]),"arrow-end"in l&&S(m,l["arrow-end"],1),null!=l.opacity||null!=l.fill||null!=l.src||null!=l.stroke||null!=l["stroke-width"]||null!=l["stroke-opacity"]||null!=l["fill-opacity"]||null!=l["stroke-dasharray"]||null!=l["stroke-miterlimit"]||null!=l["stroke-linejoin"]||null!=l["stroke-linecap"]){var j=c.getElementsByTagName(h),I=!1;if(j=j&&j[0],!j&&(I=j=N(h)),"image"==n.type&&l.src&&(j.src=l.src),l.fill&&(j.on=!0),null!=j.on&&"none"!=l.fill&&null!==l.fill||(j.on=!1),j.on&&l.fill){var q=r(l.fill).match(t._ISURL);if(q){j.parentNode==c&&c.removeChild(j),j.rotate=!0,j.src=q[1],j.type="tile";var D=n.getBBox(1);j.position=D.x+p+D.y,n._.fillpos=[D.x,D.y],t._preload(q[1],function(){n._.fillsize=[this.offsetWidth,this.offsetHeight]})}else j.color=t.getRGB(l.fill).hex,j.src=d,j.type="solid",t.getRGB(l.fill).error&&(m.type in{circle:1,ellipse:1}||"r"!=r(l.fill).charAt())&&T(m,l.fill,j)&&(f.fill="none",f.gradient=l.fill,j.rotate=!1)}if("fill-opacity"in l||"opacity"in l){var V=((+f["fill-opacity"]+1||2)-1)*((+f.opacity+1||2)-1)*((+t.getRGB(l.fill).o+1||2)-1);V=o(s(V,0),1),j.opacity=V,j.src&&(j.color="none")}c.appendChild(j);var O=c.getElementsByTagName("stroke")&&c.getElementsByTagName("stroke")[0],Y=!1;!O&&(Y=O=N("stroke")),(l.stroke&&"none"!=l.stroke||l["stroke-width"]||null!=l["stroke-opacity"]||l["stroke-dasharray"]||l["stroke-miterlimit"]||l["stroke-linejoin"]||l["stroke-linecap"])&&(O.on=!0),("none"==l.stroke||null===l.stroke||null==O.on||0==l.stroke||0==l["stroke-width"])&&(O.on=!1);var W=t.getRGB(l.stroke);O.on&&l.stroke&&(O.color=W.hex),V=((+f["stroke-opacity"]+1||2)-1)*((+f.opacity+1||2)-1)*((+W.o+1||2)-1);var G=.75*(i(l["stroke-width"])||1);if(V=o(s(V,0),1),null==l["stroke-width"]&&(G=f["stroke-width"]),l["stroke-width"]&&(O.weight=G),G&&G<1&&(V*=G)&&(O.weight=1),O.opacity=V,l["stroke-linejoin"]&&(O.joinstyle=l["stroke-linejoin"]||"miter"),O.miterlimit=l["stroke-miterlimit"]||8,l["stroke-linecap"]&&(O.endcap="butt"==l["stroke-linecap"]?"flat":"square"==l["stroke-linecap"]?"square":"round"),"stroke-dasharray"in l){var H={"-":"shortdash",".":"shortdot","-.":"shortdashdot","-..":"shortdashdotdot",". ":"dot","- ":"dash","--":"longdash","- .":"dashdot","--.":"longdashdot","--..":"longdashdotdot"};O.dashstyle=H[e](l["stroke-dasharray"])?H[l["stroke-dasharray"]]:d}Y&&c.appendChild(O)}if("text"==m.type){m.paper.canvas.style.display=d;var X=m.paper.span,U=100,$=f.font&&f.font.match(/\d+(?:\.\d*)?(?=px)/);g=X.style,f.font&&(g.font=f.font),f["font-family"]&&(g.fontFamily=f["font-family"]),f["font-weight"]&&(g.fontWeight=f["font-weight"]),f["font-style"]&&(g.fontStyle=f["font-style"]),$=i(f["font-size"]||$&&$[0])||10,g.fontSize=$*U+"px",m.textpath.string&&(X.innerHTML=r(m.textpath.string).replace(/</g,"&#60;").replace(/&/g,"&#38;").replace(/\n/g,"<br>"));var Z=X.getBoundingClientRect();m.W=f.w=(Z.right-Z.left)/U,m.H=f.h=(Z.bottom-Z.top)/U,m.X=f.x,m.Y=f.y+m.H/2,("x"in l||"y"in l)&&(m.path.v=t.format("m{0},{1}l{2},{1}",a(f.x*b),a(f.y*b),a(f.x*b)+1));for(var Q=["x","y","text","font","font-family","font-weight","font-style","font-size"],J=0,K=Q.length;J<K;J++)if(Q[J]in l){m._.dirty=1;break}switch(f["text-anchor"]){case"start":m.textpath.style["v-text-align"]="left",m.bbx=m.W/2;break;case"end":m.textpath.style["v-text-align"]="right",m.bbx=-m.W/2;break;default:m.textpath.style["v-text-align"]="center",m.bbx=0}m.textpath.style["v-text-kern"]=!0}},T=function(e,a,s){e.attrs=e.attrs||{};var o=e.attrs,l=Math.pow,h,u,c="linear",f=".5 .5";if(e.attrs.gradient=a,a=r(a).replace(t._radial_gradient,function(t,e,r){return c="radial",e&&r&&(e=i(e),r=i(r),l(e-.5,2)+l(r-.5,2)>.25&&(r=n.sqrt(.25-l(e-.5,2))*(2*(r>.5)-1)+.5),f=e+p+r),d}),a=a.split(/\s*\-\s*/),"linear"==c){var g=a.shift();if(g=-i(g),isNaN(g))return null}var v=t._parseDots(a);if(!v)return null;if(e=e.shape||e.node,v.length){e.removeChild(s),s.on=!0,s.method="none",s.color=v[0].color,s.color2=v[v.length-1].color;for(var x=[],y=0,m=v.length;y<m;y++)v[y].offset&&x.push(v[y].offset+p+v[y].color);s.colors=x.length?x.join():"0% "+s.color,"radial"==c?(s.type="gradientTitle",s.focus="100%",s.focussize="0 0",s.focusposition=f,s.angle=0):(s.type="gradient",s.angle=(270-g)%360),e.appendChild(s)}return 1},E=function(e,r){this[0]=this.node=e,e.raphael=!0,this.id=t._oid++,e.raphaelid=this.id,this.X=0,this.Y=0,this.attrs={},this.paper=r,this.matrix=t.matrix(),this._={transform:[],sx:1,sy:1,dx:0,dy:0,deg:0,dirty:1,dirtyT:1},!r.bottom&&(r.bottom=this),this.prev=r.top,r.top&&(r.top.next=this),r.top=this,this.next=null},M=t.el;E.prototype=M,M.constructor=E,M.transform=function(e){if(null==e)return this._.transform;var i=this.paper._viewBoxShift,n=i?"s"+[i.scale,i.scale]+"-1-1t"+[i.dx,i.dy]:d,a;i&&(a=e=r(e).replace(/\.{3}|\u2026/g,this._.transform||d)),t._extractTransform(this,n+e);var s=this.matrix.clone(),o=this.skew,l=this.node,h,u=~r(this.attrs.fill).indexOf("-"),c=!r(this.attrs.fill).indexOf("url(");if(s.translate(1,1),c||u||"image"==this.type)if(o.matrix="1 0 0 1",o.offset="0 0",h=s.split(),u&&h.noRotation||!h.isSimple){l.style.filter=s.toFilter();var f=this.getBBox(),g=this.getBBox(1),v=f.x-g.x,x=f.y-g.y;l.coordorigin=v*-b+p+x*-b,C(this,1,1,v,x,0)}else l.style.filter=d,C(this,h.scalex,h.scaley,h.dx,h.dy,h.rotate);else l.style.filter=d,o.matrix=r(s),o.offset=s.offset();return null!==a&&(this._.transform=a,t._extractTransform(this,a)),this},M.rotate=function(t,e,n){if(this.removed)return this;if(null!=t){if(t=r(t).split(u),t.length-1&&(e=i(t[1]),n=i(t[2])),t=i(t[0]),null==n&&(e=n),null==e||null==n){var a=this.getBBox(1);e=a.x+a.width/2,n=a.y+a.height/2}return this._.dirtyT=1,this.transform(this._.transform.concat([["r",t,e,n]])),this}},M.translate=function(t,e){return this.removed?this:(t=r(t).split(u),t.length-1&&(e=i(t[1])),t=i(t[0])||0,e=+e||0,this._.bbox&&(this._.bbox.x+=t,this._.bbox.y+=e),this.transform(this._.transform.concat([["t",t,e]])),this)},M.scale=function(t,e,n,a){if(this.removed)return this;if(t=r(t).split(u),t.length-1&&(e=i(t[1]),n=i(t[2]),a=i(t[3]),isNaN(n)&&(n=null),isNaN(a)&&(a=null)),t=i(t[0]),null==e&&(e=t),null==a&&(n=a),null==n||null==a)var s=this.getBBox(1);return n=null==n?s.x+s.width/2:n,a=null==a?s.y+s.height/2:a,this.transform(this._.transform.concat([["s",t,e,n,a]])),this._.dirtyT=1,this},M.hide=function(){return!this.removed&&(this.node.style.display="none"),this},M.show=function(){return!this.removed&&(this.node.style.display=d),this},M.auxGetBBox=t.el.getBBox,M.getBBox=function(){var t=this.auxGetBBox();if(this.paper&&this.paper._viewBoxShift){var e={},r=1/this.paper._viewBoxShift.scale;return e.x=t.x-this.paper._viewBoxShift.dx,e.x*=r,e.y=t.y-this.paper._viewBoxShift.dy,e.y*=r,e.width=t.width*r,e.height=t.height*r,e.x2=e.x+e.width,e.y2=e.y+e.height,e}return t},M._getBBox=function(){return this.removed?{}:{x:this.X+(this.bbx||0)-this.W/2,y:this.Y-this.H,width:this.W,height:this.H}},M.remove=function(){if(!this.removed&&this.node.parentNode){this.paper.__set__&&this.paper.__set__.exclude(this),t.eve.unbind("raphael.*.*."+this.id),t._tear(this,this.paper),this.node.parentNode.removeChild(this.node),this.shape&&this.shape.parentNode.removeChild(this.shape);for(var e in this)this[e]="function"==typeof this[e]?t._removedFactory(e):null;this.removed=!0}},M.attr=function(r,i){if(this.removed)return this;if(null==r){var n={};for(var a in this.attrs)this.attrs[e](a)&&(n[a]=this.attrs[a]);return n.gradient&&"none"==n.fill&&(n.fill=n.gradient)&&delete n.gradient,n.transform=this._.transform,n}if(null==i&&t.is(r,"string")){if(r==h&&"none"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;for(var s=r.split(u),o={},l=0,f=s.length;l<f;l++)r=s[l],r in this.attrs?o[r]=this.attrs[r]:t.is(this.paper.customAttributes[r],"function")?o[r]=this.paper.customAttributes[r].def:o[r]=t._availableAttrs[r];return f-1?o:o[s[0]]}if(this.attrs&&null==i&&t.is(r,"array")){for(o={},l=0,f=r.length;l<f;l++)o[r[l]]=this.attr(r[l]);return o}var p;null!=i&&(p={},p[r]=i),null==i&&t.is(r,"object")&&(p=r);for(var d in p)c("raphael.attr."+d+"."+this.id,this,p[d]);if(p){for(d in this.paper.customAttributes)if(this.paper.customAttributes[e](d)&&p[e](d)&&t.is(this.paper.customAttributes[d],"function")){var g=this.paper.customAttributes[d].apply(this,[].concat(p[d]));this.attrs[d]=p[d];for(var v in g)g[e](v)&&(p[v]=g[v])}p.text&&"text"==this.type&&(this.textpath.string=p.text),A(this,p)}return this},M.toFront=function(){return!this.removed&&this.node.parentNode.appendChild(this.node),this.paper&&this.paper.top!=this&&t._tofront(this,this.paper),this},M.toBack=function(){return this.removed?this:(this.node.parentNode.firstChild!=this.node&&(this.node.parentNode.insertBefore(this.node,this.node.parentNode.firstChild),t._toback(this,this.paper)),this)},M.insertAfter=function(e){return this.removed?this:(e.constructor==t.st.constructor&&(e=e[e.length-1]),e.node.nextSibling?e.node.parentNode.insertBefore(this.node,e.node.nextSibling):e.node.parentNode.appendChild(this.node),t._insertafter(this,e,this.paper),this)},M.insertBefore=function(e){return this.removed?this:(e.constructor==t.st.constructor&&(e=e[0]),e.node.parentNode.insertBefore(this.node,e.node),t._insertbefore(this,e,this.paper),this)},M.blur=function(e){var r=this.node.runtimeStyle,i=r.filter;return i=i.replace(x,d),0!==+e?(this.attrs.blur=e,r.filter=i+p+f+".Blur(pixelradius="+(+e||1.5)+")",r.margin=t.format("-{0}px 0 0 -{0}px",a(+e||1.5))):(r.filter=i,r.margin=0,delete this.attrs.blur),this},t._engine.path=function(t,e){var r=N("shape");r.style.cssText=m,r.coordsize=b+p+b,r.coordorigin=e.coordorigin;var i=new E(r,e),n={fill:"none",stroke:"#000"};t&&(n.path=t),i.type="path",i.path=[],i.Path=d,A(i,n),e.canvas&&e.canvas.appendChild(r);var a=N("skew");return a.on=!0,r.appendChild(a),i.skew=a,i.transform(d),i},t._engine.rect=function(e,r,i,n,a,s){var o=t._rectPath(r,i,n,a,s),l=e.path(o),h=l.attrs;return l.X=h.x=r,l.Y=h.y=i,l.W=h.width=n,l.H=h.height=a,h.r=s,h.path=o,l.type="rect",l},t._engine.ellipse=function(t,e,r,i,n){var a=t.path(),s=a.attrs;return a.X=e-i,a.Y=r-n,a.W=2*i,a.H=2*n,a.type="ellipse",A(a,{cx:e,cy:r,rx:i,ry:n}),a},t._engine.circle=function(t,e,r,i){var n=t.path(),a=n.attrs;return n.X=e-i,n.Y=r-i,n.W=n.H=2*i,n.type="circle",A(n,{cx:e,cy:r,r:i}),n},t._engine.image=function(e,r,i,n,a,s){var o=t._rectPath(i,n,a,s),l=e.path(o).attr({stroke:"none"}),u=l.attrs,c=l.node,f=c.getElementsByTagName(h)[0];return u.src=r,l.X=u.x=i,l.Y=u.y=n,l.W=u.width=a,l.H=u.height=s,u.path=o,l.type="image",f.parentNode==c&&c.removeChild(f),f.rotate=!0,f.src=r,f.type="tile",l._.fillpos=[i,n],l._.fillsize=[a,s],c.appendChild(f),C(l,1,1,0,0,0),l},t._engine.text=function(e,i,n,s){var o=N("shape"),l=N("path"),h=N("textpath");i=i||0,n=n||0,s=s||"",l.v=t.format("m{0},{1}l{2},{1}",a(i*b),a(n*b),a(i*b)+1),l.textpathok=!0,h.string=r(s),h.on=!0,o.style.cssText=m,o.coordsize=b+p+b,o.coordorigin="0 0";var u=new E(o,e),c={fill:"#000",stroke:"none",font:t._availableAttrs.font,text:s};u.shape=o,u.path=l,u.textpath=h,u.type="text",u.attrs.text=r(s),u.attrs.x=i,u.attrs.y=n,u.attrs.w=1,u.attrs.h=1,A(u,c),o.appendChild(h),o.appendChild(l),e.canvas.appendChild(o);var f=N("skew");return f.on=!0,o.appendChild(f),u.skew=f,u.transform(d),u},t._engine.setSize=function(e,r){var i=this.canvas.style;return this.width=e,this.height=r,e==+e&&(e+="px"),r==+r&&(r+="px"),i.width=e,i.height=r,i.clip="rect(0 "+e+" "+r+" 0)",this._viewBox&&t._engine.setViewBox.apply(this,this._viewBox),this},t._engine.setViewBox=function(e,r,i,n,a){t.eve("raphael.setViewBox",this,this._viewBox,[e,r,i,n,a]);var s=this.getSize(),o=s.width,l=s.height,h,u;return a&&(h=l/n,u=o/i,i*h<o&&(e-=(o-i*h)/2/h),n*u<l&&(r-=(l-n*u)/2/u)),this._viewBox=[e,r,i,n,!!a],this._viewBoxShift={dx:-e,dy:-r,scale:s},this.forEach(function(t){t.transform("...")}),this};var N;t._engine.initWin=function(t){var e=t.document;e.styleSheets.length<31?e.createStyleSheet().addRule(".rvml","behavior:url(#default#VML)"):e.styleSheets[0].addRule(".rvml","behavior:url(#default#VML)");try{!e.namespaces.rvml&&e.namespaces.add("rvml","urn:schemas-microsoft-com:vml"),N=function(t){return e.createElement("<rvml:"+t+' class="rvml">')}}catch(r){N=function(t){return e.createElement("<"+t+' xmlns="urn:schemas-microsoft.com:vml" class="rvml">')}}},t._engine.initWin(t._g.win),t._engine.create=function(){var e=t._getContainer.apply(0,arguments),r=e.container,i=e.height,n,a=e.width,s=e.x,o=e.y;if(!r)throw new Error("VML container not found.");var l=new t._Paper,h=l.canvas=t._g.doc.createElement("div"),u=h.style;return s=s||0,o=o||0,a=a||512,i=i||342,l.width=a,l.height=i,a==+a&&(a+="px"),i==+i&&(i+="px"),l.coordsize=1e3*b+p+1e3*b,l.coordorigin="0 0",l.span=t._g.doc.createElement("span"),l.span.style.cssText="position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;",h.appendChild(l.span),u.cssText=t.format("top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden",a,i),1==r?(t._g.doc.body.appendChild(h),u.left=s+"px",u.top=o+"px",u.position="absolute"):r.firstChild?r.insertBefore(h,r.firstChild):r.appendChild(h),l.renderfix=function(){},l},t.prototype.clear=function(){t.eve("raphael.clear",this),this.canvas.innerHTML=d,this.span=t._g.doc.createElement("span"),this.span.style.cssText="position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;",this.canvas.appendChild(this.span),this.bottom=this.top=null},t.prototype.remove=function(){t.eve("raphael.remove",this),this.canvas.parentNode.removeChild(this.canvas);for(var e in this)this[e]="function"==typeof this[e]?t._removedFactory(e):null;return!0};var L=t.st;for(var z in M)M[e](z)&&!L[e](z)&&(L[z]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t].apply(r,e)})}}(z))}}.apply(e,i),!(void 0!==n&&(t.exports=n))}])});
},{}],498:[function(require,module,exports){
(function (global){
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.reduxLogger=e.reduxLogger||{})}(this,function(e){"use strict";function t(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}function r(e,t){Object.defineProperty(this,"kind",{value:e,enumerable:!0}),t&&t.length&&Object.defineProperty(this,"path",{value:t,enumerable:!0})}function n(e,t,r){n.super_.call(this,"E",e),Object.defineProperty(this,"lhs",{value:t,enumerable:!0}),Object.defineProperty(this,"rhs",{value:r,enumerable:!0})}function o(e,t){o.super_.call(this,"N",e),Object.defineProperty(this,"rhs",{value:t,enumerable:!0})}function i(e,t){i.super_.call(this,"D",e),Object.defineProperty(this,"lhs",{value:t,enumerable:!0})}function a(e,t,r){a.super_.call(this,"A",e),Object.defineProperty(this,"index",{value:t,enumerable:!0}),Object.defineProperty(this,"item",{value:r,enumerable:!0})}function f(e,t,r){var n=e.slice((r||t)+1||e.length);return e.length=t<0?e.length+t:t,e.push.apply(e,n),e}function u(e){var t="undefined"==typeof e?"undefined":N(e);return"object"!==t?t:e===Math?"math":null===e?"null":Array.isArray(e)?"array":"[object Date]"===Object.prototype.toString.call(e)?"date":"function"==typeof e.toString&&/^\/.*\//.test(e.toString())?"regexp":"object"}function l(e,t,r,c,s,d,p){s=s||[],p=p||[];var g=s.slice(0);if("undefined"!=typeof d){if(c){if("function"==typeof c&&c(g,d))return;if("object"===("undefined"==typeof c?"undefined":N(c))){if(c.prefilter&&c.prefilter(g,d))return;if(c.normalize){var h=c.normalize(g,d,e,t);h&&(e=h[0],t=h[1])}}}g.push(d)}"regexp"===u(e)&&"regexp"===u(t)&&(e=e.toString(),t=t.toString());var y="undefined"==typeof e?"undefined":N(e),v="undefined"==typeof t?"undefined":N(t),b="undefined"!==y||p&&p[p.length-1].lhs&&p[p.length-1].lhs.hasOwnProperty(d),m="undefined"!==v||p&&p[p.length-1].rhs&&p[p.length-1].rhs.hasOwnProperty(d);if(!b&&m)r(new o(g,t));else if(!m&&b)r(new i(g,e));else if(u(e)!==u(t))r(new n(g,e,t));else if("date"===u(e)&&e-t!==0)r(new n(g,e,t));else if("object"===y&&null!==e&&null!==t)if(p.filter(function(t){return t.lhs===e}).length)e!==t&&r(new n(g,e,t));else{if(p.push({lhs:e,rhs:t}),Array.isArray(e)){var w;e.length;for(w=0;w<e.length;w++)w>=t.length?r(new a(g,w,new i(void 0,e[w]))):l(e[w],t[w],r,c,g,w,p);for(;w<t.length;)r(new a(g,w,new o(void 0,t[w++])))}else{var x=Object.keys(e),S=Object.keys(t);x.forEach(function(n,o){var i=S.indexOf(n);i>=0?(l(e[n],t[n],r,c,g,n,p),S=f(S,i)):l(e[n],void 0,r,c,g,n,p)}),S.forEach(function(e){l(void 0,t[e],r,c,g,e,p)})}p.length=p.length-1}else e!==t&&("number"===y&&isNaN(e)&&isNaN(t)||r(new n(g,e,t)))}function c(e,t,r,n){return n=n||[],l(e,t,function(e){e&&n.push(e)},r),n.length?n:void 0}function s(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case"A":s(o[r.path[n]],r.index,r.item);break;case"D":delete o[r.path[n]];break;case"E":case"N":o[r.path[n]]=r.rhs}}else switch(r.kind){case"A":s(e[t],r.index,r.item);break;case"D":e=f(e,t);break;case"E":case"N":e[t]=r.rhs}return e}function d(e,t,r){if(e&&t&&r&&r.kind){for(var n=e,o=-1,i=r.path?r.path.length-1:0;++o<i;)"undefined"==typeof n[r.path[o]]&&(n[r.path[o]]="number"==typeof r.path[o]?[]:{}),n=n[r.path[o]];switch(r.kind){case"A":s(r.path?n[r.path[o]]:n,r.index,r.item);break;case"D":delete n[r.path[o]];break;case"E":case"N":n[r.path[o]]=r.rhs}}}function p(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case"A":p(o[r.path[n]],r.index,r.item);break;case"D":o[r.path[n]]=r.lhs;break;case"E":o[r.path[n]]=r.lhs;break;case"N":delete o[r.path[n]]}}else switch(r.kind){case"A":p(e[t],r.index,r.item);break;case"D":e[t]=r.lhs;break;case"E":e[t]=r.lhs;break;case"N":e=f(e,t)}return e}function g(e,t,r){if(e&&t&&r&&r.kind){var n,o,i=e;for(o=r.path.length-1,n=0;n<o;n++)"undefined"==typeof i[r.path[n]]&&(i[r.path[n]]={}),i=i[r.path[n]];switch(r.kind){case"A":p(i[r.path[n]],r.index,r.item);break;case"D":i[r.path[n]]=r.lhs;break;case"E":i[r.path[n]]=r.lhs;break;case"N":delete i[r.path[n]]}}}function h(e,t,r){if(e&&t){var n=function(n){r&&!r(e,t,n)||d(e,t,n)};l(e,t,n)}}function y(e){return"color: "+F[e].color+"; font-weight: bold"}function v(e){var t=e.kind,r=e.path,n=e.lhs,o=e.rhs,i=e.index,a=e.item;switch(t){case"E":return[r.join("."),n,"→",o];case"N":return[r.join("."),o];case"D":return[r.join(".")];case"A":return[r.join(".")+"["+i+"]",a];default:return[]}}function b(e,t,r,n){var o=c(e,t);try{n?r.groupCollapsed("diff"):r.group("diff")}catch(e){r.log("diff")}o?o.forEach(function(e){var t=e.kind,n=v(e);r.log.apply(r,["%c "+F[t].text,y(t)].concat(P(n)))}):r.log("—— no diff ——");try{r.groupEnd()}catch(e){r.log("—— diff end —— ")}}function m(e,t,r,n){switch("undefined"==typeof e?"undefined":N(e)){case"object":return"function"==typeof e[n]?e[n].apply(e,P(r)):e[n];case"function":return e(t);default:return e}}function w(e){var t=e.timestamp,r=e.duration;return function(e,n,o){var i=["action"];return i.push("%c"+String(e.type)),t&&i.push("%c@ "+n),r&&i.push("%c(in "+o.toFixed(2)+" ms)"),i.join(" ")}}function x(e,t){var r=t.logger,n=t.actionTransformer,o=t.titleFormatter,i=void 0===o?w(t):o,a=t.collapsed,f=t.colors,u=t.level,l=t.diff,c="undefined"==typeof t.titleFormatter;e.forEach(function(o,s){var d=o.started,p=o.startedTime,g=o.action,h=o.prevState,y=o.error,v=o.took,w=o.nextState,x=e[s+1];x&&(w=x.prevState,v=x.started-d);var S=n(g),k="function"==typeof a?a(function(){return w},g,o):a,j=D(p),E=f.title?"color: "+f.title(S)+";":"",A=["color: gray; font-weight: lighter;"];A.push(E),t.timestamp&&A.push("color: gray; font-weight: lighter;"),t.duration&&A.push("color: gray; font-weight: lighter;");var O=i(S,j,v);try{k?f.title&&c?r.groupCollapsed.apply(r,["%c "+O].concat(A)):r.groupCollapsed(O):f.title&&c?r.group.apply(r,["%c "+O].concat(A)):r.group(O)}catch(e){r.log(O)}var N=m(u,S,[h],"prevState"),P=m(u,S,[S],"action"),C=m(u,S,[y,h],"error"),F=m(u,S,[w],"nextState");if(N)if(f.prevState){var L="color: "+f.prevState(h)+"; font-weight: bold";r[N]("%c prev state",L,h)}else r[N]("prev state",h);if(P)if(f.action){var T="color: "+f.action(S)+"; font-weight: bold";r[P]("%c action    ",T,S)}else r[P]("action    ",S);if(y&&C)if(f.error){var M="color: "+f.error(y,h)+"; font-weight: bold;";r[C]("%c error     ",M,y)}else r[C]("error     ",y);if(F)if(f.nextState){var _="color: "+f.nextState(w)+"; font-weight: bold";r[F]("%c next state",_,w)}else r[F]("next state",w);l&&b(h,w,r,k);try{r.groupEnd()}catch(e){r.log("—— log end ——")}})}function S(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},L,e),r=t.logger,n=t.stateTransformer,o=t.errorTransformer,i=t.predicate,a=t.logErrors,f=t.diffPredicate;if("undefined"==typeof r)return function(){return function(e){return function(t){return e(t)}}};if(e.getState&&e.dispatch)return console.error("[redux-logger] redux-logger not installed. Make sure to pass logger instance as middleware:\n// Logger with default options\nimport { logger } from 'redux-logger'\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger)\n)\n// Or you can create your own logger with custom options http://bit.ly/redux-logger-options\nimport createLogger from 'redux-logger'\nconst logger = createLogger({\n  // ...options\n});\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger)\n)\n"),function(){return function(e){return function(t){return e(t)}}};var u=[];return function(e){var r=e.getState;return function(e){return function(l){if("function"==typeof i&&!i(r,l))return e(l);var c={};u.push(c),c.started=O.now(),c.startedTime=new Date,c.prevState=n(r()),c.action=l;var s=void 0;if(a)try{s=e(l)}catch(e){c.error=o(e)}else s=e(l);c.took=O.now()-c.started,c.nextState=n(r());var d=t.diff&&"function"==typeof f?f(r,l):t.diff;if(x(u,Object.assign({},t,{diff:d})),u.length=0,c.error)throw c.error;return s}}}}var k,j,E=function(e,t){return new Array(t+1).join(e)},A=function(e,t){return E("0",t-e.toString().length)+e},D=function(e){return A(e.getHours(),2)+":"+A(e.getMinutes(),2)+":"+A(e.getSeconds(),2)+"."+A(e.getMilliseconds(),3)},O="undefined"!=typeof performance&&null!==performance&&"function"==typeof performance.now?performance:Date,N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P=function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)},C=[];k="object"===("undefined"==typeof global?"undefined":N(global))&&global?global:"undefined"!=typeof window?window:{},j=k.DeepDiff,j&&C.push(function(){"undefined"!=typeof j&&k.DeepDiff===c&&(k.DeepDiff=j,j=void 0)}),t(n,r),t(o,r),t(i,r),t(a,r),Object.defineProperties(c,{diff:{value:c,enumerable:!0},observableDiff:{value:l,enumerable:!0},applyDiff:{value:h,enumerable:!0},applyChange:{value:d,enumerable:!0},revertChange:{value:g,enumerable:!0},isConflict:{value:function(){return"undefined"!=typeof j},enumerable:!0},noConflict:{value:function(){return C&&(C.forEach(function(e){e()}),C=null),c},enumerable:!0}});var F={E:{color:"#2196F3",text:"CHANGED:"},N:{color:"#4CAF50",text:"ADDED:"},D:{color:"#F44336",text:"DELETED:"},A:{color:"#2196F3",text:"ARRAY:"}},L={level:"log",logger:console,logErrors:!0,collapsed:void 0,predicate:void 0,duration:!1,timestamp:!0,stateTransformer:function(e){return e},actionTransformer:function(e){return e},errorTransformer:function(e){return e},colors:{title:function(){return"inherit"},prevState:function(){return"#9E9E9E"},action:function(){return"#03A9F4"},nextState:function(){return"#4CAF50"},error:function(){return"#F20404"}},diff:!1,diffPredicate:void 0,transformer:void 0},T=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.dispatch,r=e.getState;return"function"==typeof t||"function"==typeof r?S()({dispatch:t,getState:r}):void console.error("\n[redux-logger v3] BREAKING CHANGE\n[redux-logger v3] Since 3.0.0 redux-logger exports by default logger with default settings.\n[redux-logger v3] Change\n[redux-logger v3] import createLogger from 'redux-logger'\n[redux-logger v3] to\n[redux-logger v3] import { createLogger } from 'redux-logger'\n")};e.defaults=L,e.createLogger=S,e.logger=T,e.default=T,Object.defineProperty(e,"__esModule",{value:!0})});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],499:[function(require,module,exports){
'use strict';

exports.__esModule = true;
function createThunkMiddleware(extraArgument) {
  return function (_ref) {
    var dispatch = _ref.dispatch,
        getState = _ref.getState;
    return function (next) {
      return function (action) {
        if (typeof action === 'function') {
          return action(dispatch, getState, extraArgument);
        }

        return next(action);
      };
    };
  };
}

var thunk = createThunkMiddleware();
thunk.withExtraArgument = createThunkMiddleware;

exports['default'] = thunk;
},{}],500:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports['default'] = applyMiddleware;

var _compose = require('./compose');

var _compose2 = _interopRequireDefault(_compose);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */
function applyMiddleware() {
  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  return function (createStore) {
    return function (reducer, preloadedState, enhancer) {
      var store = createStore(reducer, preloadedState, enhancer);
      var _dispatch = store.dispatch;
      var chain = [];

      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch(action) {
          return _dispatch(action);
        }
      };
      chain = middlewares.map(function (middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = _compose2['default'].apply(undefined, chain)(store.dispatch);

      return _extends({}, store, {
        dispatch: _dispatch
      });
    };
  };
}
},{"./compose":503}],501:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports['default'] = bindActionCreators;
function bindActionCreator(actionCreator, dispatch) {
  return function () {
    return dispatch(actionCreator.apply(undefined, arguments));
  };
}

/**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass a single function as the first argument,
 * and get a function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */
function bindActionCreators(actionCreators, dispatch) {
  if (typeof actionCreators === 'function') {
    return bindActionCreator(actionCreators, dispatch);
  }

  if (typeof actionCreators !== 'object' || actionCreators === null) {
    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
  }

  var keys = Object.keys(actionCreators);
  var boundActionCreators = {};
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var actionCreator = actionCreators[key];
    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }
  return boundActionCreators;
}
},{}],502:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports['default'] = combineReducers;

var _createStore = require('./createStore');

var _isPlainObject = require('lodash/isPlainObject');

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _warning = require('./utils/warning');

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function getUndefinedStateErrorMessage(key, action) {
  var actionType = action && action.type;
  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';

  return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state.';
}

function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
  var reducerKeys = Object.keys(reducers);
  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

  if (reducerKeys.length === 0) {
    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
  }

  if (!(0, _isPlainObject2['default'])(inputState)) {
    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
  }

  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
  });

  unexpectedKeys.forEach(function (key) {
    unexpectedKeyCache[key] = true;
  });

  if (unexpectedKeys.length > 0) {
    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
  }
}

function assertReducerSanity(reducers) {
  Object.keys(reducers).forEach(function (key) {
    var reducer = reducers[key];
    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });

    if (typeof initialState === 'undefined') {
      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');
    }

    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
    if (typeof reducer(undefined, { type: type }) === 'undefined') {
      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');
    }
  });
}

/**
 * Turns an object whose values are different reducer functions, into a single
 * reducer function. It will call every child reducer, and gather their results
 * into a single state object, whose keys correspond to the keys of the passed
 * reducer functions.
 *
 * @param {Object} reducers An object whose values correspond to different
 * reducer functions that need to be combined into one. One handy way to obtain
 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
 * undefined for any action. Instead, they should return their initial state
 * if the state passed to them was undefined, and the current state for any
 * unrecognized action.
 *
 * @returns {Function} A reducer function that invokes every reducer inside the
 * passed object, and builds a state object with the same shape.
 */
function combineReducers(reducers) {
  var reducerKeys = Object.keys(reducers);
  var finalReducers = {};
  for (var i = 0; i < reducerKeys.length; i++) {
    var key = reducerKeys[i];

    if ("production" !== 'production') {
      if (typeof reducers[key] === 'undefined') {
        (0, _warning2['default'])('No reducer provided for key "' + key + '"');
      }
    }

    if (typeof reducers[key] === 'function') {
      finalReducers[key] = reducers[key];
    }
  }
  var finalReducerKeys = Object.keys(finalReducers);

  if ("production" !== 'production') {
    var unexpectedKeyCache = {};
  }

  var sanityError;
  try {
    assertReducerSanity(finalReducers);
  } catch (e) {
    sanityError = e;
  }

  return function combination() {
    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
    var action = arguments[1];

    if (sanityError) {
      throw sanityError;
    }

    if ("production" !== 'production') {
      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
      if (warningMessage) {
        (0, _warning2['default'])(warningMessage);
      }
    }

    var hasChanged = false;
    var nextState = {};
    for (var i = 0; i < finalReducerKeys.length; i++) {
      var key = finalReducerKeys[i];
      var reducer = finalReducers[key];
      var previousStateForKey = state[key];
      var nextStateForKey = reducer(previousStateForKey, action);
      if (typeof nextStateForKey === 'undefined') {
        var errorMessage = getUndefinedStateErrorMessage(key, action);
        throw new Error(errorMessage);
      }
      nextState[key] = nextStateForKey;
      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
    }
    return hasChanged ? nextState : state;
  };
}
},{"./createStore":504,"./utils/warning":506,"lodash/isPlainObject":454}],503:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = compose;
/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */

function compose() {
  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  var last = funcs[funcs.length - 1];
  var rest = funcs.slice(0, -1);
  return function () {
    return rest.reduceRight(function (composed, f) {
      return f(composed);
    }, last.apply(undefined, arguments));
  };
}
},{}],504:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports.ActionTypes = undefined;
exports['default'] = createStore;

var _isPlainObject = require('lodash/isPlainObject');

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _symbolObservable = require('symbol-observable');

var _symbolObservable2 = _interopRequireDefault(_symbolObservable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */
var ActionTypes = exports.ActionTypes = {
  INIT: '@@redux/INIT'
};

/**
 * Creates a Redux store that holds the state tree.
 * The only way to change the data in the store is to call `dispatch()` on it.
 *
 * There should only be a single store in your app. To specify how different
 * parts of the state tree respond to actions, you may combine several reducers
 * into a single reducer function by using `combineReducers`.
 *
 * @param {Function} reducer A function that returns the next state tree, given
 * the current state tree and the action to handle.
 *
 * @param {any} [preloadedState] The initial state. You may optionally specify it
 * to hydrate the state from the server in universal apps, or to restore a
 * previously serialized user session.
 * If you use `combineReducers` to produce the root reducer function, this must be
 * an object with the same shape as `combineReducers` keys.
 *
 * @param {Function} enhancer The store enhancer. You may optionally specify it
 * to enhance the store with third-party capabilities such as middleware,
 * time travel, persistence, etc. The only store enhancer that ships with Redux
 * is `applyMiddleware()`.
 *
 * @returns {Store} A Redux store that lets you read the state, dispatch actions
 * and subscribe to changes.
 */
function createStore(reducer, preloadedState, enhancer) {
  var _ref2;

  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error('Expected the enhancer to be a function.');
    }

    return enhancer(createStore)(reducer, preloadedState);
  }

  if (typeof reducer !== 'function') {
    throw new Error('Expected the reducer to be a function.');
  }

  var currentReducer = reducer;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }

  /**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */
  function getState() {
    return currentState;
  }

  /**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */
  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error('Expected listener to be a function.');
    }

    var isSubscribed = true;

    ensureCanMutateNextListeners();
    nextListeners.push(listener);

    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      isSubscribed = false;

      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
    };
  }

  /**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */
  function dispatch(action) {
    if (!(0, _isPlainObject2['default'])(action)) {
      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
    }

    if (typeof action.type === 'undefined') {
      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
    }

    if (isDispatching) {
      throw new Error('Reducers may not dispatch actions.');
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;
    for (var i = 0; i < listeners.length; i++) {
      listeners[i]();
    }

    return action;
  }

  /**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */
  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error('Expected the nextReducer to be a function.');
    }

    currentReducer = nextReducer;
    dispatch({ type: ActionTypes.INIT });
  }

  /**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/zenparsing/es-observable
   */
  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object') {
          throw new TypeError('Expected the observer to be an object.');
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return { unsubscribe: unsubscribe };
      }
    }, _ref[_symbolObservable2['default']] = function () {
      return this;
    }, _ref;
  }

  // When a store is created, an "INIT" action is dispatched so that every
  // reducer returns their initial state. This effectively populates
  // the initial state tree.
  dispatch({ type: ActionTypes.INIT });

  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[_symbolObservable2['default']] = observable, _ref2;
}
},{"lodash/isPlainObject":454,"symbol-observable":511}],505:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;

var _createStore = require('./createStore');

var _createStore2 = _interopRequireDefault(_createStore);

var _combineReducers = require('./combineReducers');

var _combineReducers2 = _interopRequireDefault(_combineReducers);

var _bindActionCreators = require('./bindActionCreators');

var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);

var _applyMiddleware = require('./applyMiddleware');

var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);

var _compose = require('./compose');

var _compose2 = _interopRequireDefault(_compose);

var _warning = require('./utils/warning');

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/*
* This is a dummy function to check if the function name has been altered by minification.
* If the function has been minified and NODE_ENV !== 'production', warn the user.
*/
function isCrushed() {}

if ("production" !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
  (0, _warning2['default'])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
}

exports.createStore = _createStore2['default'];
exports.combineReducers = _combineReducers2['default'];
exports.bindActionCreators = _bindActionCreators2['default'];
exports.applyMiddleware = _applyMiddleware2['default'];
exports.compose = _compose2['default'];
},{"./applyMiddleware":500,"./bindActionCreators":501,"./combineReducers":502,"./compose":503,"./createStore":504,"./utils/warning":506}],506:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports['default'] = warning;
/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */
  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
    /* eslint-disable no-empty */
  } catch (e) {}
  /* eslint-enable no-empty */
}
},{}],507:[function(require,module,exports){
(function (global){
/**
 * Copyright (c) 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
 * additional grant of patent rights can be found in the PATENTS file in
 * the same directory.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration. If the Promise is rejected, however, the
          // result for this iteration will be rejected with the same
          // reason. Note that rejections of yielded Promises are not
          // thrown back into the generator function, as is the case
          // when an awaited Promise is rejected. This difference in
          // behavior between yield and await is important, because it
          // allows the consumer to decide what to do with the yielded
          // rejection (swallow it and continue, manually .throw it back
          // into the generator, abandon iteration, whatever). With
          // await, by contrast, there is no opportunity to examine the
          // rejection reason outside the generator function, so the
          // only option is to throw it from the await expression, and
          // let the generator function handle the exception.
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    if (typeof global.process === "object" && global.process.domain) {
      invoke = global.process.domain.bind(invoke);
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // Among the various tricks for obtaining a reference to the global
  // object, this seems to be the most reliable technique that does not
  // use indirect eval (which violates Content Security Policy).
  typeof global === "object" ? global :
  typeof window === "object" ? window :
  typeof self === "object" ? self : this
);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],508:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports.defaultMemoize = defaultMemoize;
exports.createSelectorCreator = createSelectorCreator;
exports.createStructuredSelector = createStructuredSelector;
function defaultEqualityCheck(a, b) {
  return a === b;
}

function areArgumentsShallowlyEqual(equalityCheck, prev, next) {
  if (prev === null || next === null || prev.length !== next.length) {
    return false;
  }

  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.
  var length = prev.length;
  for (var i = 0; i < length; i++) {
    if (!equalityCheck(prev[i], next[i])) {
      return false;
    }
  }

  return true;
}

function defaultMemoize(func) {
  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;

  var lastArgs = null;
  var lastResult = null;
  // we reference arguments instead of spreading them for performance reasons
  return function () {
    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {
      // apply arguments instead of spreading for performance.
      lastResult = func.apply(null, arguments);
    }

    lastArgs = arguments;
    return lastResult;
  };
}

function getDependencies(funcs) {
  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;

  if (!dependencies.every(function (dep) {
    return typeof dep === 'function';
  })) {
    var dependencyTypes = dependencies.map(function (dep) {
      return typeof dep;
    }).join(', ');
    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));
  }

  return dependencies;
}

function createSelectorCreator(memoize) {
  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    memoizeOptions[_key - 1] = arguments[_key];
  }

  return function () {
    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      funcs[_key2] = arguments[_key2];
    }

    var recomputations = 0;
    var resultFunc = funcs.pop();
    var dependencies = getDependencies(funcs);

    var memoizedResultFunc = memoize.apply(undefined, [function () {
      recomputations++;
      // apply arguments instead of spreading for performance.
      return resultFunc.apply(null, arguments);
    }].concat(memoizeOptions));

    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.
    var selector = defaultMemoize(function () {
      var params = [];
      var length = dependencies.length;

      for (var i = 0; i < length; i++) {
        // apply arguments instead of spreading and mutate a local list of params for performance.
        params.push(dependencies[i].apply(null, arguments));
      }

      // apply arguments instead of spreading for performance.
      return memoizedResultFunc.apply(null, params);
    });

    selector.resultFunc = resultFunc;
    selector.recomputations = function () {
      return recomputations;
    };
    selector.resetRecomputations = function () {
      return recomputations = 0;
    };
    return selector;
  };
}

var createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);

function createStructuredSelector(selectors) {
  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;

  if (typeof selectors !== 'object') {
    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));
  }
  var objectKeys = Object.keys(selectors);
  return selectorCreator(objectKeys.map(function (key) {
    return selectors[key];
  }), function () {
    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      values[_key3] = arguments[_key3];
    }

    return values.reduce(function (composition, value, index) {
      composition[objectKeys[index]] = value;
      return composition;
    }, {});
  });
}
},{}],509:[function(require,module,exports){
'use strict';
module.exports = function (str) {
	return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
		return '%' + c.charCodeAt(0).toString(16).toUpperCase();
	});
};

},{}],510:[function(require,module,exports){
function Handler(f, once, priority) {
  this.f = f
  this.once = once
  this.priority = priority
}

function Subscription() {
  this.handlers = []
}
exports.Subscription = Subscription

function insert(s, handler) {
  var pos = 0
  for (; pos < s.handlers.length; pos++)
    if (s.handlers[pos].priority < handler.priority) break
  s.handlers = s.handlers.slice(0, pos).concat(handler).concat(s.handlers.slice(pos))
}

Subscription.prototype.handlersForDispatch = function() {
  var handlers = this.handlers, updated = null
  for (var i = handlers.length - 1; i >= 0; i--) if (handlers[i].once) {
    if (!updated) updated = handlers.slice()
    updated.splice(i, 1)
  }
  if (updated) this.handlers = updated
  return handlers
}

Subscription.prototype.add = function(f, priority) {
  insert(this, new Handler(f, false, priority || 0))
}

Subscription.prototype.addOnce = function(f, priority) {
  insert(this, new Handler(f, true, priority || 0))
}

Subscription.prototype.remove = function(f) {
  for (var i = 0; i < this.handlers.length; i++) if (this.handlers[i].f == f) {
    this.handlers = this.handlers.slice(0, i).concat(this.handlers.slice(i + 1))
    return
  }
}

Subscription.prototype.hasHandler = function() {
  return this.handlers.length > 0
}

Subscription.prototype.dispatch = function() {
  var handlers = this.handlersForDispatch()
  for (var i = 0; i < handlers.length; i++)
    handlers[i].f.apply(null, arguments)
}

function PipelineSubscription() {
  Subscription.call(this)
}
exports.PipelineSubscription = PipelineSubscription

PipelineSubscription.prototype = new Subscription

PipelineSubscription.prototype.dispatch = function(value) {
  var handlers = this.handlersForDispatch()
  for (var i = 0; i < handlers.length; i++)
    value = handlers[i].f(value)
  return value
}

function StoppableSubscription() {
  Subscription.call(this)
}
exports.StoppableSubscription = StoppableSubscription

StoppableSubscription.prototype = new Subscription

StoppableSubscription.prototype.dispatch = function() {
  var handlers = this.handlersForDispatch()
  for (var i = 0; i < handlers.length; i++) {
    var result = handlers[i].f.apply(null, arguments)
    if (result) return result
  }
}

function DOMSubscription() {
  Subscription.call(this)
}
exports.DOMSubscription = DOMSubscription

DOMSubscription.prototype = new Subscription

DOMSubscription.prototype.dispatch = function(event) {
  var handlers = this.handlersForDispatch()
  for (var i = 0; i < handlers.length; i++)
    if (handlers[i].f(event) || event.defaultPrevented) return true
  return false
}

},{}],511:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ponyfill = require('./ponyfill.js');

var _ponyfill2 = _interopRequireDefault(_ponyfill);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var root; /* global window */


if (typeof self !== 'undefined') {
  root = self;
} else if (typeof window !== 'undefined') {
  root = window;
} else if (typeof global !== 'undefined') {
  root = global;
} else if (typeof module !== 'undefined') {
  root = module;
} else {
  root = Function('return this')();
}

var result = (0, _ponyfill2['default'])(root);
exports['default'] = result;
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./ponyfill.js":512}],512:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports['default'] = symbolObservablePonyfill;
function symbolObservablePonyfill(root) {
	var result;
	var _Symbol = root.Symbol;

	if (typeof _Symbol === 'function') {
		if (_Symbol.observable) {
			result = _Symbol.observable;
		} else {
			result = _Symbol('observable');
			_Symbol.observable = result;
		}
	} else {
		result = '@@observable';
	}

	return result;
};
},{}],513:[function(require,module,exports){
(function (setImmediate,clearImmediate){
var nextTick = require('process/browser.js').nextTick;
var apply = Function.prototype.apply;
var slice = Array.prototype.slice;
var immediateIds = {};
var nextImmediateId = 0;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) { timeout.close(); };

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// That's not how node.js implements it but the exposed api is the same.
exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
  var id = nextImmediateId++;
  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

  immediateIds[id] = true;

  nextTick(function onNextTick() {
    if (immediateIds[id]) {
      // fn.call() is faster so we optimize for the common use-case
      // @see http://jsperf.com/call-apply-segu
      if (args) {
        fn.apply(null, args);
      } else {
        fn.call(null);
      }
      // Prevent ids from leaking
      exports.clearImmediate(id);
    }
  });

  return id;
};

exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
  delete immediateIds[id];
};
}).call(this,require("timers").setImmediate,require("timers").clearImmediate)

},{"process/browser.js":486,"timers":513}],514:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var punycode = require('punycode');
var util = require('./util');

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
}

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    // Special case for a simple path URL
    simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,

    // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = require('querystring');

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;

  var u = new Url;
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916
  var queryIndex = url.indexOf('?'),
      splitter =
          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);

  var rest = url;

  // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"
  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);
    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];
      if (simplePath[2]) {
        this.search = simplePath[2];
        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }
      return this;
    }
  }

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {

    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c

    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.

    // find the first instance of any hostEndingChars
    var hostEnd = -1;
    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }

    // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.
    var auth, atSign;
    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    }

    // Now we have a portion which is definitely the auth.
    // Pull that off.
    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    }

    // the host is the remaining to the left of the first non-host char
    hostEnd = -1;
    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }
    // if we still have not hit it, then the entire thing is a host.
    if (hostEnd === -1)
      hostEnd = rest.length;

    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd);

    // pull out port.
    this.parseHost();

    // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    this.hostname = this.hostname || '';

    // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = this.hostname[0] === '[' &&
        this.hostname[this.hostname.length - 1] === ']';

    // validate a little.
    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          // we test again with ASCII char only
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host;

    // strip [ and ] from the hostname
    // the host field still retains them, though
    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  // now rest is set to the post-host stuff.
  // chop off any delim chars.
  if (!unsafeProtocol[lowerProto]) {

    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1)
        continue;
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  // chop off from the tail first.
  var hash = rest.indexOf('#');
  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);
    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }
  if (rest) this.pathname = rest;
  if (slashedProtocol[lowerProto] &&
      this.hostname && !this.pathname) {
    this.pathname = '/';
  }

  //to support http.request
  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  }

  // finally, reconstruct the href based on what has been validated.
  this.href = this.format();
  return this;
};

// format a parsed object into a url string
function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function() {
  var auth = this.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ?
        this.hostname :
        '[' + this.hostname + ']');
    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query &&
      util.isObject(this.query) &&
      Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (this.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  pathname = pathname.replace(/[?#]/g, function(match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');

  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function(relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function(relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);
  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  }

  // hash is always overridden, no matter what.
  // even href="" will remove it.
  result.hash = relative.hash;

  // if the relative url is empty, then there's nothing left to do here.
  if (relative.href === '') {
    result.href = result.format();
    return result;
  }

  // hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);
    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol')
        result[rkey] = relative[rkey];
    }

    //urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol[result.protocol] &&
        result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);
      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }
      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }
    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port;
    // to support http.request
    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }
    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (result.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol];

  // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (psychotic) {
    result.hostname = '';
    result.port = null;
    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;
      else srcPath.unshift(result.host);
    }
    result.host = '';
    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      relative.host = null;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = (relative.host || relative.host === '') ?
                  relative.host : result.host;
    result.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath;
    // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift();
      //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      var authInHost = result.host && result.host.indexOf('@') > 0 ?
                       result.host.split('@') : false;
      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }
    result.search = relative.search;
    result.query = relative.query;
    //to support http.request
    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
    }
    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null;
    //to support http.request
    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }
    result.href = result.format();
    return result;
  }

  // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (result.host || relative.host || srcPath.length > 1) &&
      (last === '.' || last === '..') || last === '');

  // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  // put the host back
  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    var authInHost = result.host && result.host.indexOf('@') > 0 ?
                     result.host.split('@') : false;
    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (result.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  }

  //to support request.http
  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') +
                  (result.search ? result.search : '');
  }
  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function() {
  var host = this.host;
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      this.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) this.hostname = host;
};

},{"./util":515,"punycode":492,"querystring":496}],515:[function(require,module,exports){
'use strict';

module.exports = {
  isString: function(arg) {
    return typeof(arg) === 'string';
  },
  isObject: function(arg) {
    return typeof(arg) === 'object' && arg !== null;
  },
  isNull: function(arg) {
    return arg === null;
  },
  isNullOrUndefined: function(arg) {
    return arg == null;
  }
};

},{}],516:[function(require,module,exports){
var base = {
  8: "Backspace",
  9: "Tab",
  10: "Enter",
  12: "NumLock",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  44: "PrintScreen",
  45: "Insert",
  46: "Delete",
  59: ";",
  61: "=",
  91: "Meta",
  92: "Meta",
  106: "*",
  107: "+",
  108: ",",
  109: "-",
  110: ".",
  111: "/",
  144: "NumLock",
  145: "ScrollLock",
  160: "Shift",
  161: "Shift",
  162: "Control",
  163: "Control",
  164: "Alt",
  165: "Alt",
  173: "-",
  186: ";",
  187: "=",
  188: ",",
  189: "-",
  190: ".",
  191: "/",
  192: "`",
  219: "[",
  220: "\\",
  221: "]",
  222: "'",
  229: "q"
}
var shift = {
  48: ")",
  49: "!",
  50: "@",
  51: "#",
  52: "$",
  53: "%",
  54: "^",
  55: "&",
  56: "*",
  57: "(",
  59: ";",
  61: "+",
  173: "_",
  186: ":",
  187: "+",
  188: "<",
  189: "_",
  190: ">",
  191: "?",
  192: "~",
  219: "{",
  220: "|",
  221: "}",
  222: "\"",
  229: "Q"
}

var chrome = typeof navigator != "undefined" && /Chrome\/(\d+)/.exec(navigator.userAgent)
var safari = typeof navigator != "undefined" && /Apple Computer/.test(navigator.vendor)
var gecko = typeof navigator != "undefined" && /Gecko\/\d+/.test(navigator.userAgent)
var mac = typeof navigator != "undefined" && /Mac/.test(navigator.platform)
var brokenModifierNames = chrome && (mac || +chrome[1] < 57) || gecko && mac

// Fill in the digit keys
for (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)

// The function keys
for (var i = 1; i <= 24; i++) base[i + 111] = "F" + i

// And the alphabetic keys
for (var i = 65; i <= 90; i++) {
  base[i] = String.fromCharCode(i + 32)
  shift[i] = String.fromCharCode(i)
}

// For each code that doesn't have a shift-equivalent, copy the base name
for (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]

function keyName(event) {
  // Don't trust event.key in Chrome when there are modifiers until
  // they fix https://bugs.chromium.org/p/chromium/issues/detail?id=633838
  var ignoreKey = brokenModifierNames && (event.ctrlKey || event.altKey || event.metaKey) ||
    safari && event.shiftKey && event.key && event.key.length == 1
  var name = (!ignoreKey && event.key) ||
    (event.shiftKey ? shift : base)[event.keyCode] ||
    event.key || "Unidentified"
  // Edge sometimes produces wrong names (Issue #3)
  if (name == "Esc") name = "Escape"
  if (name == "Del") name = "Delete"
  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/
  if (name == "Left") name = "ArrowLeft"
  if (name == "Up") name = "ArrowUp"
  if (name == "Right") name = "ArrowRight"
  if (name == "Down") name = "ArrowDown"
  return name
}

module.exports = keyName
keyName.base = base
keyName.shift = shift

},{}],517:[function(require,module,exports){
(function(self) {
  'use strict';

  if (self.fetch) {
    return
  }

  var support = {
    searchParams: 'URLSearchParams' in self,
    iterable: 'Symbol' in self && 'iterator' in Symbol,
    blob: 'FileReader' in self && 'Blob' in self && (function() {
      try {
        new Blob()
        return true
      } catch(e) {
        return false
      }
    })(),
    formData: 'FormData' in self,
    arrayBuffer: 'ArrayBuffer' in self
  }

  if (support.arrayBuffer) {
    var viewClasses = [
      '[object Int8Array]',
      '[object Uint8Array]',
      '[object Uint8ClampedArray]',
      '[object Int16Array]',
      '[object Uint16Array]',
      '[object Int32Array]',
      '[object Uint32Array]',
      '[object Float32Array]',
      '[object Float64Array]'
    ]

    var isDataView = function(obj) {
      return obj && DataView.prototype.isPrototypeOf(obj)
    }

    var isArrayBufferView = ArrayBuffer.isView || function(obj) {
      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
    }
  }

  function normalizeName(name) {
    if (typeof name !== 'string') {
      name = String(name)
    }
    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
      throw new TypeError('Invalid character in header field name')
    }
    return name.toLowerCase()
  }

  function normalizeValue(value) {
    if (typeof value !== 'string') {
      value = String(value)
    }
    return value
  }

  // Build a destructive iterator for the value list
  function iteratorFor(items) {
    var iterator = {
      next: function() {
        var value = items.shift()
        return {done: value === undefined, value: value}
      }
    }

    if (support.iterable) {
      iterator[Symbol.iterator] = function() {
        return iterator
      }
    }

    return iterator
  }

  function Headers(headers) {
    this.map = {}

    if (headers instanceof Headers) {
      headers.forEach(function(value, name) {
        this.append(name, value)
      }, this)
    } else if (Array.isArray(headers)) {
      headers.forEach(function(header) {
        this.append(header[0], header[1])
      }, this)
    } else if (headers) {
      Object.getOwnPropertyNames(headers).forEach(function(name) {
        this.append(name, headers[name])
      }, this)
    }
  }

  Headers.prototype.append = function(name, value) {
    name = normalizeName(name)
    value = normalizeValue(value)
    var oldValue = this.map[name]
    this.map[name] = oldValue ? oldValue+','+value : value
  }

  Headers.prototype['delete'] = function(name) {
    delete this.map[normalizeName(name)]
  }

  Headers.prototype.get = function(name) {
    name = normalizeName(name)
    return this.has(name) ? this.map[name] : null
  }

  Headers.prototype.has = function(name) {
    return this.map.hasOwnProperty(normalizeName(name))
  }

  Headers.prototype.set = function(name, value) {
    this.map[normalizeName(name)] = normalizeValue(value)
  }

  Headers.prototype.forEach = function(callback, thisArg) {
    for (var name in this.map) {
      if (this.map.hasOwnProperty(name)) {
        callback.call(thisArg, this.map[name], name, this)
      }
    }
  }

  Headers.prototype.keys = function() {
    var items = []
    this.forEach(function(value, name) { items.push(name) })
    return iteratorFor(items)
  }

  Headers.prototype.values = function() {
    var items = []
    this.forEach(function(value) { items.push(value) })
    return iteratorFor(items)
  }

  Headers.prototype.entries = function() {
    var items = []
    this.forEach(function(value, name) { items.push([name, value]) })
    return iteratorFor(items)
  }

  if (support.iterable) {
    Headers.prototype[Symbol.iterator] = Headers.prototype.entries
  }

  function consumed(body) {
    if (body.bodyUsed) {
      return Promise.reject(new TypeError('Already read'))
    }
    body.bodyUsed = true
  }

  function fileReaderReady(reader) {
    return new Promise(function(resolve, reject) {
      reader.onload = function() {
        resolve(reader.result)
      }
      reader.onerror = function() {
        reject(reader.error)
      }
    })
  }

  function readBlobAsArrayBuffer(blob) {
    var reader = new FileReader()
    var promise = fileReaderReady(reader)
    reader.readAsArrayBuffer(blob)
    return promise
  }

  function readBlobAsText(blob) {
    var reader = new FileReader()
    var promise = fileReaderReady(reader)
    reader.readAsText(blob)
    return promise
  }

  function readArrayBufferAsText(buf) {
    var view = new Uint8Array(buf)
    var chars = new Array(view.length)

    for (var i = 0; i < view.length; i++) {
      chars[i] = String.fromCharCode(view[i])
    }
    return chars.join('')
  }

  function bufferClone(buf) {
    if (buf.slice) {
      return buf.slice(0)
    } else {
      var view = new Uint8Array(buf.byteLength)
      view.set(new Uint8Array(buf))
      return view.buffer
    }
  }

  function Body() {
    this.bodyUsed = false

    this._initBody = function(body) {
      this._bodyInit = body
      if (!body) {
        this._bodyText = ''
      } else if (typeof body === 'string') {
        this._bodyText = body
      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
        this._bodyBlob = body
      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
        this._bodyFormData = body
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this._bodyText = body.toString()
      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
        this._bodyArrayBuffer = bufferClone(body.buffer)
        // IE 10-11 can't handle a DataView body.
        this._bodyInit = new Blob([this._bodyArrayBuffer])
      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
        this._bodyArrayBuffer = bufferClone(body)
      } else {
        throw new Error('unsupported BodyInit type')
      }

      if (!this.headers.get('content-type')) {
        if (typeof body === 'string') {
          this.headers.set('content-type', 'text/plain;charset=UTF-8')
        } else if (this._bodyBlob && this._bodyBlob.type) {
          this.headers.set('content-type', this._bodyBlob.type)
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')
        }
      }
    }

    if (support.blob) {
      this.blob = function() {
        var rejected = consumed(this)
        if (rejected) {
          return rejected
        }

        if (this._bodyBlob) {
          return Promise.resolve(this._bodyBlob)
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(new Blob([this._bodyArrayBuffer]))
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as blob')
        } else {
          return Promise.resolve(new Blob([this._bodyText]))
        }
      }

      this.arrayBuffer = function() {
        if (this._bodyArrayBuffer) {
          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)
        } else {
          return this.blob().then(readBlobAsArrayBuffer)
        }
      }
    }

    this.text = function() {
      var rejected = consumed(this)
      if (rejected) {
        return rejected
      }

      if (this._bodyBlob) {
        return readBlobAsText(this._bodyBlob)
      } else if (this._bodyArrayBuffer) {
        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
      } else if (this._bodyFormData) {
        throw new Error('could not read FormData body as text')
      } else {
        return Promise.resolve(this._bodyText)
      }
    }

    if (support.formData) {
      this.formData = function() {
        return this.text().then(decode)
      }
    }

    this.json = function() {
      return this.text().then(JSON.parse)
    }

    return this
  }

  // HTTP methods whose capitalization should be normalized
  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']

  function normalizeMethod(method) {
    var upcased = method.toUpperCase()
    return (methods.indexOf(upcased) > -1) ? upcased : method
  }

  function Request(input, options) {
    options = options || {}
    var body = options.body

    if (input instanceof Request) {
      if (input.bodyUsed) {
        throw new TypeError('Already read')
      }
      this.url = input.url
      this.credentials = input.credentials
      if (!options.headers) {
        this.headers = new Headers(input.headers)
      }
      this.method = input.method
      this.mode = input.mode
      if (!body && input._bodyInit != null) {
        body = input._bodyInit
        input.bodyUsed = true
      }
    } else {
      this.url = String(input)
    }

    this.credentials = options.credentials || this.credentials || 'omit'
    if (options.headers || !this.headers) {
      this.headers = new Headers(options.headers)
    }
    this.method = normalizeMethod(options.method || this.method || 'GET')
    this.mode = options.mode || this.mode || null
    this.referrer = null

    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
      throw new TypeError('Body not allowed for GET or HEAD requests')
    }
    this._initBody(body)
  }

  Request.prototype.clone = function() {
    return new Request(this, { body: this._bodyInit })
  }

  function decode(body) {
    var form = new FormData()
    body.trim().split('&').forEach(function(bytes) {
      if (bytes) {
        var split = bytes.split('=')
        var name = split.shift().replace(/\+/g, ' ')
        var value = split.join('=').replace(/\+/g, ' ')
        form.append(decodeURIComponent(name), decodeURIComponent(value))
      }
    })
    return form
  }

  function parseHeaders(rawHeaders) {
    var headers = new Headers()
    rawHeaders.split(/\r?\n/).forEach(function(line) {
      var parts = line.split(':')
      var key = parts.shift().trim()
      if (key) {
        var value = parts.join(':').trim()
        headers.append(key, value)
      }
    })
    return headers
  }

  Body.call(Request.prototype)

  function Response(bodyInit, options) {
    if (!options) {
      options = {}
    }

    this.type = 'default'
    this.status = 'status' in options ? options.status : 200
    this.ok = this.status >= 200 && this.status < 300
    this.statusText = 'statusText' in options ? options.statusText : 'OK'
    this.headers = new Headers(options.headers)
    this.url = options.url || ''
    this._initBody(bodyInit)
  }

  Body.call(Response.prototype)

  Response.prototype.clone = function() {
    return new Response(this._bodyInit, {
      status: this.status,
      statusText: this.statusText,
      headers: new Headers(this.headers),
      url: this.url
    })
  }

  Response.error = function() {
    var response = new Response(null, {status: 0, statusText: ''})
    response.type = 'error'
    return response
  }

  var redirectStatuses = [301, 302, 303, 307, 308]

  Response.redirect = function(url, status) {
    if (redirectStatuses.indexOf(status) === -1) {
      throw new RangeError('Invalid status code')
    }

    return new Response(null, {status: status, headers: {location: url}})
  }

  self.Headers = Headers
  self.Request = Request
  self.Response = Response

  self.fetch = function(input, init) {
    return new Promise(function(resolve, reject) {
      var request = new Request(input, init)
      var xhr = new XMLHttpRequest()

      xhr.onload = function() {
        var options = {
          status: xhr.status,
          statusText: xhr.statusText,
          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
        }
        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')
        var body = 'response' in xhr ? xhr.response : xhr.responseText
        resolve(new Response(body, options))
      }

      xhr.onerror = function() {
        reject(new TypeError('Network request failed'))
      }

      xhr.ontimeout = function() {
        reject(new TypeError('Network request failed'))
      }

      xhr.open(request.method, request.url, true)

      if (request.credentials === 'include') {
        xhr.withCredentials = true
      }

      if ('responseType' in xhr && support.blob) {
        xhr.responseType = 'blob'
      }

      request.headers.forEach(function(value, name) {
        xhr.setRequestHeader(name, value)
      })

      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
    })
  }
  self.fetch.polyfill = true
})(typeof self !== 'undefined' ? self : this);

},{}],518:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function pollDeferred(process, complete, timeGap, startTimeGap) {
	return new Promise(function (resolve, reject) {
		function iterate() {
			process().then(function (val) {
				try {
					if (complete(val)) resolve(val);else setTimeout(iterate, timeGap);
				} catch (e) {
					reject(e);
				}
			}, function (err) {
				return reject(err);
			});
		}
		setTimeout(iterate, startTimeGap || 0);
	});
}

function parametrizeUrl(url, params) {
	return url.replace(/:(\w+)/g, function (_, val) {
		return params[val];
	});
}

function api(base, defaultOptions) {
	var baseUrl = !base || /\/$/.test(base) ? base : base + '/';

	var info = request('GET', 'info').then(function (res) {
		return {
			indigoVersion: res['indigo_version'],
			imagoVersions: res['imago_versions']
		};
	}).catch(function () {
		throw Error('Server is not compatible');
	});

	function request(method, url, data, headers) {
		if (data && method === 'GET') url = parametrizeUrl(url, data);
		return fetch(baseUrl + url, {
			method: method,
			headers: Object.assign({
				Accept: 'application/json'
			}, headers),
			body: method !== 'GET' ? data : undefined,
			credentials: 'same-origin'
		}).then(function (response) {
			return response.json().then(function (res) {
				return response.ok ? res : Promise.reject(res.error);
			});
		}).catch(function (err) {
			throw Error(err);
		});
	}

	function indigoCall(method, url, defaultData) {
		return function (data, options) {
			var body = Object.assign({}, defaultData, data);
			body.options = Object.assign(body.options || {}, defaultOptions, options);
			return info.then(function () {
				return request(method, url, JSON.stringify(body), {
					'Content-Type': 'application/json'
				});
			});
		};
	}

	return Object.assign(info, {
		convert: indigoCall('POST', 'indigo/convert'),
		layout: indigoCall('POST', 'indigo/layout'),
		clean: indigoCall('POST', 'indigo/clean'),
		aromatize: indigoCall('POST', 'indigo/aromatize'),
		dearomatize: indigoCall('POST', 'indigo/dearomatize'),
		calculateCip: indigoCall('POST', 'indigo/calculate_cip'),
		automap: indigoCall('POST', 'indigo/automap'),
		check: indigoCall('POST', 'indigo/check'),
		calculate: indigoCall('POST', 'indigo/calculate'),
		recognize: function recognize(blob, version) {
			// eslint-disable-line no-unused-vars
			var parVersion = version ? '?version=' + version : '';
			var req = request('POST', 'imago/uploads' + parVersion, blob, {
				'Content-Type': blob.type || 'application/octet-stream'
			});
			var status = request.bind(null, 'GET', 'imago/uploads/:id');
			return req.then(function (data) {
				return pollDeferred(status.bind(null, { id: data.upload_id }), function (res) {
					if (res.state === 'FAILURE') throw res;
					return res.state === 'SUCCESS';
				}, 500, 300);
			}).then(function (res) {
				return { struct: res.metadata.mol_str };
			});
		}
	});
}

exports.default = api;

},{}],519:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

var colors = {
	// [ Standard (for sketching applications) atom colors, Old Ketcher colors ]
	H: ['#000000', '#000000'],
	He: ['#89a1a1', '#d9ffff'], // #849b9b
	Li: ['#bd77ed', '#cc80ff'], // #c87efa
	Be: ['#8fbc00', '#c2ff00'], // #82ab00
	B: ['#c18989', '#ffb5b5'], // #c38a8a
	C: ['#000000', '#000000'],
	N: ['#304ff7', '#304ff7'],
	O: ['#ff0d0d', '#ff0d0d'],
	F: ['#78bc42', '#8fe04f'], // #6dab3c
	Ne: ['#80a2af', '#b3e3f5'], // #7b9ca8
	Na: ['#ab5cf2', '#ab5cf2'],
	Mg: ['#6fcd00', '#8aff00'], // #61b400
	Al: ['#a99393', '#bfa6a6'], // #a79191
	Si: ['#b29478', '#f0c7a1'], // #b09276
	P: ['#ff8000', '#ff8000'],
	S: ['#c99a19', '#d9a61a'], // #c39517
	Cl: ['#1fd01f', '#1fd01f'], // #1dc51d
	Ar: ['#69acba', '#80d1e3'], // #63a2b0
	K: ['#8f40d4', '#8f40d4'],
	Ca: ['#38e900', '#3dff00'], // #2fc300
	Sc: ['#999999', '#e6e6e6'], // #969696
	Ti: ['#979a9e', '#bfc2c7'], // #94969a
	V: ['#99999e', '#a6a6ab'], // #96969a
	Cr: ['#8a99c7', '#8a99c7'], // #8796c3
	Mn: ['#9c7ac7', '#9c7ac7'],
	Fe: ['#e06633', '#e06633'],
	Co: ['#d37e8e', '#f08fa1'], // #db8293
	Ni: ['#4ece4e', '#4fd14f'], // #45b645
	Cu: ['#c78033', '#c78033'],
	Zn: ['#7d80b0', '#7d80b0'],
	Ga: ['#bc8b8b', '#c28f8f'], // #bd8c8c
	Ge: ['#668f8f', '#668f8f'],
	As: ['#b87ddd', '#bd80e3'], // #bd80e3
	Se: ['#e59100', '#ffa100'], // #e28f00
	Br: ['#a62929', '#a62929'],
	Kr: ['#59b1c9', '#5cb8d1'], // #53a6bc
	Rb: ['#702eb0', '#702eb0'],
	Sr: ['#00ff00', '#00ff00'], // #00d000
	Y: ['#66afaf', '#94ffff'], // #5fa4a4
	Zr: ['#71abab', '#94e0e0'], // #6ba2a2
	Nb: ['#67aeb4', '#73c2c9'], // #61a4a9
	Mo: ['#54b5b5', '#54b5b5'], // #4ea9a9
	Tc: ['#3b9e9e', '#3b9e9e'],
	Ru: ['#248f8f', '#248f8f'],
	Rh: ['#0a7d8c', '#0a7d8c'],
	Pd: ['#006985', '#006985'],
	Ag: ['#9a9a9a', '#bfbfbf'], // #969696
	Cd: ['#b29764', '#ffd98f'], // #ae9462
	In: ['#a67573', '#a67573'],
	Sn: ['#668080', '#668080'],
	Sb: ['#9e63b5', '#9e63b5'],
	Te: ['#d47a00', '#d47a00'],
	I: ['#940094', '#940094'],
	Xe: ['#429eb0', '#429eb0'],
	Cs: ['#57178f', '#57178f'],
	Ba: ['#00c900', '#00c900'],
	La: ['#5caed1', '#70d4ff'], // #57a4c5
	Ce: ['#9d9d7b', '#ffffc7'], // #989877
	Pr: ['#8ca581', '#d9ffc7'], // #869d7b
	Nd: ['#84a984', '#c7ffc7'], // #7da07d
	Pm: ['#71b18a', '#a3ffc7'], // #69a581
	Sm: ['#66b68e', '#8fffc7'], // #5ea883
	Eu: ['#4ac298', '#61ffc7'], // #43b089
	Gd: ['#37cb9e', '#45ffc7'], // #31b48d
	Tb: ['#28d1a4', '#30ffc7'], // #23b890
	Dy: ['#1bd7a8', '#1fffc7'], // #17bb92
	Ho: ['#00e98f', '#00ff9c'], // #00c578
	Er: ['#00e675', '#00e675'], // #00c765
	Tm: ['#00d452', '#00d452'], // #00c94e
	Yb: ['#00bf38', '#00bf38'],
	Lu: ['#00ab24', '#00ab24'],
	Hf: ['#47b3ec', '#4dc2ff'], // #42a8dc
	Ta: ['#4da6ff', '#4da6ff'], // #4ba2f9
	W: ['#2194d6', '#2194d6'],
	Re: ['#267dab', '#267dab'],
	Os: ['#266696', '#266696'],
	Ir: ['#175487', '#175487'],
	Pt: ['#9898a3', '#d1d1e0'], // #9595a0
	Au: ['#c19e1c', '#ffd124'], // #b9981a
	Hg: ['#9797ac', '#b8b8d1'], // #9595a9
	Tl: ['#a6544d', '#a6544d'],
	Pb: ['#575961', '#575961'],
	Bi: ['#9e4fb5', '#9e4fb5'],
	Po: ['#ab5c00', '#ab5c00'],
	At: ['#754f45', '#754f45'],
	Rn: ['#428296', '#428296'],
	Fr: ['#420066', '#420066'],
	Ra: ['#007d00', '#007d00'],
	Ac: ['#6aa2ec', '#70abfa'], // #669ce4
	Th: ['#00baff', '#00baff'], // #00b8fc
	Pa: ['#00a1ff', '#00a1ff'],
	U: ['#008fff', '#008fff'],
	Np: ['#0080ff', '#0080ff'],
	Pu: ['#006bff', '#006bff'],
	Am: ['#545cf2', '#545cf2'],
	Cm: ['#785ce3', '#785ce3'],
	Bk: ['#8a4fe3', '#8a4fe3'],
	Cf: ['#a136d4', '#a136d4'],
	Es: ['#b31fd4', '#b31fd4'],
	// Need to fix colors for the elements below (c)
	Fm: ['#000000', '#000000'],
	Md: ['#000000', '#000000'],
	No: ['#000000', '#000000'],
	Lr: ['#000000', '#000000'],
	Rf: ['#47b3ec', '#4dc2ff'],
	Db: ['#4da6ff', '#4da6ff'],
	Sg: ['#2194d6', '#2194d6'],
	Bh: ['#267dab', '#267dab'],
	Hs: ['#266696', '#266696'],
	Mt: ['#175487', '#175487'],
	Ds: ['#9898a3', '#d1d1e0'],
	Rg: ['#c19e1c', '#ffd124'],
	Cn: ['#9797ac', '#b8b8d1'],
	Nh: ['#000000', '#000000'],
	Fl: ['#000000', '#000000'],
	Mc: ['#000000', '#000000'],
	Lv: ['#000000', '#000000'],
	Ts: ['#000000', '#000000'],
	Og: ['#000000', '#000000']
};

var sketchingColors = exports.sketchingColors = Object.keys(colors).reduce(function (res, item) {
	res[item] = colors[item][0];
	return res;
}, {});

var oldColors = exports.oldColors = Object.keys(colors).reduce(function (res, item) {
	res[item] = colors[item][1];
	return res;
}, {});

},{}],520:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

var element = [null, {
	label: 'H', // 1
	period: 1,
	group: 1,
	title: 'Hydrogen',
	state: 'gas',
	origin: 'primordial',
	type: 'diatomic',
	atomic_mass: 1.00794
}, {
	label: 'He', // 2
	period: 1,
	group: 8,
	title: 'Helium',
	state: 'gas',
	origin: 'primordial',
	type: 'noble',
	atomic_mass: 4.0026022
}, {
	label: 'Li', // 3
	period: 2,
	group: 1,
	title: 'Lithium',
	state: 'solid',
	origin: 'primordial',
	type: 'alkali',
	atomic_mass: 6.94
}, {
	label: 'Be', // 4
	period: 2,
	group: 2,
	title: 'Beryllium',
	state: 'solid',
	origin: 'primordial',
	type: 'alkaline-earth',
	atomic_mass: 9.01218315
}, {
	label: 'B', // 5
	period: 2,
	group: 3,
	title: 'Boron',
	state: 'solid',
	origin: 'primordial',
	type: 'metalloid',
	atomic_mass: 10.81
}, {
	label: 'C', // 6
	period: 2,
	group: 4,
	title: 'Carbon',
	state: 'solid',
	origin: 'primordial',
	type: 'polyatomic',
	atomic_mass: 12.011
}, {
	label: 'N', // 7
	period: 2,
	group: 5,
	title: 'Nitrogen',
	state: 'gas',
	origin: 'primordial',
	type: 'diatomic',
	atomic_mass: 14.007
}, {
	label: 'O', // 8
	period: 2,
	group: 6,
	leftH: true,
	title: 'Oxygen',
	state: 'gas',
	origin: 'primordial',
	type: 'diatomic',
	atomic_mass: 15.999
}, {
	label: 'F', // 9
	period: 2,
	group: 7,
	leftH: true,
	title: 'Fluorine',
	state: 'gas',
	origin: 'primordial',
	type: 'diatomic',
	atomic_mass: 18.9984031636
}, {
	label: 'Ne', // 10
	period: 2,
	group: 8,
	title: 'Neon',
	state: 'gas',
	origin: 'primordial',
	type: 'noble',
	atomic_mass: 20.17976
}, {
	label: 'Na', // 11
	period: 3,
	group: 1,
	title: 'Sodium',
	state: 'solid',
	origin: 'primordial',
	type: 'alkali',
	atomic_mass: 22.989769282
}, {
	label: 'Mg', // 12
	period: 3,
	group: 2,
	title: 'Magnesium',
	state: 'solid',
	origin: 'primordial',
	type: 'alkaline-earth',
	atomic_mass: 24.305
}, {
	label: 'Al', // 13
	period: 3,
	group: 3,
	title: 'Aluminium',
	state: 'solid',
	origin: 'primordial',
	type: 'post-transition',
	atomic_mass: 26.98153857
}, {
	label: 'Si', // 14
	period: 3,
	group: 4,
	title: 'Silicon',
	state: 'solid',
	origin: 'primordial',
	type: 'metalloid',
	atomic_mass: 28.085
}, {
	label: 'P', // 15
	period: 3,
	group: 5,
	title: 'Phosphorus',
	state: 'solid',
	origin: 'primordial',
	type: 'polyatomic',
	atomic_mass: 30.9737619985
}, {
	label: 'S', // 16
	period: 3,
	group: 6,
	leftH: true,
	title: 'Sulfur',
	state: 'solid',
	origin: 'primordial',
	type: 'polyatomic',
	atomic_mass: 32.06
}, {
	label: 'Cl', // 17
	period: 3,
	group: 7,
	leftH: true,
	title: 'Chlorine',
	state: 'gas',
	origin: 'primordial',
	type: 'diatomic',
	atomic_mass: 35.45
}, {
	label: 'Ar', // 18
	period: 3,
	group: 8,
	title: 'Argon',
	state: 'gas',
	origin: 'primordial',
	type: 'noble',
	atomic_mass: 39.9481
}, {
	label: 'K', // 19
	period: 4,
	group: 1,
	title: 'Potassium',
	state: 'solid',
	origin: 'primordial',
	type: 'alkali',
	atomic_mass: 39.09831
}, {
	label: 'Ca', // 20
	period: 4,
	group: 2,
	title: 'Calcium',
	state: 'solid',
	origin: 'primordial',
	type: 'alkaline-earth',
	atomic_mass: 40.0784
}, {
	label: 'Sc', // 21
	period: 4,
	group: 3,
	title: 'Scandium',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 44.9559085
}, {
	label: 'Ti', // 22
	period: 4,
	group: 4,
	title: 'Titanium',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 47.8671
}, {
	label: 'V', // 23
	period: 4,
	group: 5,
	title: 'Vanadium',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 50.94151
}, {
	label: 'Cr', // 24
	period: 4,
	group: 6,
	title: 'Chromium',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 51.99616
}, {
	label: 'Mn', // 25
	period: 4,
	group: 7,
	title: 'Manganese',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 54.9380443
}, {
	label: 'Fe', // 26
	period: 4,
	group: 8,
	title: 'Iron',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 55.8452
}, {
	label: 'Co', // 27
	period: 4,
	group: 8,
	title: 'Cobalt',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 58.9331944
}, {
	label: 'Ni', // 28
	period: 4,
	group: 8,
	title: 'Nickel',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 58.69344
}, {
	label: 'Cu', // 29
	period: 4,
	group: 1,
	title: 'Copper',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 63.5463
}, {
	label: 'Zn', // 30
	period: 4,
	group: 2,
	title: 'Zinc',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 65.382
}, {
	label: 'Ga', // 31
	period: 4,
	group: 3,
	title: 'Gallium',
	state: 'solid',
	origin: 'primordial',
	type: 'post-transition',
	atomic_mass: 69.7231
}, {
	label: 'Ge', // 32
	period: 4,
	group: 4,
	title: 'Germanium',
	state: 'solid',
	origin: 'primordial',
	type: 'metalloid',
	atomic_mass: 72.6308
}, {
	label: 'As', // 33
	period: 4,
	group: 5,
	title: 'Arsenic',
	state: 'solid',
	origin: 'primordial',
	type: 'metalloid',
	atomic_mass: 74.9215956
}, {
	label: 'Se', // 34
	period: 4,
	group: 6,
	leftH: true,
	title: 'Selenium',
	state: 'solid',
	origin: 'primordial',
	type: 'polyatomic',
	atomic_mass: 78.9718
}, {
	label: 'Br', // 35
	period: 4,
	group: 7,
	leftH: true,
	title: 'Bromine',
	state: 'liquid',
	origin: 'primordial',
	type: 'diatomic',
	atomic_mass: 79.904
}, {
	label: 'Kr', // 36
	period: 4,
	group: 8,
	title: 'Krypton',
	state: 'gas',
	origin: 'primordial',
	type: 'noble',
	atomic_mass: 83.7982
}, {
	label: 'Rb', // 37
	period: 5,
	group: 1,
	title: 'Rubidium',
	state: 'solid',
	origin: 'primordial',
	type: 'alkali',
	atomic_mass: 85.46783
}, {
	label: 'Sr', // 38
	period: 5,
	group: 2,
	title: 'Strontium',
	state: 'solid',
	origin: 'primordial',
	type: 'alkaline-earth',
	atomic_mass: 87.621
}, {
	label: 'Y', // 39
	period: 5,
	group: 3,
	title: 'Yttrium',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 88.905842
}, {
	label: 'Zr', // 40
	period: 5,
	group: 4,
	title: 'Zirconium',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 91.2242
}, {
	label: 'Nb', // 41
	period: 5,
	group: 5,
	title: 'Niobium',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 92.906372
}, {
	label: 'Mo', // 42
	period: 5,
	group: 6,
	title: 'Molybdenum',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 95.951
}, {
	label: 'Tc', // 43
	period: 5,
	group: 7,
	title: 'Technetium',
	state: 'solid',
	origin: 'decay',
	type: 'transition',
	atomic_mass: 98
}, {
	label: 'Ru', // 44
	period: 5,
	group: 8,
	title: 'Ruthenium',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 101.072
}, {
	label: 'Rh', // 45
	period: 5,
	group: 8,
	title: 'Rhodium',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 102.905502
}, {
	label: 'Pd', // 46
	period: 5,
	group: 8,
	title: 'Palladium',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 106.421
}, {
	label: 'Ag', // 47
	period: 5,
	group: 1,
	title: 'Silver',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 107.86822
}, {
	label: 'Cd', // 48
	period: 5,
	group: 2,
	title: 'Cadmium',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 112.4144
}, {
	label: 'In', // 49
	period: 5,
	group: 3,
	title: 'Indium',
	state: 'solid',
	origin: 'primordial',
	type: 'post-transition',
	atomic_mass: 114.8181
}, {
	label: 'Sn', // 50
	period: 5,
	group: 4,
	title: 'Tin',
	state: 'solid',
	origin: 'primordial',
	type: 'post-transition',
	atomic_mass: 118.7107
}, {
	label: 'Sb', // 51
	period: 5,
	group: 5,
	title: 'Antimony',
	state: 'solid',
	origin: 'primordial',
	type: 'metalloid',
	atomic_mass: 121.7601
}, {
	label: 'Te', // 52
	period: 5,
	group: 6,
	title: 'Tellurium',
	state: 'solid',
	origin: 'primordial',
	type: 'metalloid',
	atomic_mass: 127.603
}, {
	label: 'I', // 53
	period: 5,
	group: 7,
	leftH: true,
	title: 'Iodine',
	state: 'solid',
	origin: 'primordial',
	type: 'diatomic',
	atomic_mass: 126.904473
}, {
	label: 'Xe', // 54
	period: 5,
	group: 8,
	title: 'Xenon',
	state: 'gas',
	origin: 'primordial',
	type: 'noble',
	atomic_mass: 131.2936
}, {
	label: 'Cs', // 55
	period: 6,
	group: 1,
	title: 'Caesium',
	state: 'solid',
	origin: 'primordial',
	type: 'alkali',
	atomic_mass: 132.905451966
}, {
	label: 'Ba', // 56
	period: 6,
	group: 2,
	title: 'Barium',
	state: 'solid',
	origin: 'primordial',
	type: 'alkaline-earth',
	atomic_mass: 137.3277
}, {
	label: 'La', // 57
	period: 6,
	group: 3,
	title: 'Lanthanum',
	state: 'solid',
	origin: 'primordial',
	type: 'lanthanide',
	atomic_mass: 138.905477
}, {
	label: 'Ce', // 58
	period: 6,
	group: 3,
	title: 'Cerium',
	state: 'solid',
	origin: 'primordial',
	type: 'lanthanide',
	atomic_mass: 140.1161
}, {
	label: 'Pr', // 59
	period: 6,
	group: 3,
	title: 'Praseodymium',
	state: 'solid',
	origin: 'primordial',
	type: 'lanthanide',
	atomic_mass: 140.907662
}, {
	label: 'Nd', // 60
	period: 6,
	group: 3,
	title: 'Neodymium',
	state: 'solid',
	origin: 'primordial',
	type: 'lanthanide',
	atomic_mass: 144.2423
}, {
	label: 'Pm', // 61
	period: 6,
	group: 3,
	title: 'Promethium',
	state: 'solid',
	origin: 'decay',
	type: 'lanthanide',
	atomic_mass: 145
}, {
	label: 'Sm', // 62
	period: 6,
	group: 3,
	title: 'Samarium',
	state: 'solid',
	origin: 'primordial',
	type: 'lanthanide',
	atomic_mass: 150.362
}, {
	label: 'Eu', // 63
	period: 6,
	group: 3,
	title: 'Europium',
	state: 'solid',
	origin: 'primordial',
	type: 'lanthanide',
	atomic_mass: 151.9641
}, {
	label: 'Gd', // 64
	period: 6,
	group: 3,
	title: 'Gadolinium',
	state: 'solid',
	origin: 'primordial',
	type: 'lanthanide',
	atomic_mass: 157.253
}, {
	label: 'Tb', // 65
	period: 6,
	group: 3,
	title: 'Terbium',
	state: 'solid',
	origin: 'primordial',
	type: 'lanthanide',
	atomic_mass: 158.925352
}, {
	label: 'Dy', // 66
	period: 6,
	group: 3,
	title: 'Dysprosium',
	state: 'solid',
	origin: 'primordial',
	type: 'lanthanide',
	atomic_mass: 162.5001
}, {
	label: 'Ho', // 67
	period: 6,
	group: 3,
	title: 'Holmium',
	state: 'solid',
	origin: 'primordial',
	type: 'lanthanide',
	atomic_mass: 164.930332
}, {
	label: 'Er', // 68
	period: 6,
	group: 3,
	title: 'Erbium',
	state: 'solid',
	origin: 'primordial',
	type: 'lanthanide',
	atomic_mass: 167.2593
}, {
	label: 'Tm', // 69
	period: 6,
	group: 3,
	title: 'Thulium',
	state: 'solid',
	origin: 'primordial',
	type: 'lanthanide',
	atomic_mass: 168.934222
}, {
	label: 'Yb', // 70
	period: 6,
	group: 3,
	title: 'Ytterbium',
	state: 'solid',
	origin: 'primordial',
	type: 'lanthanide',
	atomic_mass: 173.0451
}, {
	label: 'Lu', // 71
	period: 6,
	group: 3,
	title: 'Lutetium',
	state: 'solid',
	origin: 'primordial',
	type: 'lanthanide',
	atomic_mass: 174.96681
}, {
	label: 'Hf', // 72
	period: 6,
	group: 4,
	title: 'Hafnium',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 178.492
}, {
	label: 'Ta', // 73
	period: 6,
	group: 5,
	title: 'Tantalum',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 180.947882
}, {
	label: 'W', // 74
	period: 6,
	group: 6,
	title: 'Tungsten',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 183.841
}, {
	label: 'Re', // 75
	period: 6,
	group: 7,
	title: 'Rhenium',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 186.2071
}, {
	label: 'Os', // 76
	period: 6,
	group: 8,
	title: 'Osmium',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 190.233
}, {
	label: 'Ir', // 77
	period: 6,
	group: 8,
	title: 'Iridium',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 192.2173
}, {
	label: 'Pt', // 78
	period: 6,
	group: 8,
	title: 'Platinum',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 195.0849
}, {
	label: 'Au', // 79
	period: 6,
	group: 1,
	title: 'Gold',
	state: 'solid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 196.9665695
}, {
	label: 'Hg', // 80
	period: 6,
	group: 2,
	title: 'Mercury',
	state: 'liquid',
	origin: 'primordial',
	type: 'transition',
	atomic_mass: 200.5923
}, {
	label: 'Tl', // 81
	period: 6,
	group: 3,
	title: 'Thallium',
	state: 'solid',
	origin: 'primordial',
	type: 'post-transition',
	atomic_mass: 204.38
}, {
	label: 'Pb', // 82
	period: 6,
	group: 4,
	title: 'Lead',
	state: 'solid',
	origin: 'primordial',
	type: 'post-transition',
	atomic_mass: 207.21
}, {
	label: 'Bi', // 83
	period: 6,
	group: 5,
	title: 'Bismuth',
	state: 'solid',
	origin: 'primordial',
	type: 'post-transition',
	atomic_mass: 208.980401
}, {
	label: 'Po', // 84
	period: 6,
	group: 6,
	title: 'Polonium',
	state: 'solid',
	origin: 'decay',
	type: 'post-transition',
	atomic_mass: 209
}, {
	label: 'At', // 85
	period: 6,
	group: 7,
	title: 'Astatine',
	state: 'solid',
	origin: 'decay',
	type: 'metalloid',
	atomic_mass: 210
}, {
	label: 'Rn', // 86
	period: 6,
	group: 8,
	title: 'Radon',
	state: 'gas',
	origin: 'decay',
	type: 'noble',
	atomic_mass: 222
}, {
	label: 'Fr', // 87
	period: 7,
	group: 1,
	title: 'Francium',
	state: 'solid',
	origin: 'decay',
	type: 'alkali',
	atomic_mass: 223
}, {
	label: 'Ra', // 88
	period: 7,
	group: 2,
	title: 'Radium',
	state: 'solid',
	origin: 'decay',
	type: 'alkaline-earth',
	atomic_mass: 226
}, {
	label: 'Ac', // 89
	period: 7,
	group: 3,
	title: 'Actinium',
	state: 'solid',
	origin: 'decay',
	type: 'actinide',
	atomic_mass: 227
}, {
	label: 'Th', // 90
	period: 7,
	group: 3,
	title: 'Thorium',
	state: 'solid',
	origin: 'primordial',
	type: 'actinide',
	atomic_mass: 232.03774
}, {
	label: 'Pa', // 91
	period: 7,
	group: 3,
	title: 'Protactinium',
	state: 'solid',
	origin: 'decay',
	type: 'actinide',
	atomic_mass: 231.035882
}, {
	label: 'U', // 92
	period: 7,
	group: 3,
	title: 'Uranium',
	state: 'solid',
	origin: 'primordial',
	type: 'actinide',
	atomic_mass: 238.028913
}, {
	label: 'Np', // 93
	period: 7,
	group: 3,
	title: 'Neptunium',
	state: 'solid',
	origin: 'decay',
	type: 'actinide',
	atomic_mass: 237
}, {
	label: 'Pu', // 94
	period: 7,
	group: 3,
	title: 'Plutonium',
	state: 'solid',
	origin: 'decay',
	type: 'actinide',
	atomic_mass: 244
}, {
	label: 'Am', // 95
	period: 7,
	group: 3,
	title: 'Americium',
	state: 'solid',
	origin: 'synthetic',
	type: 'actinide',
	atomic_mass: 243
}, {
	label: 'Cm', // 96
	period: 7,
	group: 3,
	title: 'Curium',
	state: 'solid',
	origin: 'synthetic',
	type: 'actinide',
	atomic_mass: 247
}, {
	label: 'Bk', // 97
	period: 7,
	group: 3,
	title: 'Berkelium',
	state: 'solid',
	origin: 'synthetic',
	type: 'actinide',
	atomic_mass: 247
}, {
	label: 'Cf', // 98
	period: 7,
	group: 3,
	title: 'Californium',
	state: 'solid',
	origin: 'synthetic',
	type: 'actinide',
	atomic_mass: 251
}, {
	label: 'Es', // 99
	period: 7,
	group: 3,
	title: 'Einsteinium',
	state: 'solid',
	origin: 'synthetic',
	type: 'actinide',
	atomic_mass: 252
}, {
	label: 'Fm', // 100
	period: 7,
	group: 3,
	title: 'Fermium',
	origin: 'synthetic',
	type: 'actinide',
	atomic_mass: 257
}, {
	label: 'Md', // 101
	period: 7,
	group: 3,
	title: 'Mendelevium',
	origin: 'synthetic',
	type: 'actinide',
	atomic_mass: 258
}, {
	label: 'No', // 102
	period: 7,
	group: 3,
	title: 'Nobelium',
	origin: 'synthetic',
	type: 'actinide',
	atomic_mass: 259
}, {
	label: 'Lr', // 103
	period: 7,
	group: 3,
	title: 'Lawrencium',
	origin: 'synthetic',
	type: 'actinide',
	atomic_mass: 266
}, {
	label: 'Rf', // 104
	period: 7,
	group: 4,
	title: 'Rutherfordium',
	origin: 'synthetic',
	type: 'transition',
	atomic_mass: 267
}, {
	label: 'Db', // 105
	period: 7,
	group: 5,
	title: 'Dubnium',
	origin: 'synthetic',
	type: 'transition',
	atomic_mass: 268
}, {
	label: 'Sg', // 106
	period: 7,
	group: 6,
	title: 'Seaborgium',
	origin: 'synthetic',
	type: 'transition',
	atomic_mass: 269
}, {
	label: 'Bh', // 107
	period: 7,
	group: 7,
	title: 'Bohrium',
	origin: 'synthetic',
	type: 'transition',
	atomic_mass: 270
}, {
	label: 'Hs', // 108
	period: 7,
	group: 8,
	title: 'Hassium',
	origin: 'synthetic',
	type: 'transition',
	atomic_mass: 269
}, {
	label: 'Mt', // 109
	period: 7,
	group: 8,
	title: 'Meitnerium',
	origin: 'synthetic',
	atomic_mass: 278
}, {
	label: 'Ds', // 110
	period: 7,
	group: 8,
	title: 'Darmstadtium',
	origin: 'synthetic',
	atomic_mass: 281
}, {
	label: 'Rg', // 111
	period: 7,
	group: 1,
	title: 'Roentgenium',
	origin: 'synthetic',
	atomic_mass: 282
}, {
	label: 'Cn', // 112
	period: 7,
	group: 2,
	title: 'Copernicium',
	origin: 'synthetic',
	type: 'transition',
	atomic_mass: 285
}, {
	label: 'Nh', // 113
	period: 7,
	group: 3,
	title: 'Nihonium',
	origin: 'synthetic',
	atomic_mass: 286
}, {
	label: 'Fl', // 114
	period: 7,
	group: 4,
	title: 'Flerovium',
	origin: 'synthetic',
	type: 'post-transition',
	atomic_mass: 289
}, {
	label: 'Mc', // 115
	period: 7,
	group: 5,
	title: 'Moscovium',
	origin: 'synthetic',
	atomic_mass: 289
}, {
	label: 'Lv', // 116
	period: 7,
	group: 6,
	title: 'Livermorium',
	origin: 'synthetic',
	atomic_mass: 293
}, {
	label: 'Ts', // 117
	period: 7,
	group: 7,
	title: 'Tennessine',
	origin: 'synthetic',
	atomic_mass: 294
}, {
	label: 'Og', // 118
	period: 7,
	group: 8,
	title: 'Oganesson',
	origin: 'synthetic',
	atomic_mass: 294
}];

element.map = element.reduce(function (res, el, index) {
	if (el) res[el.label] = index;
	return res;
}, {});

exports.default = element;

},{}],521:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

var generics = {
	atom: {
		any: {
			labels: ['A', 'AH']
		},
		'no-carbon': {
			labels: ['Q', 'QH']
		},
		metal: {
			labels: ['M', 'MH']
		},
		halogen: {
			labels: ['X', 'XH']
		}
	},
	group: {
		labels: ['G', 'GH', 'G*', 'GH*'],
		acyclic: {
			labels: ['ACY', 'ACH'],
			carbo: {
				labels: ['ABC', 'ABH'],
				alkynyl: {
					labels: ['AYL', 'AYH']
				},
				alkyl: {
					labels: ['ALK', 'ALH']
				},
				alkenyl: {
					labels: ['AEL', 'AEH']
				}
			},
			hetero: {
				labels: ['AHC', 'AHH'],
				alkoxy: {
					labels: ['AOX', 'AOH']
				}
			}
		},
		cyclic: {
			labels: ['CYC', 'CYH'],
			'no-carbon': {
				labels: ['CXX', 'CXH']
			},
			carbo: {
				labels: ['CBC', 'CBH'],
				aryl: {
					labels: ['ARY', 'ARH']
				},
				cycloalkyl: {
					labels: ['CAL', 'CAH']
				},
				cycloalkenyl: {
					labels: ['CEL', 'CEH']
				}
			},
			hetero: {
				labels: ['CHC', 'CHH'],
				aryl: {
					labels: ['HAR', 'HAH']
				}
			}
		}
	},
	special: {
		labels: ['H+', 'D', 'T', 'R', 'Pol']
	}
};

function mapify(tree, path, res) {
	return Object.keys(tree).reduce(function (res, key) {
		if (key === 'labels') {
			return tree.labels.reduce(function (res, label) {
				res[label] = path || true;
				return res;
			}, res);
		}
		return mapify(tree[key], path ? path.concat(key) : [key], res);
	}, res || {});
}

function traverse(tree, path) {
	return path.reduce(function (res, cur) {
		return res && res[cur] || null;
	}, tree);
}

generics.map = mapify(generics);
generics.map['*'] = generics.map['A']; // alias
generics.get = function (path) {
	return mapify(traverse(path));
};

exports.default = generics;

},{}],522:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _v = require('./v2000');

var _v2 = _interopRequireDefault(_v);

var _v3 = require('./v3000');

var _v4 = _interopRequireDefault(_v3);

var _pile = require('../../util/pile');

var _pile2 = _interopRequireDefault(_pile);

var _index = require('./../struct/index');

var _utils = require('./utils');

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var loadRGroupFragments = true; // TODO: set to load the fragments

/* Parse Mol */
/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function parseMol( /* string */ctabLines) /* Struct */{
	/* reader */
	if (ctabLines[0].search('\\$MDL') === 0) {
		var _struct = _v2.default.parseRg2000(ctabLines);
		_struct.name = ctabLines[3].trim();
		return _struct;
	}
	var struct = parseCTab(ctabLines.slice(3));
	struct.name = ctabLines[0].trim();
	return struct;
}

function parseCTab( /* string */ctabLines) /* Struct */{
	/* reader */
	var countsSplit = partitionLine(ctabLines[0], _utils2.default.fmtInfo.countsLinePartition);
	var version = countsSplit[11].trim();
	ctabLines = ctabLines.slice(1);
	if (version === 'V2000') return _v2.default.parseCTabV2000(ctabLines, countsSplit);else if (version === 'V3000') return _v4.default.parseCTabV3000(ctabLines, !loadRGroupFragments);else throw new Error('Molfile version unknown: ' + version); // eslint-disable-line no-else-return
}

/* Parse Rxn */
function parseRxn( /* string[] */ctabLines, shouldReactionRelayout) /* Struct */{
	/* reader */
	var split = ctabLines[0].trim().split(' ');
	if (split.length > 1 && split[1] === 'V3000') return _v4.default.parseRxn3000(ctabLines, shouldReactionRelayout);

	var struct = _v2.default.parseRxn2000(ctabLines, shouldReactionRelayout);
	struct.name = ctabLines[1].trim();
	return struct;
}

/* Prepare For Saving */
var prepareForSaving = {
	MUL: _index.SGroup.prepareMulForSaving,
	SRU: prepareSruForSaving,
	SUP: prepareSupForSaving,
	DAT: prepareDatForSaving,
	GEN: prepareGenForSaving
};

function prepareSruForSaving(sgroup, mol) {
	var xBonds = [];
	mol.bonds.forEach(function (bond, bid) {
		var a1 = mol.atoms.get(bond.begin);
		var a2 = mol.atoms.get(bond.end);
		/* eslint-disable no-mixed-operators*/
		if (a1.sgs.has(sgroup.id) && !a2.sgs.has(sgroup.id) || a2.sgs.has(sgroup.id) && !a1.sgs.has(sgroup.id))
			/* eslint-enable no-mixed-operators*/
			xBonds.push(bid);
	}, sgroup);
	if (xBonds.length !== 0 && xBonds.length !== 2) {
		throw { // eslint-disable-line no-throw-literal
			id: sgroup.id,
			'error-type': 'cross-bond-number',
			message: 'Unsupported cross-bonds number'
		};
	}
	sgroup.bonds = xBonds;
}

function prepareSupForSaving(sgroup, mol) {
	// This code is also used for GroupSru and should be moved into a separate common method
	// It seems that such code should be used for any sgroup by this this should be checked
	var xBonds = [];
	mol.bonds.forEach(function (bond, bid) {
		var a1 = mol.atoms.get(bond.begin);
		var a2 = mol.atoms.get(bond.end);
		/* eslint-disable no-mixed-operators*/
		if (a1.sgs.has(sgroup.id) && !a2.sgs.has(sgroup.id) || a2.sgs.has(sgroup.id) && !a1.sgs.has(sgroup.id))
			/* eslint-enable no-mixed-operators*/
			xBonds.push(bid);
	}, sgroup);
	sgroup.bonds = xBonds;
}

function prepareGenForSaving(sgroup, mol) {// eslint-disable-line no-unused-vars
}

function prepareDatForSaving(sgroup, mol) {
	sgroup.atoms = _index.SGroup.getAtoms(mol, sgroup);
}

/* Save To Molfile */
var saveToMolfile = {
	MUL: saveMulToMolfile,
	SRU: saveSruToMolfile,
	SUP: saveSupToMolfile,
	DAT: saveDatToMolfile,
	GEN: saveGenToMolfile
};

function saveMulToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {
	// eslint-disable-line max-params
	var idstr = (sgMap[sgroup.id] + '').padStart(3);

	var lines = [];
	lines = lines.concat(makeAtomBondLines('SAL', idstr, Array.from(sgroup.atomSet.values()), atomMap)); // TODO: check atomSet
	lines = lines.concat(makeAtomBondLines('SPA', idstr, Array.from(sgroup.parentAtomSet.values()), atomMap));
	lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap));
	var smtLine = 'M  SMT ' + idstr + ' ' + sgroup.data.mul;
	lines.push(smtLine);
	lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr));
	return lines.join('\n');
}

function saveSruToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {
	// eslint-disable-line max-params
	var idstr = (sgMap[sgroup.id] + '').padStart(3);

	var lines = [];
	lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap));
	lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap));
	lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr));
	return lines.join('\n');
}

function saveSupToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {
	// eslint-disable-line max-params
	var idstr = (sgMap[sgroup.id] + '').padStart(3);

	var lines = [];
	lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap));
	lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap));
	if (sgroup.data.name && sgroup.data.name !== '') lines.push('M  SMT ' + idstr + ' ' + sgroup.data.name);
	return lines.join('\n');
}

function saveDatToMolfile(sgroup, mol, sgMap, atomMap) {
	var idstr = (sgMap[sgroup.id] + '').padStart(3);

	var data = sgroup.data;
	var pp = sgroup.pp;
	if (!data.absolute) pp = pp.sub(_index.SGroup.getMassCentre(mol, sgroup.atoms));
	var lines = [];
	lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap));
	var sdtLine = 'M  SDT ' + idstr + ' ' + (data.fieldName || '').padEnd(30) + (data.fieldType || '').padStart(2) + (data.units || '').padEnd(20) + (data.query || '').padStart(2);

	if (data.queryOp) // see gitlab #184
		sdtLine += data.queryOp.padEnd(80 - 65);

	lines.push(sdtLine);
	var sddLine = 'M  SDD ' + idstr + ' ' + _utils2.default.paddedNum(pp.x, 10, 4) + _utils2.default.paddedNum(-pp.y, 10, 4) + '    ' + ( // ' eee'
	data.attached ? 'A' : 'D') + ( // f
	data.absolute ? 'A' : 'R') + ( // g
	data.showUnits ? 'U' : ' ') + // h
	'   ' + ( //  i
	data.nCharnCharsToDisplay >= 0 ? _utils2.default.paddedNum(data.nCharnCharsToDisplay, 3) : 'ALL') + // jjj
	'  1   ' + ( // 'kkk ll '
	data.tagChar || ' ') + // m
	'  ' + _utils2.default.paddedNum(data.daspPos, 1) + // n
	'  '; // oo
	lines.push(sddLine);
	var val = normalizeNewlines(data.fieldValue).replace(/\n*$/, '');
	var charsPerLine = 69;
	val.split('\n').forEach(function (chars) {
		while (chars.length > charsPerLine) {
			lines.push('M  SCD ' + idstr + ' ' + chars.slice(0, charsPerLine));
			chars = chars.slice(charsPerLine);
		}
		lines.push('M  SED ' + idstr + ' ' + chars);
	});
	return lines.join('\n');
}

function saveGenToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {
	// eslint-disable-line max-params
	var idstr = (sgMap[sgroup.id] + '').padStart(3);

	var lines = [];
	lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap));
	lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap));
	lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr));
	return lines.join('\n');
}

function makeAtomBondLines(prefix, idstr, ids, map) {
	if (!ids) return [];
	var lines = [];
	for (var i = 0; i < Math.floor((ids.length + 14) / 15); ++i) {
		var rem = Math.min(ids.length - 15 * i, 15); // eslint-disable-line no-mixed-operators
		var salLine = 'M  ' + prefix + ' ' + idstr + ' ' + _utils2.default.paddedNum(rem, 2);
		for (var j = 0; j < rem; ++j) {
			salLine += ' ' + _utils2.default.paddedNum(map[ids[i * 15 + j]], 3);
		} // eslint-disable-line no-mixed-operators
		lines.push(salLine);
	}
	return lines;
}

function bracketsToMolfile(mol, sg, idstr) {
	// eslint-disable-line max-statements
	var inBonds = [];
	var xBonds = [];
	var atomSet = new _pile2.default(sg.atoms);
	_index.SGroup.getCrossBonds(inBonds, xBonds, mol, atomSet);
	_index.SGroup.bracketPos(sg, mol, xBonds);
	var bb = sg.bracketBox;
	var d = sg.bracketDir;
	var n = d.rotateSC(1, 0);
	var brackets = _index.SGroup.getBracketParameters(mol, xBonds, atomSet, bb, d, n);
	var lines = [];
	for (var i = 0; i < brackets.length; ++i) {
		var bracket = brackets[i];
		var a0 = bracket.c.addScaled(bracket.n, -0.5 * bracket.h).yComplement();
		var a1 = bracket.c.addScaled(bracket.n, 0.5 * bracket.h).yComplement();
		var line = 'M  SDI ' + idstr + _utils2.default.paddedNum(4, 3);
		var coord = [a0.x, a0.y, a1.x, a1.y];
		for (var j = 0; j < coord.length; ++j) {
			line += _utils2.default.paddedNum(coord[j], 10, 4);
		}lines.push(line);
	}
	return lines;
}

// According Unicode Consortium sould be
// nlRe = /\r\n|[\n\v\f\r\x85\u2028\u2029]/g;
// http://www.unicode.org/reports/tr18/#Line_Boundaries
var nlRe = /\r\n|[\n\r]/g;
function normalizeNewlines(str) {
	return str.replace(nlRe, '\n');
}

function partitionLine( /* string*/str, /* array of int*/parts, /* bool*/withspace) {
	/* reader */
	var res = [];
	for (var i = 0, shift = 0; i < parts.length; ++i) {
		res.push(str.slice(shift, shift + parts[i]));
		if (withspace) shift++;
		shift += parts[i];
	}
	return res;
}

exports.default = {
	parseCTab: parseCTab,
	parseMol: parseMol,
	parseRxn: parseRxn,
	prepareForSaving: prepareForSaving,
	saveToMolfile: saveToMolfile
};

},{"../../util/pile":683,"./../struct/index":537,"./utils":526,"./v2000":527,"./v3000":528}],523:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _molfile = require('./molfile');

var _molfile2 = _interopRequireDefault(_molfile);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// TODO: reconstruct molfile string instead parsing multiple times
//       merge to bottom
function parseCTFile(str, options) {
	var molfile = new _molfile2.default();
	var lines = str.split(/\r\n|[\n\r]/g);
	try {
		return molfile.parseCTFile(lines, options.reactionRelayout);
	} catch (ex) {
		if (options.badHeaderRecover) {
			try {
				// check whether there's an extra empty line on top
				// this often happens when molfile text is pasted into the dialog window
				return molfile.parseCTFile(lines.slice(1), options.reactionRelayout);
			} catch (ex1) {//
			}
			try {
				// check for a missing first line
				// this sometimes happens when pasting
				return molfile.parseCTFile([''].concat(lines), options.reactionRelayout);
			} catch (ex2) {//
			}
		}
		throw ex;
	}
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

exports.default = {
	stringify: function stringify(struct, options) {
		var opts = options || {};
		return new _molfile2.default(opts.v3000).saveMolecule(struct, opts.ignoreErrors, opts.noRgroups, opts.preserveIndigoDesc);
	},
	parse: function parse(str, options) {
		return parseCTFile(str, options || {});
	}
};

},{"./molfile":524}],524:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _element = require('./../element');

var _element2 = _interopRequireDefault(_element);

var _common = require('./common');

var _common2 = _interopRequireDefault(_common);

var _utils = require('./utils');

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Molfile(v3000) {
	/* reader */
	/* saver */
	this.molecule = null;
	this.molfile = null;
	this.v3000 = v3000 || false;
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

Molfile.prototype.parseCTFile = function (molfileLines, shouldReactionRelayout) {
	var ret = null;
	if (molfileLines[0].search('\\$RXN') === 0) ret = _common2.default.parseRxn(molfileLines, shouldReactionRelayout);else ret = _common2.default.parseMol(molfileLines);
	ret.initHalfBonds();
	ret.initNeighbors();
	ret.markFragments();
	return ret;
};

Molfile.prototype.prepareSGroups = function (skipErrors, preserveIndigoDesc) {
	var mol = this.molecule;
	var toRemove = [];
	var errors = 0;

	this.molecule.sGroupForest.getSGroupsBFS().reverse().forEach(function (id) {
		var sgroup = mol.sgroups.get(id);
		var errorIgnore = false;

		try {
			_common2.default.prepareForSaving[sgroup.type](sgroup, mol);
		} catch (ex) {
			if (!skipErrors || typeof ex.id != 'number') throw new Error('Error: ' + ex.message);
			errorIgnore = true;
		}
		/* eslint-disable no-mixed-operators*/
		if (errorIgnore || !preserveIndigoDesc && /^INDIGO_.+_DESC$/i.test(sgroup.data.fieldName)) {
			/* eslint-enable no-mixed-operators*/
			errors += errorIgnore;
			toRemove.push(sgroup.id);
		}
	}, this);
	if (errors) throw new Error('Warning: ' + errors + ' invalid S-groups were detected. They will be omitted.');

	for (var i = 0; i < toRemove.length; ++i) {
		mol.sGroupDelete(toRemove[i]);
	}return mol;
};

Molfile.prototype.getCTab = function (molecule, rgroups) {
	/* saver */
	this.molecule = molecule.clone();
	this.prepareSGroups(false, false);
	this.molfile = '';
	this.writeCTab2000(rgroups);
	return this.molfile;
};

Molfile.prototype.saveMolecule = function (molecule, skipSGroupErrors, norgroups, preserveIndigoDesc) {
	var _this = this;

	// eslint-disable-line max-statements
	/* saver */
	this.reaction = molecule.rxnArrows.size > 0;
	if (molecule.rxnArrows.size > 1) throw new Error('Reaction may not contain more than one arrow');
	this.molfile = '' + molecule.name;
	if (this.reaction) {
		if (molecule.rgroups.size > 0) throw new Error('Reactions with r-groups are not supported at the moment');
		var components = molecule.getComponents();

		var reactants = components.reactants;
		var products = components.products;
		var all = reactants.concat(products);
		this.molfile = '$RXN\n' + molecule.name + '\n\n\n' + _utils2.default.paddedNum(reactants.length, 3) + _utils2.default.paddedNum(products.length, 3) + _utils2.default.paddedNum(0, 3) + '\n';
		for (var i = 0; i < all.length; ++i) {
			var saver = new Molfile(false);
			var submol = molecule.clone(all[i], null, true);
			var molfile = saver.saveMolecule(submol, false, true);
			this.molfile += '$MOL\n' + molfile;
		}
		return this.molfile;
	}

	if (molecule.rgroups.size > 0) {
		if (norgroups) {
			molecule = molecule.getScaffold();
		} else {
			var scaffold = new Molfile(false).getCTab(molecule.getScaffold(), molecule.rgroups);
			this.molfile = '$MDL  REV  1\n$MOL\n$HDR\n' + molecule.name + '\n\n\n$END HDR\n';
			this.molfile += '$CTAB\n' + scaffold + '$END CTAB\n';

			molecule.rgroups.forEach(function (rg, rgid) {
				_this.molfile += '$RGP\n';
				_this.writePaddedNumber(rgid, 3);
				_this.molfile += '\n';
				rg.frags.forEach(function (fid) {
					var group = new Molfile(false).getCTab(molecule.getFragment(fid));
					_this.molfile += '$CTAB\n' + group + '$END CTAB\n';
				});
				_this.molfile += '$END RGP\n';
			});
			this.molfile += '$END MOL\n';

			return this.molfile;
		}
	}

	this.molecule = molecule.clone();

	this.prepareSGroups(skipSGroupErrors, preserveIndigoDesc);

	this.writeHeader();

	// TODO: saving to V3000
	this.writeCTab2000();

	return this.molfile;
};

Molfile.prototype.writeHeader = function () {
	/* saver */

	var date = new Date();

	this.writeCR(); // TODO: write structure name
	this.writeWhiteSpace(2);
	this.write('Ketcher');
	this.writeWhiteSpace();
	this.writeCR((date.getMonth() + 1 + '').padStart(2) + (date.getDate() + '').padStart(2) + (date.getFullYear() % 100 + '').padStart(2) + (date.getHours() + '').padStart(2) + (date.getMinutes() + '').padStart(2) + '2D 1   1.00000     0.00000     0');
	this.writeCR();
};

Molfile.prototype.write = function (str) {
	/* saver */
	this.molfile += str;
};

Molfile.prototype.writeCR = function (str) {
	/* saver */
	if (arguments.length == 0) str = '';

	this.molfile += str + '\n';
};

Molfile.prototype.writeWhiteSpace = function (length) {
	/* saver */

	if (arguments.length == 0) length = 1;

	this.write(' '.repeat(Math.max(length, 0)));
};

Molfile.prototype.writePadded = function (str, width) {
	/* saver */
	this.write(str);
	this.writeWhiteSpace(width - str.length);
};

Molfile.prototype.writePaddedNumber = function (number, width) {
	/* saver */

	var str = (number - 0).toString();

	this.writeWhiteSpace(width - str.length);
	this.write(str);
};

Molfile.prototype.writePaddedFloat = function (number, width, precision) {
	/* saver */

	this.write(_utils2.default.paddedNum(number, width, precision));
};

Molfile.prototype.writeCTab2000Header = function () {
	/* saver */

	this.writePaddedNumber(this.molecule.atoms.size, 3);
	this.writePaddedNumber(this.molecule.bonds.size, 3);

	this.writePaddedNumber(0, 3);
	this.writeWhiteSpace(3);
	this.writePaddedNumber(this.molecule.isChiral ? 1 : 0, 3);
	this.writePaddedNumber(0, 3);
	this.writeWhiteSpace(12);
	this.writePaddedNumber(999, 3);
	this.writeCR(' V2000');
};

Molfile.prototype.writeCTab2000 = function (rgroups) {
	var _this2 = this;

	// eslint-disable-line max-statements
	/* saver */
	this.writeCTab2000Header();

	this.mapping = {};
	var i = 1;

	/* eslint-disable camelcase*/
	var atomList_list = [];
	var atomProps_list = [];
	/* eslint-enable camel-case*/
	this.molecule.atoms.forEach(function (atom, id) {
		_this2.writePaddedFloat(atom.pp.x, 10, 4);
		_this2.writePaddedFloat(-atom.pp.y, 10, 4);
		_this2.writePaddedFloat(atom.pp.z, 10, 4);
		_this2.writeWhiteSpace();

		var label = atom.label;
		if (atom.atomList != null) {
			label = 'L';
			atomList_list.push(id);
		} else if (atom['pseudo']) {
			if (atom['pseudo'].length > 3) {
				label = 'A';
				atomProps_list.push({ id: id, value: '\'' + atom['pseudo'] + '\'' });
			}
		} else if (atom['alias']) {
			atomProps_list.push({ id: id, value: atom['alias'] });
		} else if (!_element2.default.map[label] && ['A', 'Q', 'X', '*', 'R#'].indexOf(label) == -1) {
			// search in generics?
			label = 'C';
			atomProps_list.push({ id: id, value: atom.label });
		}
		_this2.writePadded(label, 3);
		_this2.writePaddedNumber(0, 2);
		_this2.writePaddedNumber(0, 3);
		_this2.writePaddedNumber(0, 3);

		if (typeof atom.hCount === 'undefined') atom.hCount = 0;
		_this2.writePaddedNumber(atom.hCount, 3);

		if (typeof atom.stereoCare === 'undefined') atom.stereoCare = 0;
		_this2.writePaddedNumber(atom.stereoCare, 3);

		_this2.writePaddedNumber(atom.explicitValence < 0 ? 0 : atom.explicitValence == 0 ? 15 : atom.explicitValence, 3); // eslint-disable-line no-nested-ternary

		_this2.writePaddedNumber(0, 3);
		_this2.writePaddedNumber(0, 3);
		_this2.writePaddedNumber(0, 3);

		if (typeof atom.aam === 'undefined') atom.aam = 0;
		_this2.writePaddedNumber(atom.aam, 3);

		if (typeof atom.invRet === 'undefined') atom.invRet = 0;
		_this2.writePaddedNumber(atom.invRet, 3);

		if (typeof atom.exactChangeFlag === 'undefined') atom.exactChangeFlag = 0;
		_this2.writePaddedNumber(atom.exactChangeFlag, 3);

		_this2.writeCR();

		_this2.mapping[id] = i;
		i++;
	}, this);

	this.bondMapping = {};
	i = 1;
	this.molecule.bonds.forEach(function (bond, id) {
		_this2.bondMapping[id] = i++;
		_this2.writePaddedNumber(_this2.mapping[bond.begin], 3);
		_this2.writePaddedNumber(_this2.mapping[bond.end], 3);
		_this2.writePaddedNumber(bond.type, 3);

		if (typeof bond.stereo === 'undefined') bond.stereo = 0;
		_this2.writePaddedNumber(bond.stereo, 3);

		_this2.writePadded(bond.xxx, 3);

		if (typeof bond.topology === 'undefined') bond.topology = 0;
		_this2.writePaddedNumber(bond.topology, 3);

		if (typeof bond.reactingCenterStatus === 'undefined') bond.reactingCenterStatus = 0;
		_this2.writePaddedNumber(bond.reactingCenterStatus, 3);

		_this2.writeCR();
	});

	while (atomProps_list.length > 0) {
		this.write('A  ');
		this.writePaddedNumber(atomProps_list[0].id + 1, 3);
		this.writeCR();
		this.writeCR(atomProps_list[0].value);
		atomProps_list.splice(0, 1);
	}

	var chargeList = [];
	var isotopeList = [];
	var radicalList = [];
	var rglabelList = [];
	var rglogicList = [];
	var aplabelList = [];
	var rbcountList = [];
	var unsaturatedList = [];
	var substcountList = [];

	this.molecule.atoms.forEach(function (atom, id) {
		if (atom.charge != 0) chargeList.push([id, atom.charge]);
		if (atom.isotope != 0) isotopeList.push([id, atom.isotope]);
		if (atom.radical != 0) radicalList.push([id, atom.radical]);
		if (atom.rglabel != null && atom.label == 'R#') {
			// TODO need to force rglabel=null when label is not 'R#'
			for (var rgi = 0; rgi < 32; rgi++) {
				if (atom.rglabel & 1 << rgi) rglabelList.push([id, rgi + 1]);
			}
		}
		if (atom.attpnt != null) aplabelList.push([id, atom.attpnt]);
		if (atom.ringBondCount != 0) rbcountList.push([id, atom.ringBondCount]);
		if (atom.substitutionCount != 0) substcountList.push([id, atom.substitutionCount]);
		if (atom.unsaturatedAtom != 0) unsaturatedList.push([id, atom.unsaturatedAtom]);
	});

	if (rgroups) {
		rgroups.forEach(function (rg, rgid) {
			if (rg.resth || rg.ifthen > 0 || rg.range.length > 0) {
				var line = '  1 ' + _utils2.default.paddedNum(rgid, 3) + ' ' + _utils2.default.paddedNum(rg.ifthen, 3) + ' ' + _utils2.default.paddedNum(rg.resth ? 1 : 0, 3) + '   ' + rg.range;
				rglogicList.push(line);
			}
		});
	}

	function writeAtomPropList(propId, values) {
		var _this3 = this;

		while (values.length > 0) {
			var part = [];

			while (values.length > 0 && part.length < 8) {
				part.push(values[0]);
				values.splice(0, 1);
			}

			this.write(propId);
			this.writePaddedNumber(part.length, 3);

			part.forEach(function (value) {
				_this3.writeWhiteSpace();
				_this3.writePaddedNumber(_this3.mapping[value[0]], 3);
				_this3.writeWhiteSpace();
				_this3.writePaddedNumber(value[1], 3);
			});

			this.writeCR();
		}
	}

	writeAtomPropList.call(this, 'M  CHG', chargeList);
	writeAtomPropList.call(this, 'M  ISO', isotopeList);
	writeAtomPropList.call(this, 'M  RAD', radicalList);
	writeAtomPropList.call(this, 'M  RGP', rglabelList);
	for (var j = 0; j < rglogicList.length; ++j) {
		this.write('M  LOG' + rglogicList[j] + '\n');
	}writeAtomPropList.call(this, 'M  APO', aplabelList);
	writeAtomPropList.call(this, 'M  RBC', rbcountList);
	writeAtomPropList.call(this, 'M  SUB', substcountList);
	writeAtomPropList.call(this, 'M  UNS', unsaturatedList);

	if (atomList_list.length > 0) {
		for (j = 0; j < atomList_list.length; ++j) {
			var aid = atomList_list[j];
			var atomList = this.molecule.atoms.get(aid).atomList;
			this.write('M  ALS');
			this.writePaddedNumber(aid + 1, 4);
			this.writePaddedNumber(atomList.ids.length, 3);
			this.writeWhiteSpace();
			this.write(atomList.notList ? 'T' : 'F');

			var labelList = atomList.labelList();
			for (var k = 0; k < labelList.length; ++k) {
				this.writeWhiteSpace();
				this.writePadded(labelList[k], 3);
			}
			this.writeCR();
		}
	}

	var sgmap = {};
	var cnt = 1;
	var sgmapback = {};
	var sgorder = this.molecule.sGroupForest.getSGroupsBFS();
	sgorder.forEach(function (id) {
		sgmapback[cnt] = id;
		sgmap[id] = cnt++;
	});
	for (var q = 1; q < cnt; ++q) {
		// each group on its own
		var id = sgmapback[q];
		var sgroup = this.molecule.sgroups.get(id);
		this.write('M  STY');
		this.writePaddedNumber(1, 3);
		this.writeWhiteSpace(1);
		this.writePaddedNumber(q, 3);
		this.writeWhiteSpace(1);
		this.writePadded(sgroup.type, 3);
		this.writeCR();

		// TODO: write subtype, M SST

		this.write('M  SLB');
		this.writePaddedNumber(1, 3);
		this.writeWhiteSpace(1);
		this.writePaddedNumber(q, 3);
		this.writeWhiteSpace(1);
		this.writePaddedNumber(q, 3);
		this.writeCR();

		var parentid = this.molecule.sGroupForest.parent.get(id);
		if (parentid >= 0) {
			this.write('M  SPL');
			this.writePaddedNumber(1, 3);
			this.writeWhiteSpace(1);
			this.writePaddedNumber(q, 3);
			this.writeWhiteSpace(1);
			this.writePaddedNumber(sgmap[parentid], 3);
			this.writeCR();
		}

		// connectivity
		if (sgroup.type == 'SRU' && sgroup.data.connectivity) {
			var connectivity = '';
			connectivity += ' ';
			connectivity += q.toString().padStart(3);
			connectivity += ' ';
			connectivity += (sgroup.data.connectivity || '').padEnd(3);
			this.write('M  SCN');
			this.writePaddedNumber(1, 3);
			this.write(connectivity.toUpperCase());
			this.writeCR();
		}

		if (sgroup.type == 'SRU') {
			this.write('M  SMT ');
			this.writePaddedNumber(q, 3);
			this.writeWhiteSpace();
			this.write(sgroup.data.subscript || 'n');
			this.writeCR();
		}

		this.writeCR(_common2.default.saveToMolfile[sgroup.type](sgroup, this.molecule, sgmap, this.mapping, this.bondMapping));
	}

	// TODO: write M  APO
	// TODO: write M  AAL
	// TODO: write M  RGP
	// TODO: write M  LOG

	this.writeCR('M  END');
};

exports.default = Molfile;

},{"./../element":520,"./common":522,"./utils":526}],525:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /****************************************************************************
opyright 2018 EPAM Systems

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
ou may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

nless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
ee the License for the specific language governing permissions and
limitations under the License.


/* eslint-disable guard-for-in */ // todo

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _pool = require('../../util/pool');

var _pool2 = _interopRequireDefault(_pool);

var _index = require('./../struct/index');

var _utils = require('./utils');

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @param str { string }
 * @param valueString { boolean }
 * @returns { Pool }
 */
function readKeyValuePairs(str, valueString) {
	var ret = new _pool2.default();
	var partition = _utils2.default.partitionLineFixed(str, 3, true);
	var count = _utils2.default.parseDecimalInt(partition[0]);

	for (var i = 0; i < count; ++i) {
		var key = _utils2.default.parseDecimalInt(partition[2 * i + 1]) - 1;
		var value = valueString ? partition[2 * i + 2].trim() : _utils2.default.parseDecimalInt(partition[2 * i + 2]);

		ret.set(key, value);
	}

	return ret;
}

/**
 * @param str { string }
 * @param valueString { boolean }
 * @returns { Array }
 */
function readKeyMultiValuePairs(str, valueString) {
	/* reader */
	var ret = [];
	var partition = _utils2.default.partitionLineFixed(str, 3, true);
	var count = _utils2.default.parseDecimalInt(partition[0]);
	for (var i = 0; i < count; ++i) {
		ret.push([
		/* eslint-disable no-mixed-operators*/
		_utils2.default.parseDecimalInt(partition[2 * i + 1]) - 1, valueString ? partition[2 * i + 2].trim() : _utils2.default.parseDecimalInt(partition[2 * i + 2])
		/* eslint-enable no-mixed-operators*/
		]);
	}
	return ret;
}

function postLoadMul(sgroup, mol, atomMap) {
	// eslint-disable-line max-statements
	sgroup.data.mul = sgroup.data.subscript - 0;
	var atomReductionMap = {};

	sgroup.atoms = _index.SGroup.filterAtoms(sgroup.atoms, atomMap);
	sgroup.patoms = _index.SGroup.filterAtoms(sgroup.patoms, atomMap);

	// mark repetitions for removal
	for (var k = 1; k < sgroup.data.mul; ++k) {
		for (var m = 0; m < sgroup.patoms.length; ++m) {
			var raid = sgroup.atoms[k * sgroup.patoms.length + m]; // eslint-disable-line no-mixed-operators
			if (raid < 0) continue; // eslint-disable-line no-continue
			if (sgroup.patoms[m] < 0) throw new Error('parent atom missing');
			atomReductionMap[raid] = sgroup.patoms[m]; // "merge" atom in parent
		}
	}
	sgroup.patoms = _index.SGroup.removeNegative(sgroup.patoms);

	var patomsMap = identityMap(sgroup.patoms);

	var bondsToRemove = [];
	mol.bonds.forEach(function (bond, bid) {
		var beginIn = bond.begin in atomReductionMap;
		var endIn = bond.end in atomReductionMap;
		// if both adjacent atoms of a bond are to be merged, remove it
		/* eslint-disable no-mixed-operators*/
		if (beginIn && endIn || beginIn && bond.end in patomsMap || endIn && bond.begin in patomsMap) bondsToRemove.push(bid);
		/* eslint-enable no-mixed-operators*/
		// if just one atom is merged, modify the bond accordingly
		else if (beginIn) bond.begin = atomReductionMap[bond.begin];else if (endIn) bond.end = atomReductionMap[bond.end];
	}, sgroup);

	// apply removal lists
	for (var b = 0; b < bondsToRemove.length; ++b) {
		mol.bonds.delete(bondsToRemove[b]);
	}for (var a in atomReductionMap) {
		mol.atoms.delete(+a);
		atomMap[a] = -1;
	}
	sgroup.atoms = sgroup.patoms;
	sgroup.patoms = null;
}

function postLoadSru(sgroup) {
	sgroup.data.connectivity = (sgroup.data.connectivity || 'EU').trim().toLowerCase();
}

function postLoadSup(sgroup) {
	sgroup.data.name = (sgroup.data.subscript || '').trim();
	sgroup.data.subscript = '';
}

function postLoadGen(sgroup, mol, atomMap) {// eslint-disable-line no-unused-vars
}

function postLoadDat(sgroup, mol) {
	if (!sgroup.data.absolute) sgroup.pp = sgroup.pp.add(_index.SGroup.getMassCentre(mol, sgroup.atoms));
}

function loadSGroup(mol, sg, atomMap) {
	var postLoadMap = {
		MUL: postLoadMul,
		SRU: postLoadSru,
		SUP: postLoadSup,
		DAT: postLoadDat,
		GEN: postLoadGen
	};

	// add the group to the molecule
	sg.id = mol.sgroups.add(sg);

	// apply type-specific post-processing
	postLoadMap[sg.type](sg, mol, atomMap);
	// mark atoms in the group as belonging to it
	for (var s = 0; s < sg.atoms.length; ++s) {
		if (mol.atoms.has(sg.atoms[s])) mol.atoms.get(sg.atoms[s]).sgs.add(sg.id);
	}

	if (sg.type === 'DAT') mol.sGroupForest.insert(sg.id, -1, []);else mol.sGroupForest.insert(sg.id);

	return sg.id;
}

function initSGroup(sGroups, propData) {
	/* reader */
	var kv = readKeyValuePairs(propData, true);
	var _iteratorNormalCompletion = true;
	var _didIteratorError = false;
	var _iteratorError = undefined;

	try {
		for (var _iterator = kv[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
			var _ref = _step.value;

			var _ref2 = _slicedToArray(_ref, 2);

			var key = _ref2[0];
			var type = _ref2[1];

			if (!(type in _index.SGroup.TYPES)) throw new Error('Unsupported S-group type');

			var sg = new _index.SGroup(type);
			sg.number = key;
			sGroups[key] = sg;
		}
	} catch (err) {
		_didIteratorError = true;
		_iteratorError = err;
	} finally {
		try {
			if (!_iteratorNormalCompletion && _iterator.return) {
				_iterator.return();
			}
		} finally {
			if (_didIteratorError) {
				throw _iteratorError;
			}
		}
	}
}

function applySGroupProp(sGroups, propName, propData, numeric, core) {
	// eslint-disable-line max-params
	var kv = readKeyValuePairs(propData, !numeric);
	var _iteratorNormalCompletion2 = true;
	var _didIteratorError2 = false;
	var _iteratorError2 = undefined;

	try {
		for (var _iterator2 = kv.keys()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
			var key = _step2.value;

			// "core" properties are stored directly in an sgroup, not in sgroup.data
			(core ? sGroups[key] : sGroups[key].data)[propName] = kv.get(key);
		}
	} catch (err) {
		_didIteratorError2 = true;
		_iteratorError2 = err;
	} finally {
		try {
			if (!_iteratorNormalCompletion2 && _iterator2.return) {
				_iterator2.return();
			}
		} finally {
			if (_didIteratorError2) {
				throw _iteratorError2;
			}
		}
	}
}

function applySGroupArrayProp(sGroups, propName, propData, shift) {
	/* reader */
	var sid = _utils2.default.parseDecimalInt(propData.slice(1, 4)) - 1;
	var num = _utils2.default.parseDecimalInt(propData.slice(4, 8));
	var part = toIntArray(_utils2.default.partitionLineFixed(propData.slice(8), 3, true));

	if (part.length !== num) throw new Error('File format invalid');
	if (shift) part = part.map(function (v) {
		return v + shift;
	});

	sGroups[sid][propName] = sGroups[sid][propName].concat(part);
}

function applyDataSGroupName(sg, name) {
	/* reader */
	sg.data.fieldName = name;
}

function applyDataSGroupQuery(sg, query) {
	/* reader */
	sg.data.query = query;
}

function applyDataSGroupQueryOp(sg, queryOp) {
	/* reader */
	sg.data.queryOp = queryOp;
}

function applyDataSGroupDesc(sGroups, propData) {
	/* reader */
	var split = _utils2.default.partitionLine(propData, [4, 31, 2, 20, 2, 3], false);
	var id = _utils2.default.parseDecimalInt(split[0]) - 1;
	var fieldName = split[1].trim();
	var fieldType = split[2].trim();
	var units = split[3].trim();
	var query = split[4].trim();
	var queryOp = split[5].trim();
	var sGroup = sGroups[id];
	sGroup.data.fieldType = fieldType;
	sGroup.data.fieldName = fieldName;
	sGroup.data.units = units;
	sGroup.data.query = query;
	sGroup.data.queryOp = queryOp;
}

function applyDataSGroupInfo(sg, propData) {
	// eslint-disable-line max-statements
	/* reader */
	var split = _utils2.default.partitionLine(propData, [10 /* x.x*/, 10 /* y.y*/, 4 /* eee*/, 1 /* f*/, 1 /* g*/, 1 /* h*/, 3 /* i */, 3 /* jjj*/, 3 /* kkk*/, 3 /* ll*/, 2 /* m*/, 3 /* n*/, 2 /* oo*/], false);

	var x = parseFloat(split[0]);
	var y = parseFloat(split[1]);
	var attached = split[3].trim() == 'A';
	var absolute = split[4].trim() == 'A';
	var showUnits = split[5].trim() == 'U';
	var nCharsToDisplay = split[7].trim();
	nCharsToDisplay = nCharsToDisplay == 'ALL' ? -1 : _utils2.default.parseDecimalInt(nCharsToDisplay);
	var tagChar = split[10].trim();
	var daspPos = _utils2.default.parseDecimalInt(split[11].trim());

	sg.pp = new _vec2.default(x, -y);
	sg.data.attached = attached;
	sg.data.absolute = absolute;
	sg.data.showUnits = showUnits;
	sg.data.nCharsToDisplay = nCharsToDisplay;
	sg.data.tagChar = tagChar;
	sg.data.daspPos = daspPos;
}

function applyDataSGroupInfoLine(sGroups, propData) {
	/* reader */
	var id = _utils2.default.parseDecimalInt(propData.substr(0, 4)) - 1;
	var sg = sGroups[id];
	applyDataSGroupInfo(sg, propData.substr(5));
}

function applyDataSGroupData(sg, data, finalize) {
	/* reader */
	sg.data.fieldValue = (sg.data.fieldValue || '') + data;
	if (finalize) {
		sg.data.fieldValue = trimRight(sg.data.fieldValue);
		if (sg.data.fieldValue.startsWith('"') && sg.data.fieldValue.endsWith('"')) sg.data.fieldValue = sg.data.fieldValue.substr(1, sg.data.fieldValue.length - 2);
	}
}

function applyDataSGroupDataLine(sGroups, propData, finalize) {
	/* reader */
	var id = _utils2.default.parseDecimalInt(propData.substr(0, 5)) - 1;
	var data = propData.substr(5);
	var sg = sGroups[id];
	applyDataSGroupData(sg, data, finalize);
}

// Utilities functions
function toIntArray(strArray) {
	/* reader */
	var ret = [];
	for (var j = 0; j < strArray.length; ++j) {
		ret[j] = _utils2.default.parseDecimalInt(strArray[j]);
	}return ret;
}

function trimRight(str) {
	return str.replace(/\s+$/, '');
}

function identityMap(array) {
	var map = {};
	for (var i = 0; i < array.length; ++i) {
		map[array[i]] = array[i];
	}return map;
}

exports.default = {
	readKeyValuePairs: readKeyValuePairs,
	readKeyMultiValuePairs: readKeyMultiValuePairs,
	loadSGroup: loadSGroup,
	initSGroup: initSGroup,
	applySGroupProp: applySGroupProp,
	applySGroupArrayProp: applySGroupArrayProp,
	applyDataSGroupName: applyDataSGroupName,
	applyDataSGroupQuery: applyDataSGroupQuery,
	applyDataSGroupQueryOp: applyDataSGroupQueryOp,
	applyDataSGroupDesc: applyDataSGroupDesc,
	applyDataSGroupInfo: applyDataSGroupInfo,
	applyDataSGroupData: applyDataSGroupData,
	applyDataSGroupInfoLine: applyDataSGroupInfoLine,
	applyDataSGroupDataLine: applyDataSGroupDataLine
};

},{"../../util/pool":684,"../../util/vec2":686,"./../struct/index":537,"./utils":526}],526:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _index = require('./../struct/index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function paddedNum(number, width, precision) {
	number = parseFloat(number);

	var numStr = number.toFixed(precision || 0).replace(',', '.'); // Really need to replace?
	if (numStr.length > width) throw new Error('number does not fit');

	return numStr.padStart(width);
}

function parseDecimalInt(str) {
	/* reader */
	var val = parseInt(str, 10);

	return isNaN(val) ? 0 : val; // eslint-disable-line
}

function partitionLine( /* string*/str, /* array of int*/parts, /* bool*/withspace) {
	/* reader */
	var res = [];
	for (var i = 0, shift = 0; i < parts.length; ++i) {
		res.push(str.slice(shift, shift + parts[i]));
		if (withspace) shift++;
		shift += parts[i];
	}
	return res;
}

function partitionLineFixed( /* string*/str, /* int*/itemLength, /* bool*/withspace) {
	/* reader */
	var res = [];
	for (var shift = 0; shift < str.length; shift += itemLength) {
		res.push(str.slice(shift, shift + itemLength));
		if (withspace) shift++;
	}
	return res;
}

var fmtInfo = {
	bondTypeMap: {
		1: _index.Bond.PATTERN.TYPE.SINGLE,
		2: _index.Bond.PATTERN.TYPE.DOUBLE,
		3: _index.Bond.PATTERN.TYPE.TRIPLE,
		4: _index.Bond.PATTERN.TYPE.AROMATIC,
		5: _index.Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE,
		6: _index.Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC,
		7: _index.Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC,
		8: _index.Bond.PATTERN.TYPE.ANY
	},
	bondStereoMap: {
		0: _index.Bond.PATTERN.STEREO.NONE,
		1: _index.Bond.PATTERN.STEREO.UP,
		4: _index.Bond.PATTERN.STEREO.EITHER,
		6: _index.Bond.PATTERN.STEREO.DOWN,
		3: _index.Bond.PATTERN.STEREO.CIS_TRANS
	},
	v30bondStereoMap: {
		0: _index.Bond.PATTERN.STEREO.NONE,
		1: _index.Bond.PATTERN.STEREO.UP,
		2: _index.Bond.PATTERN.STEREO.EITHER,
		3: _index.Bond.PATTERN.STEREO.DOWN
	},
	bondTopologyMap: {
		0: _index.Bond.PATTERN.TOPOLOGY.EITHER,
		1: _index.Bond.PATTERN.TOPOLOGY.RING,
		2: _index.Bond.PATTERN.TOPOLOGY.CHAIN
	},
	countsLinePartition: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6],
	atomLinePartition: [10, 10, 10, 1, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
	bondLinePartition: [3, 3, 3, 3, 3, 3, 3],
	atomListHeaderPartition: [3, 1, 1, 4, 1, 1],
	atomListHeaderLength: 11, // = atomListHeaderPartition.reduce(function(a,b) { return a + b; }, 0)
	atomListHeaderItemLength: 4,
	chargeMap: [0, +3, +2, +1, 0, -1, -2, -3],
	valenceMap: [undefined, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0],
	implicitHydrogenMap: [undefined, 0, 1, 2, 3, 4],
	v30atomPropMap: {
		CHG: 'charge',
		RAD: 'radical',
		MASS: 'isotope',
		VAL: 'explicitValence',
		HCOUNT: 'hCount',
		INVRET: 'invRet',
		SUBST: 'substitutionCount',
		UNSAT: 'unsaturatedAtom',
		RBCNT: 'ringBondCount'
	},
	rxnItemsPartition: [3, 3, 3]
};

var FRAGMENT = {
	NONE: 0,
	REACTANT: 1,
	PRODUCT: 2,
	AGENT: 3
};

var SHOULD_RESCALE_MOLECULES = true;

function rxnMerge(mols, nReactants, nProducts, nAgents, shouldReactionRelayout) /* Struct */{
	// eslint-disable-line max-statements
	/* reader */
	var ret = new _index2.default();
	var bbReact = [],
	    bbAgent = [],
	    bbProd = [];
	var molReact = [],
	    molAgent = [],
	    molProd = [];
	var j;
	var bondLengthData = { cnt: 0, totalLength: 0 };
	for (j = 0; j < mols.length; ++j) {
		var mol = mols[j];
		var bondLengthDataMol = mol.getBondLengthData();
		bondLengthData.cnt += bondLengthDataMol.cnt;
		bondLengthData.totalLength += bondLengthDataMol.totalLength;
	}
	if (SHOULD_RESCALE_MOLECULES) {
		var avgBondLength = 1 / (bondLengthData.cnt == 0 ? 1 : bondLengthData.totalLength / bondLengthData.cnt);
		for (j = 0; j < mols.length; ++j) {
			mol = mols[j];
			mol.scale(avgBondLength);
		}
	}

	for (j = 0; j < mols.length; ++j) {
		mol = mols[j];
		var bb = mol.getCoordBoundingBoxObj();
		if (!bb) continue; // eslint-disable-line no-continue

		var fragmentType = j < nReactants ? FRAGMENT.REACTANT : // eslint-disable-line no-nested-ternary
		j < nReactants + nProducts ? FRAGMENT.PRODUCT : FRAGMENT.AGENT;
		if (fragmentType == FRAGMENT.REACTANT) {
			bbReact.push(bb);
			molReact.push(mol);
		} else if (fragmentType == FRAGMENT.AGENT) {
			bbAgent.push(bb);
			molAgent.push(mol);
		} else if (fragmentType == FRAGMENT.PRODUCT) {
			bbProd.push(bb);
			molProd.push(mol);
		}

		mol.atoms.forEach(function (atom) {
			atom.rxnFragmentType = fragmentType;
		});
	}

	function shiftMol(ret, mol, bb, xorig, over) {
		// eslint-disable-line max-params
		var d = new _vec2.default(xorig - bb.min.x, over ? 1 - bb.min.y : -(bb.min.y + bb.max.y) / 2);
		mol.atoms.forEach(function (atom) {
			atom.pp.add_(d); // eslint-disable-line no-underscore-dangle
		});

		mol.sgroups.forEach(function (item) {
			if (item.pp) item.pp.add_(d); // eslint-disable-line no-underscore-dangle
		});
		bb.min.add_(d); // eslint-disable-line no-underscore-dangle
		bb.max.add_(d); // eslint-disable-line no-underscore-dangle
		mol.mergeInto(ret);
		return bb.max.x - bb.min.x;
	}

	if (shouldReactionRelayout) {
		// reaction fragment layout
		var xorig = 0;
		for (j = 0; j < molReact.length; ++j) {
			xorig += shiftMol(ret, molReact[j], bbReact[j], xorig, false) + 2.0;
		}xorig += 2.0;
		for (j = 0; j < molAgent.length; ++j) {
			xorig += shiftMol(ret, molAgent[j], bbAgent[j], xorig, true) + 2.0;
		}xorig += 2.0;

		for (j = 0; j < molProd.length; ++j) {
			xorig += shiftMol(ret, molProd[j], bbProd[j], xorig, false) + 2.0;
		}
	} else {
		for (j = 0; j < molReact.length; ++j) {
			molReact[j].mergeInto(ret);
		}for (j = 0; j < molAgent.length; ++j) {
			molAgent[j].mergeInto(ret);
		}for (j = 0; j < molProd.length; ++j) {
			molProd[j].mergeInto(ret);
		}
	}

	var bb1;
	var bb2;
	var x;
	var y;
	var bbReactAll = null;
	var bbProdAll = null;
	for (j = 0; j < bbReact.length - 1; ++j) {
		bb1 = bbReact[j];
		bb2 = bbReact[j + 1];

		x = (bb1.max.x + bb2.min.x) / 2;
		y = (bb1.max.y + bb1.min.y + bb2.max.y + bb2.min.y) / 4;

		ret.rxnPluses.add(new _index.RxnPlus({ pp: new _vec2.default(x, y) }));
	}
	for (j = 0; j < bbReact.length; ++j) {
		if (j == 0) {
			bbReactAll = {};
			bbReactAll.max = new _vec2.default(bbReact[j].max);
			bbReactAll.min = new _vec2.default(bbReact[j].min);
		} else {
			bbReactAll.max = _vec2.default.max(bbReactAll.max, bbReact[j].max);
			bbReactAll.min = _vec2.default.min(bbReactAll.min, bbReact[j].min);
		}
	}
	for (j = 0; j < bbProd.length - 1; ++j) {
		bb1 = bbProd[j];
		bb2 = bbProd[j + 1];

		x = (bb1.max.x + bb2.min.x) / 2;
		y = (bb1.max.y + bb1.min.y + bb2.max.y + bb2.min.y) / 4;

		ret.rxnPluses.add(new _index.RxnPlus({ pp: new _vec2.default(x, y) }));
	}
	for (j = 0; j < bbProd.length; ++j) {
		if (j == 0) {
			bbProdAll = {};
			bbProdAll.max = new _vec2.default(bbProd[j].max);
			bbProdAll.min = new _vec2.default(bbProd[j].min);
		} else {
			bbProdAll.max = _vec2.default.max(bbProdAll.max, bbProd[j].max);
			bbProdAll.min = _vec2.default.min(bbProdAll.min, bbProd[j].min);
		}
	}
	bb1 = bbReactAll;
	bb2 = bbProdAll;
	if (!bb1 && !bb2) {
		ret.rxnArrows.add(new _index.RxnArrow({ pp: new _vec2.default(0, 0) }));
	} else {
		var v1 = bb1 ? new _vec2.default(bb1.max.x, (bb1.max.y + bb1.min.y) / 2) : null;
		var v2 = bb2 ? new _vec2.default(bb2.min.x, (bb2.max.y + bb2.min.y) / 2) : null;
		var defaultOffset = 3;
		if (!v1) v1 = new _vec2.default(v2.x - defaultOffset, v2.y);
		if (!v2) v2 = new _vec2.default(v1.x + defaultOffset, v1.y);
		ret.rxnArrows.add(new _index.RxnArrow({ pp: _vec2.default.lc2(v1, 0.5, v2, 0.5) }));
	}
	ret.isReaction = true;
	return ret;
}

exports.default = {
	fmtInfo: fmtInfo,
	paddedNum: paddedNum,
	parseDecimalInt: parseDecimalInt,
	partitionLine: partitionLine,
	partitionLineFixed: partitionLineFixed,
	rxnMerge: rxnMerge
};

},{"../../util/vec2":686,"./../struct/index":537}],527:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _pool = require('../../util/pool');

var _pool2 = _interopRequireDefault(_pool);

var _element = require('./../element');

var _element2 = _interopRequireDefault(_element);

var _index = require('./../struct/index');

var _index2 = _interopRequireDefault(_index);

var _parseSGroup = require('./parseSGroup');

var _parseSGroup2 = _interopRequireDefault(_parseSGroup);

var _utils = require('./utils');

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

/* eslint-disable guard-for-in */ // todo

var loadRGroupFragments = true; // TODO: set to load the fragments

function parseAtomLine(atomLine) {
	/* reader */
	var atomSplit = _utils2.default.partitionLine(atomLine, _utils2.default.fmtInfo.atomLinePartition);
	var params = {
		// generic
		pp: new _vec2.default(parseFloat(atomSplit[0]), -parseFloat(atomSplit[1]), parseFloat(atomSplit[2])),
		label: atomSplit[4].trim(),
		explicitValence: _utils2.default.fmtInfo.valenceMap[_utils2.default.parseDecimalInt(atomSplit[10])],

		// obsolete
		massDifference: _utils2.default.parseDecimalInt(atomSplit[5]),
		charge: _utils2.default.fmtInfo.chargeMap[_utils2.default.parseDecimalInt(atomSplit[6])],

		// query
		hCount: _utils2.default.parseDecimalInt(_utils2.default.parseDecimalInt(atomSplit[8])),
		stereoCare: _utils2.default.parseDecimalInt(atomSplit[9]) != 0,

		// reaction
		aam: _utils2.default.parseDecimalInt(atomSplit[14]),
		invRet: _utils2.default.parseDecimalInt(atomSplit[15]),

		// reaction query
		exactChangeFlag: _utils2.default.parseDecimalInt(atomSplit[16]) != 0
	};
	return new _index.Atom(params);
}

function parseBondLine(bondLine) {
	/* reader */
	var bondSplit = _utils2.default.partitionLine(bondLine, _utils2.default.fmtInfo.bondLinePartition);
	var params = {
		begin: _utils2.default.parseDecimalInt(bondSplit[0]) - 1,
		end: _utils2.default.parseDecimalInt(bondSplit[1]) - 1,
		type: _utils2.default.fmtInfo.bondTypeMap[_utils2.default.parseDecimalInt(bondSplit[2])],
		stereo: _utils2.default.fmtInfo.bondStereoMap[_utils2.default.parseDecimalInt(bondSplit[3])],
		xxx: bondSplit[4],
		topology: _utils2.default.fmtInfo.bondTopologyMap[_utils2.default.parseDecimalInt(bondSplit[5])],
		reactingCenterStatus: _utils2.default.parseDecimalInt(bondSplit[6])
	};

	return new _index.Bond(params);
}

function parseAtomListLine( /* string */atomListLine) {
	/* reader */
	var split = _utils2.default.partitionLine(atomListLine, _utils2.default.fmtInfo.atomListHeaderPartition);

	var number = _utils2.default.parseDecimalInt(split[0]) - 1;
	var notList = split[2].trim() == 'T';
	var count = _utils2.default.parseDecimalInt(split[4].trim());

	var ids = atomListLine.slice(_utils2.default.fmtInfo.atomListHeaderLength);
	var list = [];
	var itemLength = _utils2.default.fmtInfo.atomListHeaderItemLength;
	for (var i = 0; i < count; ++i) {
		list[i] = _utils2.default.parseDecimalInt(ids.slice(i * itemLength, (i + 1) * itemLength - 1));
	}return {
		aid: number,
		atomList: new _index.AtomList({
			notList: notList,
			ids: list
		})
	};
}

/**
 * @param ctab
 * @param ctabLines
 * @param shift
 * @param end
 * @param sGroups
 * @param rLogic
 * @returns { Pool }
 */
function parsePropertyLines(ctab, ctabLines, shift, end, sGroups, rLogic) {
	// eslint-disable-line max-statements, max-params
	/* reader */
	var props = new _pool2.default();

	while (shift < end) {
		var line = ctabLines[shift];
		if (line.charAt(0) == 'A') {
			var propValue = ctabLines[++shift];
			var isPseudo = /'.+'/.test(propValue);
			if (isPseudo && !props.get('pseudo')) props.set('pseudo', new _pool2.default());
			if (!isPseudo && !props.get('alias')) props.set('alias', new _pool2.default());
			if (isPseudo) propValue = propValue.replace(/'/g, '');
			props.get(isPseudo ? 'pseudo' : 'alias').set(_utils2.default.parseDecimalInt(line.slice(3, 6)) - 1, propValue);
		} else if (line.charAt(0) == 'M') {
			var type = line.slice(3, 6);
			var propertyData = line.slice(6);
			if (type == 'END') {
				break;
			} else if (type == 'CHG') {
				if (!props.get('charge')) props.set('charge', _parseSGroup2.default.readKeyValuePairs(propertyData));
			} else if (type == 'RAD') {
				if (!props.get('radical')) props.set('radical', _parseSGroup2.default.readKeyValuePairs(propertyData));
			} else if (type == 'ISO') {
				if (!props.get('isotope')) props.set('isotope', _parseSGroup2.default.readKeyValuePairs(propertyData));
			} else if (type == 'RBC') {
				if (!props.get('ringBondCount')) props.set('ringBondCount', _parseSGroup2.default.readKeyValuePairs(propertyData));
			} else if (type == 'SUB') {
				if (!props.get('substitutionCount')) props.set('substitutionCount', _parseSGroup2.default.readKeyValuePairs(propertyData));
			} else if (type == 'UNS') {
				if (!props.get('unsaturatedAtom')) props.set('unsaturatedAtom', _parseSGroup2.default.readKeyValuePairs(propertyData));
				// else if (type == "LIN") // link atom
			} else if (type == 'RGP') {
				// rgroup atom
				if (!props.get('rglabel')) props.set('rglabel', new _pool2.default());
				var rglabels = props.get('rglabel');
				var a2rs = _parseSGroup2.default.readKeyMultiValuePairs(propertyData);
				for (var a2ri = 0; a2ri < a2rs.length; a2ri++) {
					var a2r = a2rs[a2ri];
					rglabels.set(a2r[0], (rglabels.get(a2r[0]) || 0) | 1 << a2r[1] - 1);
				}
			} else if (type == 'LOG') {
				// rgroup atom
				propertyData = propertyData.slice(4);
				var rgid = _utils2.default.parseDecimalInt(propertyData.slice(0, 3).trim());
				var iii = _utils2.default.parseDecimalInt(propertyData.slice(4, 7).trim());
				var hhh = _utils2.default.parseDecimalInt(propertyData.slice(8, 11).trim());
				var ooo = propertyData.slice(12).trim();
				var logic = {};
				if (iii > 0) logic.ifthen = iii;
				logic.resth = hhh == 1;
				logic.range = ooo;
				rLogic[rgid] = logic;
			} else if (type == 'APO') {
				if (!props.get('attpnt')) props.set('attpnt', _parseSGroup2.default.readKeyValuePairs(propertyData));
			} else if (type == 'ALS') {
				// atom list
				var pool = parsePropertyLineAtomList(_utils2.default.partitionLine(propertyData, [1, 3, 3, 1, 1, 1]), _utils2.default.partitionLineFixed(propertyData.slice(10), 4, false));

				if (!props.get('atomList')) props.set('atomList', new _pool2.default());
				if (!props.get('label')) props.set('label', new _pool2.default());

				pool.forEach(function (atomList, aid) {
					props.get('label').set(aid, 'L#');
					props.get('atomList').set(aid, atomList);
				});
			} else if (type == 'STY') {
				// introduce s-group
				_parseSGroup2.default.initSGroup(sGroups, propertyData);
			} else if (type == 'SST') {
				_parseSGroup2.default.applySGroupProp(sGroups, 'subtype', propertyData);
			} else if (type == 'SLB') {
				_parseSGroup2.default.applySGroupProp(sGroups, 'label', propertyData, true);
			} else if (type == 'SPL') {
				_parseSGroup2.default.applySGroupProp(sGroups, 'parent', propertyData, true, true);
			} else if (type == 'SCN') {
				_parseSGroup2.default.applySGroupProp(sGroups, 'connectivity', propertyData);
			} else if (type == 'SAL') {
				_parseSGroup2.default.applySGroupArrayProp(sGroups, 'atoms', propertyData, -1);
			} else if (type == 'SBL') {
				_parseSGroup2.default.applySGroupArrayProp(sGroups, 'bonds', propertyData, -1);
			} else if (type == 'SPA') {
				_parseSGroup2.default.applySGroupArrayProp(sGroups, 'patoms', propertyData, -1);
			} else if (type == 'SMT') {
				var sid = _utils2.default.parseDecimalInt(propertyData.slice(0, 4)) - 1;
				sGroups[sid].data.subscript = propertyData.slice(4).trim();
			} else if (type == 'SDT') {
				_parseSGroup2.default.applyDataSGroupDesc(sGroups, propertyData);
			} else if (type == 'SDD') {
				_parseSGroup2.default.applyDataSGroupInfoLine(sGroups, propertyData);
			} else if (type == 'SCD') {
				_parseSGroup2.default.applyDataSGroupDataLine(sGroups, propertyData, false);
			} else if (type == 'SED') {
				_parseSGroup2.default.applyDataSGroupDataLine(sGroups, propertyData, true);
			}
		}
		++shift;
	}
	return props;
}

/**
 * @param atoms { Pool }
 * @param values { Pool }
 * @param propId { string }
 */
function applyAtomProp(atoms, values, propId) {
	/* reader */
	values.forEach(function (propVal, aid) {
		atoms.get(aid)[propId] = propVal;
	});
}

function parseCTabV2000(ctabLines, countsSplit) {
	// eslint-disable-line max-statements
	/* reader */
	var ctab = new _index2.default();
	var i = void 0;
	var atomCount = _utils2.default.parseDecimalInt(countsSplit[0]);
	var bondCount = _utils2.default.parseDecimalInt(countsSplit[1]);
	var atomListCount = _utils2.default.parseDecimalInt(countsSplit[2]);
	ctab.isChiral = !ctab.isChiral ? _utils2.default.parseDecimalInt(countsSplit[4]) !== 0 : true;
	var stextLinesCount = _utils2.default.parseDecimalInt(countsSplit[5]);
	var propertyLinesCount = _utils2.default.parseDecimalInt(countsSplit[10]);

	var shift = 0;
	var atomLines = ctabLines.slice(shift, shift + atomCount);
	shift += atomCount;
	var bondLines = ctabLines.slice(shift, shift + bondCount);
	shift += bondCount;
	var atomListLines = ctabLines.slice(shift, shift + atomListCount);
	shift += atomListCount + stextLinesCount;

	var atoms = atomLines.map(parseAtomLine);
	for (i = 0; i < atoms.length; ++i) {
		ctab.atoms.add(atoms[i]);
	}var bonds = bondLines.map(parseBondLine);
	for (i = 0; i < bonds.length; ++i) {
		ctab.bonds.add(bonds[i]);
	}var atomLists = atomListLines.map(parseAtomListLine);
	atomLists.forEach(function (pair) {
		ctab.atoms.get(pair.aid).atomList = pair.atomList;
		ctab.atoms.get(pair.aid).label = 'L#';
	});

	var sGroups = {};
	var rLogic = {};
	var props = parsePropertyLines(ctab, ctabLines, shift, Math.min(ctabLines.length, shift + propertyLinesCount), sGroups, rLogic);
	props.forEach(function (values, propId) {
		applyAtomProp(ctab.atoms, values, propId);
	});

	var atomMap = {};
	var sid = void 0;
	for (sid in sGroups) {
		var sg = sGroups[sid];
		if (sg.type === 'DAT' && sg.atoms.length === 0) {
			var parent = sGroups[sid].parent;
			if (parent >= 0) {
				var psg = sGroups[parent - 1];
				if (psg.type === 'GEN') sg.atoms = [].slice.call(psg.atoms);
			}
		}
	}
	for (sid in sGroups) {
		_parseSGroup2.default.loadSGroup(ctab, sGroups[sid], atomMap);
	}var emptyGroups = [];
	for (sid in sGroups) {
		// TODO: why do we need that?
		_index.SGroup.filter(ctab, sGroups[sid], atomMap);
		if (sGroups[sid].atoms.length === 0 && !sGroups[sid].allAtoms) emptyGroups.push(+sid);
	}
	for (i = 0; i < emptyGroups.length; ++i) {
		ctab.sGroupForest.remove(emptyGroups[i]);
		ctab.sgroups.delete(emptyGroups[i]);
	}
	for (var id in rLogic) {
		var rgid = parseInt(id, 10);
		ctab.rgroups.set(rgid, new _index.RGroup(rLogic[rgid]));
	}

	return ctab;
}

function parseRg2000( /* string[] */ctabLines) /* Struct */{
	// eslint-disable-line max-statements
	ctabLines = ctabLines.slice(7);
	if (ctabLines[0].trim() !== '$CTAB') throw new Error('RGFile format invalid');
	var i = 1;
	while (ctabLines[i].charAt(0) !== '$') {
		i++;
	}if (ctabLines[i].trim() !== '$END CTAB') throw new Error('RGFile format invalid');
	var coreLines = ctabLines.slice(1, i);
	ctabLines = ctabLines.slice(i + 1);
	var fragmentLines = {};
	while (true) {
		// eslint-disable-line no-constant-condition
		if (ctabLines.length === 0) throw new Error('Unexpected end of file');
		var line = ctabLines[0].trim();
		if (line === '$END MOL') {
			ctabLines = ctabLines.slice(1);
			break;
		}
		if (line !== '$RGP') throw new Error('RGFile format invalid');

		var rgid = parseInt(ctabLines[1].trim(), 10);
		fragmentLines[rgid] = [];
		ctabLines = ctabLines.slice(2);
		while (true) {
			// eslint-disable-line no-constant-condition
			if (ctabLines.length === 0) throw new Error('Unexpected end of file');
			line = ctabLines[0].trim();
			if (line === '$END RGP') {
				ctabLines = ctabLines.slice(1);
				break;
			}
			if (line !== '$CTAB') throw new Error('RGFile format invalid');
			i = 1;
			while (ctabLines[i].charAt(0) !== '$') {
				i++;
			}if (ctabLines[i].trim() !== '$END CTAB') throw new Error('RGFile format invalid');
			fragmentLines[rgid].push(ctabLines.slice(1, i));
			ctabLines = ctabLines.slice(i + 1);
		}
	}

	var core = parseCTab(coreLines);
	var frag = {};
	if (loadRGroupFragments) {
		for (var strId in fragmentLines) {
			var id = parseInt(strId, 10);
			frag[id] = [];
			for (var j = 0; j < fragmentLines[id].length; ++j) {
				frag[id].push(parseCTab(fragmentLines[id][j]));
			}
		}
	}
	return rgMerge(core, frag);
}

function parseRxn2000( /* string[] */ctabLines, shouldReactionRelayout) /* Struct */{
	// eslint-disable-line max-statements
	/* reader */
	ctabLines = ctabLines.slice(4);
	var countsSplit = _utils2.default.partitionLine(ctabLines[0], _utils2.default.fmtInfo.rxnItemsPartition);
	var nReactants = countsSplit[0] - 0,
	    nProducts = countsSplit[1] - 0,
	    nAgents = countsSplit[2] - 0;
	ctabLines = ctabLines.slice(1); // consume counts line

	var mols = [];
	while (ctabLines.length > 0 && ctabLines[0].substr(0, 4) == '$MOL') {
		ctabLines = ctabLines.slice(1);
		var n = 0;
		while (n < ctabLines.length && ctabLines[n].substr(0, 4) != '$MOL') {
			n++;
		}var lines = ctabLines.slice(0, n);
		var struct;
		if (lines[0].search('\\$MDL') == 0) {
			struct = parseRg2000(lines);
		} else {
			struct = parseCTab(lines.slice(3));
			struct.name = lines[0].trim();
		}
		mols.push(struct);
		ctabLines = ctabLines.slice(n);
	}

	return _utils2.default.rxnMerge(mols, nReactants, nProducts, nAgents, shouldReactionRelayout);
}

function parseCTab( /* string */ctabLines) /* Struct */{
	/* reader */
	var countsSplit = _utils2.default.partitionLine(ctabLines[0], _utils2.default.fmtInfo.countsLinePartition);
	ctabLines = ctabLines.slice(1);
	return parseCTabV2000(ctabLines, countsSplit);
}

function rgMerge(scaffold, rgroups) /* Struct */{
	/* reader */
	var ret = new _index2.default();

	scaffold.mergeInto(ret, null, null, false, true);

	Object.keys(rgroups).forEach(function (id) {
		var rgid = parseInt(id, 10);

		var _loop = function _loop(j) {
			var ctab = rgroups[rgid][j];
			ctab.rgroups.set(rgid, new _index.RGroup());
			var frag = {};
			var frid = ctab.frags.add(frag);
			ctab.rgroups.get(rgid).frags.add(frid);
			ctab.atoms.forEach(function (atom) {
				atom.fragment = frid;
			});
			ctab.mergeInto(ret);
		};

		for (var j = 0; j < rgroups[rgid].length; ++j) {
			_loop(j);
		}
	});

	return ret;
}

function labelsListToIds(labels) {
	/* reader */
	var ids = [];
	for (var i = 0; i < labels.length; ++i) {
		ids.push(_element2.default.map[labels[i].trim()]);
	}return ids;
}

/**
 * @param hdr
 * @param lst
 * @returns { Pool }
 */
function parsePropertyLineAtomList(hdr, lst) {
	/* reader */
	var aid = _utils2.default.parseDecimalInt(hdr[1]) - 1;
	var count = _utils2.default.parseDecimalInt(hdr[2]);
	var notList = hdr[4].trim() == 'T';
	var ids = labelsListToIds(lst.slice(0, count));
	var ret = new _pool2.default();
	ret.set(aid, new _index.AtomList({
		notList: notList,
		ids: ids
	}));
	return ret;
}

exports.default = {
	parseCTabV2000: parseCTabV2000,
	parseRg2000: parseRg2000,
	parseRxn2000: parseRxn2000
};

},{"../../util/pool":684,"../../util/vec2":686,"./../element":520,"./../struct/index":537,"./parseSGroup":525,"./utils":526}],528:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _element = require('./../element');

var _element2 = _interopRequireDefault(_element);

var _index = require('./../struct/index');

var _index2 = _interopRequireDefault(_index);

var _parseSGroup = require('./parseSGroup');

var _parseSGroup2 = _interopRequireDefault(_parseSGroup);

var _utils = require('./utils');

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parseAtomLineV3000(line) {
	// eslint-disable-line max-statements
	/* reader */
	var split, subsplit, key, value, i;
	split = spaceparsplit(line);
	var params = {
		pp: new _vec2.default(parseFloat(split[2]), -parseFloat(split[3]), parseFloat(split[4])),
		aam: split[5].trim()
	};
	var label = split[1].trim();
	if (label.charAt(0) == '"' && label.charAt(label.length - 1) == '"') label = label.substr(1, label.length - 2); // strip qutation marks
	if (label.charAt(label.length - 1) == ']') {
		// assume atom list
		label = label.substr(0, label.length - 1); // remove ']'
		var atomListParams = {};
		atomListParams.notList = false;
		if (label.substr(0, 5) == 'NOT [') {
			atomListParams.notList = true;
			label = label.substr(5); // remove 'NOT ['
		} else if (label.charAt(0) != '[') {
			throw new Error('Error: atom list expected, found \'' + label + '\'');
		} else {
			label = label.substr(1); // remove '['
		}
		atomListParams.ids = labelsListToIds(label.split(','));
		params['atomList'] = new _index.AtomList(atomListParams);
		params['label'] = 'L#';
	} else {
		params['label'] = label;
	}
	split.splice(0, 6);
	for (i = 0; i < split.length; ++i) {
		subsplit = splitonce(split[i], '=');
		key = subsplit[0];
		value = subsplit[1];
		if (key in _utils2.default.fmtInfo.v30atomPropMap) {
			var ival = _utils2.default.parseDecimalInt(value);
			if (key == 'VAL') {
				if (ival == 0) continue; // eslint-disable-line no-continue
				if (ival == -1) ival = 0;
			}
			params[_utils2.default.fmtInfo.v30atomPropMap[key]] = ival;
		} else if (key == 'RGROUPS') {
			value = value.trim().substr(1, value.length - 2);
			var rgrsplit = value.split(' ').slice(1);
			params.rglabel = 0;
			for (var j = 0; j < rgrsplit.length; ++j) {
				params.rglabel |= 1 << rgrsplit[j] - 1;
			}
		} else if (key == 'ATTCHPT') {
			params.attpnt = value.trim() - 0;
		}
	}

	return new _index.Atom(params);
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

function parseBondLineV3000(line) {
	/* reader */
	var split, subsplit, key, value, i;
	split = spaceparsplit(line);
	var params = {
		begin: _utils2.default.parseDecimalInt(split[2]) - 1,
		end: _utils2.default.parseDecimalInt(split[3]) - 1,
		type: _utils2.default.fmtInfo.bondTypeMap[_utils2.default.parseDecimalInt(split[1])]
	};
	split.splice(0, 4);
	for (i = 0; i < split.length; ++i) {
		subsplit = splitonce(split[i], '=');
		key = subsplit[0];
		value = subsplit[1];
		if (key == 'CFG') {
			params.stereo = _utils2.default.fmtInfo.v30bondStereoMap[_utils2.default.parseDecimalInt(value)];
			if (params.type == _index.Bond.PATTERN.TYPE.DOUBLE && params.stereo == _index.Bond.PATTERN.STEREO.EITHER) params.stereo = _index.Bond.PATTERN.STEREO.CIS_TRANS;
		} else if (key == 'TOPO') {
			params.topology = _utils2.default.fmtInfo.bondTopologyMap[_utils2.default.parseDecimalInt(value)];
		} else if (key == 'RXCTR') {
			params.reactingCenterStatus = _utils2.default.parseDecimalInt(value);
		} else if (key == 'STBOX') {
			params.stereoCare = _utils2.default.parseDecimalInt(value);
		}
	}
	return new _index.Bond(params);
}

function v3000parseCollection(ctab, ctabLines, shift) {
	/* reader */
	shift++;
	while (ctabLines[shift].trim() != 'M  V30 END COLLECTION') {
		shift++;
	}shift++;
	return shift;
}

function v3000parseSGroup(ctab, ctabLines, sgroups, atomMap, shift) {
	// eslint-disable-line max-params, max-statements
	/* reader */
	var line = '';
	shift++;
	while (shift < ctabLines.length) {
		line = stripV30(ctabLines[shift++]).trim();
		if (line.trim() == 'END SGROUP') return shift;
		while (line.charAt(line.length - 1) == '-') {
			line = (line.substr(0, line.length - 1) + stripV30(ctabLines[shift++])).trim();
		}var split = splitSGroupDef(line);
		var type = split[1];
		var sg = new _index.SGroup(type);
		sg.number = split[0] - 0;
		sg.type = type;
		sg.label = split[2] - 0;
		sgroups[sg.number] = sg;
		var props = {};
		for (var i = 3; i < split.length; ++i) {
			var subsplit = splitonce(split[i], '=');
			if (subsplit.length != 2) throw new Error('A record of form AAA=BBB or AAA=(...) expected, got \'' + split[i] + '\'');
			var name = subsplit[0];
			if (!(name in props)) props[name] = [];
			props[name].push(subsplit[1]);
		}
		sg.atoms = parseBracedNumberList(props['ATOMS'][0], -1);
		if (props['PATOMS']) sg.patoms = parseBracedNumberList(props['PATOMS'][0], -1);
		sg.bonds = props['BONDS'] ? parseBracedNumberList(props['BONDS'][0], -1) : [];
		var brkxyzStrs = props['BRKXYZ'];
		sg.brkxyz = [];
		if (brkxyzStrs) {
			for (var j = 0; j < brkxyzStrs.length; ++j) {
				sg.brkxyz.push(parseBracedNumberList(brkxyzStrs[j]));
			}
		}
		if (props['MULT']) sg.data.subscript = props['MULT'][0] - 0;
		if (props['LABEL']) sg.data.subscript = props['LABEL'][0].trim();
		if (props['CONNECT']) sg.data.connectivity = props['CONNECT'][0].toLowerCase();
		if (props['FIELDDISP']) _parseSGroup2.default.applyDataSGroupInfo(sg, stripQuotes(props['FIELDDISP'][0]));
		if (props['FIELDDATA']) _parseSGroup2.default.applyDataSGroupData(sg, props['FIELDDATA'][0], true);
		if (props['FIELDNAME']) _parseSGroup2.default.applyDataSGroupName(sg, props['FIELDNAME'][0]);
		if (props['QUERYTYPE']) _parseSGroup2.default.applyDataSGroupQuery(sg, props['QUERYTYPE'][0]);
		if (props['QUERYOP']) _parseSGroup2.default.applyDataSGroupQueryOp(sg, props['QUERYOP'][0]);
		_parseSGroup2.default.loadSGroup(ctab, sg, atomMap);
	}
	throw new Error('S-group declaration incomplete.');
}

function parseCTabV3000(ctabLines, norgroups) {
	// eslint-disable-line max-statements
	/* reader */
	var ctab = new _index2.default();

	var shift = 0;
	if (ctabLines[shift++].trim() != 'M  V30 BEGIN CTAB') throw Error('CTAB V3000 invalid');
	if (ctabLines[shift].slice(0, 13) != 'M  V30 COUNTS') throw Error('CTAB V3000 invalid');
	var vals = ctabLines[shift].slice(14).split(' ');
	ctab.isChiral = _utils2.default.parseDecimalInt(vals[4]) == 1;
	shift++;

	if (ctabLines[shift].trim() == 'M  V30 BEGIN ATOM') {
		shift++;
		var line;
		while (shift < ctabLines.length) {
			line = stripV30(ctabLines[shift++]).trim();
			if (line == 'END ATOM') break;
			while (line.charAt(line.length - 1) == '-') {
				line = (line.substring(0, line.length - 1) + stripV30(ctabLines[shift++])).trim();
			}ctab.atoms.add(parseAtomLineV3000(line));
		}

		if (ctabLines[shift].trim() == 'M  V30 BEGIN BOND') {
			shift++;
			while (shift < ctabLines.length) {
				line = stripV30(ctabLines[shift++]).trim();
				if (line == 'END BOND') break;
				while (line.charAt(line.length - 1) == '-') {
					line = (line.substring(0, line.length - 1) + stripV30(ctabLines[shift++])).trim();
				}ctab.bonds.add(parseBondLineV3000(line));
			}
		}

		// TODO: let sections follow in arbitrary order
		var sgroups = {};
		var atomMap = {};

		while (ctabLines[shift].trim() != 'M  V30 END CTAB') {
			if (ctabLines[shift].trim() == 'M  V30 BEGIN COLLECTION')
				// TODO: read collection information
				shift = v3000parseCollection(ctab, ctabLines, shift);else if (ctabLines[shift].trim() == 'M  V30 BEGIN SGROUP') shift = v3000parseSGroup(ctab, ctabLines, sgroups, atomMap, shift);else throw Error('CTAB V3000 invalid');
		}
	}
	if (ctabLines[shift++].trim() != 'M  V30 END CTAB') throw Error('CTAB V3000 invalid');

	if (!norgroups) readRGroups3000(ctab, ctabLines.slice(shift));

	return ctab;
}

function readRGroups3000(ctab, /* string */ctabLines) /* Struct */{
	// eslint-disable-line max-statements
	/* reader */
	var rfrags = {};
	var rLogic = {};
	var shift = 0;
	while (shift < ctabLines.length && ctabLines[shift].search('M  V30 BEGIN RGROUP') == 0) {
		var id = ctabLines[shift++].split(' ').pop();
		rfrags[id] = [];
		rLogic[id] = {};
		while (true) {
			// eslint-disable-line no-constant-condition
			var line = ctabLines[shift].trim();
			if (line.search('M  V30 RLOGIC') == 0) {
				line = line.slice(13);
				var rlsplit = line.trim().split(/\s+/g);
				var iii = _utils2.default.parseDecimalInt(rlsplit[0]);
				var hhh = _utils2.default.parseDecimalInt(rlsplit[1]);
				var ooo = rlsplit.slice(2).join(' ');
				var logic = {};
				if (iii > 0) logic.ifthen = iii;
				logic.resth = hhh == 1;
				logic.range = ooo;
				rLogic[id] = logic;
				shift++;
				continue; // eslint-disable-line no-continue
			}
			if (line != 'M  V30 BEGIN CTAB') throw Error('CTAB V3000 invalid');
			for (var i = 0; i < ctabLines.length; ++i) {
				if (ctabLines[shift + i].trim() == 'M  V30 END CTAB') break;
			}
			var lines = ctabLines.slice(shift, shift + i + 1);
			var rfrag = parseCTabV3000(lines, true);
			rfrags[id].push(rfrag);
			shift = shift + i + 1;
			if (ctabLines[shift].trim() == 'M  V30 END RGROUP') {
				shift++;
				break;
			}
		}
	}

	Object.keys(rfrags).forEach(function (rgid) {
		rfrags[rgid].forEach(function (rg) {
			rg.rgroups.set(rgid, new _index.RGroup(rLogic[rgid]));
			var frid = rg.frags.add({});
			rg.rgroups.get(rgid).frags.add(frid);
			rg.atoms.forEach(function (atom) {
				atom.fragment = frid;
			});
			rg.mergeInto(ctab);
		});
	});
}

function parseRxn3000( /* string[] */ctabLines, shouldReactionRelayout) /* Struct */{
	// eslint-disable-line max-statements
	/* reader */
	ctabLines = ctabLines.slice(4);
	var countsSplit = ctabLines[0].split(/\s+/g).slice(3);
	var nReactants = countsSplit[0] - 0,
	    nProducts = countsSplit[1] - 0,
	    nAgents = countsSplit.length > 2 ? countsSplit[2] - 0 : 0;

	function findCtabEnd(i) {
		for (var j = i; j < ctabLines.length; ++j) {
			if (ctabLines[j].trim() == 'M  V30 END CTAB') return j;
		}

		return console.error('CTab format invalid');
	}

	function findRGroupEnd(i) {
		for (var j = i; j < ctabLines.length; ++j) {
			if (ctabLines[j].trim() == 'M  V30 END RGROUP') return j;
		}
		return console.error('CTab format invalid');
	}

	var molLinesReactants = [];
	var molLinesProducts = [];
	var current = null;
	var rGroups = [];
	for (var i = 0; i < ctabLines.length; ++i) {
		var line = ctabLines[i].trim();
		var j;

		if (line.startsWith('M  V30 COUNTS')) {
			// do nothing
		} else if (line == 'M  END') {
			break; // stop reading
		} else if (line == 'M  V30 BEGIN PRODUCT') {
			console.assert(current == null, 'CTab format invalid');
			current = molLinesProducts;
		} else if (line == 'M  V30 END PRODUCT') {
			console.assert(current === molLinesProducts, 'CTab format invalid');
			current = null;
		} else if (line == 'M  V30 BEGIN REACTANT') {
			console.assert(current == null, 'CTab format invalid');
			current = molLinesReactants;
		} else if (line == 'M  V30 END REACTANT') {
			console.assert(current === molLinesReactants, 'CTab format invalid');
			current = null;
		} else if (line.startsWith('M  V30 BEGIN RGROUP')) {
			console.assert(current == null, 'CTab format invalid');
			j = findRGroupEnd(i);
			rGroups.push(ctabLines.slice(i, j + 1));
			i = j;
		} else if (line == 'M  V30 BEGIN CTAB') {
			j = findCtabEnd(i);
			current.push(ctabLines.slice(i, j + 1));
			i = j;
		} else {
			throw new Error('line unrecognized: ' + line);
		}
	}
	var mols = [];
	var molLines = molLinesReactants.concat(molLinesProducts);
	for (j = 0; j < molLines.length; ++j) {
		var mol = parseCTabV3000(molLines[j], countsSplit);
		mols.push(mol);
	}
	var ctab = _utils2.default.rxnMerge(mols, nReactants, nProducts, nAgents, shouldReactionRelayout);

	readRGroups3000(ctab, function (array) {
		var res = [];
		for (var k = 0; k < array.length; ++k) {
			res = res.concat(array[k]);
		}return res;
	}(rGroups));

	return ctab;
}

// split a line by spaces outside parentheses
function spaceparsplit(line) {
	// eslint-disable-line max-statements
	/* reader */
	var split = [];
	var pc = 0;
	var c;
	var i;
	var i0 = -1;
	var quoted = false;

	for (i = 0; i < line.length; ++i) {
		c = line[i];
		if (c == '(') pc++;else if (c == ')') pc--;
		if (c == '"') quoted = !quoted;
		if (!quoted && line[i] == ' ' && pc == 0) {
			if (i > i0 + 1) split.push(line.slice(i0 + 1, i));
			i0 = i;
		}
	}
	if (i > i0 + 1) split.push(line.slice(i0 + 1, i));
	return split;
}

// utils
function stripQuotes(str) {
	if (str[0] === '"' && str[str.length - 1] === '"') return str.substr(1, str.length - 2);
	return str;
}

function splitonce(line, delim) {
	/* reader */
	var p = line.indexOf(delim);
	return [line.slice(0, p), line.slice(p + 1)];
}

function splitSGroupDef(line) {
	// eslint-disable-line max-statements
	/* reader */
	var split = [];
	var braceBalance = 0;
	var quoted = false;
	for (var i = 0; i < line.length; ++i) {
		var c = line.charAt(i);
		if (c == '"') {
			quoted = !quoted;
		} else if (!quoted) {
			if (c == '(') {
				braceBalance++;
			} else if (c == ')') {
				braceBalance--;
			} else if (c == ' ' && braceBalance == 0) {
				split.push(line.slice(0, i));
				line = line.slice(i + 1).trim();
				i = 0;
			}
		}
	}
	if (braceBalance != 0) throw new Error('Brace balance broken. S-group properies invalid!');
	if (line.length > 0) split.push(line.trim());
	return split;
}

function parseBracedNumberList(line, shift) {
	/* reader */
	if (!line) return null;
	var list = [];
	line = line.trim();
	line = line.substr(1, line.length - 2);
	var split = line.split(' ');
	shift = shift || 0;

	for (var i = 1; i < split.length; ++i) {
		var value = parseInt(split[i]);
		if (!isNaN(value)) // eslint-disable-line
			list.push(value + shift);
	}

	return list;
}

function stripV30(line) {
	/* reader */
	if (line.slice(0, 7) != 'M  V30 ') throw new Error('Prefix invalid');
	return line.slice(7);
}

function labelsListToIds(labels) {
	/* reader */
	var ids = [];
	for (var i = 0; i < labels.length; ++i) {
		ids.push(_element2.default.map[labels[i].trim()]);
	}return ids;
}

exports.default = {
	parseCTabV3000: parseCTabV3000,
	readRGroups3000: readRGroups3000,
	parseRxn3000: parseRxn3000
};

},{"../../util/vec2":686,"./../element":520,"./../struct/index":537,"./parseSGroup":525,"./utils":526}],529:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _molfile = require('./molfile');

var _molfile2 = _interopRequireDefault(_molfile);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parse(str, options) {
	var regexp = /^[^]+?\$\$\$\$$/gm;
	var m, chunk;
	var result = [];
	while ((m = regexp.exec(str)) !== null) {
		chunk = m[0].replace(/\r/g, ''); // TODO: normalize newline?
		chunk = chunk.trim();
		var end = chunk.indexOf('M  END');
		if (end !== -1) {
			var item = {};
			var propChunks = chunk.substr(end + 7).trim().split(/^$\n?/m);

			item.struct = _molfile2.default.parse(chunk.substring(0, end + 6), options);
			item.props = propChunks.reduce(function (props, pc) {
				var m = pc.match(/^> [ \d]*<(\S+)>/);
				if (m) {
					var field = m[1];
					var value = pc.split('\n')[1].trim();
					props[field] = isFinite(value) ? +value : value; // eslint-disable-line
				}
				return props;
			}, {});

			result.push(item);
		}
	}
	return result;
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

function stringify(items, options) {
	return items.reduce(function (res, item) {
		res += _molfile2.default.stringify(item.struct, options);

		Object.keys(item.props).forEach(function (prop) {
			res += '> <' + prop + '>\n';
			res += item.props[prop] + '\n\n';
		});

		return res + '\$\$\$\$';
	}, '');
}

exports.default = {
	stringify: stringify,
	parse: parse
};

},{"./molfile":523}],530:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _pool = require('../../util/pool');

var _pool2 = _interopRequireDefault(_pool);

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _struct = require('../struct');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function CisTrans(mol, neighborsFunc, context) {
	this.molecule = mol;
	this.bonds = new _pool2.default();
	this.getNeighbors = neighborsFunc;
	this.context = context;
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

CisTrans.PARITY = {
	NONE: 0,
	CIS: 1,
	TRANS: 2
};

CisTrans.prototype.each = function (func) {
	this.bonds.forEach(func);
};

CisTrans.prototype.getParity = function (idx) {
	return this.bonds.get(idx).parity;
};

CisTrans.prototype.getSubstituents = function (idx) {
	return this.bonds.get(idx).substituents;
};

CisTrans.prototype.sameside = function (beg, end, neiBeg, neiEnd) {
	var diff = _vec2.default.diff(beg, end);
	var norm = new _vec2.default(-diff.y, diff.x);

	if (!norm.normalize()) return 0;

	var normBeg = _vec2.default.diff(neiBeg, beg);
	var normEnd = _vec2.default.diff(neiEnd, end);

	if (!normBeg.normalize()) return 0;
	if (!normEnd.normalize()) return 0;

	var prodBeg = _vec2.default.dot(normBeg, norm);
	var prodEnd = _vec2.default.dot(normEnd, norm);

	if (Math.abs(prodBeg) < 0.001 || Math.abs(prodEnd) < 0.001) return 0;

	return prodBeg * prodEnd > 0 ? 1 : -1;
};

CisTrans.prototype.samesides = function (iBeg, iEnd, iNeiBeg, iNeiEnd) {
	return this.sameside(this.molecule.atoms.get(iBeg).pp, this.molecule.atoms.get(iEnd).pp, this.molecule.atoms.get(iNeiBeg).pp, this.molecule.atoms.get(iNeiEnd).pp);
};

CisTrans.prototype.sortSubstituents = function (substituents) {
	// eslint-disable-line max-statements
	var h0 = this.molecule.atoms.get(substituents[0]).pureHydrogen();
	var h1 = substituents[1] < 0 || this.molecule.atoms.get(substituents[1]).pureHydrogen();
	var h2 = this.molecule.atoms.get(substituents[2]).pureHydrogen();
	var h3 = substituents[3] < 0 || this.molecule.atoms.get(substituents[3]).pureHydrogen();

	if (h0 && h1) return false;
	if (h2 && h3) return false;

	if (h1) {
		substituents[1] = -1;
	} else if (h0) {
		substituents[0] = substituents[1];
		substituents[1] = -1;
	} else if (substituents[0] > substituents[1]) {
		swap(substituents, 0, 1);
	}

	if (h3) {
		substituents[3] = -1;
	} else if (h2) {
		substituents[2] = substituents[3];
		substituents[3] = -1;
	} else if (substituents[2] > substituents[3]) {
		swap(substituents, 2, 3);
	}

	return true;
};

CisTrans.prototype.isGeomStereoBond = function (bondIdx, substituents) {
	// eslint-disable-line max-statements
	// it must be [C,N,Si]=[C,N,Si] bond
	var bond = this.molecule.bonds.get(bondIdx);

	if (bond.type != _struct.Bond.PATTERN.TYPE.DOUBLE) return false;

	var label1 = this.molecule.atoms.get(bond.begin).label;
	var label2 = this.molecule.atoms.get(bond.end).label;

	if (label1 != 'C' && label1 != 'N' && label1 != 'Si' && label1 != 'Ge') return false;
	if (label2 != 'C' && label2 != 'N' && label2 != 'Si' && label2 != 'Ge') return false;

	// the atoms should have 1 or 2 single bonds
	// (apart from the double bond under consideration)
	var neiBegin = this.getNeighbors.call(this.context, bond.begin);
	var neiЕnd = this.getNeighbors.call(this.context, bond.end);

	if (neiBegin.length < 2 || neiBegin.length > 3 || neiЕnd.length < 2 || neiЕnd.length > 3) return false;

	substituents[0] = -1;
	substituents[1] = -1;
	substituents[2] = -1;
	substituents[3] = -1;

	var i;
	var nei;

	for (i = 0; i < neiBegin.length; i++) {
		nei = neiBegin[i];

		if (nei.bid == bondIdx) continue; // eslint-disable-line no-continue

		if (this.molecule.bonds.get(nei.bid).type != _struct.Bond.PATTERN.TYPE.SINGLE) return false;

		if (substituents[0] == -1) substituents[0] = nei.aid;else // (substituents[1] == -1)
			substituents[1] = nei.aid;
	}

	for (i = 0; i < neiЕnd.length; i++) {
		nei = neiЕnd[i];

		if (nei.bid == bondIdx) continue; // eslint-disable-line no-continue

		if (this.molecule.bonds.get(nei.bid).type != _struct.Bond.PATTERN.TYPE.SINGLE) return false;

		if (substituents[2] == -1) substituents[2] = nei.aid;else // (substituents[3] == -1)
			substituents[3] = nei.aid;
	}

	if (substituents[1] != -1 && this.samesides(bond.begin, bond.end, substituents[0], substituents[1]) != -1) return false;
	if (substituents[3] != -1 && this.samesides(bond.begin, bond.end, substituents[2], substituents[3]) != -1) return false;

	return true;
};

CisTrans.prototype.build = function (excludeBonds) {
	var _this = this;

	this.molecule.bonds.forEach(function (bond, bid) {
		var ct = {
			parity: 0,
			substituents: []
		};
		_this.bonds.set(bid, ct);

		if (Array.isArray(excludeBonds) && excludeBonds[bid]) return;

		if (!_this.isGeomStereoBond(bid, ct.substituents)) return;

		if (!_this.sortSubstituents(ct.substituents)) return;

		var sign = _this.samesides(bond.begin, bond.end, ct.substituents[0], ct.substituents[2]);

		if (sign === 1) ct.parity = CisTrans.PARITY.CIS;else if (sign === -1) ct.parity = CisTrans.PARITY.TRANS;
	});
};

function swap(arr, i1, i2) {
	var tmp = arr[i1];
	arr[i1] = arr[i2];
	arr[i2] = tmp;
}

exports.default = CisTrans;

},{"../../util/pool":684,"../../util/vec2":686,"../struct":537}],531:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function Dfs(mol, atomData, components, nReactants) {
	var _this = this;

	this.molecule = mol;
	this.atom_data = atomData;
	this.components = components;
	this.nComponentsInReactants = -1;
	this.nReactants = nReactants;

	this.vertices = new Array(this.molecule.atoms.size); // Minimum size
	this.molecule.atoms.forEach(function (atom, aid) {
		_this.vertices[aid] = new Dfs.VertexDesc();
	}, this);

	this.edges = new Array(this.molecule.bonds.size); // Minimum size
	this.molecule.bonds.forEach(function (bond, bid) {
		_this.edges[bid] = new Dfs.EdgeDesc();
	}, this);

	this.v_seq = [];
}

Dfs.VertexDesc = function () {
	this.dfs_state = 0; // 0 -- not on stack
	// 1 -- on stack
	// 2 -- removed from stack
	this.parent_vertex = 0; // parent vertex in DFS tree
	this.parent_edge = 0; // edge to parent vertex
	this.branches = 0; // how many DFS branches go out from this vertex}
};

Dfs.EdgeDesc = function () {
	this.opening_cycles = 0; // how many cycles are
	// (i) starting with this edge
	// and (ii) ending in this edge's first vertex
	this.closing_cycle = 0; // 1 if this edge closes a cycle
};

Dfs.SeqElem = function (vIdx, parVertex, parEdge) {
	this.idx = vIdx; // index of vertex in _graph
	this.parent_vertex = parVertex; // parent vertex in DFS tree
	this.parent_edge = parEdge; // edge to parent vertex
};

Dfs.prototype.walk = function () {
	var _this2 = this;

	// eslint-disable-line max-statements
	var vStack = [];
	var i, j;
	var cid = 0;
	var component = 0;

	while (true) {
		// eslint-disable-line no-constant-condition
		if (vStack.length < 1) {
			var selected = -1;

			while (cid < this.components.length && selected == -1) {
				selected = this.components[cid].find(function (aid) {
					if (_this2.vertices[aid].dfs_state === 0) {
						selected = aid;
						return true;
					}
					return false;
				});
				if (selected === null) {
					selected = -1;
					cid++;
				}
				if (cid == this.nReactants) this.nComponentsInReactants = component;
			}
			if (selected < -1) {
				this.molecule.atoms.find(function (aid) {
					if (_this2.vertices[aid].dfs_state === 0) {
						selected = aid;
						return true;
					}
					return false;
				});
			}
			if (selected == -1) break;
			this.vertices[selected].parent_vertex = -1;
			this.vertices[selected].parent_edge = -1;
			vStack.push(selected);
			component++;
		}

		var vIdx = vStack.pop();
		var parentVertex = this.vertices[vIdx].parent_vertex;

		var seqElem = new Dfs.SeqElem(vIdx, parentVertex, this.vertices[vIdx].parent_edge);
		this.v_seq.push(seqElem);

		this.vertices[vIdx].dfs_state = 2;

		var atomD = this.atom_data[vIdx];

		for (i = 0; i < atomD.neighbours.length; i++) {
			var neiIdx = atomD.neighbours[i].aid;
			var edgeIdx = atomD.neighbours[i].bid;

			if (neiIdx == parentVertex) continue; // eslint-disable-line no-continue

			if (this.vertices[neiIdx].dfs_state == 2) {
				this.edges[edgeIdx].closing_cycle = 1;

				j = vIdx;

				while (j != -1 && this.vertices[j].parent_vertex != neiIdx) {
					j = this.vertices[j].parent_vertex;
				}if (j == -1) throw new Error('cycle unwind error');

				this.edges[this.vertices[j].parent_edge].opening_cycles++;
				this.vertices[vIdx].branches++;

				seqElem = new Dfs.SeqElem(neiIdx, vIdx, edgeIdx);
				this.v_seq.push(seqElem);
			} else {
				if (this.vertices[neiIdx].dfs_state == 1) {
					j = vStack.indexOf(neiIdx);

					if (j == -1) // eslint-disable-line max-depth
						throw new Error('internal: removing vertex from stack');

					vStack.splice(j, 1);

					var parent = this.vertices[neiIdx].parent_vertex;

					if (parent >= 0) // eslint-disable-line max-depth
						this.vertices[parent].branches--;
				}

				this.vertices[vIdx].branches++;
				this.vertices[neiIdx].parent_vertex = vIdx;
				this.vertices[neiIdx].parent_edge = edgeIdx;
				this.vertices[neiIdx].dfs_state = 1;
				vStack.push(neiIdx);
			}
		}
	}
};

Dfs.prototype.edgeClosingCycle = function (eIdx) {
	return this.edges[eIdx].closing_cycle !== 0;
};

Dfs.prototype.numBranches = function (vIdx) {
	return this.vertices[vIdx].branches;
};

Dfs.prototype.numOpeningCycles = function (eIdx) {
	return this.edges[eIdx].opening_cycles;
};

Dfs.prototype.toString = function () {
	var str = '';
	this.v_seq.forEach(function (seqElem) {
		str += seqElem.idx + ' -> ';
	});
	str += '*';
	return str;
};

exports.default = Dfs;

},{}],532:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _pile = require('../../util/pile');

var _pile2 = _interopRequireDefault(_pile);

var _struct = require('../struct');

var _cis_trans = require('./cis_trans');

var _cis_trans2 = _interopRequireDefault(_cis_trans);

var _dfs = require('./dfs');

var _dfs2 = _interopRequireDefault(_dfs);

var _stereocenters = require('./stereocenters');

var _stereocenters2 = _interopRequireDefault(_stereocenters);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Smiles() {
	this.smiles = '';
	this.writtenAtoms = [];
	this.writtenComponents = 0;

	this.ignore_errors = false;
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

Smiles._Atom = function (hСount) {
	// eslint-disable-line no-underscore-dangle
	this.neighbours = []; // Array of integer pairs {a, b}
	this.aromatic = false; // has aromatic bond
	this.lowercase = false; // aromatic and has to be written lowercase
	this.chirality = 0; // 0 means no chirality, 1 means CCW pyramid, 2 means CW pyramid
	this.branch_cnt = 0; // runs from 0 to (branches - 1)
	this.paren_written = false;
	this.h_count = hСount;
	this.parent = -1;
};

// NB: only loops of length up to 6 are included here
Smiles.prototype.isBondInRing = function (bid) {
	console.assert(this.inLoop, 'Init this.inLoop prior to calling this method');
	return this.inLoop[bid];
};

Smiles.prototype.saveMolecule = function (molecule, ignoreErrors) {
	var _this = this;

	// eslint-disable-line max-statements
	var i, j, k;

	if (!ignoreErrors) this.ignore_errors = ignoreErrors;

	// [RB]: KETCHER-498 (Incorrect smile-string for multiple Sgroup)
	// TODO the fix is temporary, still need to implement error handling/reporting
	// BEGIN
	molecule = molecule.clone();
	molecule.initHalfBonds();
	molecule.initNeighbors();
	molecule.sortNeighbors();
	molecule.setImplicitHydrogen();
	molecule.sgroups.forEach(function (sg) {
		if (sg.type === 'MUL') {
			try {
				_struct.SGroup.prepareMulForSaving(sg, molecule);
			} catch (ex) {
				throw Error('Bad s-group (' + ex.message + ')');
			}
		}
		// 'SMILES data format doesn\'t support s-groups'
	});
	// END

	this.atoms = new Array(molecule.atoms.size);

	molecule.atoms.forEach(function (atom, aid) {
		_this.atoms[aid] = new Smiles._Atom(atom.implicitH); // eslint-disable-line no-underscore-dangle
	});

	// From the SMILES specification:
	// Please note that only atoms on the following list
	// can be considered aromatic: C, N, O, P, S, As, Se, and * (wildcard).
	var allowedLowercase = ['B', 'C', 'N', 'O', 'P', 'S', 'Se', 'As'];

	// Detect atoms that have aromatic bonds and count neighbours
	molecule.bonds.forEach(function (bond, bid) {
		if (bond.type === _struct.Bond.PATTERN.TYPE.AROMATIC) {
			_this.atoms[bond.begin].aromatic = true;
			if (allowedLowercase.indexOf(molecule.atoms.get(bond.begin).label) !== -1) _this.atoms[bond.begin].lowercase = true;
			_this.atoms[bond.end].aromatic = true;
			if (allowedLowercase.indexOf(molecule.atoms.get(bond.end).label) !== -1) _this.atoms[bond.end].lowercase = true;
		}
		_this.atoms[bond.begin].neighbours.push({ aid: bond.end, bid: bid });
		_this.atoms[bond.end].neighbours.push({ aid: bond.begin, bid: bid });
	});

	this.inLoop = function () {
		molecule.prepareLoopStructure();
		var bondsInLoops = new _pile2.default();
		molecule.loops.forEach(function (loop) {
			if (loop.hbs.length <= 6) {
				var hbids = loop.hbs.map(function (hbid) {
					return molecule.halfBonds.get(hbid).bid;
				});
				bondsInLoops = bondsInLoops.union(new _pile2.default(hbids));
			}
		});
		var inLoop = {};
		bondsInLoops.forEach(function (bid) {
			inLoop[bid] = 1;
		});
		return inLoop;
	}();

	this.touchedCistransbonds = 0;
	this.markCisTrans(molecule);

	var components = molecule.getComponents();
	var componentsAll = components.reactants.concat(components.products);

	var walk = new _dfs2.default(molecule, this.atoms, componentsAll, components.reactants.length);

	walk.walk();
	this.atoms.forEach(function (atom) {
		atom.neighbours = [];
	});

	// fill up neighbor lists for the stereocenters calculation
	for (i = 0; i < walk.v_seq.length; i++) {
		var seqEl = walk.v_seq[i];
		var vIdx = seqEl.idx;
		var eIdx = seqEl.parent_edge;
		var vPrevIdx = seqEl.parent_vertex;

		if (eIdx >= 0) {
			var atom = this.atoms[vIdx];

			var openingCycles = walk.numOpeningCycles(eIdx);

			for (j = 0; j < openingCycles; j++) {
				this.atoms[vPrevIdx].neighbours.push({ aid: -1, bid: -1 });
			}if (walk.edgeClosingCycle(eIdx)) {
				for (k = 0; k < atom.neighbours.length; k++) {
					if (atom.neighbours[k].aid === -1) {
						// eslint-disable-line max-depth
						atom.neighbours[k].aid = vPrevIdx;
						atom.neighbours[k].bid = eIdx;
						break;
					}
				}
				if (k === atom.neighbours.length) throw new Error('internal: can not put closing bond to its place');
			} else {
				atom.neighbours.push({ aid: vPrevIdx, bid: eIdx });
				atom.parent = vPrevIdx;
			}
			this.atoms[vPrevIdx].neighbours.push({ aid: vIdx, bid: eIdx });
		}
	}

	try {
		// detect chiral configurations
		var stereocenters = new _stereocenters2.default(molecule, function (idx) {
			return this.atoms[idx].neighbours;
		}, this);
		stereocenters.buildFromBonds(this.ignore_errors);

		stereocenters.each(function (sc, atomIdx) {
			// eslint-disable-line max-statements
			// if (sc.type < MoleculeStereocenters::ATOM_AND)
			//    continue;

			var implicitHIdx = -1;

			if (sc.pyramid[3] == -1) implicitHIdx = 3;
			/*
   else for (j = 0; j < 4; j++)
   	if (ignored_vertices[pyramid[j]])
   	{
   		implicit_h_idx = j;
   		break;
   	}
   	*/

			var pyramidMapping = [];
			var counter = 0;

			var atom = _this.atoms[atomIdx];

			if (atom.parent != -1) {
				for (k = 0; k < 4; k++) {
					if (sc.pyramid[k] == atom.parent) {
						pyramidMapping[counter++] = k;
						break;
					}
				}
			}

			if (implicitHIdx != -1) pyramidMapping[counter++] = implicitHIdx;

			for (j = 0; j != atom.neighbours.length; j++) {
				if (atom.neighbours[j].aid == atom.parent) continue; // eslint-disable-line no-continue

				for (k = 0; k < 4; k++) {
					if (atom.neighbours[j].aid == sc.pyramid[k]) {
						if (counter >= 4) throw new Error('internal: pyramid overflow');
						pyramidMapping[counter++] = k;
						break;
					}
				}
			}

			if (counter == 4) {
				// move the 'from' atom to the end
				counter = pyramidMapping[0];
				pyramidMapping[0] = pyramidMapping[1];
				pyramidMapping[1] = pyramidMapping[2];
				pyramidMapping[2] = pyramidMapping[3];
				pyramidMapping[3] = counter;
			} else if (counter != 3) {
				throw new Error('cannot calculate chirality');
			}

			if (_stereocenters2.default.isPyramidMappingRigid(pyramidMapping)) _this.atoms[atomIdx].chirality = 1;else _this.atoms[atomIdx].chirality = 2;
		});
	} catch (ex) {
		alert('Warning: ' + ex.message); // eslint-disable-line no-undef
	}

	// write the SMILES itself

	// cycle_numbers[i] == -1 means that the number is available
	// cycle_numbers[i] == n means that the number is used by vertex n
	var cycleNumbers = [];

	cycleNumbers.push(0); // never used

	var firstComponent = true;

	for (i = 0; i < walk.v_seq.length; i++) {
		seqEl = walk.v_seq[i];
		vIdx = seqEl.idx;
		eIdx = seqEl.parent_edge;
		vPrevIdx = seqEl.parent_vertex;
		var writeAtom = true;

		if (vPrevIdx >= 0) {
			if (walk.numBranches(vPrevIdx) > 1) {
				if (this.atoms[vPrevIdx].branch_cnt > 0 && this.atoms[vPrevIdx].paren_written) this.smiles += ')';
			}

			openingCycles = walk.numOpeningCycles(eIdx);

			for (j = 0; j < openingCycles; j++) {
				for (k = 1; k < cycleNumbers.length; k++) {
					if (cycleNumbers[k] == -1) // eslint-disable-line max-depth
						break;
				}
				if (k == cycleNumbers.length) cycleNumbers.push(vPrevIdx);else cycleNumbers[k] = vPrevIdx;

				this.writeCycleNumber(k);
			}

			if (vPrevIdx >= 0) {
				var branches = walk.numBranches(vPrevIdx);

				if (branches > 1 && this.atoms[vPrevIdx].branch_cnt < branches - 1) {
					if (walk.edgeClosingCycle(eIdx)) {
						// eslint-disable-line max-depth
						this.atoms[vPrevIdx].paren_written = false;
					} else {
						this.smiles += '(';
						this.atoms[vPrevIdx].paren_written = true;
					}
				}

				this.atoms[vPrevIdx].branch_cnt++;

				if (this.atoms[vPrevIdx].branch_cnt > branches) throw new Error('unexpected branch');
			}

			var bond = molecule.bonds.get(eIdx);

			var dir = 0;

			if (bond.type == _struct.Bond.PATTERN.TYPE.SINGLE) dir = this.calcBondDirection(molecule, eIdx, vPrevIdx);

			if (dir == 1 && vIdx == bond.end || dir == 2 && vIdx == bond.begin) this.smiles += '/';else if (dir == 2 && vIdx == bond.end || dir == 1 && vIdx == bond.begin) this.smiles += '\\';else if (bond.type == _struct.Bond.PATTERN.TYPE.ANY) this.smiles += '~';else if (bond.type == _struct.Bond.PATTERN.TYPE.DOUBLE) this.smiles += '=';else if (bond.type == _struct.Bond.PATTERN.TYPE.TRIPLE) this.smiles += '#';else if (bond.type == _struct.Bond.PATTERN.TYPE.AROMATIC && (!this.atoms[bond.begin].lowercase || !this.atoms[bond.end].lowercase || !this.isBondInRing(eIdx))) this.smiles += ':'; // TODO: Check if this : is needed
			else if (bond.type == _struct.Bond.PATTERN.TYPE.SINGLE && this.atoms[bond.begin].aromatic && this.atoms[bond.end].aromatic) this.smiles += '-';

			if (walk.edgeClosingCycle(eIdx)) {
				for (j = 1; j < cycleNumbers.length; j++) {
					if (cycleNumbers[j] == vIdx) break;
				}

				if (j == cycleNumbers.length) throw new Error('cycle number not found');

				this.writeCycleNumber(j);

				cycleNumbers[j] = -1;
				writeAtom = false;
			}
		} else {
			if (!firstComponent) {
				this.smiles += this.writtenComponents === walk.nComponentsInReactants && walk.nReactants !== 0 ? '>>' : '.'; // when walk.nReactants === 0 - not reaction
			}
			firstComponent = false;
			this.writtenComponents++;
		}
		if (writeAtom) {
			this.writeAtom(molecule, vIdx, this.atoms[vIdx].aromatic, this.atoms[vIdx].lowercase, this.atoms[vIdx].chirality);
			this.writtenAtoms.push(seqEl.idx);
		}
	}

	this.comma = false;

	// this._writeStereogroups(mol, atoms);
	this.writeRadicals(molecule);
	// this._writePseudoAtoms(mol);
	// this._writeHighlighting();

	if (this.comma) this.smiles += '|';

	return this.smiles;
};

Smiles.prototype.writeCycleNumber = function (n) {
	if (n > 0 && n < 10) this.smiles += n;else if (n >= 10 && n < 100) this.smiles += '%' + n;else if (n >= 100 && n < 1000) this.smiles += '%%' + n;else throw new Error('bad cycle number: ' + n);
};

Smiles.prototype.writeAtom = function (mol, idx, aromatic, lowercase, chirality) {
	// eslint-disable-line max-params, max-statements
	var atom = mol.atoms.get(idx);
	var needBrackets = false;
	var hydro = -1;
	var aam = 0;

	/*
 if (mol.haveQueryAtoms())
 {
   query_atom = &mol.getQueryAtom(idx);
 	  if (query_atom->type == QUERY_ATOM_RGROUP)
   {
 	 if (mol.getRGroups()->isRGroupAtom(idx))
 	 {
 		const Array<int> &rg = mol.getRGroups()->getSiteRGroups(idx);
 			if (rg.length != 1)
 		   throw Error("rgroup count %d", rg.length);
 			_output.printf("[&%d]", rg[0] + 1);
 	 }
 	 else
 		_output.printf("[&%d]", 1);
 		 return;
   }
 }
 */

	if (atom.label == 'A') {
		this.smiles += '*';
		return;
	}

	if (atom.label == 'R' || atom.label == 'R#') {
		this.smiles += '[*]';
		return;
	}

	// KETCHER-598 (Ketcher does not save AAM into reaction SMILES)
	// BEGIN
	//    if (this.atom_atom_mapping)
	//        aam = atom_atom_mapping[idx];
	aam = atom.aam;
	// END

	if (atom.label != 'C' && atom.label != 'P' && atom.label != 'N' && atom.label != 'S' && atom.label != 'O' && atom.label != 'Cl' && atom.label != 'F' && atom.label != 'Br' && atom.label != 'B' && atom.label != 'I') needBrackets = true;

	if (atom.explicitValence >= 0 || atom.radical != 0 || chirality > 0 || aromatic && atom.label != 'C' && atom.label != 'O' || aromatic && atom.label == 'C' && this.atoms[idx].neighbours.length < 3 && this.atoms[idx].h_count == 0) hydro = this.atoms[idx].h_count;

	var label = atom.label;
	if (atom.atomList && !atom.atomList.notList) {
		label = atom.atomList.label();
		needBrackets = false; // atom list label already has brackets
	} else if (atom.isPseudo() || atom.atomList && atom.atomList.notList) {
		label = '*';
		needBrackets = true;
	} else if (chirality || atom.charge != 0 || atom.isotope > 0 || hydro >= 0 || aam > 0) {
		needBrackets = true;
	}

	if (needBrackets) {
		if (hydro == -1) hydro = this.atoms[idx].h_count;
		this.smiles += '[';
	}

	if (atom.isotope > 0) this.smiles += atom.isotope;

	if (lowercase) this.smiles += label.toLowerCase();else this.smiles += label;

	if (chirality > 0) {
		if (chirality == 1) this.smiles += '@';else // chirality == 2
			this.smiles += '@@';

		if (atom.implicitH > 1) throw new Error(atom.implicitH + ' implicit H near stereocenter');
	}

	if (atom.label != 'H') {
		if (hydro > 1 || hydro == 0 && !needBrackets) this.smiles += 'H' + hydro;else if (hydro == 1) this.smiles += 'H';
	}

	if (atom.charge > 1) this.smiles += '+' + atom.charge;else if (atom.charge < -1) this.smiles += atom.charge;else if (atom.charge == 1) this.smiles += '+';else if (atom.charge == -1) this.smiles += '-';

	if (aam > 0) this.smiles += ':' + aam;

	if (needBrackets) this.smiles += ']';

	/*
 if (mol.getRGroupFragment() != 0)
 {
   for (i = 0; i < 2; i++)
   {
 	 int j;
 		 for (j = 0; mol.getRGroupFragment()->getAttachmentPoint(i, j) != -1; j++)
 		if (idx == mol.getRGroupFragment()->getAttachmentPoint(i, j))
 		{
 		   _output.printf("([*])");
 		   break;
 		}
 		 if (mol.getRGroupFragment()->getAttachmentPoint(i, j) != -1)
 		break;
   }
 }
 */
};

Smiles.prototype.markCisTrans = function (mol) {
	var _this2 = this;

	this.cis_trans = new _cis_trans2.default(mol, function (idx) {
		return this.atoms[idx].neighbours;
	}, this);
	this.cis_trans.build();
	this.dbonds = new Array(mol.bonds.size);

	mol.bonds.forEach(function (bond, bid) {
		_this2.dbonds[bid] = {
			ctbond_beg: -1,
			ctbond_end: -1,
			saved: 0
		};
	});

	this.cis_trans.each(function (ct, bid) {
		var bond = mol.bonds.get(bid);

		if (ct.parity !== 0 && !_this2.isBondInRing(bid)) {
			var neiBeg = _this2.atoms[bond.begin].neighbours;
			var neiEnd = _this2.atoms[bond.end].neighbours;
			var aromFailBeg = true;
			var aromFailEnd = true;

			neiBeg.forEach(function (nei) {
				if (nei.bid !== bid && mol.bonds.get(nei.bid).type === _struct.Bond.PATTERN.TYPE.SINGLE) aromFailBeg = false;
			});

			neiEnd.forEach(function (nei) {
				if (nei.bid !== bid && mol.bonds.get(nei.bid).type === _struct.Bond.PATTERN.TYPE.SINGLE) aromFailEnd = false;
			});

			if (aromFailBeg || aromFailEnd) return;

			neiBeg.forEach(function (nei) {
				if (nei.bid === bid) return;
				if (mol.bonds.get(nei.bid).begin === bond.begin) _this2.dbonds[nei.bid].ctbond_beg = bid;else _this2.dbonds[nei.bid].ctbond_end = bid;
			});

			neiEnd.forEach(function (nei) {
				if (nei.bid === bid) return;
				if (mol.bonds.get(nei.bid).begin === bond.end) _this2.dbonds[nei.bid].ctbond_beg = bid;else _this2.dbonds[nei.bid].ctbond_end = bid;
			});
		}
	});
};

Smiles.prototype.updateSideBonds = function (mol, bondIdx) {
	// eslint-disable-line max-statements
	var bond = mol.bonds.get(bondIdx);
	var subst = this.cis_trans.getSubstituents(bondIdx);
	var parity = this.cis_trans.getParity(bondIdx);

	var sidebonds = [-1, -1, -1, -1];

	sidebonds[0] = mol.findBondId(subst[0], bond.begin);
	if (subst[1] != -1) sidebonds[1] = mol.findBondId(subst[1], bond.begin);

	sidebonds[2] = mol.findBondId(subst[2], bond.end);
	if (subst[3] != -1) sidebonds[3] = mol.findBondId(subst[3], bond.end);

	var n1 = 0;
	var n2 = 0;
	var n3 = 0;
	var n4 = 0;

	if (this.dbonds[sidebonds[0]].saved != 0) {
		if (this.dbonds[sidebonds[0]].saved == 1 && mol.bonds.get(sidebonds[0]).begin == bond.begin || this.dbonds[sidebonds[0]].saved == 2 && mol.bonds.get(sidebonds[0]).end == bond.begin) n1++;else n2++;
	}
	if (sidebonds[1] != -1 && this.dbonds[sidebonds[1]].saved != 0) {
		if (this.dbonds[sidebonds[1]].saved == 2 && mol.bonds.get(sidebonds[1]).begin == bond.begin || this.dbonds[sidebonds[1]].saved == 1 && mol.bonds.get(sidebonds[1]).end == bond.begin) n1++;else n2++;
	}
	if (this.dbonds[sidebonds[2]].saved != 0) {
		if (this.dbonds[sidebonds[2]].saved == 1 && mol.bonds.get(sidebonds[2]).begin == bond.end || this.dbonds[sidebonds[2]].saved == 2 && mol.bonds.get(sidebonds[2]).end == bond.end) n3++;else n4++;
	}
	if (sidebonds[3] != -1 && this.dbonds[sidebonds[3]].saved != 0) {
		if (this.dbonds[sidebonds[3]].saved == 2 && mol.bonds.get(sidebonds[3]).begin == bond.end || this.dbonds[sidebonds[3]].saved == 1 && mol.bonds.get(sidebonds[3]).end == bond.end) n3++;else n4++;
	}

	if (parity == _cis_trans2.default.PARITY.CIS) {
		n1 += n3;
		n2 += n4;
	} else {
		n1 += n4;
		n2 += n3;
	}

	if (n1 > 0 && n2 > 0) throw new Error('incompatible cis-trans configuration');

	if (n1 == 0 && n2 == 0) return false;

	if (n1 > 0) {
		this.dbonds[sidebonds[0]].saved = mol.bonds.get(sidebonds[0]).begin == bond.begin ? 1 : 2;
		if (sidebonds[1] != -1) {
			this.dbonds[sidebonds[1]].saved = mol.bonds.get(sidebonds[1]).begin == bond.begin ? 2 : 1;
		}

		this.dbonds[sidebonds[2]].saved = mol.bonds.get(sidebonds[2]).begin == bond.end == (parity == _cis_trans2.default.PARITY.CIS) ? 1 : 2;
		if (sidebonds[3] != -1) {
			this.dbonds[sidebonds[3]].saved = mol.bonds.get(sidebonds[3]).begin == bond.end == (parity == _cis_trans2.default.PARITY.CIS) ? 2 : 1;
		}
	}
	if (n2 > 0) {
		this.dbonds[sidebonds[0]].saved = mol.bonds.get(sidebonds[0]).begin == bond.begin ? 2 : 1;
		if (sidebonds[1] != -1) {
			this.dbonds[sidebonds[1]].saved = mol.bonds.get(sidebonds[1]).begin == bond.begin ? 1 : 2;
		}

		this.dbonds[sidebonds[2]].saved = mol.bonds.get(sidebonds[2]).begin == bond.end == (parity == _cis_trans2.default.PARITY.CIS) ? 2 : 1;
		if (sidebonds[3] != -1) {
			this.dbonds[sidebonds[3]].saved = mol.bonds.get(sidebonds[3]).begin == bond.end == (parity == _cis_trans2.default.PARITY.CIS) ? 1 : 2;
		}
	}

	return true;
};

Smiles.prototype.calcBondDirection = function (mol, idx, vprev) {
	var _this3 = this;

	var ntouched;

	if (this.dbonds[idx].ctbond_beg == -1 && this.dbonds[idx].ctbond_end == -1) return 0;

	if (mol.bonds.get(idx).type != _struct.Bond.PATTERN.TYPE.SINGLE) throw new Error('internal: directed bond type ' + mol.bonds.get(idx).type);

	while (true) {
		// eslint-disable-line no-constant-condition
		ntouched = 0;
		this.cis_trans.each(function (ct, bid) {
			if (ct.parity !== 0 && !_this3.isBondInRing(bid)) {
				if (_this3.updateSideBonds(mol, bid)) ntouched++;
			}
		});
		if (ntouched === this.touchedCistransbonds) break;
		this.touchedCistransbonds = ntouched;
	}

	if (this.dbonds[idx].saved === 0) {
		if (vprev === mol.bonds.get(idx).begin) this.dbonds[idx].saved = 1;else this.dbonds[idx].saved = 2;
	}

	return this.dbonds[idx].saved;
};

Smiles.prototype.writeRadicals = function (mol) {
	// eslint-disable-line max-statements
	var marked = new Array(this.writtenAtoms.length);
	var i, j;

	for (i = 0; i < this.writtenAtoms.length; i++) {
		if (marked[i]) continue; // eslint-disable-line no-continue

		var radical = mol.atoms.get(this.writtenAtoms[i]).radical;

		if (radical == 0) continue; // eslint-disable-line no-continue

		if (this.comma) {
			this.smiles += ',';
		} else {
			this.smiles += ' |';
			this.comma = true;
		}

		if (radical == _struct.Atom.PATTERN.RADICAL.SINGLET) this.smiles += '^3:';else if (radical == _struct.Atom.PATTERN.RADICAL.DOUPLET) this.smiles += '^1:';else // RADICAL_TRIPLET
			this.smiles += '^4:';

		this.smiles += i;

		for (j = i + 1; j < this.writtenAtoms.length; j++) {
			if (mol.atoms.get(this.writtenAtoms[j]).radical == radical) {
				marked[j] = true;
				this.smiles += ',' + j;
			}
		}
	}
};

exports.default = {
	stringify: function stringify(struct, options) {
		var opts = options || {};
		return new Smiles().saveMolecule(struct, opts.ignoreErrors);
	}
};

},{"../../util/pile":683,"../struct":537,"./cis_trans":530,"./dfs":531,"./stereocenters":533}],533:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _pool = require('../../util/pool');

var _pool2 = _interopRequireDefault(_pool);

var _pile = require('../../util/pile');

var _pile2 = _interopRequireDefault(_pile);

var _struct = require('../struct');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function Stereocenters(mol, neighborsFunc, context) {
	this.molecule = mol;
	this.atoms = new _pool2.default();
	this.getNeighbors = neighborsFunc;
	this.context = context;
}

Stereocenters.prototype.each = function (func, context) {
	this.atoms.forEach(func, context);
};

Stereocenters.prototype.buildFromBonds = function ( /* const int *atom_types, const int *atom_groups, const int *bond_orientations, */ignoreErrors) {
	var _this = this;

	var atoms = this.molecule.atoms;
	var bonds = this.molecule.bonds;

	/*
 	this is a set of atoms that are likely to belong to allene structures and
 	therefore should not be considered as potential stereocenters in the code below,
 	as allenes cannot be encoded in the SMILES notation
 */

	var alleneMask = new _pile2.default();
	atoms.forEach(function (atom, aid) {
		var neiList = _this.getNeighbors.call(_this.context, aid);
		if (neiList.length !== 2) return false;
		var nei1 = neiList[0];
		var nei2 = neiList[1];
		// check atom labels
		if ([aid, nei1.aid, nei2.aid].findIndex(function (aid) {
			return ['C', 'Si'].indexOf(atoms.get(aid).label) < 0;
		}, _this) >= 0) return false;

		// check adjacent bond types
		if ([nei1.bid, nei2.bid].findIndex(function (bid) {
			return bonds.get(bid).type !== _struct.Bond.PATTERN.TYPE.DOUBLE;
		}, _this) >= 0) return false;

		// get the other neighbors of the two adjacent atoms except for the central atom
		var nei1nei = _this.getNeighbors.call(_this.context, nei1.aid).filter(function (nei) {
			return nei.aid != aid;
		});
		var nei2nei = _this.getNeighbors.call(_this.context, nei2.aid).filter(function (nei) {
			return nei.aid != aid;
		});
		if (nei1nei.length < 1 || nei1nei.length > 2 || nei2nei.length < 1 || nei2nei.length > 2) return false;

		if (nei1nei.concat(nei2nei).findIndex(function (nei) {
			return bonds.get(nei.bid).type != _struct.Bond.PATTERN.TYPE.SINGLE;
		}, _this) >= 0) return false;

		if (nei1nei.concat(nei2nei).findIndex(function (nei) {
			return bonds.get(nei.bid).stereo == _struct.Bond.PATTERN.STEREO.EITHER;
		}, _this) >= 0) return false;
		alleneMask.add(nei1.aid).add(nei2.aid);
		return true;
	});

	if (alleneMask.size > 0) alert('This structure may contain allenes, which cannot be represented in the SMILES notation. Relevant stereo-information will be discarded.'); // eslint-disable-line no-undef

	atoms.forEach(function (atom, aid) {
		if (alleneMask.has(aid)) return;
		/*
      if (atom_types[atom_idx] == 0)
         continue;
         */
		var neiList = _this.getNeighbors.call(_this.context, aid);
		var stereocenter = false;

		neiList.find(function (nei) {
			var bond = this.molecule.bonds.get(nei.bid);

			if (bond.type === _struct.Bond.PATTERN.TYPE.SINGLE && bond.begin == aid) {
				if (bond.stereo === _struct.Bond.PATTERN.STEREO.UP || bond.stereo == _struct.Bond.PATTERN.STEREO.DOWN) {
					stereocenter = true;
					return true;
				}
			}
			return false;
		}, _this);

		if (!stereocenter) return;

		if (ignoreErrors) _this.buildOneCenter(aid /* , atom_groups[atom_idx], atom_types[atom_idx], bond_orientations*/);else _this.buildOneCenter(aid /* , atom_groups[atom_idx], atom_types[atom_idx], bond_orientations*/);
	});
};

Stereocenters.allowed_stereocenters = [{ elem: 'C', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 4 }, { elem: 'C', charge: 0, degree: 4, n_double_bonds: 0, implicit_degree: 4 }, { elem: 'Si', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 4 }, { elem: 'Si', charge: 0, degree: 4, n_double_bonds: 0, implicit_degree: 4 }, { elem: 'N', charge: 1, degree: 3, n_double_bonds: 0, implicit_degree: 4 }, { elem: 'N', charge: 1, degree: 4, n_double_bonds: 0, implicit_degree: 4 }, { elem: 'N', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 3 }, { elem: 'S', charge: 0, degree: 4, n_double_bonds: 2, implicit_degree: 4 }, { elem: 'S', charge: 1, degree: 3, n_double_bonds: 0, implicit_degree: 3 }, { elem: 'S', charge: 0, degree: 3, n_double_bonds: 1, implicit_degree: 3 }, { elem: 'P', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 3 }, { elem: 'P', charge: 1, degree: 4, n_double_bonds: 0, implicit_degree: 4 }, { elem: 'P', charge: 0, degree: 4, n_double_bonds: 1, implicit_degree: 4 }];

Stereocenters.prototype.buildOneCenter = function (atomIdx /* , int group, int type, const int *bond_orientations*/) {
	var _this2 = this;

	// eslint-disable-line max-statements
	var atom = this.molecule.atoms.get(atomIdx);

	var neiList = this.getNeighbors.call(this.context, atomIdx);
	var degree = neiList.length;
	var implicitDegree = -1;

	var stereocenter = {
		group: 0, // = group;
		type: 0, // = type;
		pyramid: []
	};

	var edgeIds = [];

	var lastAtomDir = 0;
	var nDoubleBonds = 0;

	stereocenter.pyramid[0] = -1;
	stereocenter.pyramid[1] = -1;
	stereocenter.pyramid[2] = -1;
	stereocenter.pyramid[3] = -1;

	var nPureHydrogens = 0;

	if (degree > 4) throw new Error('stereocenter with %d bonds are not supported' + degree);

	neiList.forEach(function (nei, neiIdx) {
		var neiAtom = _this2.molecule.atoms.get(nei.aid);
		var bond = _this2.molecule.bonds.get(nei.bid);
		edgeIds[neiIdx] = {
			edge_idx: nei.bid,
			nei_idx: nei.aid,
			rank: nei.aid,
			vec: _vec2.default.diff(neiAtom.pp, atom.pp).yComplement()
		};

		if (neiAtom.pureHydrogen()) {
			nPureHydrogens++;
			edgeIds[neiIdx].rank = 10000;
		} else if (neiAtom.label === 'H') {
			edgeIds[neiIdx].rank = 5000;
		}

		if (!edgeIds[neiIdx].vec.normalize()) throw new Error('zero bond length');

		if (bond.type === _struct.Bond.PATTERN.TYPE.TRIPLE) throw new Error('non-single bonds not allowed near stereocenter');else if (bond.type === _struct.Bond.PATTERN.TYPE.AROMATIC) throw new Error('aromatic bonds not allowed near stereocenter');else if (bond.type === _struct.Bond.PATTERN.TYPE.DOUBLE) nDoubleBonds++;
	});

	Stereocenters.allowed_stereocenters.find(function (as) {
		if (as.elem === atom.label && as.charge === atom.charge && as.degree === degree && as.n_double_bonds === nDoubleBonds) {
			implicitDegree = as.implicit_degree;
			return true;
		}
		return false;
	});

	if (implicitDegree === -1) throw new Error('unknown stereocenter configuration: ' + atom.label + ', charge ' + atom.charge + ', ' + degree + ' bonds (' + nDoubleBonds + ' double)');

	if (degree === 4 && nPureHydrogens > 1) throw new Error(nPureHydrogens + ' hydrogens near stereocenter');

	if (degree === 3 && implicitDegree === 4 && nPureHydrogens > 0) throw new Error('have hydrogen(s) besides implicit hydrogen near stereocenter');

	if (degree === 4) {
		// sort by neighbor atom index (ascending)
		if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1);
		if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2);
		if (edgeIds[2].rank > edgeIds[3].rank) swap(edgeIds, 2, 3);
		if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2);
		if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1);
		if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2);

		var main1 = -1;
		var main2 = -1;
		var side1 = -1;
		var side2 = -1;
		var mainDir = 0;

		for (var neiIdx = 0; neiIdx < 4; neiIdx++) {
			var stereo = this.getBondStereo(atomIdx, edgeIds[neiIdx].edge_idx);

			if (stereo === _struct.Bond.PATTERN.STEREO.UP || stereo == _struct.Bond.PATTERN.STEREO.DOWN) {
				main1 = neiIdx;
				mainDir = stereo;
				break;
			}
		}

		if (main1 === -1) throw new Error('none of 4 bonds going from stereocenter is stereobond');

		var xyz1, xyz2;

		// find main2 as opposite to main1
		if (main2 === -1) {
			xyz1 = Stereocenters.xyzzy(edgeIds[main1].vec, edgeIds[(main1 + 1) % 4].vec, edgeIds[(main1 + 2) % 4].vec);
			xyz2 = Stereocenters.xyzzy(edgeIds[main1].vec, edgeIds[(main1 + 1) % 4].vec, edgeIds[(main1 + 3) % 4].vec);

			if (xyz1 + xyz2 == 3 || xyz1 + xyz2 == 12) {
				main2 = (main1 + 1) % 4;
				side1 = (main1 + 2) % 4;
				side2 = (main1 + 3) % 4;
			}
		}
		if (main2 == -1) {
			xyz1 = Stereocenters.xyzzy(edgeIds[main1].vec, edgeIds[(main1 + 2) % 4].vec, edgeIds[(main1 + 1) % 4].vec);
			xyz2 = Stereocenters.xyzzy(edgeIds[main1].vec, edgeIds[(main1 + 2) % 4].vec, edgeIds[(main1 + 3) % 4].vec);

			if (xyz1 + xyz2 == 3 || xyz1 + xyz2 == 12) {
				main2 = (main1 + 2) % 4;
				side1 = (main1 + 1) % 4;
				side2 = (main1 + 3) % 4;
			}
		}
		if (main2 == -1) {
			xyz1 = Stereocenters.xyzzy(edgeIds[main1].vec, edgeIds[(main1 + 3) % 4].vec, edgeIds[(main1 + 1) % 4].vec);
			xyz2 = Stereocenters.xyzzy(edgeIds[main1].vec, edgeIds[(main1 + 3) % 4].vec, edgeIds[(main1 + 2) % 4].vec);

			if (xyz1 + xyz2 == 3 || xyz1 + xyz2 == 12) {
				main2 = (main1 + 3) % 4;
				side1 = (main1 + 2) % 4;
				side2 = (main1 + 1) % 4;
			}
		}

		if (main2 == -1) throw new Error('internal error: can not find opposite bond');

		if (mainDir == _struct.Bond.PATTERN.STEREO.UP && this.getBondStereo(atomIdx, edgeIds[main2].edge_idx) == _struct.Bond.PATTERN.STEREO.DOWN) throw new Error('stereo types of the opposite bonds mismatch');
		if (mainDir == _struct.Bond.PATTERN.STEREO.DOWN && this.getBondStereo(atomIdx, edgeIds[main2].edge_idx) == _struct.Bond.PATTERN.STEREO.UP) throw new Error('stereo types of the opposite bonds mismatch');

		if (mainDir == this.getBondStereo(atomIdx, edgeIds[side1].edge_idx)) throw new Error('stereo types of non-opposite bonds match');
		if (mainDir == this.getBondStereo(atomIdx, edgeIds[side2].edge_idx)) throw new Error('stereo types of non-opposite bonds match');

		if (main1 == 3 || main2 == 3) lastAtomDir = mainDir;else lastAtomDir = mainDir == _struct.Bond.PATTERN.STEREO.UP ? _struct.Bond.PATTERN.STEREO.DOWN : _struct.Bond.PATTERN.STEREO.UP;

		sign = Stereocenters.sign(edgeIds[0].vec, edgeIds[1].vec, edgeIds[2].vec);

		if (lastAtomDir == _struct.Bond.PATTERN.STEREO.UP && sign > 0 || lastAtomDir == _struct.Bond.PATTERN.STEREO.DOWN && sign < 0) {
			stereocenter.pyramid[0] = edgeIds[0].nei_idx;
			stereocenter.pyramid[1] = edgeIds[1].nei_idx;
			stereocenter.pyramid[2] = edgeIds[2].nei_idx;
		} else {
			stereocenter.pyramid[0] = edgeIds[0].nei_idx;
			stereocenter.pyramid[1] = edgeIds[2].nei_idx;
			stereocenter.pyramid[2] = edgeIds[1].nei_idx;
		}

		stereocenter.pyramid[3] = edgeIds[3].nei_idx;
	} else if (degree === 3) {
		// sort by neighbor atom index (ascending)
		if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1);
		if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2);
		if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1);

		var stereo0 = this.getBondStereo(atomIdx, edgeIds[0].edge_idx);
		var stereo1 = this.getBondStereo(atomIdx, edgeIds[1].edge_idx);
		var stereo2 = this.getBondStereo(atomIdx, edgeIds[2].edge_idx);

		var nUp = 0;
		var nDown = 0;

		nUp += stereo0 === _struct.Bond.PATTERN.STEREO.UP ? 1 : 0;
		nUp += stereo1 === _struct.Bond.PATTERN.STEREO.UP ? 1 : 0;
		nUp += stereo2 === _struct.Bond.PATTERN.STEREO.UP ? 1 : 0;

		nDown += stereo0 === _struct.Bond.PATTERN.STEREO.DOWN ? 1 : 0;
		nDown += stereo1 === _struct.Bond.PATTERN.STEREO.DOWN ? 1 : 0;
		nDown += stereo2 === _struct.Bond.PATTERN.STEREO.DOWN ? 1 : 0;

		if (implicitDegree == 4) {
			// have implicit hydrogen
			if (nUp == 3) throw new Error('all 3 bonds up near stereoatom');
			if (nDown == 3) throw new Error('all 3 bonds down near stereoatom');

			if (nUp == 0 && nDown == 0) throw new Error('no up/down bonds near stereoatom -- indefinite case');
			if (nUp == 1 && nDown == 1) throw new Error('one bond up, one bond down -- indefinite case');

			mainDir = 0;

			if (nUp == 2) {
				lastAtomDir = _struct.Bond.PATTERN.STEREO.DOWN;
			} else if (nDown == 2) {
				lastAtomDir = _struct.Bond.PATTERN.STEREO.UP;
			} else {
				main1 = -1;
				side1 = -1;
				side2 = -1;

				for (neiIdx = 0; neiIdx < 3; neiIdx++) {
					dir = this.getBondStereo(atomIdx, edgeIds[neiIdx].edge_idx);

					if (dir == _struct.Bond.PATTERN.STEREO.UP || dir == _struct.Bond.PATTERN.STEREO.DOWN) {
						// eslint-disable-line max-depth
						main1 = neiIdx;
						mainDir = dir;
						side1 = (neiIdx + 1) % 3;
						side2 = (neiIdx + 2) % 3;
						break;
					}
				}

				if (main1 == -1) throw new Error('internal error: can not find up or down bond');

				var xyz = Stereocenters.xyzzy(edgeIds[side1].vec, edgeIds[side2].vec, edgeIds[main1].vec);

				if (xyz == 3 || xyz == 4) throw new Error('degenerate case for 3 bonds near stereoatom');

				if (xyz == 1) lastAtomDir = mainDir;else lastAtomDir = mainDir == _struct.Bond.PATTERN.STEREO.UP ? _struct.Bond.PATTERN.STEREO.DOWN : _struct.Bond.PATTERN.STEREO.UP;
			}

			var sign = Stereocenters.sign(edgeIds[0].vec, edgeIds[1].vec, edgeIds[2].vec);

			if (lastAtomDir == _struct.Bond.PATTERN.STEREO.UP && sign > 0 || lastAtomDir == _struct.Bond.PATTERN.STEREO.DOWN && sign < 0) {
				stereocenter.pyramid[0] = edgeIds[0].nei_idx;
				stereocenter.pyramid[1] = edgeIds[1].nei_idx;
				stereocenter.pyramid[2] = edgeIds[2].nei_idx;
			} else {
				stereocenter.pyramid[0] = edgeIds[0].nei_idx;
				stereocenter.pyramid[1] = edgeIds[2].nei_idx;
				stereocenter.pyramid[2] = edgeIds[1].nei_idx;
			}

			stereocenter.pyramid[3] = -1;
		} else {
			// 3-connected P, N or S; no implicit hydrogens
			var dir;

			if (nDown > 0 && nUp > 0) throw new Error('one bond up, one bond down -- indefinite case');else if (nDown == 0 && nUp == 0) throw new Error('no up-down bonds attached to stereocenter');else if (nUp > 0) dir = 1;else dir = -1;

			if (Stereocenters.xyzzy(edgeIds[0].vec, edgeIds[1].vec, edgeIds[2].vec) === 1 || Stereocenters.xyzzy(edgeIds[0].vec, edgeIds[2].vec, edgeIds[1].vec) === 1 || Stereocenters.xyzzy(edgeIds[2].vec, edgeIds[1].vec, edgeIds[0].vec) === 1)
				// all bonds belong to the same half-plane
				dir = -dir;

			sign = Stereocenters.sign(edgeIds[0].vec, edgeIds[1].vec, edgeIds[2].vec);

			if (sign == dir) {
				stereocenter.pyramid[0] = edgeIds[0].nei_idx;
				stereocenter.pyramid[1] = edgeIds[2].nei_idx;
				stereocenter.pyramid[2] = edgeIds[1].nei_idx;
			} else {
				stereocenter.pyramid[0] = edgeIds[0].nei_idx;
				stereocenter.pyramid[1] = edgeIds[1].nei_idx;
				stereocenter.pyramid[2] = edgeIds[2].nei_idx;
			}
			stereocenter.pyramid[3] = -1;
		}
	}
	this.atoms.set(atomIdx, stereocenter);
};

Stereocenters.prototype.getBondStereo = function (centerIdx, edgeIdx) {
	var bond = this.molecule.bonds.get(edgeIdx);

	if (centerIdx != bond.begin) // TODO: check this
		return 0;

	return bond.stereo;
};

// 1 -- in the smaller angle, 2 -- in the bigger angle,
// 4 -- in the 'positive' straight angle, 8 -- in the 'negative' straight angle
Stereocenters.xyzzy = function (v1, v2, u) {
	var eps = 0.001;

	var sine1 = _vec2.default.cross(v1, v2);
	var cosine1 = _vec2.default.dot(v1, v2);

	var sine2 = _vec2.default.cross(v1, u);
	var cosine2 = _vec2.default.dot(v1, u);

	if (Math.abs(sine1) < eps) {
		if (Math.abs(sine2) < eps) throw new Error('degenerate case -- bonds overlap');

		return sine2 > 0 ? 4 : 8;
	}

	if (sine1 * sine2 < -eps * eps) return 2;

	if (cosine2 < cosine1) return 2;

	return 1;
};

Stereocenters.sign = function (v1, v2, v3) {
	var res = (v1.x - v3.x) * (v2.y - v3.y) - (v1.y - v3.y) * (v2.x - v3.x); // eslint-disable-line no-mixed-operators
	var eps = 0.001;

	if (res > eps) return 1;
	if (res < -eps) return -1;

	throw new Error('degenerate triangle');
};

Stereocenters.isPyramidMappingRigid = function (mapping) {
	var arr = mapping.slice();
	var rigid = true;

	if (arr[0] > arr[1]) {
		swap(arr, 0, 1);
		rigid = !rigid;
	}
	if (arr[1] > arr[2]) {
		swap(arr, 1, 2);
		rigid = !rigid;
	}
	if (arr[2] > arr[3]) {
		swap(arr, 2, 3);
		rigid = !rigid;
	}
	if (arr[1] > arr[2]) {
		swap(arr, 1, 2);
		rigid = !rigid;
	}
	if (arr[0] > arr[1]) {
		swap(arr, 0, 1);
		rigid = !rigid;
	}
	if (arr[1] > arr[2]) {
		swap(arr, 1, 2);
		rigid = !rigid;
	}

	return rigid;
};

function swap(arr, i1, i2) {
	var tmp = arr[i1];
	arr[i1] = arr[i2];
	arr[i2] = tmp;
}

exports.default = Stereocenters;

},{"../../util/pile":683,"../../util/pool":684,"../../util/vec2":686,"../struct":537}],534:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.radicalElectrons = radicalElectrons;

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _pile = require('../../util/pile');

var _pile2 = _interopRequireDefault(_pile);

var _element = require('../element');

var _element2 = _interopRequireDefault(_element);

var _atomlist = require('./atomlist');

var _atomlist2 = _interopRequireDefault(_atomlist);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function Atom(params) {
	// eslint-disable-line max-statements
	var def = Atom.attrGetDefault;
	console.assert(params || 'label' in params, 'label must be specified!');

	this.label = params.label;
	this.fragment = 'fragment' in params ? params.fragment : -1;
	this.pseudo = params.pseudo || checkPseudo(params.label);

	ifDef(this, params, 'alias', def('alias'));
	ifDef(this, params, 'isotope', def('isotope'));
	ifDef(this, params, 'radical', def('radical'));
	ifDef(this, params, 'charge', def('charge'));
	ifDef(this, params, 'rglabel', def('rglabel')); // r-group index mask, i-th bit stands for i-th r-site
	ifDef(this, params, 'attpnt', def('attpnt')); // attachment point
	ifDef(this, params, 'explicitValence', def('explicitValence'));

	this.valence = 0;
	this.implicitH = 0; // implicitH is not an attribute
	this.pp = params.pp ? new _vec2.default(params.pp) : new _vec2.default();

	// sgs should only be set when an atom is added to an s-group by an appropriate method,
	//   or else a copied atom might think it belongs to a group, but the group be unaware of the atom
	// TODO: make a consistency check on atom/s-group assignments
	this.sgs = new _pile2.default();

	// query
	ifDef(this, params, 'ringBondCount', def('ringBondCount'));
	ifDef(this, params, 'substitutionCount', def('substitutionCount'));
	ifDef(this, params, 'unsaturatedAtom', def('unsaturatedAtom'));
	ifDef(this, params, 'hCount', def('hCount'));

	// reaction
	ifDef(this, params, 'aam', def('aam'));
	ifDef(this, params, 'invRet', def('invRet'));
	ifDef(this, params, 'exactChangeFlag', def('exactChangeFlag'));
	ifDef(this, params, 'rxnFragmentType', -1); // this isn't really an attribute

	this.atomList = params.atomList ? new _atomlist2.default(params.atomList) : null;
	this.neighbors = []; // set of half-bonds having this atom as their origin
	this.badConn = false;
}

Atom.getAttrHash = function (atom) {
	var attrs = {};
	for (var attr in Atom.attrlist) {
		if (typeof atom[attr] !== 'undefined') attrs[attr] = atom[attr];
	}
	return attrs;
};

Atom.attrGetDefault = function (attr) {
	if (attr in Atom.attrlist) return Atom.attrlist[attr];
	return console.assert(false, 'Attribute unknown');
};

Atom.PATTERN = {
	RADICAL: {
		NONE: 0,
		SINGLET: 1,
		DOUPLET: 2,
		TRIPLET: 3
	}
};

Atom.attrlist = {
	alias: null,
	label: 'C',
	pseudo: null,
	isotope: 0,
	radical: 0,
	charge: 0,
	explicitValence: -1,
	ringBondCount: 0,
	substitutionCount: 0,
	unsaturatedAtom: 0,
	hCount: 0,
	atomList: null,
	invRet: 0,
	exactChangeFlag: 0,
	rglabel: null,
	attpnt: null,
	aam: 0
};

function radicalElectrons(radical) {
	radical -= 0;
	if (radical === Atom.PATTERN.RADICAL.NONE) return 0;else if (radical === Atom.PATTERN.RADICAL.DOUPLET) return 1;else if (radical === Atom.PATTERN.RADICAL.SINGLET || radical === Atom.PATTERN.RADICAL.TRIPLET) return 2;
	return console.assert(false, 'Unknown radical value');
}

/**
 * @param fidMap { Map<number, number> }
 * @returns { Atom }
 */
Atom.prototype.clone = function (fidMap) {
	var ret = new Atom(this);
	if (fidMap && fidMap.has(this.fragment)) ret.fragment = fidMap.get(this.fragment);
	return ret;
};

Atom.prototype.isQuery = function () {
	return this.atomList !== null || this.label === 'A' || this.attpnt || this.hCount;
};

Atom.prototype.pureHydrogen = function () {
	return this.label === 'H' && this.isotope === 0;
};

Atom.prototype.isPlainCarbon = function () {
	return this.label === 'C' && this.isotope === 0 && this.radical === 0 && this.charge === 0 && this.explicitValence < 0 && this.ringBondCount === 0 && this.substitutionCount === 0 && this.unsaturatedAtom === 0 && this.hCount === 0 && !this.atomList;
};

Atom.prototype.isPseudo = function () {
	// TODO: handle reaxys generics separately
	return !this.atomList && !this.rglabel && !_element2.default.map[this.label];
};

Atom.prototype.hasRxnProps = function () {
	return !!(this.invRet || this.exactChangeFlag || this.attpnt !== null || this.aam);
};

Atom.prototype.calcValence = function (conn) {
	// eslint-disable-line max-statements
	var atom = this;
	var charge = atom.charge;
	var label = atom.label;
	if (atom.isQuery()) {
		this.implicitH = 0;
		return true;
	}
	var elem = _element2.default.map[label];
	if (elem === undefined) {
		this.implicitH = 0;
		return true;
	}

	var groupno = _element2.default[elem].group;
	var rad = radicalElectrons(atom.radical);

	var valence = conn;
	var hyd = 0;
	var absCharge = Math.abs(charge);

	if (groupno === 1) {
		if (label === 'H' || label === 'Li' || label === 'Na' || label === 'K' || label === 'Rb' || label === 'Cs' || label === 'Fr') {
			valence = 1;
			hyd = 1 - rad - conn - absCharge;
		}
	} else if (groupno === 2) {
		if (conn + rad + absCharge === 2 || conn + rad + absCharge === 0) valence = 2;else hyd = -1;
	} else if (groupno === 3) {
		if (label === 'B' || label === 'Al' || label === 'Ga' || label === 'In') {
			if (charge === -1) {
				valence = 4;
				hyd = 4 - rad - conn;
			} else {
				valence = 3;
				hyd = 3 - rad - conn - absCharge;
			}
		} else if (label === 'Tl') {
			if (charge === -1) {
				if (rad + conn <= 2) {
					valence = 2;
					hyd = 2 - rad - conn;
				} else {
					valence = 4;
					hyd = 4 - rad - conn;
				}
			} else if (charge === -2) {
				if (rad + conn <= 3) {
					valence = 3;
					hyd = 3 - rad - conn;
				} else {
					valence = 5;
					hyd = 5 - rad - conn;
				}
			} else if (rad + conn + absCharge <= 1) {
				valence = 1;
				hyd = 1 - rad - conn - absCharge;
			} else {
				valence = 3;
				hyd = 3 - rad - conn - absCharge;
			}
		}
	} else if (groupno === 4) {
		if (label === 'C' || label === 'Si' || label === 'Ge') {
			valence = 4;
			hyd = 4 - rad - conn - absCharge;
		} else if (label === 'Sn' || label === 'Pb') {
			if (conn + rad + absCharge <= 2) {
				valence = 2;
				hyd = 2 - rad - conn - absCharge;
			} else {
				valence = 4;
				hyd = 4 - rad - conn - absCharge;
			}
		}
	} else if (groupno === 5) {
		if (label === 'N' || label === 'P') {
			if (charge === 1) {
				valence = 4;
				hyd = 4 - rad - conn;
			} else if (charge === 2) {
				valence = 3;
				hyd = 3 - rad - conn;
			} else if (label === 'N' || rad + conn + absCharge <= 3) {
				valence = 3;
				hyd = 3 - rad - conn - absCharge;
			} else {
				// ELEM_P && rad + conn + absCharge > 3
				valence = 5;
				hyd = 5 - rad - conn - absCharge;
			}
		} else if (label === 'Bi' || label === 'Sb' || label === 'As') {
			if (charge === 1) {
				if (rad + conn <= 2 && label !== 'As') {
					valence = 2;
					hyd = 2 - rad - conn;
				} else {
					valence = 4;
					hyd = 4 - rad - conn;
				}
			} else if (charge === 2) {
				valence = 3;
				hyd = 3 - rad - conn;
			} else if (rad + conn <= 3) {
				valence = 3;
				hyd = 3 - rad - conn - absCharge;
			} else {
				valence = 5;
				hyd = 5 - rad - conn - absCharge;
			}
		}
	} else if (groupno === 6) {
		if (label === 'O') {
			if (charge >= 1) {
				valence = 3;
				hyd = 3 - rad - conn;
			} else {
				valence = 2;
				hyd = 2 - rad - conn - absCharge;
			}
		} else if (label === 'S' || label === 'Se' || label === 'Po') {
			if (charge === 1) {
				if (conn <= 3) {
					valence = 3;
					hyd = 3 - rad - conn;
				} else {
					valence = 5;
					hyd = 5 - rad - conn;
				}
			} else if (conn + rad + absCharge <= 2) {
				valence = 2;
				hyd = 2 - rad - conn - absCharge;
			} else if (conn + rad + absCharge <= 4) {
				// See examples in PubChem
				// [S] : CID 16684216
				// [Se]: CID 5242252
				// [Po]: no example, just following ISIS/Draw logic here
				valence = 4;
				hyd = 4 - rad - conn - absCharge;
			} else {
				// See examples in PubChem
				// [S] : CID 46937044
				// [Se]: CID 59786
				// [Po]: no example, just following ISIS/Draw logic here
				valence = 6;
				hyd = 6 - rad - conn - absCharge;
			}
		} else if (label === 'Te') {
			if (charge === -1) {
				if (conn <= 2) {
					valence = 2;
					hyd = 2 - rad - conn - absCharge;
				}
			} else if (charge === 0 || charge === 2) {
				if (conn <= 2) {
					valence = 2;
					hyd = 2 - rad - conn - absCharge;
				} else if (conn <= 4) {
					valence = 4;
					hyd = 4 - rad - conn - absCharge;
				} else if (charge === 0 && conn <= 6) {
					valence = 6;
					hyd = 6 - rad - conn - absCharge;
				} else {
					hyd = -1;
				}
			}
		}
	} else if (groupno === 7) {
		if (label === 'F') {
			valence = 1;
			hyd = 1 - rad - conn - absCharge;
		} else if (label === 'Cl' || label === 'Br' || label === 'I' || label === 'At') {
			if (charge === 1) {
				if (conn <= 2) {
					valence = 2;
					hyd = 2 - rad - conn;
				} else if (conn === 3 || conn === 5 || conn >= 7) {
					hyd = -1;
				}
			} else if (charge === 0) {
				if (conn <= 1) {
					valence = 1;
					hyd = 1 - rad - conn;
					// While the halogens can have valence 3, they can not have
					// hydrogens in that case.
				} else if (conn === 2 || conn === 4 || conn === 6) {
					if (rad === 1) {
						valence = conn;
						hyd = 0;
					} else {
						hyd = -1; // will throw an error in the end
					}
				} else if (conn > 7) {
					hyd = -1; // will throw an error in the end
				}
			}
		}
	} else if (groupno === 8) {
		if (conn + rad + absCharge === 0) valence = 1;else hyd = -1;
	}

	this.valence = valence;
	this.implicitH = hyd;
	if (this.implicitH < 0) {
		this.valence = conn;
		this.implicitH = 0;
		this.badConn = true;
		return false;
	}
	return true;
};

Atom.prototype.calcValenceMinusHyd = function (conn) {
	// eslint-disable-line max-statements
	var atom = this;
	var charge = atom.charge;
	var label = atom.label;
	var elem = _element2.default.map[label];
	if (elem === null) console.assert('Element ' + label + ' unknown');
	if (elem < 0) {
		// query atom, skip
		this.implicitH = 0;
		return null;
	}

	var groupno = _element2.default[elem].group;
	var rad = radicalElectrons(atom.radical);

	if (groupno === 3) {
		if (label === 'B' || label === 'Al' || label === 'Ga' || label === 'In') {
			if (charge === -1) {
				if (rad + conn <= 4) return rad + conn;
			}
		}
	} else if (groupno === 5) {
		if (label === 'N' || label === 'P') {
			if (charge === 1) return rad + conn;
			if (charge === 2) return rad + conn;
		} else if (label === 'Sb' || label === 'Bi' || label === 'As') {
			if (charge === 1) return rad + conn;else if (charge === 2) return rad + conn;
		}
	} else if (groupno === 6) {
		if (label === 'O') {
			if (charge >= 1) return rad + conn;
		} else if (label === 'S' || label === 'Se' || label === 'Po') {
			if (charge === 1) return rad + conn;
		}
	} else if (groupno === 7) {
		if (label === 'Cl' || label === 'Br' || label === 'I' || label === 'At') {
			if (charge === 1) return rad + conn;
		}
	}

	return rad + conn + Math.abs(charge);
};

function ifDef(dst, src, prop, def) {
	dst[prop] = !(typeof src[prop] === 'undefined') ? src[prop] : def;
}

function checkPseudo(label) {
	return !_element2.default.map[label] && label !== 'L' && label !== 'L#' && label !== 'R#' ? label : null;
}

exports.default = Atom;

},{"../../util/pile":683,"../../util/vec2":686,"../element":520,"./atomlist":535}],535:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _element = require('../element');

var _element2 = _interopRequireDefault(_element);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function AtomList(params) {
  console.assert(params && 'notList' in params && 'ids' in params, '\'notList\' and \'ids\' must be specified!');

  this.notList = params.notList; /* boolean*/
  this.ids = params.ids; /* Array of integers*/
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

AtomList.prototype.labelList = function () {
  var labels = [];
  for (var i = 0; i < this.ids.length; ++i) {
    labels.push(_element2.default[this.ids[i]].label);
  }return labels;
};

AtomList.prototype.label = function () {
  var label = '[' + this.labelList().join(',') + ']';
  if (this.notList) label = '!' + label;
  return label;
};

AtomList.prototype.equals = function (x) {
  return this.notList == x.notList && (this.ids || []).sort().toString() === (x.ids || []).sort().toString();
};

exports.default = AtomList;

},{"../element":520}],536:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Bond(params) {
	// eslint-disable-line max-statements
	console.assert(params && 'begin' in params && 'end' in params && 'type' in params, '\'begin\', \'end\' and \'type\' properties must be specified!');

	this.begin = params.begin;
	this.end = params.end;
	this.type = params.type;
	this.xxx = params.xxx || '';
	this.stereo = Bond.PATTERN.STEREO.NONE;
	this.topology = Bond.PATTERN.TOPOLOGY.EITHER;
	this.reactingCenterStatus = 0;
	this.hb1 = null; // half-bonds
	this.hb2 = null;
	this.len = 0;
	this.sb = 0;
	this.sa = 0;
	this.angle = 0;

	if (params.stereo) this.stereo = params.stereo;
	if (params.topology) this.topology = params.topology;
	if (params.reactingCenterStatus) this.reactingCenterStatus = params.reactingCenterStatus;

	this.center = new _vec2.default();
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

Bond.PATTERN = {
	TYPE: {
		SINGLE: 1,
		DOUBLE: 2,
		TRIPLE: 3,
		AROMATIC: 4,
		SINGLE_OR_DOUBLE: 5,
		SINGLE_OR_AROMATIC: 6,
		DOUBLE_OR_AROMATIC: 7,
		ANY: 8
	},

	STEREO: {
		NONE: 0,
		UP: 1,
		EITHER: 4,
		DOWN: 6,
		CIS_TRANS: 3
	},

	TOPOLOGY: {
		EITHER: 0,
		RING: 1,
		CHAIN: 2
	},

	REACTING_CENTER: {
		NOT_CENTER: -1,
		UNMARKED: 0,
		CENTER: 1,
		UNCHANGED: 2,
		MADE_OR_BROKEN: 4,
		ORDER_CHANGED: 8,
		MADE_OR_BROKEN_AND_CHANGED: 12
	}
};

Bond.attrlist = {
	type: Bond.PATTERN.TYPE.SINGLE,
	stereo: Bond.PATTERN.STEREO.NONE,
	topology: Bond.PATTERN.TOPOLOGY.EITHER,
	reactingCenterStatus: Bond.PATTERN.REACTING_CENTER.UNMARKED
};

Bond.getAttrHash = function (bond) {
	var attrs = {};
	for (var attr in Bond.attrlist) {
		if (typeof bond[attr] !== 'undefined') attrs[attr] = bond[attr];
	}
	return attrs;
};

Bond.attrGetDefault = function (attr) {
	if (attr in Bond.attrlist) return Bond.attrlist[attr];
	return console.error('Attribute unknown');
};

Bond.prototype.hasRxnProps = function () {
	return !!this.reactingCenterStatus;
};

Bond.prototype.getCenter = function (struct) {
	var p1 = struct.atoms.get(this.begin).pp;
	var p2 = struct.atoms.get(this.end).pp;
	return _vec2.default.lc2(p1, 0.5, p2, 0.5);
};

Bond.prototype.getDir = function (struct) {
	var p1 = struct.atoms.get(this.begin).pp;
	var p2 = struct.atoms.get(this.end).pp;
	return p2.sub(p1).normalized();
};

/**
 * @param aidMap { Map<number, number> }
 * @returns {Bond}
 */
Bond.prototype.clone = function (aidMap) {
	var cp = new Bond(this);
	if (aidMap) {
		cp.begin = aidMap.get(cp.begin);
		cp.end = aidMap.get(cp.end);
	}
	return cp;
};

exports.default = Bond;

},{"../../util/vec2":686}],537:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.RxnArrow = exports.RxnPlus = exports.RGroup = exports.SGroup = exports.Bond = exports.AtomList = exports.Atom = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _pool = require('../../util/pool');

var _pool2 = _interopRequireDefault(_pool);

var _pile = require('../../util/pile');

var _pile2 = _interopRequireDefault(_pile);

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _box2abs = require('../../util/box2abs');

var _box2abs2 = _interopRequireDefault(_box2abs);

var _element = require('../element');

var _element2 = _interopRequireDefault(_element);

var _atom = require('./atom');

var _atom2 = _interopRequireDefault(_atom);

var _atomlist = require('./atomlist');

var _atomlist2 = _interopRequireDefault(_atomlist);

var _bond = require('./bond');

var _bond2 = _interopRequireDefault(_bond);

var _sgroup = require('./sgroup');

var _sgroup2 = _interopRequireDefault(_sgroup);

var _rgroup = require('./rgroup');

var _rgroup2 = _interopRequireDefault(_rgroup);

var _sgforest = require('./sgforest');

var _sgforest2 = _interopRequireDefault(_sgforest);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /****************************************************************************
                                                                                                                                                                                                     * Copyright 2018 EPAM Systems
                                                                                                                                                                                                     *
                                                                                                                                                                                                     * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                     * you may not use this file except in compliance with the License.
                                                                                                                                                                                                     * You may obtain a copy of the License at
                                                                                                                                                                                                     *
                                                                                                                                                                                                     *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                     *
                                                                                                                                                                                                     * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                     * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                     * See the License for the specific language governing permissions and
                                                                                                                                                                                                     * limitations under the License.
                                                                                                                                                                                                     ***************************************************************************/

function Struct() {
	this.atoms = new _pool2.default();
	this.bonds = new _pool2.default();
	this.sgroups = new _pool2.default();
	this.halfBonds = new _pool2.default();
	this.loops = new _pool2.default();
	this.isChiral = false;
	this.isReaction = false;
	this.rxnArrows = new _pool2.default();
	this.rxnPluses = new _pool2.default();
	this.frags = new _pool2.default();
	this.rgroups = new _pool2.default();
	this.name = '';
	this.sGroupForest = new _sgforest2.default(this);
}

Struct.prototype.hasRxnProps = function () {
	return this.atoms.find(function (aid, atom) {
		return atom.hasRxnProps();
	}) || this.bonds.find(function (bid, bond) {
		return bond.hasRxnProps();
	});
};

Struct.prototype.hasRxnArrow = function () {
	return this.rxnArrows.size > 0;
};

Struct.prototype.isBlank = function () {
	return this.atoms.size === 0 && this.rxnArrows.size === 0 && this.rxnPluses.size === 0 && !this.isChiral;
};

/**
 * @param atomSet { Pile<number>? }
 * @param bondSet { Pile<number>? }
 * @param dropRxnSymbols { boolean? }
 * @param aidMap { Map<number, number>? }
 * @returns { Struct }
 */
Struct.prototype.clone = function (atomSet, bondSet, dropRxnSymbols, aidMap) {
	return this.mergeInto(new Struct(), atomSet, bondSet, dropRxnSymbols, false, aidMap);
};

Struct.prototype.getScaffold = function () {
	var _this = this;

	var atomSet = new _pile2.default();
	this.atoms.forEach(function (atom, aid) {
		atomSet.add(aid);
	});

	this.rgroups.forEach(function (rg) {
		rg.frags.forEach(function (fnum, fid) {
			_this.atoms.forEach(function (atom, aid) {
				if (atom.fragment === fid) atomSet.delete(aid);
			});
		});
	});

	return this.clone(atomSet);
};

Struct.prototype.getFragmentIds = function (fid) {
	var atomSet = new _pile2.default();

	this.atoms.forEach(function (atom, aid) {
		if (atom.fragment === fid) atomSet.add(aid);
	});

	return atomSet;
};

Struct.prototype.getFragment = function (fid) {
	return this.clone(this.getFragmentIds(fid));
};

/**
 * @param cp { Struct } - container for merging
 * @param atomSet { Pile<number>? }
 * @param bondSet { Pile<number>? }
 * @param dropRxnSymbols { boolean? }
 * @param keepAllRGroups { boolean? }
 * @param aidMap { Map<number, number>? }
 * @returns { Struct }
 */
Struct.prototype.mergeInto = function (cp, atomSet, bondSet, dropRxnSymbols, keepAllRGroups, aidMap) {
	var _this2 = this;

	// eslint-disable-line max-params, max-statements
	atomSet = atomSet || new _pile2.default(this.atoms.keys());
	bondSet = bondSet || new _pile2.default(this.bonds.keys());
	aidMap = aidMap || new Map();

	bondSet = bondSet.filter(function (bid) {
		var bond = _this2.bonds.get(bid);
		return atomSet.has(bond.begin) && atomSet.has(bond.end);
	});

	var fidMask = new _pile2.default();

	this.atoms.forEach(function (atom, aid) {
		if (atomSet.has(aid)) fidMask.add(atom.fragment);
	});

	var fidMap = new Map();
	this.frags.forEach(function (frag, fid) {
		if (fidMask.has(fid)) fidMap.set(fid, cp.frags.add(Object.assign({}, frag)));
	});

	var rgroupsIds = [];
	this.rgroups.forEach(function (rgroup, rgid) {
		var keepGroup = keepAllRGroups;
		if (!keepGroup) {
			rgroup.frags.forEach(function (fnum, fid) {
				rgroupsIds.push(fid);
				if (fidMask.has(fid)) keepGroup = true;
			});

			if (!keepGroup) return;
		}

		var rg = cp.rgroups.get(rgid);
		if (rg) {
			rgroup.frags.forEach(function (fnum, fid) {
				rgroupsIds.push(fid);
				if (fidMask.has(fid)) rg.frags.add(fidMap.get(fid));
			});
		} else {
			cp.rgroups.set(rgid, rgroup.clone(fidMap));
		}
	});

	// atoms in not RGroup
	this.atoms.forEach(function (atom, aid) {
		if (atomSet.has(aid) && rgroupsIds.indexOf(atom.fragment) === -1) aidMap.set(aid, cp.atoms.add(atom.clone(fidMap)));
	});
	// atoms in RGroup
	this.atoms.forEach(function (atom, aid) {
		if (atomSet.has(aid) && rgroupsIds.indexOf(atom.fragment) !== -1) aidMap.set(aid, cp.atoms.add(atom.clone(fidMap)));
	});

	var bidMap = new Map();
	this.bonds.forEach(function (bond, bid) {
		if (bondSet.has(bid)) bidMap.set(bid, cp.bonds.add(bond.clone(aidMap)));
	});

	this.sgroups.forEach(function (sg) {
		if (sg.atoms.some(function (aid) {
			return !atomSet.has(aid);
		})) return;

		sg = _sgroup2.default.clone(sg, aidMap);
		var id = cp.sgroups.add(sg);
		sg.id = id;

		sg.atoms.forEach(function (aid) {
			cp.atoms.get(aid).sgs.add(id);
		});

		if (sg.type === 'DAT') cp.sGroupForest.insert(sg.id, -1, []);else cp.sGroupForest.insert(sg.id);
	});

	cp.isChiral = cp.isChiral || this.isChiral;

	if (!dropRxnSymbols) {
		cp.isReaction = this.isReaction;
		this.rxnArrows.forEach(function (item) {
			cp.rxnArrows.add(item.clone());
		});
		this.rxnPluses.forEach(function (item) {
			cp.rxnPluses.add(item.clone());
		});
	}

	return cp;
};

/**
 * @param begin { number }
 * @param end { number }
 * @return { number|null }
 */
Struct.prototype.findBondId = function (begin, end) {
	return this.bonds.find(function (bid, bond) {
		return bond.begin === begin && bond.end === end || bond.begin === end && bond.end === begin;
	});
};

/**
 * @param begin [ number }
 * @param end { number }
 * @param bid { number }
 * @constructor
 */
function HalfBond(begin, end, bid) {
	console.assert(arguments.length === 3, 'Invalid parameter number!');

	this.begin = begin;
	this.end = end;
	this.bid = bid;

	// rendering properties
	this.dir = new _vec2.default(); // direction
	this.norm = new _vec2.default(); // left normal
	this.ang = 0; // angle to (1,0), used for sorting the bonds
	this.p = new _vec2.default(); // corrected origin position
	this.loop = -1; // left loop id if the half-bond is in a loop, otherwise -1
	this.contra = -1; // the half bond contrary to this one
	this.next = -1; // the half-bond next ot this one in CCW order
	this.leftSin = 0;
	this.leftCos = 0;
	this.leftNeighbor = 0;
	this.rightSin = 0;
	this.rightCos = 0;
	this.rightNeighbor = 0;
}

Struct.prototype.initNeighbors = function () {
	var _this3 = this;

	this.atoms.forEach(function (atom) {
		atom.neighbors = [];
	});

	this.bonds.forEach(function (bond) {
		var a1 = _this3.atoms.get(bond.begin);
		var a2 = _this3.atoms.get(bond.end);
		a1.neighbors.push(bond.hb1);
		a2.neighbors.push(bond.hb2);
	});
};

Struct.prototype.bondInitHalfBonds = function (bid, bond) {
	bond = bond || this.bonds.get(bid);
	bond.hb1 = 2 * bid;
	bond.hb2 = 2 * bid + 1; // eslint-disable-line no-mixed-operators
	this.halfBonds.set(bond.hb1, new HalfBond(bond.begin, bond.end, bid));
	this.halfBonds.set(bond.hb2, new HalfBond(bond.end, bond.begin, bid));
	var hb1 = this.halfBonds.get(bond.hb1);
	var hb2 = this.halfBonds.get(bond.hb2);
	hb1.contra = bond.hb2;
	hb2.contra = bond.hb1;
};

Struct.prototype.halfBondUpdate = function (hbid) {
	var hb = this.halfBonds.get(hbid);
	var p1 = this.atoms.get(hb.begin).pp;
	var p2 = this.atoms.get(hb.end).pp;
	var d = _vec2.default.diff(p2, p1).normalized();
	hb.dir = _vec2.default.dist(p2, p1) > 1e-4 ? d : new _vec2.default(1, 0);
	hb.norm = hb.dir.turnLeft();
	hb.ang = hb.dir.oxAngle();
	if (hb.loop < 0) hb.loop = -1;
};

Struct.prototype.initHalfBonds = function () {
	var _this4 = this;

	this.halfBonds.clear();
	this.bonds.forEach(function (bond, bid) {
		_this4.bondInitHalfBonds(bid, bond);
	});
};

Struct.prototype.setHbNext = function (hbid, next) {
	this.halfBonds.get(this.halfBonds.get(hbid).contra).next = next;
};

Struct.prototype.halfBondSetAngle = function (hbid, left) {
	var hb = this.halfBonds.get(hbid);
	var hbl = this.halfBonds.get(left);

	hbl.rightCos = _vec2.default.dot(hbl.dir, hb.dir);
	hb.leftCos = _vec2.default.dot(hbl.dir, hb.dir);

	hbl.rightSin = _vec2.default.cross(hbl.dir, hb.dir);
	hb.leftSin = _vec2.default.cross(hbl.dir, hb.dir);

	hb.leftNeighbor = left;
	hbl.rightNeighbor = hbid;
};

Struct.prototype.atomAddNeighbor = function (hbid) {
	var hb = this.halfBonds.get(hbid);
	var atom = this.atoms.get(hb.begin);

	for (var i = 0; i < atom.neighbors.length; ++i) {
		if (this.halfBonds.get(atom.neighbors[i]).ang > hb.ang) break;
	}
	atom.neighbors.splice(i, 0, hbid);
	var ir = atom.neighbors[(i + 1) % atom.neighbors.length];
	var il = atom.neighbors[(i + atom.neighbors.length - 1) % atom.neighbors.length];
	this.setHbNext(il, hbid);
	this.setHbNext(hbid, ir);
	this.halfBondSetAngle(hbid, il);
	this.halfBondSetAngle(ir, hbid);
};

Struct.prototype.atomSortNeighbors = function (aid) {
	var _this5 = this;

	var atom = this.atoms.get(aid);
	var halfBonds = this.halfBonds;

	atom.neighbors.sort(function (nei, nei2) {
		return halfBonds.get(nei).ang - halfBonds.get(nei2).ang;
	}).forEach(function (nei, i) {
		var nextNei = atom.neighbors[(i + 1) % atom.neighbors.length];
		_this5.halfBonds.get(_this5.halfBonds.get(nei).contra).next = nextNei;
		_this5.halfBondSetAngle(nextNei, nei);
	});
};

Struct.prototype.sortNeighbors = function (list) {
	var _this6 = this;

	if (!list) {
		this.atoms.forEach(function (atom, aid) {
			_this6.atomSortNeighbors(aid);
		});
	} else {
		list.forEach(function (aid) {
			_this6.atomSortNeighbors(aid);
		});
	}
};

Struct.prototype.atomUpdateHalfBonds = function (aid) {
	var _this7 = this;

	this.atoms.get(aid).neighbors.forEach(function (hbid) {
		_this7.halfBondUpdate(hbid);
		_this7.halfBondUpdate(_this7.halfBonds.get(hbid).contra);
	});
};

Struct.prototype.updateHalfBonds = function (list) {
	var _this8 = this;

	if (!list) {
		this.atoms.forEach(function (atom, aid) {
			_this8.atomUpdateHalfBonds(aid);
		});
	} else {
		list.forEach(function (aid) {
			_this8.atomUpdateHalfBonds(aid);
		});
	}
};

Struct.prototype.sGroupsRecalcCrossBonds = function () {
	var _this9 = this;

	this.sgroups.forEach(function (sg) {
		sg.xBonds = [];
		sg.neiAtoms = [];
	});

	this.bonds.forEach(function (bond, bid) {
		var a1 = _this9.atoms.get(bond.begin);
		var a2 = _this9.atoms.get(bond.end);

		a1.sgs.forEach(function (sgid) {
			if (!a2.sgs.has(sgid)) {
				var sg = _this9.sgroups.get(sgid);
				sg.xBonds.push(bid);
				arrayAddIfMissing(sg.neiAtoms, bond.end);
			}
		});

		a2.sgs.forEach(function (sgid) {
			if (!a1.sgs.has(sgid)) {
				var sg = _this9.sgroups.get(sgid);
				sg.xBonds.push(bid);
				arrayAddIfMissing(sg.neiAtoms, bond.begin);
			}
		});
	});
};

Struct.prototype.sGroupDelete = function (sgid) {
	var _this10 = this;

	this.sgroups.get(sgid).atoms.forEach(function (atom) {
		_this10.atoms.get(atom).sgs.delete(sgid);
	});

	this.sGroupForest.remove(sgid);
	this.sgroups.delete(sgid);
};

Struct.prototype.atomSetPos = function (id, pp) {
	var item = this.atoms.get(id);
	item.pp = pp;
};

Struct.prototype.rxnPlusSetPos = function (id, pp) {
	var item = this.rxnPluses.get(id);
	item.pp = pp;
};

Struct.prototype.rxnArrowSetPos = function (id, pp) {
	var item = this.rxnArrows.get(id);
	item.pp = pp;
};

/**
 * @param atomSet { Pile<number> }
 * @returns {*}
 */
Struct.prototype.getCoordBoundingBox = function (atomSet) {
	var bb = null;
	function extend(pp) {
		if (!bb) {
			bb = {
				min: pp,
				max: pp
			};
		} else {
			bb.min = _vec2.default.min(bb.min, pp);
			bb.max = _vec2.default.max(bb.max, pp);
		}
	}

	var global = !atomSet || atomSet.size === 0;

	this.atoms.forEach(function (atom, aid) {
		if (global || atomSet.has(aid)) extend(atom.pp);
	});
	if (global) {
		this.rxnPluses.forEach(function (item) {
			extend(item.pp);
		});
		this.rxnArrows.forEach(function (item) {
			extend(item.pp);
		});
	}
	if (!bb && global) {
		bb = {
			min: new _vec2.default(0, 0),
			max: new _vec2.default(1, 1)
		};
	}
	return bb;
};

Struct.prototype.getCoordBoundingBoxObj = function () {
	var bb = null;
	function extend(pp) {
		if (!bb) {
			bb = {
				min: new _vec2.default(pp),
				max: new _vec2.default(pp)
			};
		} else {
			bb.min = _vec2.default.min(bb.min, pp);
			bb.max = _vec2.default.max(bb.max, pp);
		}
	}

	this.atoms.forEach(function (atom) {
		extend(atom.pp);
	});
	return bb;
};

Struct.prototype.getBondLengthData = function () {
	var _this11 = this;

	var totalLength = 0;
	var cnt = 0;
	this.bonds.forEach(function (bond) {
		totalLength += _vec2.default.dist(_this11.atoms.get(bond.begin).pp, _this11.atoms.get(bond.end).pp);
		cnt++;
	});
	return { cnt: cnt, totalLength: totalLength };
};

Struct.prototype.getAvgBondLength = function () {
	var bld = this.getBondLengthData();
	return bld.cnt > 0 ? bld.totalLength / bld.cnt : -1;
};

Struct.prototype.getAvgClosestAtomDistance = function () {
	var totalDist = 0;
	var minDist;
	var dist = 0;
	var keys = this.atoms.keys();
	var k;
	var j;
	for (k = 0; k < keys.length; ++k) {
		minDist = -1;
		for (j = 0; j < keys.length; ++j) {
			if (j == k) continue; // eslint-disable-line no-continue
			dist = _vec2.default.dist(this.atoms.get(keys[j]).pp, this.atoms.get(keys[k]).pp);
			if (minDist < 0 || minDist > dist) minDist = dist;
		}
		totalDist += minDist;
	}

	return keys.length > 0 ? totalDist / keys.length : -1;
};

Struct.prototype.checkBondExists = function (begin, end) {
	var key = this.bonds.find(function (bid, bond) {
		return bond.begin === begin && bond.end === end || bond.end === begin && bond.begin === end;
	});

	return key !== undefined;
};

/**
 * @param hbs { Array<number> }
 * @param struct < Struct }
 * @param isConvex { boolean }
 * @constructor
 */
function Loop(hbs, struct, isConvex) {
	var _this12 = this;

	this.hbs = hbs; // set of half-bonds involved
	this.dblBonds = 0; // number of double bonds in the loop
	this.aromatic = true;
	this.convex = isConvex || false;

	hbs.forEach(function (hb) {
		var bond = struct.bonds.get(struct.halfBonds.get(hb).bid);
		if (bond.type !== _bond2.default.PATTERN.TYPE.AROMATIC) _this12.aromatic = false;
		if (bond.type === _bond2.default.PATTERN.TYPE.DOUBLE) _this12.dblBonds++;
	});
}

/**
 * @param firstaid { number }
 * @returns { Pile<number> }
 */
Struct.prototype.findConnectedComponent = function (firstaid) {
	var _this13 = this;

	var list = [firstaid];
	var ids = new _pile2.default();
	while (list.length > 0) {
		var aid = list.pop();
		ids.add(aid);
		var atom = this.atoms.get(aid);
		atom.neighbors.forEach(function (nei) {
			var neiId = _this13.halfBonds.get(nei).end;
			if (!ids.has(neiId)) list.push(neiId);
		});
	}

	return ids;
};

Struct.prototype.findConnectedComponents = function (discardExistingFragments) {
	var _this14 = this;

	// NB: this is a hack
	// TODO: need to maintain half-bond and neighbor structure permanently
	if (!this.halfBonds.size) {
		this.initHalfBonds();
		this.initNeighbors();
		this.updateHalfBonds(Array.from(this.atoms.keys()));
		this.sortNeighbors(Array.from(this.atoms.keys()));
	}

	var addedAtoms = new _pile2.default();

	var components = [];
	this.atoms.forEach(function (atom, aid) {
		if ((discardExistingFragments || atom.fragment < 0) && !addedAtoms.has(aid)) {
			var component = _this14.findConnectedComponent(aid);
			components.push(component);
			addedAtoms = addedAtoms.union(component);
		}
	});

	return components;
};

/**
 * @param idSet { Pile<number> }
 */
Struct.prototype.markFragment = function (idSet) {
	var _this15 = this;

	var frag = {};
	var fid = this.frags.add(frag);

	idSet.forEach(function (aid) {
		_this15.atoms.get(aid).fragment = fid;
	});
};

Struct.prototype.markFragments = function () {
	var _this16 = this;

	var components = this.findConnectedComponents();
	components.forEach(function (comp) {
		_this16.markFragment(comp);
	});
};

Struct.prototype.scale = function (scale) {
	if (scale === 1) return;

	this.atoms.forEach(function (atom) {
		atom.pp = atom.pp.scaled(scale);
	});

	this.rxnPluses.forEach(function (item) {
		item.pp = item.pp.scaled(scale);
	});

	this.rxnArrows.forEach(function (item) {
		item.pp = item.pp.scaled(scale);
	});

	this.sgroups.forEach(function (item) {
		item.pp = item.pp ? item.pp.scaled(scale) : null;
	});
};

Struct.prototype.rescale = function () {
	var avg = this.getAvgBondLength();
	if (avg < 0 && !this.isReaction) // TODO [MK] this doesn't work well for reactions as the distances between
		// the atoms in different components are generally larger than those between atoms of a single component
		// (KETCHER-341)
		avg = this.getAvgClosestAtomDistance();
	if (avg < 1e-3) avg = 1;

	var scale = 1 / avg;
	this.scale(scale);
};

Struct.prototype.loopHasSelfIntersections = function (hbs) {
	for (var i = 0; i < hbs.length; ++i) {
		var hbi = this.halfBonds.get(hbs[i]);
		var ai = this.atoms.get(hbi.begin).pp;
		var bi = this.atoms.get(hbi.end).pp;
		var set = new _pile2.default([hbi.begin, hbi.end]);

		for (var j = i + 2; j < hbs.length; ++j) {
			var hbj = this.halfBonds.get(hbs[j]);
			if (set.has(hbj.begin) || set.has(hbj.end)) continue; // skip edges sharing an atom

			var aj = this.atoms.get(hbj.begin).pp;
			var bj = this.atoms.get(hbj.end).pp;

			if (_box2abs2.default.segmentIntersection(ai, bi, aj, bj)) return true;
		}
	}

	return false;
};

// partition a cycle into simple cycles
// TODO: [MK] rewrite the detection algorithm to only find simple ones right away?
Struct.prototype.partitionLoop = function (loop) {
	// eslint-disable-line max-statements
	var subloops = [];
	var continueFlag = true;
	while (continueFlag) {
		var atomToHalfBond = {}; // map from every atom in the loop to the index of the first half-bond starting from that atom in the uniqHb array
		continueFlag = false;

		for (var l = 0; l < loop.length; ++l) {
			var hbid = loop[l];
			var aid1 = this.halfBonds.get(hbid).begin;
			var aid2 = this.halfBonds.get(hbid).end;
			if (aid2 in atomToHalfBond) {
				// subloop found
				var s = atomToHalfBond[aid2]; // where the subloop begins
				var subloop = loop.slice(s, l + 1);
				subloops.push(subloop);
				if (l < loop.length) // remove half-bonds corresponding to the subloop
					loop.splice(s, l - s + 1);
				continueFlag = true;
				break;
			}
			atomToHalfBond[aid1] = l;
		}
		if (!continueFlag) subloops.push(loop); // we're done, no more subloops found
	}
	return subloops;
};

Struct.prototype.halfBondAngle = function (hbid1, hbid2) {
	var hba = this.halfBonds.get(hbid1);
	var hbb = this.halfBonds.get(hbid2);
	return Math.atan2(_vec2.default.cross(hba.dir, hbb.dir), _vec2.default.dot(hba.dir, hbb.dir));
};

Struct.prototype.loopIsConvex = function (loop) {
	var _this17 = this;

	return loop.every(function (item, k, loopArr) {
		var angle = _this17.halfBondAngle(item, loopArr[(k + 1) % loopArr.length]);
		return angle <= 0;
	});
};

// check whether a loop is on the inner or outer side of the polygon
//  by measuring the total angle between bonds
Struct.prototype.loopIsInner = function (loop) {
	var _this18 = this;

	var totalAngle = 2 * Math.PI;
	loop.forEach(function (hbida, k, loopArr) {
		var hbidb = loopArr[(k + 1) % loopArr.length];
		var hbb = _this18.halfBonds.get(hbidb);
		var angle = _this18.halfBondAngle(hbida, hbidb);
		totalAngle += hbb.contra === hbida ? Math.PI : angle; // back and forth along the same edge
	});
	return Math.abs(totalAngle) < Math.PI;
};

/**
 * @returns { {
 * 		newLoops: Array <number>,
 * 		bondsToMark: Array<number>
 *   } }
 */
Struct.prototype.findLoops = function () {
	var _this19 = this;

	var newLoops = [];
	var bondsToMark = new _pile2.default();

	/*
  	Starting from each half-bond not known to be in a loop yet,
  	follow the 'next' links until the initial half-bond is reached or
  	the length of the sequence exceeds the number of half-bonds available.
  	In a planar graph, as long as every bond is a part of some "loop" -
  	either an outer or an inner one - every iteration either yields a loop
  	or doesn't start at all. Thus this has linear complexity in the number
  	of bonds for planar graphs.
  */

	var hbIdNext = void 0,
	    c = void 0,
	    loop = void 0,
	    loopId = void 0;
	this.halfBonds.forEach(function (hb, hbId) {
		if (hb.loop !== -1) return;

		for (hbIdNext = hbId, c = 0, loop = []; c <= _this19.halfBonds.size; hbIdNext = _this19.halfBonds.get(hbIdNext).next, ++c) {
			if (!(c > 0 && hbIdNext === hbId)) {
				loop.push(hbIdNext);
				continue; // eslint-disable-line no-continue
			}

			// loop found
			var subloops = _this19.partitionLoop(loop);
			subloops.forEach(function (loop) {
				if (_this19.loopIsInner(loop) && !_this19.loopHasSelfIntersections(loop)) {
					/*
                        loop is internal
                        use lowest half-bond id in the loop as the loop id
                        this ensures that the loop gets the same id if it is discarded and then recreated,
                        which in turn is required to enable redrawing while dragging, as actions store item id's
                     */
					loopId = Math.min.apply(Math, _toConsumableArray(loop));
					_this19.loops.set(loopId, new Loop(loop, _this19, _this19.loopIsConvex(loop)));
				} else {
					loopId = -2;
				}

				loop.forEach(function (hbid) {
					_this19.halfBonds.get(hbid).loop = loopId;
					bondsToMark.add(_this19.halfBonds.get(hbid).bid);
				});

				if (loopId >= 0) newLoops.push(loopId);
			});
			break;
		}
	});

	return {
		newLoops: newLoops,
		bondsToMark: Array.from(bondsToMark)
	};
};

// NB: this updates the structure without modifying the corresponding ReStruct.
//  To be applied to standalone structures only.
Struct.prototype.prepareLoopStructure = function () {
	this.initHalfBonds();
	this.initNeighbors();
	this.updateHalfBonds(Array.from(this.atoms.keys()));
	this.sortNeighbors(Array.from(this.atoms.keys()));
	this.findLoops();
};

/**
 * @param sgid { number }
 * @param aid { number }
 */
Struct.prototype.atomAddToSGroup = function (sgid, aid) {
	// TODO: [MK] make sure the addition does not break the hierarchy?
	_sgroup2.default.addAtom(this.sgroups.get(sgid), aid);
	this.atoms.get(aid).sgs.add(sgid);
};

Struct.prototype.calcConn = function (atom) {
	var conn = 0;
	for (var i = 0; i < atom.neighbors.length; ++i) {
		var hb = this.halfBonds.get(atom.neighbors[i]);
		var bond = this.bonds.get(hb.bid);
		switch (bond.type) {
			case _bond2.default.PATTERN.TYPE.SINGLE:
				conn += 1;
				break;
			case _bond2.default.PATTERN.TYPE.DOUBLE:
				conn += 2;
				break;
			case _bond2.default.PATTERN.TYPE.TRIPLE:
				conn += 3;
				break;
			case _bond2.default.PATTERN.TYPE.AROMATIC:
				if (atom.neighbors.length === 1) return [-1, true];
				return [atom.neighbors.length, true];
			default:
				return [-1, false];
		}
	}
	return [conn, false];
};

Struct.prototype.calcImplicitHydrogen = function (aid) {
	var atom = this.atoms.get(aid);

	var _calcConn = this.calcConn(atom),
	    _calcConn2 = _slicedToArray(_calcConn, 2),
	    conn = _calcConn2[0],
	    isAromatic = _calcConn2[1];

	var correctConn = conn;
	atom.badConn = false;

	if (isAromatic) {
		if (atom.label === 'C' && atom.charge === 0) {
			if (conn === 3) {
				atom.implicitH = -(0, _atom.radicalElectrons)(atom.radical);
				return;
			}
			if (conn === 2) {
				atom.implicitH = 1 - (0, _atom.radicalElectrons)(atom.radical);
				return;
			}
		} else if (atom.label === 'O' && atom.charge === 0 || atom.label === 'N' && atom.charge === 0 && conn === 3 || atom.label === 'N' && atom.charge === 1 && conn === 3 || atom.label === 'S' && atom.charge === 0 && conn === 3) {
			atom.implicitH = 0;
			return;
		} else if (!atom.hasImplicitH) {
			correctConn++;
		}
	}

	if (correctConn < 0 || atom.isQuery()) {
		atom.implicitH = 0;
		return;
	}

	if (atom.explicitValence >= 0) {
		var elem = _element2.default.map[atom.label];
		atom.implicitH = elem !== null ? atom.explicitValence - atom.calcValenceMinusHyd(correctConn) : 0;
		if (atom.implicitH < 0) {
			atom.implicitH = 0;
			atom.badConn = true;
		}
	} else {
		atom.calcValence(correctConn);
	}
};

Struct.prototype.setImplicitHydrogen = function (list) {
	var _this20 = this;

	this.sgroups.forEach(function (item) {
		if (item.data.fieldName === 'MRV_IMPLICIT_H') _this20.atoms.get(item.atoms[0]).hasImplicitH = true;
	});

	if (!list) {
		this.atoms.forEach(function (atom, aid) {
			_this20.calcImplicitHydrogen(aid);
		});
	} else {
		list.forEach(function (aid) {
			_this20.calcImplicitHydrogen(aid);
		});
	}
};

/**
 * @return {{reactants: Array<Pile<number>>, products: Array<Pile<number>>}}
 */
Struct.prototype.getComponents = function () {
	var _this21 = this;

	// eslint-disable-line max-statements
	/* saver */
	var connectedComponents = this.findConnectedComponents(true);
	var barriers = [];
	var arrowPos = null;

	this.rxnArrows.forEach(function (item) {
		// there's just one arrow
		arrowPos = item.pp.x;
	});

	this.rxnPluses.forEach(function (item) {
		barriers.push(item.pp.x);
	});

	if (arrowPos !== null) barriers.push(arrowPos);

	barriers.sort(function (a, b) {
		return a - b;
	});

	var components = [];

	connectedComponents.forEach(function (component) {
		var bb = _this21.getCoordBoundingBox(component);
		var c = _vec2.default.lc2(bb.min, 0.5, bb.max, 0.5);
		var j = 0;

		while (c.x > barriers[j]) {
			++j;
		}components[j] = components[j] || new _pile2.default();
		components[j] = components[j].union(component);
	});

	var submolTexts = [];
	var reactants = [];
	var products = [];

	components.forEach(function (component) {
		if (!component) {
			submolTexts.push('');
			return;
		}

		var rxnFragmentType = _this21.defineRxnFragmentTypeForAtomset(component, arrowPos);

		if (rxnFragmentType === 1) reactants.push(component);else products.push(component);
	});

	return {
		reactants: reactants,
		products: products
	};
};

/**
 * @param atomset { Pile<number> }
 * @param arrowpos { number }
 * @returns { number }
 */
Struct.prototype.defineRxnFragmentTypeForAtomset = function (atomset, arrowpos) {
	var bb = this.getCoordBoundingBox(atomset);
	var c = _vec2.default.lc2(bb.min, 0.5, bb.max, 0.5);
	return c.x < arrowpos ? 1 : 2;
};

/**
 * @param bid { number }
 * @returns { number }
 */
Struct.prototype.getBondFragment = function (bid) {
	var aid = this.bonds.get(bid).begin;
	return this.atoms.get(aid).fragment;
};

// Other struct objects

function RxnPlus(params) {
	params = params || {};
	this.pp = params.pp ? new _vec2.default(params.pp) : new _vec2.default();
}

RxnPlus.prototype.clone = function () {
	return new RxnPlus(this);
};

function RxnArrow(params) {
	params = params || {};
	this.pp = params.pp ? new _vec2.default(params.pp) : new _vec2.default();
}

RxnArrow.prototype.clone = function () {
	return new RxnArrow(this);
};

function arrayAddIfMissing(array, item) {
	for (var i = 0; i < array.length; ++i) {
		if (array[i] === item) return false;
	}
	array.push(item);
	return true;
}

exports.default = Struct;
exports.Atom = _atom2.default;
exports.AtomList = _atomlist2.default;
exports.Bond = _bond2.default;
exports.SGroup = _sgroup2.default;
exports.RGroup = _rgroup2.default;
exports.RxnPlus = RxnPlus;
exports.RxnArrow = RxnArrow;

},{"../../util/box2abs":682,"../../util/pile":683,"../../util/pool":684,"../../util/vec2":686,"../element":520,"./atom":534,"./atomlist":535,"./bond":536,"./rgroup":538,"./sgforest":539,"./sgroup":540}],538:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _pile = require('../../util/pile');

var _pile2 = _interopRequireDefault(_pile);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function RGroup(logic) {
  logic = logic || {};
  this.frags = new _pile2.default();
  this.resth = logic.resth || false;
  this.range = logic.range || '';
  this.ifthen = logic.ifthen || 0;
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

RGroup.prototype.getAttrs = function () {
  return {
    resth: this.resth,
    range: this.range,
    ifthen: this.ifthen
  };
};

/**
 * @param rgroups { Pool<number, RGroup> }
 * @param frid { number }
 */
RGroup.findRGroupByFragment = function (rgroups, frid) {
  return rgroups.find(function (rgid, rgroup) {
    return rgroup.frags.has(frid);
  });
};

/**
 * @param fidMap { Map<number, number> }
 * @returns { RGroup }
 */
RGroup.prototype.clone = function (fidMap) {
  var ret = new RGroup(this);
  this.frags.forEach(function (fid) {
    ret.frags.add(fidMap ? fidMap.get(fid) : fid);
  });
  return ret;
};

exports.default = RGroup;

},{"../../util/pile":683}],539:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _pool = require('../../util/pool');

var _pool2 = _interopRequireDefault(_pool);

var _pile = require('../../util/pile');

var _pile2 = _interopRequireDefault(_pile);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function SGroupForest(molecule) {
	this.parent = new _pool2.default(); // child id -> parent id
	this.children = new _pool2.default(); // parent id -> list of child ids
	this.children.set(-1, []); // extra root node
	this.molecule = molecule;
}

// returns an array or s-group ids in the order of breadth-first search
SGroupForest.prototype.getSGroupsBFS = function () {
	var order = [];
	var id = -1;
	var queue = [].slice.call(this.children.get(-1));
	while (queue.length > 0) {
		id = queue.shift();
		queue = queue.concat(this.children.get(id));
		order.push(id);
	}
	return order;
};

/**
 * @returns { Map< number, Pile<number> > }
 */
SGroupForest.prototype.getAtomSets = function () {
	var map = new Map();
	this.molecule.sgroups.forEach(function (sg, sgid) {
		map.set(sgid, new _pile2.default(sg.atoms));
	});
	return map;
};

/**
 * @param newId { number }
 * @param atoms { Pile<number> }
 * @returns { { children, parent: number } }
 */
SGroupForest.prototype.getAtomSetRelations = function (newId, atoms) {
	var _this = this;

	// find the lowest superset in the hierarchy
	var isStrictSuperset = new Map();
	var isSubset = new Map();
	var atomSets = this.getAtomSets();

	atomSets.delete(newId);

	atomSets.forEach(function (atomSet, id) {
		isSubset.set(id, atomSet.isSuperset(atoms));
		isStrictSuperset.set(id, atoms.isSuperset(atomSet) && !atomSet.equals(atoms));
	});

	var parents = Array.from(atomSets.keys()).filter(function (sgid) {
		if (!isSubset.get(sgid)) return false;
		return _this.children.get(sgid).findIndex(function (childId) {
			return isSubset.get(childId);
		}) < 0;
	});

	var children = Array.from(atomSets.keys()).filter(function (id) {
		return isStrictSuperset.get(id) && !isStrictSuperset.get(_this.parent.get(id));
	});

	return {
		children: children,
		parent: parents.length === 0 ? -1 : parents[0]
	};
};

SGroupForest.prototype.getPathToRoot = function (sgid) {
	var path = [];
	for (var id = sgid; id >= 0; id = this.parent.get(id)) {
		console.assert(path.indexOf(id) < 0, 'SGroupForest: loop detected');
		path.push(id);
	}
	return path;
};

SGroupForest.prototype.validate = function () {
	var _this2 = this;

	var atomSets = this.getAtomSets();

	this.molecule.sgroups.forEach(function (sg, sgid) {
		_this2.getPathToRoot(sgid); // this will throw an exception if there is a loop in the path to root
	});

	var valid = true;
	// 1) child group's atom set is a subset of the parent one's
	this.parent.forEach(function (parentId, id) {
		if (parentId >= 0 && !atomSets.get(parentId).isSuperset(atomSets.get(id))) valid = false;
	});

	// 2) siblings have disjoint atom sets
	this.children.forEach(function (list) {
		for (var i = 0; i < list.length; ++i) {
			for (var j = i + 1; j < list.length; ++j) {
				var id1 = list[i];
				var id2 = list[j];
				var sg1 = _this2.molecule.sgroups.get(id1);
				var sg2 = _this2.molecule.sgroups.get(id2);

				if (atomSets.get(id1).intersection(atomSets.get(id2)).size !== 0 && sg1.type !== 'DAT' && sg2.type !== 'DAT') valid = false;
			}
		}
	});
	return valid;
};

SGroupForest.prototype.insert = function (id, parent /* int, optional */, children /* [int], optional */) {
	var _this3 = this;

	console.assert(!this.parent.has(id), 'sgid already present in the forest');
	console.assert(!this.children.has(id), 'sgid already present in the forest');
	console.assert(this.validate(), 's-group forest invalid');

	var atoms = new _pile2.default(this.molecule.sgroups.get(id).atoms);
	if (!parent || !children) {
		// if these are not provided, deduce automatically
		var guess = this.getAtomSetRelations(id, atoms);
		parent = guess.parent;
		children = guess.children;
	}

	// TODO: make children Map<int, Pile> instead of Map<int, []>?
	children.forEach(function (childId) {
		// reset parent links
		var childs = _this3.children.get(_this3.parent.get(childId));
		var i = childs.indexOf(childId);
		console.assert(i >= 0 && childs.indexOf(childId, i + 1) < 0, 'Assertion failed'); // one element
		childs.splice(i, 1);
		_this3.parent.set(childId, id);
	});
	this.children.set(id, children);
	this.parent.set(id, parent);
	this.children.get(parent).push(id);
	console.assert(this.validate(), 's-group forest invalid');
	return { parent: parent, children: children };
};

SGroupForest.prototype.remove = function (id) {
	var _this4 = this;

	console.assert(this.parent.has(id), 'sgid is not in the forest');
	console.assert(this.children.has(id), 'sgid is not in the forest');
	console.assert(this.validate(), 's-group forest invalid');

	var parentId = this.parent.get(id);
	this.children.get(id).forEach(function (childId) {
		// reset parent links
		_this4.parent.set(childId, parentId);
		_this4.children.get(parentId).push(childId);
	});

	var childs = this.children.get(parentId);
	var i = childs.indexOf(id);
	console.assert(i >= 0 && childs.indexOf(id, i + 1) < 0, 'Assertion failed'); // one element
	childs.splice(i, 1);

	this.children.delete(id);
	this.parent.delete(id);
	console.assert(this.validate(), 's-group forest invalid');
};

exports.default = SGroupForest;

},{"../../util/pile":683,"../../util/pool":684}],540:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _box2abs = require('../../util/box2abs');

var _box2abs2 = _interopRequireDefault(_box2abs);

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _pile = require('../../util/pile');

var _pile2 = _interopRequireDefault(_pile);

var _atom = require('./atom');

var _atom2 = _interopRequireDefault(_atom);

var _bond = require('./bond');

var _bond2 = _interopRequireDefault(_bond);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function SGroup(type) {
	// eslint-disable-line max-statements
	console.assert(type && type in SGroup.TYPES, 'Invalid or unsupported s-group type');

	this.type = type;
	this.id = -1;
	this.label = -1;
	this.bracketBox = null;
	this.bracketDir = new _vec2.default(1, 0);
	this.areas = [];

	this.highlight = false;
	this.highlighting = null;
	this.selected = false;
	this.selectionPlate = null;

	this.atoms = [];
	this.patoms = [];
	this.bonds = [];
	this.xBonds = [];
	this.neiAtoms = [];
	this.pp = null;
	this.data = {
		mul: 1, // multiplication count for MUL group
		connectivity: 'ht', // head-to-head, head-to-tail or either-unknown
		name: '',
		subscript: 'n',

		// data s-group fields
		attached: false,
		absolute: true,
		showUnits: false,
		nCharsToDisplay: -1,
		tagChar: '',
		daspPos: 1,
		fieldType: 'F',
		fieldName: '',
		fieldValue: '',
		units: '',
		query: '',
		queryOp: ''
	};
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

SGroup.TYPES = {
	MUL: 1,
	SRU: 2,
	SUP: 3,
	DAT: 4,
	GEN: 5
};

// TODO: these methods should be overridden
//      and should only accept valid attributes for each S-group type.
//      The attributes should be accessed via these methods only and not directly through this.data.
// stub
SGroup.prototype.getAttr = function (attr) {
	return this.data[attr];
};

// TODO: should be group-specific
SGroup.prototype.getAttrs = function () {
	var _this = this;

	var attrs = {};
	Object.keys(this.data).forEach(function (attr) {
		attrs[attr] = _this.data[attr];
	});
	return attrs;
};

// stub
SGroup.prototype.setAttr = function (attr, value) {
	var oldValue = this.data[attr];
	this.data[attr] = value;
	return oldValue;
};

// stub
SGroup.prototype.checkAttr = function (attr, value) {
	return this.data[attr] == value;
};

// SGroup.numberArrayToString = function (numbers, map) {
// 	var str = util.stringPadded(numbers.length, 3);
// 	for (var i = 0; i < numbers.length; ++i) {
// 		str += ' ' + util.stringPadded(map[numbers[i]], 3);
// 	}
// 	return str;
// };

SGroup.filterAtoms = function (atoms, map) {
	var newAtoms = [];
	for (var i = 0; i < atoms.length; ++i) {
		var aid = atoms[i];
		if (typeof map[aid] !== 'number') newAtoms.push(aid);else if (map[aid] >= 0) newAtoms.push(map[aid]);else newAtoms.push(-1);
	}
	return newAtoms;
};

SGroup.removeNegative = function (atoms) {
	var newAtoms = [];
	for (var j = 0; j < atoms.length; ++j) {
		if (atoms[j] >= 0) newAtoms.push(atoms[j]);
	}
	return newAtoms;
};

SGroup.filter = function (mol, sg, atomMap) {
	sg.atoms = SGroup.removeNegative(SGroup.filterAtoms(sg.atoms, atomMap));
};

/**
 * @param sgroup
 * @param aidMap < Map<number, number> }
 * @returns { SGroup }
 */
SGroup.clone = function (sgroup, aidMap) {
	var cp = new SGroup(sgroup.type);

	Object.keys(sgroup.data).forEach(function (field) {
		cp.data[field] = sgroup.data[field];
	});

	cp.atoms = sgroup.atoms.map(function (elem) {
		return aidMap.get(elem);
	});
	cp.pp = sgroup.pp;
	cp.bracketBox = sgroup.bracketBox;
	cp.patoms = null;
	cp.bonds = null;
	cp.allAtoms = sgroup.allAtoms;
	return cp;
};

SGroup.addAtom = function (sgroup, aid) {
	sgroup.atoms.push(aid);
};

SGroup.removeAtom = function (sgroup, aid) {
	for (var i = 0; i < sgroup.atoms.length; ++i) {
		if (sgroup.atoms[i] === aid) {
			sgroup.atoms.splice(i, 1);
			return;
		}
	}
	console.error('The atom is not found in the given s-group');
};

/**
 * @param inBonds
 * @param xBonds
 * @param mol
 * @param parentAtomSet { Pile<number> }
 */
SGroup.getCrossBonds = function (inBonds, xBonds, mol, parentAtomSet) {
	mol.bonds.forEach(function (bond, bid) {
		if (parentAtomSet.has(bond.begin) && parentAtomSet.has(bond.end)) {
			if (inBonds !== null) inBonds.push(bid);
		} else if (parentAtomSet.has(bond.begin) || parentAtomSet.has(bond.end)) {
			if (xBonds !== null) xBonds.push(bid);
		}
	});
};

SGroup.bracketPos = function (sg, mol, xbonds) {
	// eslint-disable-line max-statements
	var atoms = sg.atoms;
	if (!xbonds || xbonds.length !== 2) {
		sg.bracketDir = new _vec2.default(1, 0);
	} else {
		var p1 = mol.bonds.get(xbonds[0]).getCenter(mol);
		var p2 = mol.bonds.get(xbonds[1]).getCenter(mol);
		sg.bracketDir = _vec2.default.diff(p2, p1).normalized();
	}
	var d = sg.bracketDir;

	var bb = null;
	var contentBoxes = [];
	atoms.forEach(function (aid) {
		var atom = mol.atoms.get(aid);
		var pos = new _vec2.default(atom.pp);
		var ext = new _vec2.default(0.05 * 3, 0.05 * 3);
		var bba = new _box2abs2.default(pos, pos).extend(ext, ext);
		contentBoxes.push(bba);
	});
	contentBoxes.forEach(function (bba) {
		var bbb = null;
		[bba.p0.x, bba.p1.x].forEach(function (x) {
			[bba.p0.y, bba.p1.y].forEach(function (y) {
				var v = new _vec2.default(x, y);
				var p = new _vec2.default(_vec2.default.dot(v, d), _vec2.default.dot(v, d.rotateSC(1, 0)));
				bbb = bbb === null ? new _box2abs2.default(p, p) : bbb.include(p);
			});
		});
		bb = bb === null ? bbb : _box2abs2.default.union(bb, bbb);
	});
	var vext = new _vec2.default(0.2, 0.4);
	if (bb !== null) bb = bb.extend(vext, vext);
	sg.bracketBox = bb;
};

/**
 * @param mol
 * @param xbonds
 * @param atomSet { Pile<number> }
 * @param bb
 * @param d
 * @param n
 * @returns { Array }
 */
SGroup.getBracketParameters = function (mol, xbonds, atomSet, bb, d, n) {
	// eslint-disable-line max-params
	function BracketParams(c, d, w, h) {
		this.c = c;
		this.d = d;
		this.n = d.rotateSC(1, 0);
		this.w = w;
		this.h = h;
	}
	var brackets = [];
	if (xbonds.length < 2) {
		(function () {
			d = d || new _vec2.default(1, 0);
			n = n || d.rotateSC(1, 0);
			var bracketWidth = Math.min(0.25, bb.sz().x * 0.3);
			var cl = _vec2.default.lc2(d, bb.p0.x, n, 0.5 * (bb.p0.y + bb.p1.y));
			var cr = _vec2.default.lc2(d, bb.p1.x, n, 0.5 * (bb.p0.y + bb.p1.y));
			var bracketHeight = bb.sz().y;

			brackets.push(new BracketParams(cl, d.negated(), bracketWidth, bracketHeight), new BracketParams(cr, d, bracketWidth, bracketHeight));
		})();
	} else if (xbonds.length === 2) {
		(function () {
			// eslint-disable-line max-statements
			var b1 = mol.bonds.get(xbonds[0]);
			var b2 = mol.bonds.get(xbonds[1]);
			var cl0 = b1.getCenter(mol);
			var cr0 = b2.getCenter(mol);
			var dr = _vec2.default.diff(cr0, cl0).normalized();
			var dl = dr.negated();

			var bracketWidth = 0.25;
			var bracketHeight = 1.5;
			brackets.push(new BracketParams(cl0.addScaled(dl, 0), dl, bracketWidth, bracketHeight), new BracketParams(cr0.addScaled(dr, 0), dr, bracketWidth, bracketHeight));
		})();
	} else {
		(function () {
			for (var i = 0; i < xbonds.length; ++i) {
				var b = mol.bonds.get(xbonds[i]);
				var c = b.getCenter(mol);
				var d = atomSet.has(b.begin) ? b.getDir(mol) : b.getDir(mol).negated();
				brackets.push(new BracketParams(c, d, 0.2, 1.0));
			}
		})();
	}
	return brackets;
};

SGroup.getObjBBox = function (atoms, mol) {
	console.assert(atoms.length != 0, 'Atom list is empty');

	var a0 = mol.atoms.get(atoms[0]).pp;
	var bb = new _box2abs2.default(a0, a0);
	for (var i = 1; i < atoms.length; ++i) {
		var aid = atoms[i];
		var atom = mol.atoms.get(aid);
		var p = atom.pp;
		bb = bb.include(p);
	}
	return bb;
};

SGroup.getAtoms = function (mol, sg) {
	/* shoud we use prototype? */
	if (!sg.allAtoms) return sg.atoms;
	var atoms = [];
	mol.atoms.forEach(function (atom, aid) {
		atoms.push(aid);
	});
	return atoms;
};

SGroup.getBonds = function (mol, sg) {
	var atoms = SGroup.getAtoms(mol, sg);
	var bonds = [];
	mol.bonds.forEach(function (bond, bid) {
		if (atoms.indexOf(bond.begin) >= 0 && atoms.indexOf(bond.end) >= 0) bonds.push(bid);
	});
	return bonds;
};

SGroup.prepareMulForSaving = function (sgroup, mol) {
	// eslint-disable-line max-statements
	sgroup.atoms.sort(function (a, b) {
		return a - b;
	});
	sgroup.atomSet = new _pile2.default(sgroup.atoms);
	sgroup.parentAtomSet = new _pile2.default(sgroup.atomSet);
	var inBonds = [];
	var xBonds = [];

	mol.bonds.forEach(function (bond, bid) {
		if (sgroup.parentAtomSet.has(bond.begin) && sgroup.parentAtomSet.has(bond.end)) inBonds.push(bid);else if (sgroup.parentAtomSet.has(bond.begin) || sgroup.parentAtomSet.has(bond.end)) xBonds.push(bid);
	});

	if (xBonds.length !== 0 && xBonds.length !== 2) throw Error('Unsupported cross-bonds number');

	var xAtom1 = -1;
	var xAtom2 = -1;
	var crossBond = null;
	if (xBonds.length === 2) {
		var bond1 = mol.bonds.get(xBonds[0]);
		xAtom1 = sgroup.parentAtomSet.has(bond1.begin) ? bond1.begin : bond1.end;

		var bond2 = mol.bonds.get(xBonds[1]);
		xAtom2 = sgroup.parentAtomSet.has(bond2.begin) ? bond2.begin : bond2.end;
		crossBond = bond2;
	}

	var amap = null;
	var tailAtom = xAtom2;

	var newAtoms = [];
	for (var j = 0; j < sgroup.data.mul - 1; j++) {
		amap = {};
		sgroup.atoms.forEach(function (aid) {
			var atom = mol.atoms.get(aid);
			var aid2 = mol.atoms.add(new _atom2.default(atom));
			newAtoms.push(aid2);
			sgroup.atomSet.add(aid2);
			amap[aid] = aid2;
		});
		inBonds.forEach(function (bid) {
			var bond = mol.bonds.get(bid);
			var newBond = new _bond2.default(bond);
			newBond.begin = amap[newBond.begin];
			newBond.end = amap[newBond.end];
			mol.bonds.add(newBond);
		});
		if (crossBond !== null) {
			var newCrossBond = new _bond2.default(crossBond);
			newCrossBond.begin = tailAtom;
			newCrossBond.end = amap[xAtom1];
			mol.bonds.add(newCrossBond);
			tailAtom = amap[xAtom2];
		}
	}
	if (tailAtom >= 0) {
		var xBond2 = mol.bonds.get(xBonds[1]);
		if (xBond2.begin === xAtom2) xBond2.begin = tailAtom;else xBond2.end = tailAtom;
	}
	sgroup.bonds = xBonds;

	newAtoms.forEach(function (aid) {
		mol.sGroupForest.getPathToRoot(sgroup.id).reverse().forEach(function (sgid) {
			mol.atomAddToSGroup(sgid, aid);
		});
	});
};

SGroup.getMassCentre = function (mol, atoms) {
	var c = new _vec2.default(); // mass centre
	for (var i = 0; i < atoms.length; ++i) {
		c = c.addScaled(mol.atoms.get(atoms[i]).pp, 1.0 / atoms.length);
	}return c;
};

exports.default = SGroup;

},{"../../util/box2abs":682,"../../util/pile":683,"../../util/vec2":686,"./atom":534,"./bond":536}],541:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * Copyright 2018 EPAM Systems

icensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
ou may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
ee the License for the specific language governing permissions and
limitations under the License.


exports.fromAromaticTemplateOnBond = fromAromaticTemplateOnBond;

var _molfile = require('../../chem/molfile');

var _molfile2 = _interopRequireDefault(_molfile);

var _struct = require('../../chem/struct');

var _op = require('../shared/op');

var _op2 = _interopRequireDefault(_op);

var _action = require('../shared/action');

var _action2 = _interopRequireDefault(_action);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @param restruct { ReStruct }
 * @param events { Array<PipelineSubscription> }
 * @param bid { number }
 * @param template {{
 * 		molecule: Struct,
 * 		bid: number
 *  }}
 * @param simpleFusing { Function }
 * @returns { Promise }
 */
function fromAromaticTemplateOnBond(restruct, template, bid, events, simpleFusing) {
	var tmpl = template.molecule;
	var struct = restruct.molecule;

	var frid = struct.getBondFragment(bid);
	var beforeMerge = getFragmentWithBondMap(struct, frid);
	var afterMerge = null;
	var pasteItems = null;

	var action = new _action2.default();

	if (!canBeAromatized(beforeMerge.frag) || !canBeAromatized(tmpl)) {
		action = simpleFusing(restruct, template, bid);
		return Promise.resolve(action);
	}

	return Promise.all([events.aromatizeStruct.dispatch(beforeMerge.frag).then(function (res) {
		return _molfile2.default.parse(res.struct);
	}), events.aromatizeStruct.dispatch(tmpl).then(function (res) {
		return _molfile2.default.parse(res.struct);
	})]).then(function (_ref) {
		var _ref2 = _slicedToArray(_ref, 2),
		    astruct = _ref2[0],
		    atmpl = _ref2[1];

		// aromatize restruct fragment
		var aromatizeAction = fromAromatize(restruct, astruct, beforeMerge.bondMap);
		// merge template with fragment
		var aromTemplate = { bid: template.bid, molecule: atmpl };
		var templateFusingAction = simpleFusing(restruct, aromTemplate, bid);
		pasteItems = templateFusingAction[1];

		action = templateFusingAction[0].mergeWith(aromatizeAction);

		afterMerge = getFragmentWithBondMap(restruct.molecule, frid);

		return events.dearomatizeStruct.dispatch(afterMerge.frag).then(function (res) {
			return _molfile2.default.parse(res.struct);
		});
	}).then(function (destruct) {
		destruct.bonds.forEach(function (bond) {
			if (bond.type === _struct.Bond.PATTERN.TYPE.AROMATIC) throw Error('Bad dearomatize');
		});

		// dearomatize restruct fragment
		var dearomatizeAction = fromDearomatize(restruct, destruct, afterMerge.bondMap);
		action = dearomatizeAction.mergeWith(action);

		return [action, pasteItems];
	}).catch(function (err) {
		console.info(err.message);
		action.perform(restruct); // revert actions if error

		return simpleFusing(restruct, template, bid);
	});
}

function fromAromatize(restruct, astruct, bondMap) {
	var action = new _action2.default();

	astruct.bonds.forEach(function (bond, bid) {
		if (bond.type !== _struct.Bond.PATTERN.TYPE.AROMATIC) return;
		action.addOp(new _op2.default.BondAttr(bondMap.get(bid), 'type', _struct.Bond.PATTERN.TYPE.AROMATIC).perform(restruct));
	});

	return action;
}

/**
 * @param restruct { ReStruct }
 * @param dastruct { ReStruct }
 * @param bondMap { Map<number, number> }
 * @returns { Action }
 */
function fromDearomatize(restruct, dastruct, bondMap) {
	var action = new _action2.default();

	dastruct.bonds.forEach(function (bond, bid) {
		action.addOp(new _op2.default.BondAttr(bondMap.get(bid), 'type', bond.type).perform(restruct));
	});

	return action;
}

/* UTILS */

function canBeAromatized(struct) {
	// TODO correct this checking && move to chem.Struct ??
	if (struct.loops.size === 0) struct.prepareLoopStructure();

	var hasAromLoop = struct.loops.find(function (id, loop) {
		return loop.aromatic;
	});
	if (struct.loops.size === 0 || hasAromLoop) return false;

	var correctDblBonds = struct.loops.find(function (id, loop) {
		return loop.dblBonds === loop.hbs.length / 2;
	});

	return correctDblBonds !== undefined;
}

/**
 * @param struct { Struct }
 * @param frid { number }
 * @returns {{
 * 		frag: Struct,
 * 		bondMap: Map<number, number>
 *  }}
 */
function getFragmentWithBondMap(struct, frid) {
	var atomSet = struct.getFragmentIds(frid);
	var atomsInStruct = Array.from(atomSet);

	var frag = struct.clone(atomSet);
	var bondMap = new Map();
	frag.bonds.forEach(function (bond, bid) {
		bondMap.set(bid, struct.findBondId(atomsInStruct[bond.begin], atomsInStruct[bond.end]));
	});

	return { frag: frag, bondMap: bondMap };
}

},{"../../chem/molfile":523,"../../chem/struct":537,"../shared/action":557,"../shared/op":560}],542:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _without2 = require('lodash/fp/without');

var _without3 = _interopRequireDefault(_without2);

exports.fromAtomAddition = fromAtomAddition;
exports.fromAtomDeletion = fromAtomDeletion;
exports.fromAtomsAttrs = fromAtomsAttrs;
exports.fromAtomMerge = fromAtomMerge;
exports.mergeFragmentsIfNeeded = mergeFragmentsIfNeeded;
exports.mergeSgroups = mergeSgroups;

var _struct = require('../../chem/struct');

var _op = require('../shared/op');

var _op2 = _interopRequireDefault(_op);

var _action = require('../shared/action');

var _action2 = _interopRequireDefault(_action);

var _utils = require('./utils');

var _sgroup = require('./sgroup');

var _rgroup = require('./rgroup');

var _fragment = require('./fragment');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function fromAtomAddition(restruct, pos, atom) {
	atom = Object.assign({}, atom);
	var action = new _action2.default();
	atom.fragment = action.addOp(new _op2.default.FragmentAdd().perform(restruct)).frid;
	action.addOp(new _op2.default.AtomAdd(atom, pos).perform(restruct));
	return action;
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/
function fromAtomDeletion(restruct, id) {
	var action = new _action2.default();
	var atomsToRemove = [];

	var frid = restruct.molecule.atoms.get(id).fragment;

	(0, _utils.atomGetNeighbors)(restruct, id).forEach(function (nei) {
		action.addOp(new _op2.default.BondDelete(nei.bid)); // [RB] !!

		if ((0, _utils.atomGetDegree)(restruct, nei.aid) !== 1) return;

		if ((0, _sgroup.removeAtomFromSgroupIfNeeded)(action, restruct, nei.aid)) atomsToRemove.push(nei.aid);

		action.addOp(new _op2.default.AtomDelete(nei.aid));
	});

	if ((0, _sgroup.removeAtomFromSgroupIfNeeded)(action, restruct, id)) atomsToRemove.push(id);

	action.addOp(new _op2.default.AtomDelete(id));

	(0, _sgroup.removeSgroupIfNeeded)(action, restruct, atomsToRemove);

	action = action.perform(restruct);

	action.mergeWith((0, _fragment.fromFragmentSplit)(restruct, frid));

	return action;
}

/**
 * @param restruct { ReStruct }
 * @param ids { Array<number>|number }
 * @param attrs { object }
 * @param reset { boolean? }
 */
function fromAtomsAttrs(restruct, ids, attrs, reset) {
	var action = new _action2.default();
	var aids = Array.isArray(ids) ? ids : [ids];

	aids.forEach(function (aid) {
		Object.keys(_struct.Atom.attrlist).forEach(function (key) {
			if (key === 'attpnt' && !(key in attrs)) return;
			if (!(key in attrs) && !reset) return;

			var value = key in attrs ? attrs[key] : _struct.Atom.attrGetDefault(key);
			action.addOp(new _op2.default.AtomAttr(aid, key, value));
		});

		if (!reset && 'label' in attrs && attrs.label !== null && attrs.label !== 'L#' && !attrs['atomList']) action.addOp(new _op2.default.AtomAttr(aid, 'atomList', null));
	});

	return action.perform(restruct);
}

/**
 * @param restruct { ReStruct }
 * @param srcId { number }
 * @param dstId { number }
 * @return { Action }
 */
function fromAtomMerge(restruct, srcId, dstId) {
	if (srcId === dstId) return new _action2.default();

	var fragAction = new _action2.default();
	mergeFragmentsIfNeeded(fragAction, restruct, srcId, dstId);

	var action = new _action2.default();

	(0, _utils.atomGetNeighbors)(restruct, srcId).forEach(function (nei) {
		var bond = restruct.molecule.bonds.get(nei.bid);

		if (dstId === bond.begin || dstId === bond.end) {
			// src & dst have one nei
			action.addOp(new _op2.default.BondDelete(nei.bid));
			return;
		}

		var begin = bond.begin === nei.aid ? nei.aid : dstId;
		var end = bond.begin === nei.aid ? dstId : nei.aid;

		var mergeBondId = restruct.molecule.findBondId(begin, end);

		if (mergeBondId === null) {
			action.addOp(new _op2.default.BondAdd(begin, end, bond));
		} else {
			// replace old bond with new bond
			var _attrs = _struct.Bond.getAttrHash(bond);
			Object.keys(_attrs).forEach(function (key) {
				action.addOp(new _op2.default.BondAttr(mergeBondId, key, _attrs[key]));
			});
		}

		action.addOp(new _op2.default.BondDelete(nei.bid));
	});

	var attrs = _struct.Atom.getAttrHash(restruct.molecule.atoms.get(srcId));

	if ((0, _utils.atomGetDegree)(restruct, srcId) === 1 && attrs['label'] === '*') attrs['label'] = 'C';

	Object.keys(attrs).forEach(function (key) {
		action.addOp(new _op2.default.AtomAttr(dstId, key, attrs[key]));
	});

	var sgChanged = (0, _sgroup.removeAtomFromSgroupIfNeeded)(action, restruct, srcId);

	if (sgChanged) (0, _sgroup.removeSgroupIfNeeded)(action, restruct, [srcId]);

	action.addOp(new _op2.default.AtomDelete(srcId));

	return action.perform(restruct).mergeWith(fragAction);
}

function mergeFragmentsIfNeeded(action, restruct, srcId, dstId) {
	var frid = (0, _utils.atomGetAttr)(restruct, srcId, 'fragment');
	var frid2 = (0, _utils.atomGetAttr)(restruct, dstId, 'fragment');
	if (frid2 === frid || typeof frid2 !== 'number') return;

	var struct = restruct.molecule;

	var rgid = _struct.RGroup.findRGroupByFragment(struct.rgroups, frid2);
	if (!(typeof rgid === 'undefined')) {
		action.mergeWith((0, _rgroup.fromRGroupFragment)(restruct, null, frid2)).mergeWith((0, _rgroup.fromUpdateIfThen)(restruct, 0, rgid));
	}

	var fridAtoms = struct.getFragmentIds(frid);

	struct.atoms.forEach(function (atom, aid) {
		if (atom.fragment === frid2) action.addOp(new _op2.default.AtomAttr(aid, 'fragment', frid).perform(restruct));
	});

	mergeSgroups(action, restruct, fridAtoms, dstId);
	action.addOp(new _op2.default.FragmentDelete(frid2).perform(restruct));
}

function mergeSgroups(action, restruct, srcAtoms, dstAtom) {
	var sgroups = (0, _utils.atomGetSGroups)(restruct, dstAtom);

	sgroups.forEach(function (sid) {
		var sgroup = restruct.molecule.sgroups.get(sid);
		var notExpandedContexts = ['Atom', 'Bond', 'Group'];
		if (sgroup.type === 'DAT' && notExpandedContexts.includes(sgroup.data.context)) return;
		var atomsToSgroup = (0, _without3.default)(sgroup.atoms, srcAtoms);
		atomsToSgroup.forEach(function (aid) {
			return action.addOp(new _op2.default.SGroupAtomAdd(sid, aid).perform(restruct));
		});
	});
}

},{"../../chem/struct":537,"../shared/action":557,"../shared/op":560,"./fragment":548,"./rgroup":551,"./sgroup":553,"./utils":555,"lodash/fp/without":437}],543:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromNewCanvas = fromNewCanvas;
exports.fromDescriptorsAlign = fromDescriptorsAlign;

var _op = require('../shared/op');

var _op2 = _interopRequireDefault(_op);

var _action = require('../shared/action');

var _action2 = _interopRequireDefault(_action);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function fromNewCanvas(restruct, struct) {
  var action = new _action2.default();

  action.addOp(new _op2.default.CanvasLoad(struct));
  return action.perform(restruct);
}

function fromDescriptorsAlign(restruct) {
  var action = new _action2.default();
  action.addOp(new _op2.default.AlignDescriptors(restruct));
  return action.perform(restruct);
}

},{"../shared/action":557,"../shared/op":560}],544:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.fromBondAddition = fromBondAddition;
exports.fromBondDeletion = fromBondDeletion;
exports.fromBondsAttrs = fromBondsAttrs;
exports.fromBondsMerge = fromBondsMerge;
exports.bondChangingAction = bondChangingAction;

var _struct = require('../../chem/struct');

var _op = require('../shared/op');

var _op2 = _interopRequireDefault(_op);

var _utils = require('../shared/utils');

var _utils2 = _interopRequireDefault(_utils);

var _action = require('../shared/action');

var _action2 = _interopRequireDefault(_action);

var _utils3 = require('./utils');

var _atom = require('./atom');

var _sgroup = require('./sgroup');

var _fragment = require('./fragment');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function fromBondAddition(restruct, bond, begin, end, pos, pos2) {
	// eslint-disable-line
	if (end === undefined) {
		var atom = (0, _utils3.atomForNewBond)(restruct, begin);
		end = atom.atom;
		pos = atom.pos;
	}
	var action = new _action2.default();

	var frid = null;

	if (!(typeof begin === 'number')) {
		if (typeof end === 'number') frid = (0, _utils3.atomGetAttr)(restruct, end, 'fragment');
	} else {
		frid = (0, _utils3.atomGetAttr)(restruct, begin, 'fragment');
		if (typeof end === 'number') (0, _atom.mergeFragmentsIfNeeded)(action, restruct, begin, end);
	}

	if (frid == null) frid = action.addOp(new _op2.default.FragmentAdd().perform(restruct)).frid;

	if (!(typeof begin === 'number')) {
		begin.fragment = frid;
		begin = action.addOp(new _op2.default.AtomAdd(begin, pos).perform(restruct)).data.aid;
		if (typeof end === 'number') (0, _atom.mergeSgroups)(action, restruct, [begin], end);
		pos = pos2;
	} else if ((0, _utils3.atomGetAttr)(restruct, begin, 'label') === '*') {
		action.addOp(new _op2.default.AtomAttr(begin, 'label', 'C').perform(restruct));
	}

	if (!(typeof end === 'number')) {
		end.fragment = frid;
		// TODO: <op>.data.aid here is a hack, need a better way to access the id of a created atom
		end = action.addOp(new _op2.default.AtomAdd(end, pos).perform(restruct)).data.aid;
		if (typeof begin === 'number') (0, _atom.mergeSgroups)(action, restruct, [end], begin);
	} else if ((0, _utils3.atomGetAttr)(restruct, end, 'label') === '*') {
		action.addOp(new _op2.default.AtomAttr(end, 'label', 'C').perform(restruct));
	}

	var bid = action.addOp(new _op2.default.BondAdd(begin, end, bond).perform(restruct)).data.bid;
	action.operations.reverse();

	return [action, begin, end, bid];
}

function fromBondDeletion(restruct, id) {
	var action = new _action2.default();
	var bond = restruct.molecule.bonds.get(id);
	var frid = restruct.molecule.atoms.get(bond.begin).fragment;
	var atomsToRemove = [];

	action.addOp(new _op2.default.BondDelete(id));

	if ((0, _utils3.atomGetDegree)(restruct, bond.begin) === 1) {
		if ((0, _sgroup.removeAtomFromSgroupIfNeeded)(action, restruct, bond.begin)) atomsToRemove.push(bond.begin);

		action.addOp(new _op2.default.AtomDelete(bond.begin));
	}

	if ((0, _utils3.atomGetDegree)(restruct, bond.end) === 1) {
		if ((0, _sgroup.removeAtomFromSgroupIfNeeded)(action, restruct, bond.end)) atomsToRemove.push(bond.end);

		action.addOp(new _op2.default.AtomDelete(bond.end));
	}

	(0, _sgroup.removeSgroupIfNeeded)(action, restruct, atomsToRemove);

	action = action.perform(restruct);

	action.mergeWith((0, _fragment.fromFragmentSplit)(restruct, frid));

	return action;
}

/**
 * @param restruct { ReStruct }
 * @param ids { Array<number>|number }
 * @param attrs { Bond }
 * @param reset? { boolean }
 */
function fromBondsAttrs(restruct, ids, attrs, reset) {
	var action = new _action2.default();
	var bids = Array.isArray(ids) ? ids : [ids];

	bids.forEach(function (bid) {
		Object.keys(_struct.Bond.attrlist).forEach(function (key) {
			if (!(key in attrs) && !reset) return;

			var value = key in attrs ? attrs[key] : _struct.Bond.attrGetDefault(key);
			action.addOp(new _op2.default.BondAttr(bid, key, value));
		});
	});

	return action.perform(restruct);
}

/**
 * @param restruct { ReStruct }
 * @param mergeMap { Map<number, number> }
 */
function fromBondsMerge(restruct, mergeMap) {
	var struct = restruct.molecule;

	var atomPairs = new Map();
	var action = new _action2.default();

	mergeMap.forEach(function (dstId, srcId) {
		var bond = struct.bonds.get(srcId);
		var bondCI = struct.bonds.get(dstId);

		var params = _utils2.default.mergeBondsParams(struct, bond, struct, bondCI);
		if (!params.merged) return;

		atomPairs.set(bond.begin, !params.cross ? bondCI.begin : bondCI.end);
		atomPairs.set(bond.end, !params.cross ? bondCI.end : bondCI.begin);
	});

	atomPairs.forEach(function (dst, src) {
		action = (0, _atom.fromAtomMerge)(restruct, src, dst).mergeWith(action);
	});

	return action;
}

function fromBondFlipping(restruct, id) {
	var bond = restruct.molecule.bonds.get(id);

	var action = new _action2.default();
	action.addOp(new _op2.default.BondDelete(id));
	action.addOp(new _op2.default.BondAdd(bond.end, bond.begin, bond)).data.bid = id;
	return action.perform(restruct);
}

/**
 * @param restruct { ReStruct }
 * @param itemID - bond id in structure
 * @param bond - bond for change
 * @param bondProps - bondTool properties
 * @returns Action
 */
function bondChangingAction(restruct, itemID, bond, bondProps) {
	if (bondProps.stereo !== _struct.Bond.PATTERN.STEREO.NONE && //
	bondProps.type === _struct.Bond.PATTERN.TYPE.SINGLE && bond.type === bondProps.type && bond.stereo === bondProps.stereo)
		// if bondTool is stereo and equal to bond for change
		return fromBondFlipping(restruct, itemID);

	var loop = plainBondTypes.includes(bondProps.type) ? plainBondTypes : null;
	if (bondProps.stereo === _struct.Bond.PATTERN.STEREO.NONE && bondProps.type === _struct.Bond.PATTERN.TYPE.SINGLE && bond.stereo === _struct.Bond.PATTERN.STEREO.NONE && loop)
		// if `Single bond` tool is chosen and bond for change in `plainBondTypes`
		bondProps.type = loop[(loop.indexOf(bond.type) + 1) % loop.length];

	var isFlip = bondFlipRequired(restruct.molecule, bond, bondProps);
	var action = isFlip ? fromBondFlipping(restruct, itemID) : new _action2.default();

	return fromBondsAttrs(restruct, itemID, bondProps).mergeWith(action);
}

function bondFlipRequired(struct, bond, attrs) {
	return attrs.type === _struct.Bond.PATTERN.TYPE.SINGLE && bond.stereo === _struct.Bond.PATTERN.STEREO.NONE && attrs.stereo !== _struct.Bond.PATTERN.STEREO.NONE && struct.atoms.get(bond.begin).neighbors.length < struct.atoms.get(bond.end).neighbors.length;
}

var plainBondTypes = [_struct.Bond.PATTERN.TYPE.SINGLE, _struct.Bond.PATTERN.TYPE.DOUBLE, _struct.Bond.PATTERN.TYPE.TRIPLE];

},{"../../chem/struct":537,"../shared/action":557,"../shared/op":560,"../shared/utils":561,"./atom":542,"./fragment":548,"./sgroup":553,"./utils":555}],545:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.fromChain = fromChain;

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _op = require('../shared/op');

var _op2 = _interopRequireDefault(_op);

var _action = require('../shared/action');

var _action2 = _interopRequireDefault(_action);

var _utils = require('./utils');

var _bond = require('./bond');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function fromChain(restruct, p0, v, nSect, atomId) {
	// eslint-disable-line max-params
	var dx = Math.cos(Math.PI / 6);
	var dy = Math.sin(Math.PI / 6);

	var action = new _action2.default();

	var frid = atomId !== null ? (0, _utils.atomGetAttr)(restruct, atomId, 'fragment') : action.addOp(new _op2.default.FragmentAdd().perform(restruct)).frid;

	var chainItems = {
		atoms: [],
		bonds: []
	};

	var id0 = atomId !== null ? atomId : action.addOp(new _op2.default.AtomAdd({ label: 'C', fragment: frid }, p0).perform(restruct)).data.aid;

	chainItems.atoms.push(id0);
	action.operations.reverse();

	for (var i = 0; i < nSect; i++) {
		var pos = new _vec2.default(dx * (i + 1), i & 1 ? 0 : dy).rotate(v).add(p0);

		var ret = (0, _bond.fromBondAddition)(restruct, {}, id0, {}, pos);
		action = ret[0].mergeWith(action);
		id0 = ret[2];
		chainItems.bonds.push(ret[3]);
		chainItems.atoms.push(id0);
	}

	return [action, chainItems];
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

},{"../../util/vec2":686,"../shared/action":557,"../shared/op":560,"./bond":544,"./utils":555}],546:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromChiralFlagAddition = fromChiralFlagAddition;
exports.fromChiralFlagDeletion = fromChiralFlagDeletion;

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _op = require('../shared/op');

var _op2 = _interopRequireDefault(_op);

var _action = require('../shared/action');

var _action2 = _interopRequireDefault(_action);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function fromChiralFlagAddition(restruct, pos) {
  // eslint-disable-line no-unused-vars
  var action = new _action2.default();
  var struct = restruct.molecule;
  if (restruct.chiralFlags.size < 1) {
    if (!pos) {
      var bb = struct.getCoordBoundingBox();
      var posY = !struct.isBlank() ? bb.min.y - 1 : bb.min.y + 1;
      pos = new _vec2.default(bb.max.x, posY);
    }
    action.addOp(new _op2.default.ChiralFlagAdd(pos).perform(restruct));
  }
  return action;
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

function fromChiralFlagDeletion(restruct) {
  var action = new _action2.default();
  action.addOp(new _op2.default.ChiralFlagDelete());
  return action.perform(restruct);
}

},{"../../util/vec2":686,"../shared/action":557,"../shared/op":560}],547:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.fromItemsFuse = fromItemsFuse;
exports.getItemsToFuse = getItemsToFuse;
exports.getHoverToFuse = getHoverToFuse;

var _action = require('../shared/action');

var _action2 = _interopRequireDefault(_action);

var _utils = require('../shared/utils');

var _utils2 = _interopRequireDefault(_utils);

var _bond = require('./bond');

var _atom = require('./atom');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function fromItemsFuse(restruct, items) {
	var action = new _action2.default();

	if (!items) return action;

	var usedAtoms = new Set();

	// merge single atoms
	items.atoms.forEach(function (dst, src) {
		if (usedAtoms.has(dst) || usedAtoms.has(src)) return;

		action = (0, _atom.fromAtomMerge)(restruct, src, dst).mergeWith(action);
		usedAtoms.add(dst).add(src);
	});

	// merge bonds
	action = (0, _bond.fromBondsMerge)(restruct, items.bonds).mergeWith(action);

	return action;
}

function getItemsToFuse(editor, items) {
	var struct = editor.render.ctab.molecule;

	var mergeItems = items || {
		atoms: Array.from(struct.atoms.keys()),
		bonds: Array.from(struct.bonds.keys())
	};

	return closestToMerge(struct, editor.findMerge(mergeItems, ['atoms', 'bonds']));
}

function getHoverToFuse(items) {
	if (!items) return null;

	var hoverItems = {
		atoms: Array.from(items.atoms.values()),
		bonds: Array.from(items.bonds.values())
	};

	return { map: 'merge', id: +Date.now(), items: hoverItems };
}

/**
 * @param struct
 * @param closestMap {{
 * 		atoms: Map<number, number>,
 * 		bonds: Map<number, number>
 * }}
 * @return {{
 * 		atoms: Map<number, number>,
 * 		bonds: Map<number, number>
 * }}
 */
function closestToMerge(struct, closestMap) {
	var mergeMap = {
		atoms: new Map(closestMap.atoms),
		bonds: new Map(closestMap.bonds)
	};

	closestMap.bonds.forEach(function (dstId, srcId) {
		var bond = struct.bonds.get(srcId);
		var bondCI = struct.bonds.get(dstId);

		if (_utils2.default.mergeBondsParams(struct, bond, struct, bondCI).merged) {
			mergeMap.atoms.delete(bond.begin);
			mergeMap.atoms.delete(bond.end);
		} else {
			mergeMap.bonds.delete(srcId);
		}
	});

	if (mergeMap.atoms.size === 0 && mergeMap.bonds.size === 0) return null;

	return mergeMap;
}

},{"../shared/action":557,"../shared/utils":561,"./atom":542,"./bond":544}],548:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.fromMultipleMove = fromMultipleMove;
exports.fromFragmentSplit = fromFragmentSplit;
exports.fromFragmentDeletion = fromFragmentDeletion;

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _pile = require('../../util/pile');

var _pile2 = _interopRequireDefault(_pile);

var _struct = require('../../chem/struct');

var _op = require('../shared/op');

var _op2 = _interopRequireDefault(_op);

var _action = require('../shared/action');

var _action2 = _interopRequireDefault(_action);

var _utils = require('./utils');

var _sgroup = require('./sgroup');

var _rgroup = require('./rgroup');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function fromMultipleMove(restruct, lists, d) {
	d = new _vec2.default(d);

	var action = new _action2.default();
	var struct = restruct.molecule;
	var loops = new _pile2.default();
	var atomsToInvalidate = new _pile2.default();

	if (lists.atoms) {
		var atomSet = new _pile2.default(lists.atoms);
		var bondlist = [];

		restruct.bonds.forEach(function (bond, bid) {
			if (atomSet.has(bond.b.begin) && atomSet.has(bond.b.end)) {
				bondlist.push(bid);
				// add all adjacent loops
				// those that are not completely inside the structure will get redrawn anyway
				['hb1', 'hb2'].forEach(function (hb) {
					var loop = struct.halfBonds.get(bond.b[hb]).loop;
					if (loop >= 0) loops.add(loop);
				});
				return;
			}

			if (atomSet.has(bond.b.begin)) {
				atomsToInvalidate.add(bond.b.begin);
				return;
			}

			if (atomSet.has(bond.b.end)) atomsToInvalidate.add(bond.b.end);
		});

		bondlist.forEach(function (bond) {
			action.addOp(new _op2.default.BondMove(bond, d));
		});

		loops.forEach(function (loopId) {
			if (restruct.reloops.get(loopId) && restruct.reloops.get(loopId).visel) // hack
				action.addOp(new _op2.default.LoopMove(loopId, d));
		});

		lists.atoms.forEach(function (aid) {
			action.addOp(new _op2.default.AtomMove(aid, d, !atomsToInvalidate.has(aid)));
		});

		if (lists.sgroupData && lists.sgroupData.length === 0) {
			var sgroups = (0, _utils.getRelSgroupsBySelection)(restruct, lists.atoms);
			sgroups.forEach(function (sg) {
				action.addOp(new _op2.default.SGroupDataMove(sg.id, d));
			});
		}
	}

	if (lists.rxnArrows) {
		lists.rxnArrows.forEach(function (rxnArrow) {
			action.addOp(new _op2.default.RxnArrowMove(rxnArrow, d, true));
		});
	}

	if (lists.rxnPluses) {
		lists.rxnPluses.forEach(function (rxnPulse) {
			action.addOp(new _op2.default.RxnPlusMove(rxnPulse, d, true));
		});
	}

	if (lists.sgroupData) {
		lists.sgroupData.forEach(function (sgData) {
			action.addOp(new _op2.default.SGroupDataMove(sgData, d));
		});
	}

	if (lists.chiralFlags && struct.isChiral) {
		lists.chiralFlags.forEach(function () {
			action.addOp(new _op2.default.ChiralFlagMove(d));
		});
	}

	return action.perform(restruct);
}

/**
 * @param restruct { ReStruct }
 * @param aid { number }
 * @param frid { number }
 * @param newfrid { number }
 * @returns { Action }
 */
function processAtom(restruct, aid, frid, newfrid) {
	var action = new _action2.default();
	var queue = [aid];
	var usedIds = new _pile2.default(queue);

	while (queue.length > 0) {
		var id = queue.shift();
		action.addOp(new _op2.default.AtomAttr(id, 'fragment', newfrid).perform(restruct));

		(0, _utils.atomGetNeighbors)(restruct, id).forEach(function (nei) {
			if (restruct.molecule.atoms.get(nei.aid).fragment === frid && !usedIds.has(nei.aid)) {
				usedIds.add(nei.aid);
				queue.push(nei.aid);
			}
		});
	}

	return action;
}

/**
 * @param restruct { ReStruct }
 * @param frid { number }
 * @param rgForRemove
 * @return { Action }
 */
// TODO [RB] the thing is too tricky :) need something else in future
function fromFragmentSplit(restruct, frid) {
	var rgForRemove = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

	var action = new _action2.default();
	var rgid = _struct.RGroup.findRGroupByFragment(restruct.molecule.rgroups, frid);

	restruct.molecule.atoms.forEach(function (atom, aid) {
		if (atom.fragment === frid) {
			var newfrid = action.addOp(new _op2.default.FragmentAdd().perform(restruct)).frid;

			action.mergeWith(processAtom(restruct, aid, frid, newfrid));

			if (rgid) action.mergeWith((0, _rgroup.fromRGroupFragment)(restruct, rgid, newfrid));
		}
	});

	if (frid !== -1) {
		action.mergeWith((0, _rgroup.fromRGroupFragment)(restruct, 0, frid));
		action.addOp(new _op2.default.FragmentDelete(frid).perform(restruct));
		action.mergeWith((0, _rgroup.fromUpdateIfThen)(restruct, 0, rgid, rgForRemove));
	}

	if (restruct.molecule.isChiral && restruct.molecule.frags.size === 0) action.addOp(new _op2.default.ChiralFlagDelete().perform(restruct));

	return action;
}

function fromFragmentDeletion(restruct, selection) {
	// eslint-disable-line max-statements
	console.assert(!!selection);
	var action = new _action2.default();
	var atomsToRemove = [];
	var frids = [];

	selection = { // TODO: refactor me
		atoms: selection.atoms || [],
		bonds: selection.bonds || [],
		rxnPluses: selection.rxnPluses || [],
		rxnArrows: selection.rxnArrows || [],
		sgroupData: selection.sgroupData || [],
		chiralFlags: selection.chiralFlags || []
	};

	var actionRemoveDataSGroups = new _action2.default();
	restruct.molecule.sgroups.forEach(function (sg, id) {
		if (selection.sgroupData.includes(id) || new _pile2.default(selection.atoms).isSuperset(new _pile2.default(sg.atoms))) actionRemoveDataSGroups.mergeWith((0, _sgroup.fromSgroupDeletion)(restruct, id));
	});

	selection.atoms.forEach(function (aid) {
		(0, _utils.atomGetNeighbors)(restruct, aid).forEach(function (nei) {
			if (selection.bonds.indexOf(nei.bid) === -1) selection.bonds = selection.bonds.concat([nei.bid]);
		});
	});

	selection.bonds.forEach(function (bid) {
		action.addOp(new _op2.default.BondDelete(bid));

		var bond = restruct.molecule.bonds.get(bid);
		var frid = restruct.molecule.atoms.get(bond.begin).fragment;
		if (frids.indexOf(frid) < 0) frids.push(frid);

		if (selection.atoms.indexOf(bond.begin) === -1 && (0, _utils.atomGetDegree)(restruct, bond.begin) === 1) {
			if ((0, _sgroup.removeAtomFromSgroupIfNeeded)(action, restruct, bond.begin)) atomsToRemove.push(bond.begin);

			action.addOp(new _op2.default.AtomDelete(bond.begin));
		}
		if (selection.atoms.indexOf(bond.end) === -1 && (0, _utils.atomGetDegree)(restruct, bond.end) === 1) {
			if ((0, _sgroup.removeAtomFromSgroupIfNeeded)(action, restruct, bond.end)) atomsToRemove.push(bond.end);

			action.addOp(new _op2.default.AtomDelete(bond.end));
		}
	});

	selection.atoms.forEach(function (aid) {
		var frid3 = restruct.molecule.atoms.get(aid).fragment;
		if (frids.indexOf(frid3) < 0) frids.push(frid3);

		if ((0, _sgroup.removeAtomFromSgroupIfNeeded)(action, restruct, aid)) atomsToRemove.push(aid);

		action.addOp(new _op2.default.AtomDelete(aid));
	});

	(0, _sgroup.removeSgroupIfNeeded)(action, restruct, atomsToRemove);

	selection.rxnArrows.forEach(function (id) {
		action.addOp(new _op2.default.RxnArrowDelete(id));
	});

	selection.rxnPluses.forEach(function (id) {
		action.addOp(new _op2.default.RxnPlusDelete(id));
	});

	selection.chiralFlags.forEach(function (id) {
		action.addOp(new _op2.default.ChiralFlagDelete(id));
	});

	action = action.perform(restruct);

	var rgForRemove = frids.map(function (frid) {
		return _struct.RGroup.findRGroupByFragment(restruct.molecule.rgroups, frid);
	});
	while (frids.length > 0) {
		action.mergeWith(fromFragmentSplit(restruct, frids.pop(), rgForRemove));
	}action.mergeWith(actionRemoveDataSGroups);

	return action;
}

},{"../../chem/struct":537,"../../util/pile":683,"../../util/vec2":686,"../shared/action":557,"../shared/op":560,"./rgroup":551,"./sgroup":553,"./utils":555}],549:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.fromPaste = fromPaste;

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _op = require('../shared/op');

var _op2 = _interopRequireDefault(_op);

var _action = require('../shared/action');

var _action2 = _interopRequireDefault(_action);

var _chiralFlag = require('./chiral-flag');

var _rgroup = require('./rgroup');

var _sgroup = require('./sgroup');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function fromPaste(restruct, pstruct, point) {
	var angle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;

	var xy0 = getStructCenter(pstruct);
	var offset = _vec2.default.diff(point, xy0);

	var action = new _action2.default();

	var aidMap = new Map();
	var fridMap = new Map();

	var pasteItems = { // only atoms and bonds now
		atoms: [],
		bonds: []
	};

	pstruct.atoms.forEach(function (atom, aid) {
		if (!fridMap.has(atom.fragment)) fridMap.set(atom.fragment, action.addOp(new _op2.default.FragmentAdd().perform(restruct)).frid);

		var tmpAtom = Object.assign(atom.clone(), { fragment: fridMap.get(atom.fragment) });
		var operation = new _op2.default.AtomAdd(tmpAtom, _vec2.default.diff(atom.pp, xy0).rotate(angle).add(point)).perform(restruct);
		action.addOp(operation);
		aidMap.set(aid, operation.data.aid);

		pasteItems.atoms.push(operation.data.aid);
	});

	pstruct.bonds.forEach(function (bond) {
		var operation = new _op2.default.BondAdd(aidMap.get(bond.begin), aidMap.get(bond.end), bond).perform(restruct);
		action.addOp(operation);

		pasteItems.bonds.push(operation.data.bid);
	});

	pstruct.sgroups.forEach(function (sg) {
		var newsgid = restruct.molecule.sgroups.newId();
		var sgAtoms = sg.atoms.map(function (aid) {
			return aidMap.get(aid);
		});
		var sgAction = (0, _sgroup.fromSgroupAddition)(restruct, sg.type, sgAtoms, sg.data, newsgid, sg.pp ? sg.pp.add(offset) : null);
		sgAction.operations.reverse().forEach(function (oper) {
			action.addOp(oper);
		});
	});

	if (restruct.rxnArrows.size < 1) {
		pstruct.rxnArrows.forEach(function (rxnArrow) {
			action.addOp(new _op2.default.RxnArrowAdd(rxnArrow.pp.add(offset)).perform(restruct));
		});
	}

	pstruct.rxnPluses.forEach(function (plus) {
		action.addOp(new _op2.default.RxnPlusAdd(plus.pp.add(offset)).perform(restruct));
	});

	if (pstruct.isChiral) {
		var bb = pstruct.getCoordBoundingBox();
		var pp = new _vec2.default(bb.max.x, bb.min.y - 1);
		action.mergeWith((0, _chiralFlag.fromChiralFlagAddition)(restruct, pp.add(offset)));
	}

	pstruct.rgroups.forEach(function (rg, rgid) {
		rg.frags.forEach(function (frag, frid) {
			action.addOp(new _op2.default.RGroupFragment(rgid, fridMap.get(frid)).perform(restruct));
		});
		var ifThen = pstruct.rgroups.get(rgid).ifthen;
		var newRgId = pstruct.rgroups.get(ifThen) ? ifThen : 0;
		action.mergeWith((0, _rgroup.fromRGroupAttrs)(restruct, rgid, rg.getAttrs())).mergeWith((0, _rgroup.fromUpdateIfThen)(restruct, newRgId, rg.ifthen));
	});

	action.operations.reverse();
	return [action, pasteItems];
}

function getStructCenter(struct) {
	if (struct.atoms.size > 0) {
		var xmin = 1e50;
		var ymin = xmin;
		var xmax = -xmin;
		var ymax = -ymin;

		struct.atoms.forEach(function (atom) {
			xmin = Math.min(xmin, atom.pp.x);
			ymin = Math.min(ymin, atom.pp.y);
			xmax = Math.max(xmax, atom.pp.x);
			ymax = Math.max(ymax, atom.pp.y);
		});
		return new _vec2.default((xmin + xmax) / 2, (ymin + ymax) / 2); // TODO: check
	}
	if (struct.rxnArrows.size > 0) return struct.rxnArrows.get(0).pp;
	if (struct.rxnPluses.size > 0) return struct.rxnPluses.get(0).pp;

	return struct.isChiral ? new _vec2.default(1, -1) : null;
}

},{"../../util/vec2":686,"../shared/action":557,"../shared/op":560,"./chiral-flag":546,"./rgroup":551,"./sgroup":553}],550:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromArrowAddition = fromArrowAddition;
exports.fromArrowDeletion = fromArrowDeletion;
exports.fromPlusAddition = fromPlusAddition;
exports.fromPlusDeletion = fromPlusDeletion;

var _op = require('../shared/op');

var _op2 = _interopRequireDefault(_op);

var _action = require('../shared/action');

var _action2 = _interopRequireDefault(_action);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function fromArrowAddition(restruct, pos) {
  var action = new _action2.default();
  if (restruct.molecule.rxnArrows.size < 1) action.addOp(new _op2.default.RxnArrowAdd(pos).perform(restruct));
  return action;
}

function fromArrowDeletion(restruct, id) {
  var action = new _action2.default();
  action.addOp(new _op2.default.RxnArrowDelete(id));
  return action.perform(restruct);
}

function fromPlusAddition(restruct, pos) {
  var action = new _action2.default();
  action.addOp(new _op2.default.RxnPlusAdd(pos).perform(restruct));
  return action;
}

function fromPlusDeletion(restruct, id) {
  var action = new _action2.default();
  action.addOp(new _op2.default.RxnPlusDelete(id));
  return action.perform(restruct);
}

},{"../shared/action":557,"../shared/op":560}],551:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromRGroupAttrs = fromRGroupAttrs;
exports.fromRGroupFragment = fromRGroupFragment;
exports.fromUpdateIfThen = fromUpdateIfThen;

var _op = require('../shared/op');

var _op2 = _interopRequireDefault(_op);

var _action = require('../shared/action');

var _action2 = _interopRequireDefault(_action);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function fromRGroupAttrs(restruct, id, attrs) {
  var action = new _action2.default();

  Object.keys(attrs).forEach(function (key) {
    action.addOp(new _op2.default.RGroupAttr(id, key, attrs[key]));
  });

  return action.perform(restruct);
}

function fromRGroupFragment(restruct, rgidNew, frid) {
  var action = new _action2.default();
  action.addOp(new _op2.default.RGroupFragment(rgidNew, frid));

  return action.perform(restruct);
}

function fromUpdateIfThen(restruct, rgidNew, rgidOld, skipRgids) {
  var action = new _action2.default();
  if (!restruct.molecule.rgroups.get(rgidOld)) action.addOp(new _op2.default.UpdateIfThen(rgidNew, rgidOld, skipRgids));

  return action.perform(restruct);
}

},{"../shared/action":557,"../shared/op":560}],552:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.fromFlip = fromFlip;
exports.fromRotate = fromRotate;
exports.fromBondAlign = fromBondAlign;

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _pile = require('../../util/pile');

var _pile2 = _interopRequireDefault(_pile);

var _struct = require('../../chem/struct');

var _op = require('../shared/op');

var _op2 = _interopRequireDefault(_op);

var _utils = require('../shared/utils');

var _utils2 = _interopRequireDefault(_utils);

var _action = require('../shared/action');

var _action2 = _interopRequireDefault(_action);

var _utils3 = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function fromFlip(restruct, selection, dir, center) {
	// eslint-disable-line max-statements
	var struct = restruct.molecule;

	var action = new _action2.default();

	if (!selection) selection = (0, _utils3.structSelection)(struct);

	if (!selection.atoms) return action.perform(restruct);

	var fids = selection.atoms.reduce(function (acc, aid) {
		var atom = struct.atoms.get(aid);

		if (!acc[atom.fragment]) acc[atom.fragment] = [];

		acc[atom.fragment].push(aid);
		return acc;
	}, {});

	var isFragFound = Object.keys(fids).find(function (frag) {
		frag = parseInt(frag, 10);
		return !struct.getFragmentIds(frag).equals(new _pile2.default(fids[frag]));
	});

	if (isFragFound) return action; // empty action

	Object.keys(fids).forEach(function (frag) {
		var fragment = new _pile2.default(fids[frag]);

		var bbox = struct.getCoordBoundingBox(fragment);
		var calcCenter = center || new _vec2.default((bbox.max.x + bbox.min.x) / 2, (bbox.max.y + bbox.min.y) / 2);

		fragment.forEach(function (aid) {
			var atom = struct.atoms.get(aid);
			var d = flipItemByCenter(atom, calcCenter, dir);
			action.addOp(new _op2.default.AtomMove(aid, d));
		});

		if (!selection.sgroupData) {
			var sgroups = (0, _utils3.getRelSgroupsBySelection)(restruct, Array.from(fragment));

			sgroups.forEach(function (sg) {
				var d = flipItemByCenter(sg, calcCenter, dir);
				action.addOp(new _op2.default.SGroupDataMove(sg.id, d));
			});
		}
	});

	if (selection.bonds) {
		selection.bonds.forEach(function (bid) {
			var bond = struct.bonds.get(bid);

			if (bond.type !== _struct.Bond.PATTERN.TYPE.SINGLE) return;

			if (bond.stereo === _struct.Bond.PATTERN.STEREO.UP) {
				action.addOp(new _op2.default.BondAttr(bid, 'stereo', _struct.Bond.PATTERN.STEREO.DOWN));
				return;
			}

			if (bond.stereo === _struct.Bond.PATTERN.STEREO.DOWN) action.addOp(new _op2.default.BondAttr(bid, 'stereo', _struct.Bond.PATTERN.STEREO.UP));
		});
	}

	return action.perform(restruct);
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

function flipItemByCenter(item, center, dir) {
	var d = new _vec2.default();
	/* eslint-disable no-mixed-operators*/
	if (dir === 'horizontal') {
		d.x = center.x > item.pp.x ? 2 * (center.x - item.pp.x) : -2 * (item.pp.x - center.x);
	} else {
		// 'vertical'
		d.y = center.y > item.pp.y ? 2 * (center.y - item.pp.y) : -2 * (item.pp.y - center.y);
	}
	/* eslint-enable no-mixed-operators*/
	return d;
}

function fromRotate(restruct, selection, center, angle) {
	// eslint-disable-line
	var struct = restruct.molecule;

	var action = new _action2.default();

	if (!selection) selection = (0, _utils3.structSelection)(struct);

	if (selection.atoms) {
		selection.atoms.forEach(function (aid) {
			var atom = struct.atoms.get(aid);
			action.addOp(new _op2.default.AtomMove(aid, rotateDelta(atom.pp, center, angle)));
		});

		if (!selection.sgroupData) {
			var sgroups = (0, _utils3.getRelSgroupsBySelection)(restruct, selection.atoms);

			sgroups.forEach(function (sg) {
				action.addOp(new _op2.default.SGroupDataMove(sg.id, rotateDelta(sg.pp, center, angle)));
			});
		}
	}

	if (selection.rxnArrows) {
		selection.rxnArrows.forEach(function (aid) {
			var arrow = struct.rxnArrows.get(aid);
			action.addOp(new _op2.default.RxnArrowMove(aid, rotateDelta(arrow.pp, center, angle)));
		});
	}

	if (selection.rxnPluses) {
		selection.rxnPluses.forEach(function (pid) {
			var plus = struct.rxnPluses.get(pid);
			action.addOp(new _op2.default.RxnPlusMove(pid, rotateDelta(plus.pp, center, angle)));
		});
	}

	if (selection.sgroupData) {
		selection.sgroupData.forEach(function (did) {
			var data = struct.sgroups.get(did);
			action.addOp(new _op2.default.SGroupDataMove(did, rotateDelta(data.pp, center, angle)));
		});
	}

	if (selection.chiralFlags) {
		selection.chiralFlags.forEach(function (fid) {
			var flag = restruct.chiralFlags.get(fid);
			action.addOp(new _op2.default.ChiralFlagMove(rotateDelta(flag.pp, center, angle)));
		});
	}

	return action.perform(restruct);
}

function fromBondAlign(restruct, bid, dir) {
	var struct = restruct.molecule;
	var bond = struct.bonds.get(bid);
	var begin = struct.atoms.get(bond.begin);
	var end = struct.atoms.get(bond.end);

	var center = begin.pp.add(end.pp).scaled(0.5);
	var angle = _utils2.default.calcAngle(begin.pp, end.pp);
	var atoms = (0, _utils3.getFragmentAtoms)(struct, begin.fragment);

	// TODO: choose minimal angle
	angle = dir === 'horizontal' ? -angle : Math.PI / 2 - angle;

	if (angle === 0 || Math.abs(angle) === Math.PI) return fromFlip(restruct, { atoms: atoms }, dir, center);

	return fromRotate(restruct, { atoms: atoms }, center, angle);
}

function rotateDelta(v, center, angle) {
	var v1 = v.sub(center);
	v1 = v1.rotate(angle);
	v1.add_(center); // eslint-disable-line no-underscore-dangle
	return v1.sub(v);
}

},{"../../chem/struct":537,"../../util/pile":683,"../../util/vec2":686,"../shared/action":557,"../shared/op":560,"../shared/utils":561,"./utils":555}],553:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _uniq2 = require('lodash/uniq');

var _uniq3 = _interopRequireDefault(_uniq2);

exports.fromSeveralSgroupAddition = fromSeveralSgroupAddition;
exports.fromSgroupAttrs = fromSgroupAttrs;
exports.sGroupAttributeAction = sGroupAttributeAction;
exports.fromSgroupDeletion = fromSgroupDeletion;
exports.fromSgroupAddition = fromSgroupAddition;
exports.fromSgroupAction = fromSgroupAction;
exports.removeAtomFromSgroupIfNeeded = removeAtomFromSgroupIfNeeded;
exports.removeSgroupIfNeeded = removeSgroupIfNeeded;

var _struct = require('../../chem/struct');

var _pile = require('../../util/pile');

var _pile2 = _interopRequireDefault(_pile);

var _op = require('../shared/op');

var _op2 = _interopRequireDefault(_op);

var _action = require('../shared/action');

var _action2 = _interopRequireDefault(_action);

var _constants = require('../shared/constants');

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function fromSeveralSgroupAddition(restruct, type, atoms, attrs) {
	var descriptors = attrs.fieldValue;

	if (typeof descriptors === 'string' || type !== 'DAT') return fromSgroupAddition(restruct, type, atoms, attrs, restruct.molecule.sgroups.newId());

	return descriptors.reduce(function (acc, fValue) {
		var localAttrs = Object.assign({}, attrs);
		localAttrs.fieldValue = fValue;

		return acc.mergeWith(fromSgroupAddition(restruct, type, atoms, localAttrs, restruct.molecule.sgroups.newId()));
	}, new _action2.default());
}

function fromSgroupAttrs(restruct, id, attrs) {
	var action = new _action2.default();

	Object.keys(attrs).forEach(function (key) {
		action.addOp(new _op2.default.SGroupAttr(id, key, attrs[key]));
	});

	return action.perform(restruct);
}

function sGroupAttributeAction(id, attrs) {
	var action = new _action2.default();

	Object.keys(attrs).forEach(function (key) {
		action.addOp(new _op2.default.SGroupAttr(id, key, attrs[key]));
	});

	return action;
}

function fromSgroupDeletion(restruct, id) {
	var action = new _action2.default();
	var struct = restruct.molecule;

	var sG = restruct.sgroups.get(id).item;

	if (sG.type === 'SRU') {
		struct.sGroupsRecalcCrossBonds();

		sG.neiAtoms.forEach(function (aid) {
			if ((0, _utils.atomGetAttr)(restruct, aid, 'label') === '*') action.addOp(new _op2.default.AtomAttr(aid, 'label', 'C'));
		});
	}

	var sg = struct.sgroups.get(id);
	var atoms = _struct.SGroup.getAtoms(struct, sg);
	var attrs = sg.getAttrs();

	action.addOp(new _op2.default.SGroupRemoveFromHierarchy(id));

	atoms.forEach(function (atom) {
		action.addOp(new _op2.default.SGroupAtomRemove(id, atom));
	});

	action.addOp(new _op2.default.SGroupDelete(id));

	action = action.perform(restruct);

	action.mergeWith(sGroupAttributeAction(id, attrs));

	return action;
}

function fromSgroupAddition(restruct, type, atoms, attrs, sgid, pp) {
	// eslint-disable-line
	var action = new _action2.default();

	// TODO: shoud the id be generated when OpSGroupCreate is executed?
	//      if yes, how to pass it to the following operations?
	sgid = sgid - 0 === sgid ? sgid : restruct.molecule.sgroups.newId();

	action.addOp(new _op2.default.SGroupCreate(sgid, type, pp));

	atoms.forEach(function (atom) {
		action.addOp(new _op2.default.SGroupAtomAdd(sgid, atom));
	});

	action.addOp(type !== 'DAT' ? new _op2.default.SGroupAddToHierarchy(sgid) : new _op2.default.SGroupAddToHierarchy(sgid, -1, []));

	action = action.perform(restruct);

	if (type === 'SRU') {
		restruct.molecule.sGroupsRecalcCrossBonds();
		var asteriskAction = new _action2.default();

		restruct.sgroups.get(sgid).item.neiAtoms.forEach(function (aid) {
			var plainCarbon = restruct.atoms.get(aid).a.isPlainCarbon();

			if ((0, _utils.atomGetDegree)(restruct, aid) === 1 && plainCarbon) asteriskAction.addOp(new _op2.default.AtomAttr(aid, 'label', '*'));
		});

		asteriskAction = asteriskAction.perform(restruct);
		asteriskAction.mergeWith(action);
		action = asteriskAction;
	}

	return fromSgroupAttrs(restruct, sgid, attrs).mergeWith(action);
}

function fromSgroupAction(context, restruct, newSg, sourceAtoms, selection) {
	if (context === _constants.SgContexts.Bond) return fromBondAction(restruct, newSg, sourceAtoms, selection);

	var atomsFromBonds = getAtomsFromBonds(restruct.molecule, selection.bonds);
	var newSourceAtoms = (0, _uniq3.default)(sourceAtoms.concat(atomsFromBonds));

	if (context === _constants.SgContexts.Fragment) return fromGroupAction(restruct, newSg, newSourceAtoms, Array.from(restruct.atoms.keys()));

	if (context === _constants.SgContexts.Multifragment) return fromMultiFragmentAction(restruct, newSg, newSourceAtoms);

	if (context === _constants.SgContexts.Group) return fromGroupAction(restruct, newSg, newSourceAtoms, newSourceAtoms);

	if (context === _constants.SgContexts.Atom) return fromAtomAction(restruct, newSg, newSourceAtoms);

	return {
		action: fromSeveralSgroupAddition(restruct, newSg.type, sourceAtoms, newSg.attrs)
	};
}

function fromAtomAction(restruct, newSg, sourceAtoms) {
	return sourceAtoms.reduce(function (acc, atom) {
		acc.action = acc.action.mergeWith(fromSeveralSgroupAddition(restruct, newSg.type, [atom], newSg.attrs));
		return acc;
	}, {
		action: new _action2.default(),
		selection: {
			atoms: sourceAtoms,
			bonds: []
		}
	});
}

function fromGroupAction(restruct, newSg, sourceAtoms, targetAtoms) {
	var allFragments = new _pile2.default(sourceAtoms.map(function (aid) {
		return restruct.atoms.get(aid).a.fragment;
	}));

	return Array.from(allFragments).reduce(function (acc, fragId) {
		var atoms = targetAtoms.reduce(function (res, aid) {
			var atom = restruct.atoms.get(aid).a;
			if (fragId === atom.fragment) res.push(aid);

			return res;
		}, []);

		var bonds = getAtomsBondIds(restruct.molecule, atoms);

		acc.action = acc.action.mergeWith(fromSeveralSgroupAddition(restruct, newSg.type, atoms, newSg.attrs));

		acc.selection.atoms = acc.selection.atoms.concat(atoms);
		acc.selection.bonds = acc.selection.bonds.concat(bonds);

		return acc;
	}, {
		action: new _action2.default(),
		selection: {
			atoms: [],
			bonds: []
		}
	});
}

function fromBondAction(restruct, newSg, sourceAtoms, currSelection) {
	var struct = restruct.molecule;
	var bonds = getAtomsBondIds(struct, sourceAtoms);

	if (currSelection.bonds) bonds = (0, _uniq3.default)(bonds.concat(currSelection.bonds));

	return bonds.reduce(function (acc, bondid) {
		var bond = struct.bonds.get(bondid);

		acc.action = acc.action.mergeWith(fromSeveralSgroupAddition(restruct, newSg.type, [bond.begin, bond.end], newSg.attrs));

		acc.selection.bonds.push(bondid);

		return acc;
	}, {
		action: new _action2.default(),
		selection: {
			atoms: sourceAtoms,
			bonds: []
		}
	});
}

function fromMultiFragmentAction(restruct, newSg, atoms) {
	var bonds = getAtomsBondIds(restruct.molecule, atoms);
	return {
		action: fromSeveralSgroupAddition(restruct, newSg.type, atoms, newSg.attrs),
		selection: {
			atoms: atoms,
			bonds: bonds
		}
	};
}

// Add action operation to remove atom from s-group if needed
function removeAtomFromSgroupIfNeeded(action, restruct, id) {
	var sgroups = (0, _utils.atomGetSGroups)(restruct, id);

	if (sgroups.length > 0) {
		sgroups.forEach(function (sid) {
			action.addOp(new _op2.default.SGroupAtomRemove(sid, id));
		});

		return true;
	}

	return false;
}

// Add action operations to remove whole s-group if needed
function removeSgroupIfNeeded(action, restruct, atoms) {
	var struct = restruct.molecule;
	var sgCounts = new Map();

	atoms.forEach(function (id) {
		var sgroups = (0, _utils.atomGetSGroups)(restruct, id);

		sgroups.forEach(function (sid) {
			sgCounts.set(sid, sgCounts.has(sid) ? sgCounts.get(sid) + 1 : 1);
		});
	});

	sgCounts.forEach(function (count, sid) {
		var sG = restruct.sgroups.get(sid).item;
		var sgAtoms = _struct.SGroup.getAtoms(restruct.molecule, sG);

		if (sgAtoms.length === count) {
			// delete whole s-group
			var sgroup = struct.sgroups.get(sid);
			action.mergeWith(sGroupAttributeAction(sid, sgroup.getAttrs()));
			action.addOp(new _op2.default.SGroupRemoveFromHierarchy(sid));
			action.addOp(new _op2.default.SGroupDelete(sid));
		}
	});
}

function getAtomsBondIds(struct, atoms) {
	var atomSet = new _pile2.default(atoms);

	return Array.from(struct.bonds.keys()).filter(function (bid) {
		var bond = struct.bonds.get(bid);
		return atomSet.has(bond.begin) && atomSet.has(bond.end);
	});
}

function getAtomsFromBonds(struct, bonds) {
	bonds = bonds || [];
	return bonds.reduce(function (acc, bondid) {
		var bond = struct.bonds.get(bondid);
		acc = acc.concat([bond.begin, bond.end]);
		return acc;
	}, []);
}

},{"../../chem/struct":537,"../../util/pile":683,"../shared/action":557,"../shared/constants":559,"../shared/op":560,"./utils":555,"lodash/uniq":479}],554:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.fromTemplateOnCanvas = fromTemplateOnCanvas;
exports.fromTemplateOnAtom = fromTemplateOnAtom;
exports.fromTemplateOnBondAction = fromTemplateOnBondAction;

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _struct = require('../../chem/struct');

var _op = require('../shared/op');

var _op2 = _interopRequireDefault(_op);

var _action = require('../shared/action');

var _action2 = _interopRequireDefault(_action);

var _utils = require('../shared/utils');

var _utils2 = _interopRequireDefault(_utils);

var _closest = require('../shared/closest');

var _closest2 = _interopRequireDefault(_closest);

var _utils3 = require('./utils');

var _atom = require('./atom');

var _bond = require('./bond');

var _aromaticFusing = require('./aromatic-fusing');

var _paste = require('./paste');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function fromTemplateOnCanvas(restruct, template, pos, angle) {
	return (0, _paste.fromPaste)(restruct, template.molecule, pos, angle);
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

function extraBondAction(restruct, aid, angle) {
	var action = new _action2.default();
	var frid = (0, _utils3.atomGetAttr)(restruct, aid, 'fragment');
	var additionalAtom = null;

	if (angle === null) {
		var middleAtom = (0, _utils3.atomForNewBond)(restruct, aid);
		var actionRes = (0, _bond.fromBondAddition)(restruct, { type: 1 }, aid, middleAtom.atom, middleAtom.pos.get_xy0());
		action = actionRes[0];
		action.operations.reverse();
		additionalAtom = actionRes[2];
	} else {
		var operation = new _op2.default.AtomAdd({ label: 'C', fragment: frid }, new _vec2.default(1, 0).rotate(angle).add(restruct.molecule.atoms.get(aid).pp).get_xy0()).perform(restruct);

		action.addOp(operation);
		action.addOp(new _op2.default.BondAdd(aid, operation.data.aid, { type: 1 }).perform(restruct));

		additionalAtom = operation.data.aid;
	}

	return { action: action, aid1: additionalAtom };
}

function fromTemplateOnAtom(restruct, template, aid, angle, extraBond) {
	var action = new _action2.default();

	var tmpl = template.molecule;
	var struct = restruct.molecule;

	var atom = struct.atoms.get(aid); // aid - the atom that was clicked on
	var aid1 = aid; // aid1 - the atom on the other end of the extra bond || aid

	var delta = null;

	if (extraBond) {
		// create extra bond after click on atom
		var extraRes = extraBondAction(restruct, aid, angle);
		action = extraRes.action;
		aid1 = extraRes.aid1;

		atom = struct.atoms.get(aid1);
		delta = _utils2.default.calcAngle(struct.atoms.get(aid).pp, atom.pp) - template.angle0;
	} else {
		if (angle === null) angle = _utils2.default.calcAngle(atom.pp, (0, _utils3.atomForNewBond)(restruct, aid).pos);
		delta = angle - template.angle0;
	}

	var map = new Map();
	var xy0 = tmpl.atoms.get(template.aid).pp;
	var frid = (0, _utils3.atomGetAttr)(restruct, aid, 'fragment');

	/* For merge */
	var pasteItems = { // only atoms and bonds now
		atoms: [],
		bonds: []
	};
	/* ----- */

	tmpl.atoms.forEach(function (a, id) {
		var attrs = _struct.Atom.getAttrHash(a);
		attrs.fragment = frid;

		if (id === template.aid) {
			action.mergeWith((0, _atom.fromAtomsAttrs)(restruct, aid1, attrs, true));
			map.set(id, aid1);
			pasteItems.atoms.push(aid1);
		} else {
			var v = _vec2.default.diff(a.pp, xy0).rotate(delta).add(atom.pp);

			var operation = new _op2.default.AtomAdd(attrs, v.get_xy0()).perform(restruct);
			action.addOp(operation);
			map.set(id, operation.data.aid);
			pasteItems.atoms.push(operation.data.aid);
		}
	});
	(0, _atom.mergeSgroups)(action, restruct, pasteItems.atoms, aid);

	tmpl.bonds.forEach(function (bond) {
		var operation = new _op2.default.BondAdd(map.get(bond.begin), map.get(bond.end), bond).perform(restruct);
		action.addOp(operation);

		pasteItems.bonds.push(operation.data.bid);
	});

	action.operations.reverse();
	return [action, pasteItems];
}

function fromTemplateOnBondAction(restruct, template, bid, events, flip, force) {
	if (!force) return fromTemplateOnBond(restruct, template, bid, flip);

	var simpleFusing = function simpleFusing(restruct, template, bid) {
		return fromTemplateOnBond(restruct, template, bid, flip);
	}; // eslint-disable-line
	/* aromatic merge (Promise)*/
	return (0, _aromaticFusing.fromAromaticTemplateOnBond)(restruct, template, bid, events, simpleFusing);
}

function fromTemplateOnBond(restruct, template, bid, flip) {
	// TODO: refactor function !!
	var action = new _action2.default();

	var tmpl = template.molecule;
	var struct = restruct.molecule;

	var bond = struct.bonds.get(bid);
	var tmplBond = tmpl.bonds.get(template.bid);

	var tmplBegin = tmpl.atoms.get(flip ? tmplBond.end : tmplBond.begin);

	var atomsMap = new Map([[tmplBond.begin, flip ? bond.end : bond.begin], [tmplBond.end, flip ? bond.begin : bond.end]]);

	// calc angle
	var bondAtoms = {
		begin: flip ? tmplBond.end : tmplBond.begin,
		end: flip ? tmplBond.begin : tmplBond.end
	};

	var _utils$mergeBondsPara = _utils2.default.mergeBondsParams(struct, bond, tmpl, bondAtoms),
	    angle = _utils$mergeBondsPara.angle,
	    scale = _utils$mergeBondsPara.scale;

	var frid = struct.getBondFragment(bid);

	/* For merge */
	var pasteItems = { // only atoms and bonds now
		atoms: [],
		bonds: []
	};
	/* ----- */

	tmpl.atoms.forEach(function (atom, id) {
		var attrs = _struct.Atom.getAttrHash(atom);
		attrs.fragment = frid;
		if (id === tmplBond.begin || id === tmplBond.end) {
			action.mergeWith((0, _atom.fromAtomsAttrs)(restruct, atomsMap.get(id), attrs, true));
			return;
		}

		var v = _vec2.default.diff(atom.pp, tmplBegin.pp).rotate(angle).scaled(scale).add(struct.atoms.get(bond.begin).pp);
		var mergeA = _closest2.default.atom(restruct, v, null, 0.1);

		if (mergeA === null) {
			var operation = new _op2.default.AtomAdd(attrs, v).perform(restruct);
			action.addOp(operation);
			atomsMap.set(id, operation.data.aid);
			pasteItems.atoms.push(operation.data.aid);
		} else {
			atomsMap.set(id, mergeA.id);

			action.mergeWith((0, _atom.fromAtomsAttrs)(restruct, atomsMap.get(id), attrs, true));
			// TODO [RB] need to merge fragments?
		}
	});
	(0, _atom.mergeSgroups)(action, restruct, pasteItems.atoms, bond.begin);

	tmpl.bonds.forEach(function (tBond) {
		var existId = struct.findBondId(atomsMap.get(tBond.begin), atomsMap.get(tBond.end));
		if (existId === null) {
			var operation = new _op2.default.BondAdd(atomsMap.get(tBond.begin), atomsMap.get(tBond.end), tBond).perform(restruct);
			action.addOp(operation);

			pasteItems.bonds.push(operation.data.bid);
		} else {
			action.mergeWith((0, _bond.fromBondsAttrs)(restruct, existId, tmplBond, true));
		}
	});
	action.operations.reverse();
	return [action, pasteItems];
}

},{"../../chem/struct":537,"../../util/vec2":686,"../shared/action":557,"../shared/closest":558,"../shared/op":560,"../shared/utils":561,"./aromatic-fusing":541,"./atom":542,"./bond":544,"./paste":549,"./utils":555}],555:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _difference2 = require('lodash/difference');

var _difference3 = _interopRequireDefault(_difference2);

exports.atomGetAttr = atomGetAttr;
exports.atomGetDegree = atomGetDegree;
exports.atomGetNeighbors = atomGetNeighbors;
exports.atomGetSGroups = atomGetSGroups;
exports.atomGetPos = atomGetPos;
exports.structSelection = structSelection;
exports.getFragmentAtoms = getFragmentAtoms;
exports.atomForNewBond = atomForNewBond;
exports.getRelSgroupsBySelection = getRelSgroupsBySelection;

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _closest = require('../shared/closest');

var _closest2 = _interopRequireDefault(_closest);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function atomGetAttr(restruct, aid, name) {
	return restruct.molecule.atoms.get(aid)[name];
}

function atomGetDegree(restruct, aid) {
	return restruct.atoms.get(aid).a.neighbors.length;
}

function atomGetNeighbors(restruct, aid) {
	return restruct.atoms.get(aid).a.neighbors.map(function (nei) {
		var hb = restruct.molecule.halfBonds.get(nei);
		return {
			aid: hb.end,
			bid: hb.bid
		};
	});
}

function atomGetSGroups(restruct, aid) {
	return Array.from(restruct.atoms.get(aid).a.sgs);
}

function atomGetPos(restruct, id) {
	return restruct.molecule.atoms.get(id).pp;
}

function structSelection(struct) {
	return ['atoms', 'bonds', 'frags', 'sgroups', 'rgroups', 'rxnArrows', 'rxnPluses'].reduce(function (res, key) {
		res[key] = Array.from(struct[key].keys());
		return res;
	}, {});
}

function getFragmentAtoms(struct, frid) {
	return Array.from(struct.atoms.keys()).filter(function (aid) {
		return struct.atoms.get(aid).fragment === frid;
	});
}

// Get new atom id/label and pos for bond being added to existing atom
function atomForNewBond(restruct, id) {
	// eslint-disable-line max-statements
	var neighbours = [];
	var pos = atomGetPos(restruct, id);

	atomGetNeighbors(restruct, id).forEach(function (nei) {
		var neiPos = atomGetPos(restruct, nei.aid);

		if (_vec2.default.dist(pos, neiPos) < 0.1) return;

		neighbours.push({ id: nei.aid, v: _vec2.default.diff(neiPos, pos) });
	});

	neighbours.sort(function (nei1, nei2) {
		return Math.atan2(nei1.v.y, nei1.v.x) - Math.atan2(nei2.v.y, nei2.v.x);
	});

	var i;
	var maxI = 0;
	var angle;
	var maxAngle = 0;

	// TODO: impove layout: tree, ...

	for (i = 0; i < neighbours.length; i++) {
		angle = _vec2.default.angle(neighbours[i].v, neighbours[(i + 1) % neighbours.length].v);

		if (angle < 0) angle += 2 * Math.PI;

		if (angle > maxAngle) {
			maxI = i;
			maxAngle = angle;
		}
	}

	var v = new _vec2.default(1, 0);

	if (neighbours.length > 0) {
		if (neighbours.length === 1) {
			maxAngle = -(4 * Math.PI / 3);

			// zig-zag
			var nei = atomGetNeighbors(restruct, id)[0];
			if (atomGetDegree(restruct, nei.aid) > 1) {
				var neiNeighbours = [];
				var neiPos = atomGetPos(restruct, nei.aid);
				var neiV = _vec2.default.diff(pos, neiPos);
				var neiAngle = Math.atan2(neiV.y, neiV.x);

				atomGetNeighbors(restruct, nei.aid).forEach(function (neiNei) {
					var neiNeiPos = atomGetPos(restruct, neiNei.aid);

					if (neiNei.bid === nei.bid || _vec2.default.dist(neiPos, neiNeiPos) < 0.1) return;

					var vDiff = _vec2.default.diff(neiNeiPos, neiPos);
					var ang = Math.atan2(vDiff.y, vDiff.x) - neiAngle;

					if (ang < 0) ang += 2 * Math.PI;

					neiNeighbours.push(ang);
				});
				neiNeighbours.sort(function (nei1, nei2) {
					return nei1 - nei2;
				});

				if (neiNeighbours[0] <= Math.PI * 1.01 && neiNeighbours[neiNeighbours.length - 1] <= 1.01 * Math.PI) maxAngle *= -1;
			}
		}

		angle = maxAngle / 2 + Math.atan2(neighbours[maxI].v.y, neighbours[maxI].v.x);

		v = v.rotate(angle);
	}

	v.add_(pos); // eslint-disable-line no-underscore-dangle

	var a = _closest2.default.atom(restruct, v, null, 0.1);
	a = a === null ? { label: 'C' } : a.id;

	return { atom: a, pos: v };
}

function getRelSgroupsBySelection(restruct, selectedAtoms) {
	return restruct.molecule.sgroups.filter(function (sgid, sg) {
		return !sg.data.attached && !sg.data.absolute && (0, _difference3.default)(sg.atoms, selectedAtoms).length === 0;
	});
}

},{"../../util/vec2":686,"../shared/closest":558,"lodash/difference":406}],556:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _subscription = require('subscription');

var _subscription2 = _interopRequireDefault(_subscription);

var _vec = require('../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _pile = require('../util/pile');

var _pile2 = _interopRequireDefault(_pile);

var _struct = require('../chem/struct');

var _struct2 = _interopRequireDefault(_struct);

var _render = require('../render');

var _render2 = _interopRequireDefault(_render);

var _basic = require('./actions/basic');

var _closest = require('./shared/closest');

var _closest2 = _interopRequireDefault(_closest);

var _tool = require('./tool');

var _tool2 = _interopRequireDefault(_tool);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

var SCALE = 40;
var HISTORY_SIZE = 32; // put me to options

var structObjects = ['atoms', 'bonds', 'frags', 'sgroups', 'sgroupData', 'rgroups', 'rxnArrows', 'rxnPluses', 'chiralFlags'];

function Editor(clientArea, options) {
	this.render = new _render2.default(clientArea, Object.assign({
		scale: SCALE
	}, options));

	this._selection = null; // eslint-disable-line
	this._tool = null; // eslint-disable-line
	this.historyStack = [];
	this.historyPtr = 0;

	this.event = {
		message: new _subscription2.default.Subscription(),
		elementEdit: new _subscription2.default.PipelineSubscription(),
		bondEdit: new _subscription2.default.PipelineSubscription(),
		rgroupEdit: new _subscription2.default.PipelineSubscription(),
		sgroupEdit: new _subscription2.default.PipelineSubscription(),
		sdataEdit: new _subscription2.default.PipelineSubscription(),
		quickEdit: new _subscription2.default.PipelineSubscription(),
		attachEdit: new _subscription2.default.PipelineSubscription(),
		change: new _subscription2.default.PipelineSubscription(),
		selectionChange: new _subscription2.default.PipelineSubscription(),
		aromatizeStruct: new _subscription2.default.PipelineSubscription(),
		dearomatizeStruct: new _subscription2.default.PipelineSubscription()
	};

	domEventSetup(this, clientArea);
}

Editor.prototype.tool = function (name, opts) {
	/* eslint-disable no-underscore-dangle */
	if (arguments.length > 0) {
		if (this._tool && this._tool.cancel) this._tool.cancel();
		var tool = _tool2.default[name](this, opts);
		if (!tool) return null;
		this._tool = tool;
	}
	return this._tool;
	/* eslint-enable no-underscore-dangle */
};

Editor.prototype.struct = function (value) {
	if (arguments.length > 0) {
		this.selection(null);
		this.update((0, _basic.fromNewCanvas)(this.render.ctab, value || new _struct2.default()));
		recoordinate(this, getStructCenter(this.render.ctab));
	}
	return this.render.ctab.molecule;
};

Editor.prototype.options = function (value) {
	if (arguments.length > 0) {
		var struct = this.render.ctab.molecule;
		var zoom = this.render.options.zoom;
		this.render.clientArea.innerHTML = '';
		this.render = new _render2.default(this.render.clientArea, Object.assign({ scale: SCALE }, value));
		this.render.setMolecule(struct); // TODO: reuse this.struct here?
		this.render.setZoom(zoom);
		this.render.update();
	}
	return this.render.options;
};

Editor.prototype.zoom = function (value) {
	if (arguments.length > 0) {
		this.render.setZoom(value);
		recoordinate(this, getStructCenter(this.render.ctab, this.selection()));
		this.render.update();
	}
	return this.render.options.zoom;
};

Editor.prototype.selection = function (ci) {
	var restruct = this.render.ctab;
	if (arguments.length > 0) {
		this._selection = null; // eslint-disable-line
		if (ci === 'all') {
			// TODO: better way will be this.struct()
			ci = structObjects.reduce(function (res, key) {
				res[key] = Array.from(restruct[key].keys());
				return res;
			}, {});
		}

		if (ci === 'descriptors') {
			restruct = this.render.ctab;
			ci = { sgroupData: Array.from(restruct['sgroupData'].keys()) };
		}

		if (ci) {
			var res = {};
			Object.keys(ci).forEach(function (key) {
				if (ci[key].length > 0) // TODO: deep merge
					res[key] = ci[key].slice();
			});
			if (Object.keys(res).length !== 0) this._selection = res; // eslint-disable-line
		}

		this.render.ctab.setSelection(this._selection); // eslint-disable-line
		this.event.selectionChange.dispatch(this._selection); // eslint-disable-line

		this.render.update();
	}
	return this._selection; // eslint-disable-line
};

Editor.prototype.hover = function (ci, newTool) {
	var tool = newTool || this._tool; // eslint-disable-line

	if ('ci' in tool && (!ci || tool.ci.map !== ci.map || tool.ci.id !== ci.id)) {
		this.highlight(tool.ci, false);
		delete tool.ci;
	}

	if (ci && this.highlight(ci, true)) tool.ci = ci;
};

var highlightTargets = ['atoms', 'bonds', 'rxnArrows', 'rxnPluses', 'chiralFlags', 'frags', 'merge', 'rgroups', 'sgroups', 'sgroupData'];

Editor.prototype.highlight = function (ci, visible) {
	if (highlightTargets.indexOf(ci.map) === -1) return false;

	var rnd = this.render;
	var item = null;

	if (ci.map === 'merge') {
		Object.keys(ci.items).forEach(function (mp) {
			ci.items[mp].forEach(function (dstId) {
				item = rnd.ctab[mp].get(dstId);

				if (item) item.setHighlight(visible, rnd);
			});
		});

		return true;
	}
	item = rnd.ctab[ci.map].get(ci.id);
	if (!item) return true; // TODO: fix, attempt to highlight a deleted item
	if (ci.map === 'sgroups' && item.item.type === 'DAT' || ci.map === 'sgroupData') {
		// set highlight for both the group and the data item
		var item1 = rnd.ctab.sgroups.get(ci.id);
		var item2 = rnd.ctab.sgroupData.get(ci.id);
		if (item1) item1.setHighlight(visible, rnd);
		if (item2) item2.setHighlight(visible, rnd);
	} else {
		item.setHighlight(visible, rnd);
	}
	return true;
};

Editor.prototype.update = function (action, ignoreHistory) {
	if (action === true) {
		this.render.update(true); // force
	} else {
		if (!ignoreHistory && !action.isDummy()) {
			this.historyStack.splice(this.historyPtr, HISTORY_SIZE + 1, action);
			if (this.historyStack.length > HISTORY_SIZE) this.historyStack.shift();
			this.historyPtr = this.historyStack.length;
			this.event.change.dispatch(action); // TODO: stoppable here
		}
		this.render.update();
	}
};

Editor.prototype.historySize = function () {
	return {
		undo: this.historyPtr,
		redo: this.historyStack.length - this.historyPtr
	};
};

Editor.prototype.undo = function () {
	if (this.historyPtr === 0) throw new Error('Undo stack is empty');
	if (this.tool() && this.tool().cancel) this.tool().cancel();
	this.selection(null);
	if (this._tool instanceof _tool2.default['paste']) {
		this.event.change.dispatch();
		return;
	}
	this.historyPtr--;
	var action = this.historyStack[this.historyPtr].perform(this.render.ctab);
	this.historyStack[this.historyPtr] = action;
	this.event.change.dispatch(action);
	this.render.update();
};

Editor.prototype.redo = function () {
	if (this.historyPtr === this.historyStack.length) throw new Error('Redo stack is empty');
	if (this.tool() && this.tool().cancel) this.tool().cancel();
	this.selection(null);
	if (this._tool instanceof _tool2.default['paste']) {
		this.event.change.dispatch();
		return;
	}
	var action = this.historyStack[this.historyPtr].perform(this.render.ctab);
	this.historyStack[this.historyPtr] = action;
	this.historyPtr++;
	this.event.change.dispatch(action);
	this.render.update();
};

Editor.prototype.on = function (eventName, handler) {
	this.event[eventName].add(handler);
};

function isMouseRight(event) {
	return event.which && event.which === 3 || event.button && event.button === 2;
}

function domEventSetup(editor, clientArea) {
	// TODO: addEventListener('resize', ...);
	['click', 'dblclick', 'mousedown', 'mousemove', 'mouseup', 'mouseleave'].forEach(function (eventName) {
		editor.event[eventName] = new _subscription2.default.DOMSubscription();
		var subs = editor.event[eventName];
		clientArea.addEventListener(eventName, subs.dispatch.bind(subs));

		subs.add(function (event) {
			if (eventName !== 'mouseup' && eventName !== 'mouseleave') {
				// to complete drag actions
				if (isMouseRight(event) || !event.target || event.target.nodeName === 'DIV') {
					// click on scroll
					editor.hover(null);
					return true;
				}
			}
			var EditorTool = editor.tool();
			editor.lastEvent = event;
			if (EditorTool && eventName in EditorTool) EditorTool[eventName](event);
			return true;
		}, -1);
	});
}

Editor.prototype.findItem = function (event, maps, skip) {
	var pos = global._ui_editor ? new _vec2.default(this.render.page2obj(event)) : // eslint-disable-line
	new _vec2.default(event.pageX, event.pageY).sub(elementOffset(this.render.clientArea));

	return _closest2.default.item(this.render.ctab, pos, maps, skip, this.render.options);
};

Editor.prototype.findMerge = function (srcItems, maps) {
	return _closest2.default.merge(this.render.ctab, srcItems, maps, this.render.options);
};

Editor.prototype.explicitSelected = function () {
	var selection = this.selection() || {};
	var res = structObjects.reduce(function (acc, key) {
		acc[key] = selection[key] ? selection[key].slice() : [];
		return acc;
	}, {});

	var struct = this.render.ctab.molecule;
	// "auto-select" the atoms for the bonds in selection
	if (res.bonds) {
		res.bonds.forEach(function (bid) {
			var bond = struct.bonds.get(bid);
			res.atoms = res.atoms || [];
			if (res.atoms.indexOf(bond.begin) < 0) res.atoms.push(bond.begin);

			if (res.atoms.indexOf(bond.end) < 0) res.atoms.push(bond.end);
		});
	}
	// "auto-select" the bonds with both atoms selected
	if (res.atoms && res.bonds) {
		struct.bonds.forEach(function (bond, bid) {
			if (!res.bonds.indexOf(bid) < 0) {
				if (res.atoms.indexOf(bond.begin) >= 0 && res.atoms.indexOf(bond.end) >= 0) {
					res.bonds = res.bonds || [];
					res.bonds.push(bid);
				}
			}
		});
	}

	return res;
};

Editor.prototype.structSelected = function () {
	var struct = this.render.ctab.molecule;
	var selection = this.explicitSelected();
	var dst = struct.clone(new _pile2.default(selection.atoms), new _pile2.default(selection.bonds), true);

	// Copy by its own as Struct.clone doesn't support
	// arrows/pluses id sets
	struct.rxnArrows.forEach(function (item, id) {
		if (selection.rxnArrows.indexOf(id) !== -1) dst.rxnArrows.add(item.clone());
	});
	struct.rxnPluses.forEach(function (item, id) {
		if (selection.rxnPluses.indexOf(id) !== -1) dst.rxnPluses.add(item.clone());
	});
	dst.isChiral = struct.isChiral;

	// TODO: should be reaction only if arrwos? check this logic
	dst.isReaction = struct.isReaction && (dst.rxnArrows.size || dst.rxnPluses.size);

	return dst;
};

Editor.prototype.alignDescriptors = function () {
	this.selection(null);
	var action = (0, _basic.fromDescriptorsAlign)(this.render.ctab);
	this.update(action);
	this.render.update(true);
};

function recoordinate(editor, rp /* , vp*/) {
	// rp is a point in scaled coordinates, which will be positioned
	// vp is the point where the reference point should now be (in view coordinates)
	//    or the center if not set
	console.assert(rp, 'Reference point not specified');
	editor.render.setScrollOffset(0, 0);
}

function getStructCenter(restruct, selection) {
	var bb = restruct.getVBoxObj(selection || {});
	return _vec2.default.lc2(bb.p0, 0.5, bb.p1, 0.5);
}

// TODO: find DOM shorthand
function elementOffset(element) {
	var top = 0;
	var left = 0;
	do {
		top += element.offsetTop || 0;
		left += element.offsetLeft || 0;
		element = element.offsetParent;
	} while (element);
	return new _vec2.default(left, top);
}

exports.default = Editor;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../chem/struct":537,"../render":586,"../util/pile":683,"../util/vec2":686,"./actions/basic":543,"./shared/closest":558,"./tool":572,"subscription":510}],557:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

//
// Undo/redo actions
//
function Action() {
	this.operations = [];
}

Action.prototype.addOp = function (operation, restruct) {
	if (!restruct || !operation.isDummy(restruct)) this.operations.push(operation);

	return operation;
};

Action.prototype.mergeWith = function (action) {
	this.operations = this.operations.concat(action.operations);
	return this;
};

// Perform action and return inverted one
Action.prototype.perform = function (restruct) {
	var action = new Action();

	this.operations.forEach(function (operation) {
		action.addOp(operation.perform(restruct));
	});

	action.operations.reverse();
	return action;
};

Action.prototype.isDummy = function (restruct) {
	return this.operations.find(
	// TODO [RB] the condition is always true for op.* operations
	function (operation) {
		return restruct ? !operation.isDummy(restruct) : true;
	}) === undefined;
};

exports.default = Action;

},{}],558:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SELECTION_DISTANCE_COEFFICIENT = 0.4; /****************************************************************************
                                           * Copyright 2018 EPAM Systems
                                           *
                                           * Licensed under the Apache License, Version 2.0 (the "License");
                                           * you may not use this file except in compliance with the License.
                                           * You may obtain a copy of the License at
                                           *
                                           *    http://www.apache.org/licenses/LICENSE-2.0
                                           *
                                           * Unless required by applicable law or agreed to in writing, software
                                           * distributed under the License is distributed on an "AS IS" BASIS,
                                           * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                           * See the License for the specific language governing permissions and
                                           * limitations under the License.
                                           ***************************************************************************/

var findMaps = {
	atoms: findClosestAtom,
	bonds: findClosestBond,
	chiralFlags: findClosestChiralFlag,
	sgroupData: findClosestDataSGroupData,
	sgroups: findClosestSGroup,
	rxnArrows: findClosestRxnArrow,
	rxnPluses: findClosestRxnPlus,
	frags: findClosestFrag,
	rgroups: findClosestRGroup
};

function findClosestAtom(restruct, pos, skip, minDist) {
	var closestAtom = null;
	var maxMinDist = SELECTION_DISTANCE_COEFFICIENT;
	var skipId = skip && skip.map === 'atoms' ? skip.id : null;

	minDist = minDist || maxMinDist;
	minDist = Math.min(minDist, maxMinDist);

	restruct.atoms.forEach(function (atom, aid) {
		if (aid === skipId) return;

		var dist = _vec2.default.dist(pos, atom.a.pp);

		if (dist < minDist) {
			closestAtom = aid;
			minDist = dist;
		}
	});

	if (closestAtom !== null) {
		return {
			id: closestAtom,
			dist: minDist
		};
	}

	return null;
}

function findClosestBond(restruct, pos, skip, minDist, scale) {
	// eslint-disable-line max-params
	var closestBond = null;
	var closestBondCenter = null;
	var maxMinDist = 0.8 * SELECTION_DISTANCE_COEFFICIENT;
	var skipId = skip && skip.map === 'bonds' ? skip.id : null;

	minDist = minDist || maxMinDist;
	minDist = Math.min(minDist, maxMinDist);

	var minCDist = minDist;

	restruct.bonds.forEach(function (bond, bid) {
		if (bid === skipId) return;

		var p1 = restruct.atoms.get(bond.b.begin).a.pp;
		var p2 = restruct.atoms.get(bond.b.end).a.pp;

		var mid = _vec2.default.lc2(p1, 0.5, p2, 0.5);
		var cdist = _vec2.default.dist(pos, mid);

		if (cdist < minCDist) {
			minCDist = cdist;
			closestBondCenter = bid;
		}
	});

	restruct.bonds.forEach(function (bond, bid) {
		if (bid === skipId) return;

		var hb = restruct.molecule.halfBonds.get(bond.b.hb1);
		var dir = hb.dir;
		var norm = hb.norm;

		var p1 = restruct.atoms.get(bond.b.begin).a.pp;
		var p2 = restruct.atoms.get(bond.b.end).a.pp;

		var inStripe = _vec2.default.dot(pos.sub(p1), dir) * _vec2.default.dot(pos.sub(p2), dir) < 0;

		if (inStripe) {
			var dist = Math.abs(_vec2.default.dot(pos.sub(p1), norm));

			if (dist < minDist) {
				closestBond = bid;
				minDist = dist;
			}
		}
	});

	if (closestBondCenter !== null) {
		return {
			id: closestBondCenter,
			dist: minCDist
		};
	}

	if (closestBond !== null && minDist > SELECTION_DISTANCE_COEFFICIENT * scale) {
		return {
			id: closestBond,
			dist: minDist
		};
	}

	return null;
}

function findClosestChiralFlag(restruct, pos) {
	var minDist;
	var ret = null;

	// there is only one chiral flag, but we treat it as a "map" for convenience
	restruct.chiralFlags.forEach(function (item, id) {
		var p = item.pp;

		if (Math.abs(pos.x - p.x) >= 1.0) return;

		var dist = Math.abs(pos.y - p.y);

		if (dist < 0.3 && (!ret || dist < minDist)) {
			minDist = dist;
			ret = { id: id, dist: minDist };
		}
	});

	return ret;
}

function findClosestDataSGroupData(restruct, pos) {
	var minDist = null;
	var ret = null;

	restruct.sgroupData.forEach(function (item, id) {
		if (item.sgroup.type !== 'DAT') throw new Error('Data group expected');

		if (item.sgroup.data.fieldName !== 'MRV_IMPLICIT_H') {
			var box = item.sgroup.dataArea;
			var inBox = box.p0.y < pos.y && box.p1.y > pos.y && box.p0.x < pos.x && box.p1.x > pos.x;
			var xDist = Math.min(Math.abs(box.p0.x - pos.x), Math.abs(box.p1.x - pos.x));

			if (inBox && (ret === null || xDist < minDist)) {
				ret = { id: id, dist: xDist };
				minDist = xDist;
			}
		}
	});

	return ret;
}

function findClosestFrag(restruct, pos, skip, minDist, scale) {
	minDist = Math.min(minDist || SELECTION_DISTANCE_COEFFICIENT, SELECTION_DISTANCE_COEFFICIENT);

	var struct = restruct.molecule;

	var closestAtom = findClosestAtom(restruct, pos, skip, minDist);

	if (closestAtom) {
		return {
			id: struct.atoms.get(closestAtom.id).fragment,
			dist: closestAtom.dist
		};
	}

	var closestBond = findClosestBond(restruct, pos, skip, minDist, scale);

	if (closestBond) {
		var atomId = struct.bonds.get(closestBond.id).begin;
		return {
			id: struct.atoms.get(atomId).fragment,
			dist: closestBond.dist
		};
	}

	return null;
}

function findClosestRGroup(restruct, pos, skip, minDist) {
	minDist = Math.min(minDist || SELECTION_DISTANCE_COEFFICIENT, SELECTION_DISTANCE_COEFFICIENT);

	var ret = null;

	restruct.rgroups.forEach(function (rgroup, rgid) {
		if (rgid !== skip && rgroup.labelBox && rgroup.labelBox.contains(pos, 0.5)) {
			var dist = _vec2.default.dist(rgroup.labelBox.centre(), pos);

			if (!ret || dist < minDist) {
				minDist = dist;
				ret = { id: rgid, dist: minDist };
			}
		}
	});

	return ret;
}

function findClosestRxnArrow(restruct, pos) {
	var minDist = null;
	var ret = null;

	restruct.rxnArrows.forEach(function (arrow, id) {
		var p = arrow.item.pp;

		if (Math.abs(pos.x - p.x) >= 1.0) return;

		var dist = Math.abs(pos.y - p.y);

		if (dist < 0.3 && (!ret || dist < minDist)) {
			minDist = dist;
			ret = { id: id, dist: minDist };
		}
	});

	return ret;
}

function findClosestRxnPlus(restruct, pos) {
	var minDist = null;
	var ret = null;

	restruct.rxnPluses.forEach(function (plus, id) {
		var p = plus.item.pp;
		var dist = Math.max(Math.abs(pos.x - p.x), Math.abs(pos.y - p.y));

		if (dist < 0.3 && (!ret || dist < minDist)) {
			minDist = dist;
			ret = { id: id, dist: minDist };
		}
	});

	return ret;
}

function findClosestSGroup(restruct, pos) {
	var ret = null;
	var minDist = SELECTION_DISTANCE_COEFFICIENT;

	restruct.molecule.sgroups.forEach(function (sg, sgid) {
		var d = sg.bracketDir;
		var n = d.rotateSC(1, 0);
		var pg = new _vec2.default(_vec2.default.dot(pos, d), _vec2.default.dot(pos, n));

		sg.areas.forEach(function (box) {
			var inBox = box.p0.y < pg.y && box.p1.y > pg.y && box.p0.x < pg.x && box.p1.x > pg.x;
			var xDist = Math.min(Math.abs(box.p0.x - pg.x), Math.abs(box.p1.x - pg.x));

			if (inBox && (ret === null || xDist < minDist)) {
				ret = sgid;
				minDist = xDist;
			}
		});
	});

	if (ret !== null) {
		return {
			id: ret,
			dist: minDist
		};
	}

	return null;
}

function findClosestItem(restruct, pos, maps, skip, scale) {
	// eslint-disable-line max-params
	maps = maps || Object.keys(findMaps);

	return maps.reduce(function (res, mp) {
		var minDist = res ? res.dist : null;
		var item = findMaps[mp](restruct, pos, skip, minDist, scale);

		if (item !== null && (res === null || item.dist < res.dist)) {
			return {
				map: mp,
				id: item.id,
				dist: item.dist
			};
		}

		return res;
	}, null);
}

/**
 * @param restruct { ReStruct }
 * @param selected { object }
 * @param maps { Array<string> }
 * @param scale { number }
 * @return {{
 * 		atoms: Map<number, number>?
 * 		bonds: Map<number, number>?
 * }}
 */
function findCloseMerge(restruct, selected) {
	var maps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ['atoms', 'bonds'];
	var scale = arguments[3];

	var pos = {
		atoms: new Map(), // aid -> position
		bonds: new Map() // bid -> position
	};

	var struct = restruct.molecule;

	selected.atoms.forEach(function (aid) {
		pos.atoms.set(aid, struct.atoms.get(aid).pp);
	});

	selected.bonds.forEach(function (bid) {
		var bond = struct.bonds.get(bid);
		pos.bonds.set(bid, _vec2.default.lc2(struct.atoms.get(bond.begin).pp, 0.5, struct.atoms.get(bond.end).pp, 0.5));
	});

	var result = {};
	maps.forEach(function (mp) {
		result[mp] = Array.from(pos[mp].keys()).reduce(function (res, srcId) {
			var skip = { map: mp, id: srcId };
			var item = findMaps[mp](restruct, pos[mp].get(srcId), skip, null, scale);

			if (item && !selected[mp].includes(item.id)) res.set(srcId, item.id);

			return res;
		}, new Map());
	});

	return result;
}

exports.default = {
	atom: findClosestAtom, // used in Actions
	item: findClosestItem,
	merge: findCloseMerge
};

},{"../../util/vec2":686}],559:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

var SgContexts = exports.SgContexts = {
  Fragment: 'Fragment',
  Multifragment: 'Multifragment',
  Bond: 'Bond',
  Atom: 'Atom',
  Group: 'Group'
};

},{}],560:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _scale = require('../../util/scale');

var _scale2 = _interopRequireDefault(_scale);

var _pile = require('../../util/pile');

var _pile2 = _interopRequireDefault(_pile);

var _struct = require('../../chem/struct');

var _restruct = require('../../render/restruct');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /****************************************************************************
                                                                                                                                                                                                     * Copyright 2018 EPAM Systems
                                                                                                                                                                                                     *
                                                                                                                                                                                                     * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                     * you may not use this file except in compliance with the License.
                                                                                                                                                                                                     * You may obtain a copy of the License at
                                                                                                                                                                                                     *
                                                                                                                                                                                                     *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                     *
                                                                                                                                                                                                     * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                     * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                     * See the License for the specific language governing permissions and
                                                                                                                                                                                                     * limitations under the License.
                                                                                                                                                                                                     ***************************************************************************/

/* eslint-disable no-shadow */

var DEBUG = { debug: false, logcnt: 0, logmouse: false, hl: false };
DEBUG.logMethod = function () {};

function Base() {
	this.type = 'OpBase';

	// assert here?
	this.execute = function () {
		throw new Error('Operation.execute() is not implemented');
	};

	this.invert = function () {
		throw new Error('Operation.invert() is not implemented');
	};

	this.perform = function (restruct) {
		this.execute(restruct);
		/* eslint-disable no-underscore-dangle */
		if (!this._inverted) {
			this._inverted = this.invert();
			this._inverted._inverted = this;
		}
		return this._inverted;
	};

	this.isDummy = function (restruct) {
		return this._isDummy ? this._isDummy(restruct) : false;
		/* eslint-enable no-underscore-dangle */
	};
}

function AtomAdd(atom, pos) {
	this.data = { atom: atom, pos: pos, aid: null };

	this.execute = function (restruct) {
		var _this = this;

		var struct = restruct.molecule;

		var pp = {};
		if (this.data.atom) Object.keys(this.data.atom).forEach(function (p) {
			pp[p] = _this.data.atom[p];
		});

		pp.label = pp.label || 'C';

		if (!(typeof this.data.aid === 'number')) this.data.aid = struct.atoms.add(new _struct.Atom(pp));else struct.atoms.set(this.data.aid, new _struct.Atom(pp));

		// notifyAtomAdded
		var atomData = new _restruct.ReAtom(struct.atoms.get(this.data.aid));

		atomData.component = restruct.connectedComponents.add(new _pile2.default([this.data.aid]));
		restruct.atoms.set(this.data.aid, atomData);
		restruct.markAtom(this.data.aid, 1);

		struct.atomSetPos(this.data.aid, new _vec2.default(this.data.pos));

		var arrow = struct.rxnArrows.get(0);
		if (arrow) {
			var _atom = struct.atoms.get(this.data.aid);
			_atom.rxnFragmentType = struct.defineRxnFragmentTypeForAtomset(new _pile2.default([this.data.aid]), arrow.pp.x); // eslint-disable-line
		}
	};

	this.invert = function () {
		var ret = new AtomDelete();
		ret.data = this.data;
		return ret;
	};
}
AtomAdd.prototype = new Base();

function AtomDelete(aid) {
	this.data = { aid: aid, atom: null, pos: null };

	this.execute = function (restruct) {
		var struct = restruct.molecule;
		if (!this.data.atom) {
			this.data.atom = struct.atoms.get(this.data.aid);
			this.data.pos = this.data.atom.pp;
		}

		// notifyAtomRemoved(this.data.aid);
		var atom = restruct.atoms.get(this.data.aid);
		var set = restruct.connectedComponents.get(atom.component);
		set.delete(this.data.aid);
		if (set.size === 0) restruct.connectedComponents.delete(atom.component);
		restruct.clearVisel(atom.visel);
		restruct.atoms.delete(this.data.aid);
		restruct.markItemRemoved();

		struct.atoms.delete(this.data.aid);
	};

	this.invert = function () {
		var ret = new AtomAdd();
		ret.data = this.data;
		return ret;
	};
}
AtomDelete.prototype = new Base();

function AtomAttr(aid, attribute, value) {
	this.data = { aid: aid, attribute: attribute, value: value };
	this.data2 = null;

	this.execute = function (restruct) {
		var atom = restruct.molecule.atoms.get(this.data.aid);
		if (!this.data2) {
			this.data2 = {
				aid: this.data.aid,
				attribute: this.data.attribute,
				value: atom[this.data.attribute]
			};
		}

		atom[this.data.attribute] = this.data.value;
		invalidateAtom(restruct, this.data.aid);
	};

	this._isDummy = function (restruct) {
		// eslint-disable-line no-underscore-dangle
		return restruct.molecule.atoms.get(this.data.aid)[this.data.attribute] === this.data.value;
	};

	this.invert = function () {
		var ret = new AtomAttr();
		ret.data = this.data2;
		ret.data2 = this.data;
		return ret;
	};
}
AtomAttr.prototype = new Base();

function AtomMove(aid, d, noinvalidate) {
	this.data = { aid: aid, d: d, noinvalidate: noinvalidate };

	this.execute = function (restruct) {
		var struct = restruct.molecule;
		var aid = this.data.aid;
		var d = this.data.d;
		struct.atoms.get(aid).pp.add_(d); // eslint-disable-line no-underscore-dangle
		restruct.atoms.get(aid).visel.translate(_scale2.default.obj2scaled(d, restruct.render.options));

		this.data.d = d.negated();

		if (!this.data.noinvalidate) invalidateAtom(restruct, aid, 1);
	};

	this._isDummy = function () {
		return this.data.d.x === 0 && this.data.d.y === 0;
	};

	this.invert = function () {
		var ret = new AtomMove();
		ret.data = this.data;
		return ret;
	};
}
AtomMove.prototype = new Base();

function BondMove(bid, d) {
	this.data = { bid: bid, d: d };

	this.execute = function (restruct) {
		restruct.bonds.get(this.data.bid).visel.translate(_scale2.default.obj2scaled(this.data.d, restruct.render.options));
		this.data.d = this.data.d.negated();
	};

	this.invert = function () {
		var ret = new BondMove();
		ret.data = this.data;
		return ret;
	};
}
BondMove.prototype = new Base();

function LoopMove(id, d) {
	this.data = { id: id, d: d };

	this.execute = function (restruct) {
		// not sure if there should be an action to move a loop in the first place
		// but we have to somehow move the aromatic ring,
		// which is associated with the loop, rather than with any of the bonds
		if (restruct.reloops.get(this.data.id) && restruct.reloops.get(this.data.id).visel) {
			restruct.reloops.get(this.data.id).visel.translate(_scale2.default.obj2scaled(this.data.d, restruct.render.options));
		}
		this.data.d = this.data.d.negated();
	};

	this.invert = function () {
		var ret = new LoopMove();
		ret.data = this.data;
		return ret;
	};
}
LoopMove.prototype = new Base();

function SGroupAtomAdd(sgid, aid) {
	this.type = 'OpSGroupAtomAdd';
	this.data = { sgid: sgid, aid: aid };

	this.execute = function (restruct) {
		var struct = restruct.molecule;
		var aid = this.data.aid;
		var sgid = this.data.sgid;
		var atom = struct.atoms.get(aid);
		var sg = struct.sgroups.get(sgid);

		if (sg.atoms.indexOf(aid) >= 0) throw new Error('The same atom cannot be added to an S-group more than once');

		if (!atom) throw new Error('OpSGroupAtomAdd: Atom ' + aid + ' not found');

		struct.atomAddToSGroup(sgid, aid);
		invalidateAtom(restruct, aid);
	};

	this.invert = function () {
		var ret = new SGroupAtomRemove();
		ret.data = this.data;
		return ret;
	};
}
SGroupAtomAdd.prototype = new Base();

function SGroupAtomRemove(sgid, aid) {
	this.type = 'OpSGroupAtomRemove';
	this.data = { sgid: sgid, aid: aid };

	this.execute = function (restruct) {
		var aid = this.data.aid;
		var sgid = this.data.sgid;
		var struct = restruct.molecule;
		var atom = struct.atoms.get(aid);
		var sg = struct.sgroups.get(sgid);

		_struct.SGroup.removeAtom(sg, aid);
		atom.sgs.delete(sgid);
		invalidateAtom(restruct, aid);
	};

	this.invert = function () {
		var ret = new SGroupAtomAdd();
		ret.data = this.data;
		return ret;
	};
}
SGroupAtomRemove.prototype = new Base();

function SGroupAttr(sgid, attr, value) {
	this.type = 'OpSGroupAttr';
	this.data = { sgid: sgid, attr: attr, value: value };

	this.execute = function (restruct) {
		var struct = restruct.molecule;
		var sgid = this.data.sgid;
		var sg = struct.sgroups.get(sgid);

		if (sg.type === 'DAT' && restruct.sgroupData.has(sgid)) {
			// clean the stuff here, else it might be left behind if the sgroups is set to "attached"
			restruct.clearVisel(restruct.sgroupData.get(sgid).visel);
			restruct.sgroupData.delete(sgid);
		}

		this.data.value = sg.setAttr(this.data.attr, this.data.value);
	};

	this.invert = function () {
		var ret = new SGroupAttr();
		ret.data = this.data;
		return ret;
	};
}
SGroupAttr.prototype = new Base();

function SGroupCreate(sgid, type, pp) {
	this.type = 'OpSGroupCreate';
	this.data = { sgid: sgid, type: type, pp: pp };

	this.execute = function (restruct) {
		var struct = restruct.molecule;
		var sg = new _struct.SGroup(this.data.type);
		var sgid = this.data.sgid;

		sg.id = sgid;
		struct.sgroups.set(sgid, sg);

		if (this.data.pp) struct.sgroups.get(sgid).pp = new _vec2.default(this.data.pp);

		restruct.sgroups.set(sgid, new _restruct.ReSGroup(struct.sgroups.get(sgid)));
		this.data.sgid = sgid;
	};

	this.invert = function () {
		var ret = new SGroupDelete();
		ret.data = this.data;
		return ret;
	};
}
SGroupCreate.prototype = new Base();

function SGroupDelete(sgid) {
	this.type = 'OpSGroupDelete';
	this.data = { sgid: sgid };

	this.execute = function (restruct) {
		var struct = restruct.molecule;
		var sgid = this.data.sgid;
		var sg = restruct.sgroups.get(sgid);

		this.data.type = sg.item.type;
		this.data.pp = sg.item.pp;

		if (sg.item.type === 'DAT' && restruct.sgroupData.has(sgid)) {
			restruct.clearVisel(restruct.sgroupData.get(sgid).visel);
			restruct.sgroupData.delete(sgid);
		}

		restruct.clearVisel(sg.visel);
		if (sg.item.atoms.length !== 0) throw new Error('S-Group not empty!');

		restruct.sgroups.delete(sgid);
		struct.sgroups.delete(sgid);
	};

	this.invert = function () {
		var ret = new SGroupCreate();
		ret.data = this.data;
		return ret;
	};
}
SGroupDelete.prototype = new Base();

function SGroupAddToHierarchy(sgid, parent, children) {
	this.type = 'OpSGroupAddToHierarchy';
	this.data = { sgid: sgid, parent: parent, children: children };

	this.execute = function (restruct) {
		var struct = restruct.molecule;
		var sgid = this.data.sgid;
		var relations = struct.sGroupForest.insert(sgid, parent, children);

		this.data.parent = relations.parent;
		this.data.children = relations.children;
	};

	this.invert = function () {
		var ret = new SGroupRemoveFromHierarchy();
		ret.data = this.data;
		return ret;
	};
}
SGroupAddToHierarchy.prototype = new Base();

function SGroupRemoveFromHierarchy(sgid) {
	this.type = 'OpSGroupRemoveFromHierarchy';
	this.data = { sgid: sgid };

	this.execute = function (restruct) {
		var struct = restruct.molecule;
		var sgid = this.data.sgid;

		this.data.parent = struct.sGroupForest.parent.get(sgid);
		this.data.children = struct.sGroupForest.children.get(sgid);
		struct.sGroupForest.remove(sgid);
	};

	this.invert = function () {
		var ret = new SGroupAddToHierarchy();
		ret.data = this.data;
		return ret;
	};
}
SGroupRemoveFromHierarchy.prototype = new Base();

function BondAdd(begin, end, bond) {
	this.data = { bond: bond, begin: begin, end: end, bid: null };

	this.execute = function (restruct) {
		var _this2 = this;

		// eslint-disable-line max-statements
		var struct = restruct.molecule;

		if (this.data.begin === this.data.end) throw new Error('Distinct atoms expected');

		if (DEBUG.debug && this.molecule.checkBondExists(this.data.begin, this.data.end)) throw new Error('Bond already exists');

		invalidateAtom(restruct, this.data.begin, 1);
		invalidateAtom(restruct, this.data.end, 1);

		var pp = {};
		if (this.data.bond) {
			Object.keys(this.data.bond).forEach(function (p) {
				pp[p] = _this2.data.bond[p];
			});
		}

		pp.type = pp.type || _struct.Bond.PATTERN.TYPE.SINGLE;
		pp.begin = this.data.begin;
		pp.end = this.data.end;

		if (!(typeof this.data.bid === 'number')) this.data.bid = struct.bonds.add(new _struct.Bond(pp));else struct.bonds.set(this.data.bid, new _struct.Bond(pp));

		struct.bondInitHalfBonds(this.data.bid);
		struct.atomAddNeighbor(struct.bonds.get(this.data.bid).hb1);
		struct.atomAddNeighbor(struct.bonds.get(this.data.bid).hb2);

		// notifyBondAdded
		restruct.bonds.set(this.data.bid, new _restruct.ReBond(struct.bonds.get(this.data.bid)));
		restruct.markBond(this.data.bid, 1);
	};

	this.invert = function () {
		var ret = new BondDelete();
		ret.data = this.data;
		return ret;
	};
}
BondAdd.prototype = new Base();

function BondDelete(bid) {
	this.data = { bid: bid, bond: null, begin: null, end: null };

	this.execute = function (restruct) {
		// eslint-disable-line max-statements
		var struct = restruct.molecule;
		if (!this.data.bond) {
			this.data.bond = struct.bonds.get(this.data.bid);
			this.data.begin = this.data.bond.begin;
			this.data.end = this.data.bond.end;
		}

		invalidateBond(restruct, this.data.bid);

		// notifyBondRemoved
		var rebond = restruct.bonds.get(this.data.bid);
		[rebond.b.hb1, rebond.b.hb2].forEach(function (hbid) {
			var hb = restruct.molecule.halfBonds.get(hbid);
			if (hb.loop >= 0) restruct.loopRemove(hb.loop);
		}, restruct);
		restruct.clearVisel(rebond.visel);
		restruct.bonds.delete(this.data.bid);
		restruct.markItemRemoved();

		var bond = struct.bonds.get(this.data.bid);
		[bond.hb1, bond.hb2].forEach(function (hbid) {
			var hb = struct.halfBonds.get(hbid);
			var atom = struct.atoms.get(hb.begin);
			var pos = atom.neighbors.indexOf(hbid);
			var prev = (pos + atom.neighbors.length - 1) % atom.neighbors.length;
			var next = (pos + 1) % atom.neighbors.length;
			struct.setHbNext(atom.neighbors[prev], atom.neighbors[next]);
			atom.neighbors.splice(pos, 1);
		});
		struct.halfBonds.delete(bond.hb1);
		struct.halfBonds.delete(bond.hb2);

		struct.bonds.delete(this.data.bid);
	};

	this.invert = function () {
		var ret = new BondAdd();
		ret.data = this.data;
		return ret;
	};
}
BondDelete.prototype = new Base();

function BondAttr(bid, attribute, value) {
	this.data = { bid: bid, attribute: attribute, value: value };
	this.data2 = null;

	this.execute = function (restruct) {
		var bond = restruct.molecule.bonds.get(this.data.bid);

		if (!this.data2) {
			this.data2 = {
				bid: this.data.bid,
				attribute: this.data.attribute,
				value: bond[this.data.attribute]
			};
		}

		bond[this.data.attribute] = this.data.value;

		invalidateBond(restruct, this.data.bid);
		if (this.data.attribute === 'type') invalidateLoop(restruct, this.data.bid);
	};

	this._isDummy = function (restruct) {
		// eslint-disable-line no-underscore-dangle
		return restruct.molecule.bonds.get(this.data.bid)[this.data.attribute] === this.data.value;
	};

	this.invert = function () {
		var ret = new BondAttr();
		ret.data = this.data2;
		ret.data2 = this.data;
		return ret;
	};
}
BondAttr.prototype = new Base();

function FragmentAdd(frid) {
	this.frid = typeof frid === 'undefined' ? null : frid;

	this.execute = function (restruct) {
		var struct = restruct.molecule;
		var frag = {};

		if (this.frid === null) this.frid = struct.frags.add(frag);else struct.frags.set(this.frid, frag);

		restruct.frags.set(this.frid, new _restruct.ReFrag(frag)); // TODO add ReStruct.notifyFragmentAdded
	};

	this.invert = function () {
		return new FragmentDelete(this.frid);
	};
}
FragmentAdd.prototype = new Base();

function FragmentDelete(frid) {
	this.frid = frid;

	this.execute = function (restruct) {
		var struct = restruct.molecule;
		invalidateItem(restruct, 'frags', this.frid, 1);
		restruct.frags.delete(this.frid);
		struct.frags.delete(this.frid); // TODO add ReStruct.notifyFragmentRemoved
	};

	this.invert = function () {
		return new FragmentAdd(this.frid);
	};
}
FragmentDelete.prototype = new Base();

function RGroupAttr(rgid, attribute, value) {
	this.data = { rgid: rgid, attribute: attribute, value: value };
	this.data2 = null;

	this.execute = function (restruct) {
		var rgp = restruct.molecule.rgroups.get(this.data.rgid);
		if (!this.data2) {
			this.data2 = {
				rgid: this.data.rgid,
				attribute: this.data.attribute,
				value: rgp[this.data.attribute]
			};
		}

		rgp[this.data.attribute] = this.data.value;

		invalidateItem(restruct, 'rgroups', this.data.rgid);
	};

	this._isDummy = function (restruct) {
		// eslint-disable-line no-underscore-dangle
		return restruct.molecule.rgroups.get(this.data.rgid)[this.data.attribute] === this.data.value;
	};

	this.invert = function () {
		var ret = new RGroupAttr();
		ret.data = this.data2;
		ret.data2 = this.data;
		return ret;
	};
}
RGroupAttr.prototype = new Base();

function RGroupFragment(rgid, frid, rg) {
	this.type = 'OpAddOrDeleteRGFragment';
	this.rgid_new = rgid;
	this.rg_new = rg;
	this.rgid_old = null;
	this.rg_old = null;
	this.frid = frid;

	this.execute = function (restruct) {
		// eslint-disable-line max-statements
		var struct = restruct.molecule;
		this.rgid_old = this.rgid_old || _struct.RGroup.findRGroupByFragment(struct.rgroups, this.frid);
		this.rg_old = this.rgid_old ? struct.rgroups.get(this.rgid_old) : null;

		if (this.rg_old) {
			this.rg_old.frags.delete(this.frid);
			restruct.clearVisel(restruct.rgroups.get(this.rgid_old).visel);

			if (this.rg_old.frags.size === 0) {
				restruct.rgroups.delete(this.rgid_old);
				struct.rgroups.delete(this.rgid_old);
				restruct.markItemRemoved();
			} else {
				restruct.markItem('rgroups', this.rgid_old, 1);
			}
		}

		if (this.rgid_new) {
			var rgNew = struct.rgroups.get(this.rgid_new);
			if (!rgNew) {
				rgNew = this.rg_new || new _struct.RGroup();
				struct.rgroups.set(this.rgid_new, rgNew);
				restruct.rgroups.set(this.rgid_new, new _restruct.ReRGroup(rgNew));
			} else {
				restruct.markItem('rgroups', this.rgid_new, 1);
			}
			rgNew.frags.add(this.frid);
		}
	};

	this.invert = function () {
		return new RGroupFragment(this.rgid_old, this.frid, this.rg_old);
	};
}
RGroupFragment.prototype = new Base();

function UpdateIfThen(rgNew, rgOld) {
	var skipRgids = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

	this.type = 'OpUpdateIfThenValues';
	this.rgid_new = rgNew;
	this.rgid_old = rgOld;
	this.ifThenHistory = new Map();

	this.execute = function (restruct) {
		var _this3 = this;

		var struct = restruct.molecule;

		struct.rgroups.forEach(function (rg, rgid) {
			if (rg.ifthen === _this3.rgid_old && !skipRgids.includes(rgid)) {
				rg.ifthen = _this3.rgid_new;
				_this3.ifThenHistory.set(rgid, _this3.rgid_old);
				struct.rgroups.set(rgid, rg);
			}
		});
	};

	this.invert = function () {
		return new RestoreIfThen(this.rgid_new, this.rgid_old, this.ifThenHistory);
	};
}
UpdateIfThen.prototype = new Base();

function RestoreIfThen(rgNew, rgOld, history) {
	this.type = 'OpRestoreIfThenValues';
	this.rgid_new = rgNew;
	this.rgid_old = rgOld;
	this.ifThenHistory = history || new Map();

	this.execute = function (restruct) {
		var struct = restruct.molecule;

		this.ifThenHistory.forEach(function (rg, rgid) {
			var rgValue = struct.rgroups.get(rgid);
			rgValue.ifthen = rg;
			struct.rgroups.set(rgid, rgValue);
		});
	};

	this.invert = function () {
		return new UpdateIfThen(this.rgid_old, this.rgid_new);
	};
}
RestoreIfThen.prototype = new Base();

function RxnArrowAdd(pos) {
	this.data = { pos: pos, arid: null };

	this.execute = function (restruct) {
		var struct = restruct.molecule;

		if (!(typeof this.data.arid === 'number')) this.data.arid = struct.rxnArrows.add(new _struct.RxnArrow());else struct.rxnArrows.set(this.data.arid, new _struct.RxnArrow());

		// notifyRxnArrowAdded
		restruct.rxnArrows.set(this.data.arid, new _restruct.ReRxnArrow(struct.rxnArrows.get(this.data.arid)));

		struct.rxnArrowSetPos(this.data.arid, new _vec2.default(this.data.pos));

		var _struct$getComponents = struct.getComponents(),
		    reactants = _struct$getComponents.reactants,
		    products = _struct$getComponents.products;

		reactants = reactants.reduce(function (acc, item) {
			return acc.concat.apply(acc, _toConsumableArray(item));
		}, []);
		products = products.reduce(function (acc, item) {
			return acc.concat.apply(acc, _toConsumableArray(item));
		}, []);

		reactants.forEach(function (aid) {
			var atom = struct.atoms.get(aid);
			atom.rxnFragmentType = 1;
		});

		products.forEach(function (aid) {
			var atom = struct.atoms.get(aid);
			atom.rxnFragmentType = 2;
		});

		invalidateItem(restruct, 'rxnArrows', this.data.arid, 1);
	};

	this.invert = function () {
		var ret = new RxnArrowDelete();
		ret.data = this.data;
		return ret;
	};
}
RxnArrowAdd.prototype = new Base();

function RxnArrowDelete(arid) {
	this.data = { arid: arid, pos: null };

	this.execute = function (restruct) {
		var struct = restruct.molecule;

		if (!this.data.pos) this.data.pos = struct.rxnArrows.get(this.data.arid).pp;

		// notifyRxnArrowRemoved
		restruct.markItemRemoved();
		restruct.clearVisel(restruct.rxnArrows.get(this.data.arid).visel);
		restruct.rxnArrows.delete(this.data.arid);

		struct.rxnArrows.delete(this.data.arid);

		struct.atoms.forEach(function (atom) {
			atom.rxnFragmentType = -1;
		});
	};

	this.invert = function () {
		var ret = new RxnArrowAdd();
		ret.data = this.data;
		return ret;
	};
}
RxnArrowDelete.prototype = new Base();

function RxnArrowMove(id, d, noinvalidate) {
	this.data = { id: id, d: d, noinvalidate: noinvalidate };

	this.execute = function (restruct) {
		var struct = restruct.molecule;
		var id = this.data.id;
		var d = this.data.d;
		struct.rxnArrows.get(id).pp.add_(d); // eslint-disable-line no-underscore-dangle
		restruct.rxnArrows.get(id).visel.translate(_scale2.default.obj2scaled(d, restruct.render.options));
		this.data.d = d.negated();
		if (!this.data.noinvalidate) invalidateItem(restruct, 'rxnArrows', id, 1);
	};

	this.invert = function () {
		var ret = new RxnArrowMove();
		ret.data = this.data;
		return ret;
	};
}
RxnArrowMove.prototype = new Base();

function RxnPlusAdd(pos) {
	this.data = { plid: null, pos: pos };

	this.execute = function (restruct) {
		var struct = restruct.molecule;
		if (!(typeof this.data.plid === 'number')) this.data.plid = struct.rxnPluses.add(new _struct.RxnPlus());else struct.rxnPluses.set(this.data.plid, new _struct.RxnPlus());

		// notifyRxnPlusAdded
		restruct.rxnPluses.set(this.data.plid, new _restruct.ReRxnPlus(struct.rxnPluses.get(this.data.plid)));

		struct.rxnPlusSetPos(this.data.plid, new _vec2.default(this.data.pos));

		invalidateItem(restruct, 'rxnPluses', this.data.plid, 1);
	};

	this.invert = function () {
		var ret = new RxnPlusDelete();
		ret.data = this.data;
		return ret;
	};
}
RxnPlusAdd.prototype = new Base();

function RxnPlusDelete(plid) {
	this.data = { plid: plid, pos: null };

	this.execute = function (restruct) {
		var struct = restruct.molecule;
		if (!this.data.pos) this.data.pos = struct.rxnPluses.get(this.data.plid).pp;

		// notifyRxnPlusRemoved
		restruct.markItemRemoved();
		restruct.clearVisel(restruct.rxnPluses.get(this.data.plid).visel);
		restruct.rxnPluses.delete(this.data.plid);

		struct.rxnPluses.delete(this.data.plid);
	};

	this.invert = function () {
		var ret = new RxnPlusAdd();
		ret.data = this.data;
		return ret;
	};
}
RxnPlusDelete.prototype = new Base();

function RxnPlusMove(id, d, noinvalidate) {
	this.data = { id: id, d: d, noinvalidate: noinvalidate };

	this.execute = function (restruct) {
		var struct = restruct.molecule;
		var id = this.data.id;
		var d = this.data.d;
		struct.rxnPluses.get(id).pp.add_(d); // eslint-disable-line no-underscore-dangle
		restruct.rxnPluses.get(id).visel.translate(_scale2.default.obj2scaled(d, restruct.render.options));
		this.data.d = d.negated();
		if (!this.data.noinvalidate) invalidateItem(restruct, 'rxnPluses', id, 1);
	};

	this.invert = function () {
		var ret = new RxnPlusMove();
		ret.data = this.data;
		return ret;
	};
}
RxnPlusMove.prototype = new Base();

function SGroupDataMove(id, d) {
	this.data = { id: id, d: d };

	this.execute = function (restruct) {
		var sgroups = restruct.molecule.sgroups;

		sgroups.get(this.data.id).pp.add_(this.data.d); // eslint-disable-line no-underscore-dangle
		this.data.d = this.data.d.negated();
		invalidateItem(restruct, 'sgroupData', this.data.id, 1); // [MK] this currently does nothing since the DataSGroupData Visel only contains the highlighting/selection and SGroups are redrawn every time anyway
	};

	this.invert = function () {
		var ret = new SGroupDataMove();
		ret.data = this.data;
		return ret;
	};
}
SGroupDataMove.prototype = new Base();

function CanvasLoad(struct) {
	this.data = { struct: struct };

	this.execute = function (restruct) {
		var oldStruct = restruct.molecule;
		restruct.clearVisels(); // TODO: What is it?
		restruct.render.setMolecule(this.data.struct);
		this.data.struct = oldStruct;
	};

	this.invert = function () {
		var ret = new CanvasLoad();
		ret.data = this.data;
		return ret;
	};
}
CanvasLoad.prototype = new Base();

function ChiralFlagAdd(pos) {
	this.data = { pos: pos };

	this.execute = function (restruct) {
		var struct = restruct.molecule;
		if (restruct.chiralFlags.size > 0) {
			// throw new Error('Cannot add more than one Chiral flag');
			restruct.clearVisel(restruct.chiralFlags.get(0).visel);
			restruct.chiralFlags.delete(0);
		}

		restruct.chiralFlags.set(0, new _restruct.ReChiralFlag(pos));
		struct.isChiral = true;
		invalidateItem(restruct, 'chiralFlags', 0, 1);
	};

	this.invert = function () {
		var ret = new ChiralFlagDelete();
		ret.data = this.data;
		return ret;
	};
}
ChiralFlagAdd.prototype = new Base();

function ChiralFlagDelete() {
	this.data = { pos: null };

	this.execute = function (restruct) {
		var struct = restruct.molecule;
		if (restruct.chiralFlags.size < 1) throw new Error('Cannot remove chiral flag');
		restruct.clearVisel(restruct.chiralFlags.get(0).visel);
		this.data.pos = restruct.chiralFlags.get(0).pp;
		restruct.chiralFlags.delete(0);
		struct.isChiral = false;
	};

	this.invert = function () {
		var ret = new ChiralFlagAdd(this.data.pos);
		ret.data = this.data;
		return ret;
	};
}
ChiralFlagDelete.prototype = new Base();

function ChiralFlagMove(d) {
	this.data = { d: d };

	this.execute = function (restruct) {
		restruct.chiralFlags.get(0).pp.add_(this.data.d); // eslint-disable-line no-underscore-dangle
		this.data.d = this.data.d.negated();
		invalidateItem(restruct, 'chiralFlags', 0, 1);
	};

	this.invert = function () {
		var ret = new ChiralFlagMove();
		ret.data = this.data;
		return ret;
	};
}
ChiralFlagMove.prototype = new Base();

function AlignDescriptors() {
	this.type = 'OpAlignDescriptors';
	this.history = {};

	this.execute = function (restruct) {
		var _this4 = this;

		var sgroups = Array.from(restruct.molecule.sgroups.values()).reverse();

		var structBox = restruct.molecule.getCoordBoundingBoxObj();
		var alignPoint = new _vec2.default(structBox.max.x, structBox.min.y).add(new _vec2.default(2.0, -1.0));

		sgroups.forEach(function (sg) {
			_this4.history[sg.id] = new _vec2.default(sg.pp);
			alignPoint = alignPoint.add(new _vec2.default(0.0, 0.5));
			sg.pp = alignPoint;
			restruct.molecule.sgroups.set(sg.id, sg);
			invalidateItem(restruct, 'sgroupData', sg.id, 1);
		});
	};

	this.invert = function () {
		return new RestoreDescriptorsPosition(this.history);
	};
}
AlignDescriptors.prototype = new Base();

function RestoreDescriptorsPosition(history) {
	this.type = 'OpRestoreDescriptorsPosition';
	this.history = history;

	this.execute = function (restruct) {
		var _this5 = this;

		var sgroups = Array.from(restruct.molecule.sgroups.values());

		sgroups.forEach(function (sg) {
			sg.pp = _this5.history[sg.id];
			restruct.molecule.sgroups.set(sg.id, sg);
			invalidateItem(restruct, 'sgroupData', sg.id, 1);
		});
	};

	this.invert = function () {
		return new AlignDescriptors();
	};
}
RestoreDescriptorsPosition.prototype = new Base();

function invalidateAtom(restruct, aid, level) {
	var atom = restruct.atoms.get(aid);

	restruct.markAtom(aid, level ? 1 : 0);

	var hbs = restruct.molecule.halfBonds;

	atom.a.neighbors.forEach(function (hbid) {
		if (!hbs.has(hbid)) return;

		var hb = hbs.get(hbid);
		restruct.markBond(hb.bid, 1);
		restruct.markAtom(hb.end, 0);

		if (level) invalidateLoop(restruct, hb.bid);
	});
}

function invalidateLoop(restruct, bid) {
	var bond = restruct.bonds.get(bid);
	var lid1 = restruct.molecule.halfBonds.get(bond.b.hb1).loop;
	var lid2 = restruct.molecule.halfBonds.get(bond.b.hb2).loop;

	if (lid1 >= 0) restruct.loopRemove(lid1);

	if (lid2 >= 0) restruct.loopRemove(lid2);
}

function invalidateBond(restruct, bid) {
	var bond = restruct.bonds.get(bid);
	invalidateLoop(restruct, bid);
	invalidateAtom(restruct, bond.b.begin, 0);
	invalidateAtom(restruct, bond.b.end, 0);
}

function invalidateItem(restruct, map, id, level) {
	if (map === 'atoms') {
		invalidateAtom(restruct, id, level);
	} else if (map === 'bonds') {
		invalidateBond(restruct, id);
		if (level > 0) invalidateLoop(restruct, id);
	} else {
		restruct.markItem(map, id, level);
	}
}

exports.default = {
	AtomAdd: AtomAdd,
	AtomDelete: AtomDelete,
	AtomAttr: AtomAttr,
	AtomMove: AtomMove,
	BondMove: BondMove,
	LoopMove: LoopMove,
	SGroupAtomAdd: SGroupAtomAdd,
	SGroupAtomRemove: SGroupAtomRemove,
	SGroupAttr: SGroupAttr,
	SGroupCreate: SGroupCreate,
	SGroupDelete: SGroupDelete,
	SGroupAddToHierarchy: SGroupAddToHierarchy,
	SGroupRemoveFromHierarchy: SGroupRemoveFromHierarchy,
	BondAdd: BondAdd,
	BondDelete: BondDelete,
	BondAttr: BondAttr,
	FragmentAdd: FragmentAdd,
	FragmentDelete: FragmentDelete,
	RGroupAttr: RGroupAttr,
	RGroupFragment: RGroupFragment,
	RxnArrowAdd: RxnArrowAdd,
	RxnArrowDelete: RxnArrowDelete,
	RxnArrowMove: RxnArrowMove,
	RxnPlusAdd: RxnPlusAdd,
	RxnPlusDelete: RxnPlusDelete,
	RxnPlusMove: RxnPlusMove,
	SGroupDataMove: SGroupDataMove,
	CanvasLoad: CanvasLoad,
	ChiralFlagAdd: ChiralFlagAdd,
	ChiralFlagDelete: ChiralFlagDelete,
	ChiralFlagMove: ChiralFlagMove,
	UpdateIfThen: UpdateIfThen,
	AlignDescriptors: AlignDescriptors
};

},{"../../chem/struct":537,"../../render/restruct":588,"../../util/pile":683,"../../util/scale":685,"../../util/vec2":686}],561:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _inRange2 = require('lodash/inRange');

var _inRange3 = _interopRequireDefault(_inRange2);

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FRAC = Math.PI / 12; // '15º'

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function setFracAngle(angle) {
	FRAC = Math.PI / 180 * angle;
}

function calcAngle(pos0, pos1) {
	var v = _vec2.default.diff(pos1, pos0);
	return Math.atan2(v.y, v.x);
}

function fracAngle(angle, angle2) {
	if (angle2) angle = calcAngle(angle, angle2);
	return Math.round(angle / FRAC) * FRAC;
}

function calcNewAtomPos(pos0, pos1, ctrlKey) {
	var v = new _vec2.default(1, 0).rotate(ctrlKey ? calcAngle(pos0, pos1) : fracAngle(pos0, pos1));
	v.add_(pos0); // eslint-disable-line no-underscore-dangle
	return v;
}

function degrees(angle) {
	var degree = Math.round(angle / Math.PI * 180);
	if (degree > 180) degree -= 360;else if (degree <= -180) degree += 360;
	return degree;
}

var BONDS_MERGE_ANGLE = 10; // 'º'
var BONDS_MERGE_SCALE = 0.2;

function mergeBondsParams(struct1, bond1, struct2, bond2) {
	var begin1 = struct1.atoms.get(bond1.begin);
	var begin2 = struct2.atoms.get(bond2.begin);
	var end1 = struct1.atoms.get(bond1.end);
	var end2 = struct2.atoms.get(bond2.end);

	var angle = calcAngle(begin1.pp, end1.pp) - calcAngle(begin2.pp, end2.pp);
	var mergeAngle = Math.abs(degrees(angle) % 180);

	var scale = _vec2.default.dist(begin1.pp, end1.pp) / _vec2.default.dist(begin2.pp, end2.pp);

	var merged = !(0, _inRange3.default)(mergeAngle, BONDS_MERGE_ANGLE, 180 - BONDS_MERGE_ANGLE) && (0, _inRange3.default)(scale, 1 - BONDS_MERGE_SCALE, 1 + BONDS_MERGE_SCALE);

	return { merged: merged, angle: angle, scale: scale, cross: Math.abs(degrees(angle)) > 90 };
}

exports.default = {
	calcAngle: calcAngle,
	fracAngle: fracAngle,
	calcNewAtomPos: calcNewAtomPos,
	degrees: degrees,
	setFracAngle: setFracAngle,
	mergeBondsParams: mergeBondsParams
};

},{"../../util/vec2":686,"lodash/inRange":442}],562:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _atom = require('../actions/atom');

function APointTool(editor) {
	if (!(this instanceof APointTool)) return new APointTool(editor);

	this.editor = editor;
	this.editor.selection(null);
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

APointTool.prototype.mousemove = function (event) {
	this.editor.hover(this.editor.findItem(event, ['atoms']));
};

APointTool.prototype.click = function (event) {
	var editor = this.editor;
	var struct = editor.render.ctab.molecule;
	var ci = editor.findItem(event, ['atoms']);

	if (ci && ci.map === 'atoms') {
		this.editor.hover(null);
		var atom = struct.atoms.get(ci.id);
		var res = editor.event.elementEdit.dispatch({
			attpnt: atom.attpnt
		});
		Promise.resolve(res).then(function (newatom) {
			if (atom.attpnt !== newatom.attpnt) {
				var action = (0, _atom.fromAtomsAttrs)(editor.render.ctab, ci.id, newatom);
				editor.update(action);
			}
		}).catch(function () {
			return null;
		}); // w/o changes
		return true;
	}
	return true;
};

exports.default = APointTool;

},{"../actions/atom":542}],563:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.atomLongtapEvent = atomLongtapEvent;

var _struct = require('../../chem/struct');

var _utils = require('../shared/utils');

var _utils2 = _interopRequireDefault(_utils);

var _atom = require('../actions/atom');

var _bond = require('../actions/bond');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function AtomTool(editor, atomProps) {
	if (!(this instanceof AtomTool)) {
		if (!editor.selection() || !editor.selection().atoms) return new AtomTool(editor, atomProps);

		var action = (0, _atom.fromAtomsAttrs)(editor.render.ctab, editor.selection().atoms, atomProps, true);
		editor.update(action);
		editor.selection(null);
		return null;
	}

	this.editor = editor;
	this.atomProps = atomProps;
	this.bondProps = { type: 1, stereo: _struct.Bond.PATTERN.STEREO.NONE };
}

AtomTool.prototype.mousedown = function (event) {
	this.editor.hover(null);
	this.editor.selection(null);
	var ci = this.editor.findItem(event, ['atoms']);

	if (!ci) {
		// ci.type == 'Canvas'
		this.dragCtx = {};
	} else if (ci.map === 'atoms') {
		this.dragCtx = { item: ci };
	}
};

AtomTool.prototype.mousemove = function (event) {
	var rnd = this.editor.render;
	if (!this.dragCtx || !this.dragCtx.item) {
		this.editor.hover(this.editor.findItem(event, ['atoms']));
		return;
	}

	var dragCtx = this.dragCtx;
	var ci = this.editor.findItem(event, ['atoms']);

	if (ci && ci.map === 'atoms' && ci.id === dragCtx.item.id) {
		// fromAtomsAttrs
		this.editor.hover(this.editor.findItem(event, ['atoms']));
		return;
	}

	// fromAtomAddition
	var atom = rnd.ctab.molecule.atoms.get(dragCtx.item.id);
	var angle = _utils2.default.calcAngle(atom.pp, rnd.page2obj(event));
	if (!event.ctrlKey) angle = _utils2.default.fracAngle(angle);
	var degrees = _utils2.default.degrees(angle);
	this.editor.event.message.dispatch({ info: degrees + 'º' });
	var newAtomPos = _utils2.default.calcNewAtomPos(atom.pp, rnd.page2obj(event), event.ctrlKey);
	if (dragCtx.action) dragCtx.action.perform(rnd.ctab);

	dragCtx.action = (0, _bond.fromBondAddition)(rnd.ctab, this.bondProps, dragCtx.item.id, Object.assign({}, this.atomProps), newAtomPos, newAtomPos)[0];
	this.editor.update(dragCtx.action, true);
};

AtomTool.prototype.mouseup = function (event) {
	if (this.dragCtx) {
		var dragCtx = this.dragCtx;
		var rnd = this.editor.render;

		this.editor.update(dragCtx.action || (dragCtx.item ? (0, _atom.fromAtomsAttrs)(rnd.ctab, dragCtx.item.id, this.atomProps, true) : (0, _atom.fromAtomAddition)(rnd.ctab, rnd.page2obj(event), this.atomProps)));

		delete this.dragCtx;
	}
	this.editor.event.message.dispatch({
		info: false
	});
};

function atomLongtapEvent(tool, render) {
	var dragCtx = tool.dragCtx;
	var editor = tool.editor;

	var atomid = dragCtx.item && dragCtx.item.id;

	// edit atom or add atom
	var atom = atomid !== undefined && atomid !== null ? render.ctab.molecule.atoms.get(atomid) : new _struct.Atom({ label: '' });

	// TODO: longtab event
	dragCtx.timeout = setTimeout(function () {
		delete tool.dragCtx;
		editor.selection(null);
		var res = editor.event.quickEdit.dispatch(atom);
		Promise.resolve(res).then(function (newatom) {
			var action = atomid ? (0, _atom.fromAtomsAttrs)(render.ctab, atomid, newatom) : (0, _atom.fromAtomAddition)(render.ctab, dragCtx.xy0, newatom);
			editor.update(action);
		}).catch(function () {
			return null;
		}); // w/o changes
	}, 750);

	dragCtx.stopTapping = function () {
		if (dragCtx.timeout) {
			clearTimeout(dragCtx.timeout);
			delete tool.dragCtx.timeout;
		}
	};
}

exports.default = AtomTool;

},{"../../chem/struct":537,"../actions/atom":542,"../actions/bond":544,"../shared/utils":561}],564:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _element = require('../../chem/element');

var _element2 = _interopRequireDefault(_element);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function AttachTool(editor, attachPoints) {
	if (!(this instanceof AttachTool)) return new AttachTool(editor, attachPoints);

	this.attach = attachPoints || { atomid: 0, bondid: 0 };
	this.editor = editor;

	this.editor.selection({
		atoms: [this.attach.atomid],
		bonds: [this.attach.bondid]
	});
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

AttachTool.prototype.mousemove = function (event) {
	var rnd = this.editor.render;

	var ci = this.editor.findItem(event, ['atoms', 'bonds']);
	var struct = rnd.ctab.molecule;
	if (ci && (ci.map === 'atoms' && _element2.default.map[struct.atoms.get(ci.id).label] || ci.map === 'bonds')) this.editor.hover(ci);else this.editor.hover(null);
	return true;
};

AttachTool.prototype.click = function (event) {
	var editor = this.editor;
	var rnd = editor.render;
	var struct = rnd.ctab.molecule;
	var ci = editor.findItem(event, ['atoms', 'bonds']);

	if (ci && (ci.map === 'atoms' && _element2.default.map[struct.atoms.get(ci.id).label] || ci.map === 'bonds')) {
		if (ci.map === 'atoms') this.attach.atomid = ci.id;else this.attach.bondid = ci.id;

		this.editor.selection({
			atoms: [this.attach.atomid],
			bonds: [this.attach.bondid]
		});
		this.editor.event.attachEdit.dispatch(this.attach);
	}
	return true;
};

exports.default = AttachTool;

},{"../../chem/element":520}],565:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _struct = require('../../chem/struct');

var _utils = require('../shared/utils');

var _utils2 = _interopRequireDefault(_utils);

var _bond = require('../actions/bond');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function BondTool(editor, bondProps) {
	if (!(this instanceof BondTool)) {
		if (!editor.selection() || !editor.selection().bonds) return new BondTool(editor, bondProps);

		var action = (0, _bond.fromBondsAttrs)(editor.render.ctab, editor.selection().bonds, bondProps);
		editor.update(action);
		editor.selection(null);
		return null;
	}

	this.editor = editor;
	this.atomProps = { label: 'C' };
	this.bondProps = bondProps;
}

BondTool.prototype.mousedown = function (event) {
	var rnd = this.editor.render;
	this.editor.hover(null);
	this.editor.selection(null);
	this.dragCtx = {
		xy0: rnd.page2obj(event),
		item: this.editor.findItem(event, ['atoms', 'bonds'])
	};
	if (!this.dragCtx.item) // ci.type == 'Canvas'
		delete this.dragCtx.item;
	return true;
};

BondTool.prototype.mousemove = function (event) {
	// eslint-disable-line max-statements
	var editor = this.editor;
	var rnd = editor.render;
	if ('dragCtx' in this) {
		var dragCtx = this.dragCtx;

		var pos = rnd.page2obj(event);
		var angle = _utils2.default.calcAngle(dragCtx.xy0, pos);
		if (!event.ctrlKey) angle = _utils2.default.fracAngle(angle);

		var degrees = _utils2.default.degrees(angle);
		this.editor.event.message.dispatch({ info: degrees + 'º' });

		if (!('item' in dragCtx) || dragCtx.item.map === 'atoms') {
			if ('action' in dragCtx) dragCtx.action.perform(rnd.ctab);
			var i1 = void 0;
			var i2 = void 0;
			var p1 = void 0;
			var p2 = void 0;
			if ('item' in dragCtx && dragCtx.item.map === 'atoms') {
				// first mousedown event intersect with any atom
				i1 = dragCtx.item.id;
				i2 = editor.findItem(event, ['atoms'], dragCtx.item);
			} else {
				// first mousedown event intersect with any canvas
				i1 = this.atomProps;
				p1 = dragCtx.xy0;
				i2 = editor.findItem(event, ['atoms']);
			}
			var dist = Number.MAX_VALUE;
			if (i2 && i2.map === 'atoms') {
				// after mousedown events is appered, cursor is moved and then cursor intersects any atoms
				i2 = i2.id;
			} else {
				i2 = this.atomProps;
				var xy1 = rnd.page2obj(event);
				dist = _vec2.default.dist(dragCtx.xy0, xy1);
				if (p1) {
					// rotation only, leght of bond = 1;
					p2 = _utils2.default.calcNewAtomPos(p1, xy1, event.ctrlKey);
				} else {
					// first mousedown event intersect with any atom and
					// rotation only, leght of bond = 1;
					var atom = rnd.ctab.molecule.atoms.get(i1);
					p1 = _utils2.default.calcNewAtomPos(atom.pp.get_xy0(), xy1, event.ctrlKey);
				}
			}
			// don't rotate the bond if the distance between the start and end point is too small
			if (dist > 0.3) dragCtx.action = (0, _bond.fromBondAddition)(rnd.ctab, this.bondProps, i1, i2, p1, p2)[0];else delete dragCtx.action;
			this.editor.update(dragCtx.action, true);
			return true;
		}
	}
	this.editor.hover(this.editor.findItem(event, ['atoms', 'bonds']));
	return true;
};

BondTool.prototype.mouseup = function (event) {
	// eslint-disable-line max-statements
	if ('dragCtx' in this) {
		var dragCtx = this.dragCtx;
		var rnd = this.editor.render;
		var struct = rnd.ctab.molecule;
		if ('action' in dragCtx) {
			this.editor.update(dragCtx.action);
		} else if (!('item' in dragCtx)) {
			var xy = rnd.page2obj(event);
			var v = new _vec2.default(1.0 / 2, 0).rotate(this.bondProps.type === _struct.Bond.PATTERN.TYPE.SINGLE ? -Math.PI / 6 : 0);
			var bondAddition = (0, _bond.fromBondAddition)(rnd.ctab, this.bondProps, { label: 'C' }, { label: 'C' }, _vec2.default.diff(xy, v), _vec2.default.sum(xy, v));

			this.editor.update(bondAddition[0]);
		} else if (dragCtx.item.map === 'atoms') {
			// when does it hapend?
			this.editor.update((0, _bond.fromBondAddition)(rnd.ctab, this.bondProps, dragCtx.item.id)[0]);
		} else if (dragCtx.item.map === 'bonds') {
			var bondProps = Object.assign({}, this.bondProps);
			var bond = struct.bonds.get(dragCtx.item.id);

			this.editor.update((0, _bond.bondChangingAction)(rnd.ctab, dragCtx.item.id, bond, bondProps));
		}
		delete this.dragCtx;
	}
	this.editor.event.message.dispatch({
		info: false
	});
	return true;
};

exports.default = BondTool;

},{"../../chem/struct":537,"../../util/vec2":686,"../actions/bond":544,"../shared/utils":561}],566:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * Copyright 2018 EPAM Systems

icensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * you may not use this file except in compliance with the License.
ou may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          *
http://www.apache.org/licenses/LICENSE-2.0

nless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
ee the License for the specific language governing permissions and
limitations under the License.


var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _struct = require('../../chem/struct');

var _utils = require('../shared/utils');

var _utils2 = _interopRequireDefault(_utils);

var _atom = require('./atom');

var _bond = require('../actions/bond');

var _chain = require('../actions/chain');

var _closelyFusing = require('../actions/closely-fusing');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ChainTool(editor) {
	if (!(this instanceof ChainTool)) return new ChainTool(editor);

	this.editor = editor;
	this.editor.selection(null);
}

ChainTool.prototype.mousedown = function (event) {
	var rnd = this.editor.render;
	var ci = this.editor.findItem(event, ['atoms', 'bonds']);
	this.editor.hover(null);
	this.dragCtx = {
		xy0: rnd.page2obj(event),
		item: ci
	};
	if (ci && ci.map === 'atoms') {
		this.editor.selection({ atoms: [ci.id] }); // for change atom
		// this event has to be stopped in others events by `tool.dragCtx.stopTapping()`
		(0, _atom.atomLongtapEvent)(this, rnd);
	}
	if (!this.dragCtx.item) // ci.type == 'Canvas'
		delete this.dragCtx.item;
	return true;
};

ChainTool.prototype.mousemove = function (event) {
	// eslint-disable-line max-statements
	var editor = this.editor;
	var restruct = editor.render.ctab;
	var dragCtx = this.dragCtx;

	editor.hover(this.editor.findItem(event, ['atoms', 'bonds']));
	if (!dragCtx) return true;

	if (dragCtx && dragCtx.stopTapping) dragCtx.stopTapping();

	editor.selection(null);

	if (!dragCtx.item || dragCtx.item.map === 'atoms') {
		if (dragCtx.action) dragCtx.action.perform(restruct);

		var atoms = restruct.molecule.atoms;

		var pos0 = dragCtx.item ? atoms.get(dragCtx.item.id).pp : dragCtx.xy0;

		var pos1 = editor.render.page2obj(event);
		var sectCount = Math.ceil(_vec2.default.diff(pos1, pos0).length());

		var angle = event.ctrlKey ? _utils2.default.calcAngle(pos0, pos1) : _utils2.default.fracAngle(pos0, pos1);

		var _fromChain = (0, _chain.fromChain)(restruct, pos0, angle, sectCount, dragCtx.item ? dragCtx.item.id : null),
		    _fromChain2 = _slicedToArray(_fromChain, 2),
		    action = _fromChain2[0],
		    newItems = _fromChain2[1];

		editor.event.message.dispatch({
			info: sectCount + ' sectors'
		});

		dragCtx.action = action;
		editor.update(dragCtx.action, true);

		dragCtx.mergeItems = (0, _closelyFusing.getItemsToFuse)(editor, newItems);
		editor.hover((0, _closelyFusing.getHoverToFuse)(dragCtx.mergeItems));

		return true;
	}

	return true;
};

ChainTool.prototype.mouseup = function () {
	var dragCtx = this.dragCtx;
	if (!dragCtx) return true;
	delete this.dragCtx;

	var editor = this.editor;
	var restruct = editor.render.ctab;
	var struct = restruct.molecule;

	if (dragCtx.stopTapping) dragCtx.stopTapping();

	if (!dragCtx.action && dragCtx.item && dragCtx.item.map === 'bonds') {
		var bond = struct.bonds.get(dragCtx.item.id);

		dragCtx.action = (0, _bond.bondChangingAction)(restruct, dragCtx.item.id, bond, {
			type: _struct.Bond.PATTERN.TYPE.SINGLE,
			stereo: _struct.Bond.PATTERN.STEREO.NONE
		});
	} else {
		dragCtx.action = dragCtx.action ? (0, _closelyFusing.fromItemsFuse)(restruct, dragCtx.mergeItems).mergeWith(dragCtx.action) : (0, _closelyFusing.fromItemsFuse)(restruct, dragCtx.mergeItems);
	}

	editor.selection(null);
	editor.hover(null);

	if (dragCtx.action) editor.update(dragCtx.action);

	editor.event.message.dispatch({
		info: false
	});

	return true;
};

ChainTool.prototype.cancel = ChainTool.prototype.mouseup;

ChainTool.prototype.mouseleave = ChainTool.prototype.mouseup;

exports.default = ChainTool;

},{"../../chem/struct":537,"../../util/vec2":686,"../actions/bond":544,"../actions/chain":545,"../actions/closely-fusing":547,"../shared/utils":561,"./atom":563}],567:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _element = require('../../chem/element');

var _element2 = _interopRequireDefault(_element);

var _atom = require('../actions/atom');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function ChargeTool(editor, charge) {
	if (!(this instanceof ChargeTool)) return new ChargeTool(editor, charge);

	this.editor = editor;
	this.editor.selection(null);
	this.charge = charge;
}

ChargeTool.prototype.mousemove = function (event) {
	var rnd = this.editor.render;
	var ci = this.editor.findItem(event, ['atoms']);
	var struct = rnd.ctab.molecule;
	if (ci && ci.map === 'atoms' && _element2.default.map[struct.atoms.get(ci.id).label]) this.editor.hover(ci);else this.editor.hover(null);
	return true;
};

ChargeTool.prototype.click = function (event) {
	var editor = this.editor;
	var rnd = editor.render;
	var struct = rnd.ctab.molecule;
	var ci = editor.findItem(event, ['atoms']);
	if (ci && ci.map === 'atoms' && _element2.default.map[struct.atoms.get(ci.id).label]) {
		this.editor.hover(null);
		this.editor.update((0, _atom.fromAtomsAttrs)(rnd.ctab, ci.id, {
			charge: struct.atoms.get(ci.id).charge + this.charge
		}));
	}
	return true;
};

exports.default = ChargeTool;

},{"../../chem/element":520,"../actions/atom":542}],568:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _chiralFlag = require('../actions/chiral-flag');

function ChiralFlagTool(editor) {
  if (!(this instanceof ChiralFlagTool)) {
    this.editor = editor;
    var rnd = this.editor.render;

    var action = null;
    if (rnd.ctab.molecule.isChiral === false) action = (0, _chiralFlag.fromChiralFlagAddition)(rnd.ctab);else action = (0, _chiralFlag.fromChiralFlagDeletion)(rnd.ctab);

    this.editor.update(action);
  }
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

exports.default = ChiralFlagTool;

},{"../actions/chiral-flag":546}],569:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _lasso = require('./helper/lasso');

var _lasso2 = _interopRequireDefault(_lasso);

var _fragment = require('../actions/fragment');

var _atom = require('../actions/atom');

var _bond = require('../actions/bond');

var _reaction = require('../actions/reaction');

var _sgroup = require('../actions/sgroup');

var _chiralFlag = require('../actions/chiral-flag');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EraserTool(editor, mode) {
	if (!(this instanceof EraserTool)) {
		if (!editor.selection()) return new EraserTool(editor, mode);

		var action = (0, _fragment.fromFragmentDeletion)(editor.render.ctab, editor.selection());
		editor.update(action);
		editor.selection(null);
		return null;
	}

	this.editor = editor;

	this.maps = ['atoms', 'bonds', 'rxnArrows', 'rxnPluses', 'sgroups', 'sgroupData', 'chiralFlags'];
	this.lassoHelper = new _lasso2.default(mode || 0, editor);
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

EraserTool.prototype.mousedown = function (event) {
	var ci = this.editor.findItem(event, this.maps);
	if (!ci) //  ci.type == 'Canvas'
		this.lassoHelper.begin(event);
};

EraserTool.prototype.mousemove = function (event) {
	if (this.lassoHelper.running()) this.editor.selection(this.lassoHelper.addPoint(event));else this.editor.hover(this.editor.findItem(event, this.maps));
};

EraserTool.prototype.mouseup = function (event) {
	// eslint-disable-line max-statements
	var rnd = this.editor.render;

	if (this.lassoHelper.running()) {
		// TODO it catches more events than needed, to be re-factored
		this.editor.update((0, _fragment.fromFragmentDeletion)(rnd.ctab, this.lassoHelper.end(event)));
		this.editor.selection(null);
	}
};

EraserTool.prototype.click = function (event) {
	var restruct = this.editor.render.ctab;
	var ci = this.editor.findItem(event, this.maps);

	if (!ci) return; // ci.type == 'Canvas'

	this.editor.hover(null);
	if (ci.map === 'atoms') {
		this.editor.update((0, _atom.fromAtomDeletion)(restruct, ci.id));
	} else if (ci.map === 'bonds') {
		this.editor.update((0, _bond.fromBondDeletion)(restruct, ci.id));
	} else if (ci.map === 'sgroups' || ci.map === 'sgroupData') {
		this.editor.update((0, _sgroup.fromSgroupDeletion)(restruct, ci.id));
	} else if (ci.map === 'rxnArrows') {
		this.editor.update((0, _reaction.fromArrowDeletion)(restruct, ci.id));
	} else if (ci.map === 'rxnPluses') {
		this.editor.update((0, _reaction.fromPlusDeletion)(restruct, ci.id));
	} else if (ci.map === 'chiralFlags') {
		this.editor.update((0, _chiralFlag.fromChiralFlagDeletion)(restruct));
	} else {
		// TODO re-factoring needed - should be "map-independent"
		console.error('EraserTool: unable to delete the object ' + ci.map + '[' + ci.id + ']');
		return;
	}
	this.editor.selection(null);
};

EraserTool.prototype.mouseleave = EraserTool.prototype.mouseup;

EraserTool.prototype.cancel = function () {
	if (this.lassoHelper.running()) this.lassoHelper.end();
	this.editor.selection(null);
};

exports.default = EraserTool;

},{"../actions/atom":542,"../actions/bond":544,"../actions/chiral-flag":546,"../actions/fragment":548,"../actions/reaction":550,"../actions/sgroup":553,"./helper/lasso":570}],570:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _locate = require('./locate');

var _locate2 = _interopRequireDefault(_locate);

var _draw = require('../../../render/draw');

var _draw2 = _interopRequireDefault(_draw);

var _scale = require('../../../util/scale');

var _scale2 = _interopRequireDefault(_scale);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function LassoHelper(mode, editor, fragment) {
	this.mode = mode;
	this.fragment = fragment;
	this.editor = editor;
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

LassoHelper.prototype.getSelection = function () {
	var rnd = this.editor.render;

	if (this.mode === 0) return _locate2.default.inPolygon(rnd.ctab, this.points);

	if (this.mode === 1) return _locate2.default.inRectangle(rnd.ctab, this.points[0], this.points[1]);

	throw new Error('Selector mode unknown'); // eslint-disable-line no-else-return
};

LassoHelper.prototype.begin = function (event) {
	var rnd = this.editor.render;
	this.points = [rnd.page2obj(event)];
	if (this.mode === 1) this.points.push(this.points[0]);
};

LassoHelper.prototype.running = function () {
	return !!this.points;
};

LassoHelper.prototype.addPoint = function (event) {
	if (!this.points) return null;

	var rnd = this.editor.render;

	if (this.mode === 0) this.points.push(rnd.page2obj(event));else if (this.mode === 1) this.points = [this.points[0], rnd.page2obj(event)];

	this.update();
	return this.getSelection();
};

LassoHelper.prototype.update = function () {
	if (this.selection) {
		this.selection.remove();
		this.selection = null;
	}

	if (this.points && this.points.length > 1) {
		var rnd = this.editor.render;
		var dp = this.points.map(function (p) {
			return _scale2.default.obj2scaled(p, rnd.options).add(rnd.options.offset);
		});
		this.selection = this.mode === 0 ? _draw2.default.selectionPolygon(rnd.paper, dp, rnd.options) : _draw2.default.selectionRectangle(rnd.paper, dp[0], dp[1], rnd.options);
	}
};

LassoHelper.prototype.end = function () {
	var ret = this.getSelection();
	this.points = null;
	this.update(null);
	return ret;
};

exports.default = LassoHelper;

},{"../../../render/draw":585,"../../../util/scale":685,"./locate":571}],571:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _vec = require('../../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getElementsInRectangle(restruct, p0, p1) {
	var bondList = [];
	var atomList = [];

	var x0 = Math.min(p0.x, p1.x);
	var x1 = Math.max(p0.x, p1.x);
	var y0 = Math.min(p0.y, p1.y);
	var y1 = Math.max(p0.y, p1.y);

	restruct.bonds.forEach(function (bond, bid) {
		var centre = _vec2.default.lc2(restruct.atoms.get(bond.b.begin).a.pp, 0.5, restruct.atoms.get(bond.b.end).a.pp, 0.5);
		if (centre.x > x0 && centre.x < x1 && centre.y > y0 && centre.y < y1) bondList.push(bid);
	});

	restruct.atoms.forEach(function (atom, aid) {
		if (atom.a.pp.x > x0 && atom.a.pp.x < x1 && atom.a.pp.y > y0 && atom.a.pp.y < y1) atomList.push(aid);
	});

	var rxnArrowsList = [];
	var rxnPlusesList = [];

	restruct.rxnArrows.forEach(function (item, id) {
		if (item.item.pp.x > x0 && item.item.pp.x < x1 && item.item.pp.y > y0 && item.item.pp.y < y1) rxnArrowsList.push(id);
	});

	restruct.rxnPluses.forEach(function (item, id) {
		if (item.item.pp.x > x0 && item.item.pp.x < x1 && item.item.pp.y > y0 && item.item.pp.y < y1) rxnPlusesList.push(id);
	});

	var chiralFlagList = [];
	restruct.chiralFlags.forEach(function (item, id) {
		if (item.pp.x > x0 && item.pp.x < x1 && item.pp.y > y0 && item.pp.y < y1) chiralFlagList.push(id);
	});

	var sgroupDataList = [];
	restruct.sgroupData.forEach(function (item, id) {
		if (item.sgroup.pp.x > x0 && item.sgroup.pp.x < x1 && item.sgroup.pp.y > y0 && item.sgroup.pp.y < y1) sgroupDataList.push(id);
	});

	return {
		atoms: atomList,
		bonds: bondList,
		rxnArrows: rxnArrowsList,
		rxnPluses: rxnPlusesList,
		chiralFlags: chiralFlagList,
		sgroupData: sgroupDataList
	};
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

function getElementsInPolygon(restruct, rr) {
	// eslint-disable-line max-statements
	var bondList = [];
	var atomList = [];
	var r = [];

	for (var i = 0; i < rr.length; ++i) {
		r[i] = new _vec2.default(rr[i].x, rr[i].y);
	}restruct.bonds.forEach(function (bond, bid) {
		var centre = _vec2.default.lc2(restruct.atoms.get(bond.b.begin).a.pp, 0.5, restruct.atoms.get(bond.b.end).a.pp, 0.5);
		if (isPointInPolygon(r, centre)) bondList.push(bid);
	});

	restruct.atoms.forEach(function (atom, aid) {
		if (isPointInPolygon(r, atom.a.pp)) atomList.push(aid);
	});

	var rxnArrowsList = [];
	var rxnPlusesList = [];

	restruct.rxnArrows.forEach(function (item, id) {
		if (isPointInPolygon(r, item.item.pp)) rxnArrowsList.push(id);
	});

	restruct.rxnPluses.forEach(function (item, id) {
		if (isPointInPolygon(r, item.item.pp)) rxnPlusesList.push(id);
	});

	var chiralFlagList = [];
	restruct.chiralFlags.forEach(function (item, id) {
		if (isPointInPolygon(r, item.pp)) chiralFlagList.push(id);
	});

	var sgroupDataList = [];
	restruct.sgroupData.forEach(function (item, id) {
		if (isPointInPolygon(r, item.sgroup.pp)) sgroupDataList.push(id);
	});

	return {
		atoms: atomList,
		bonds: bondList,
		rxnArrows: rxnArrowsList,
		rxnPluses: rxnPlusesList,
		chiralFlags: chiralFlagList,
		sgroupData: sgroupDataList
	};
}

// TODO: test me see testPolygon from
// 'Remove unused methods from render' commit
function isPointInPolygon(r, p) {
	// eslint-disable-line max-statements
	var d = new _vec2.default(0, 1);
	var n = d.rotate(Math.PI / 2);
	var v0 = _vec2.default.diff(r[r.length - 1], p);
	var n0 = _vec2.default.dot(n, v0);
	var d0 = _vec2.default.dot(d, v0);
	var w0 = null;
	var counter = 0;
	var eps = 1e-5;
	var flag1 = false;
	var flag0 = false;

	for (var i = 0; i < r.length; ++i) {
		var v1 = _vec2.default.diff(r[i], p);
		var w1 = _vec2.default.diff(v1, v0);
		var n1 = _vec2.default.dot(n, v1);
		var d1 = _vec2.default.dot(d, v1);
		flag1 = false;
		if (n1 * n0 < 0) {
			if (d1 * d0 > -eps) {
				if (d0 > -eps) flag1 = true;
				/* eslint-disable no-mixed-operators*/
			} else if ((Math.abs(n0) * Math.abs(d1) - Math.abs(n1) * Math.abs(d0)) * d1 > 0) {
				/* eslint-enable no-mixed-operators*/
				flag1 = true;
			}
		}
		if (flag1 && flag0 && _vec2.default.dot(w1, n) * _vec2.default.dot(w0, n) >= 0) flag1 = false;
		if (flag1) counter++;
		v0 = v1;
		n0 = n1;
		d0 = d1;
		w0 = w1;
		flag0 = flag1;
	}
	return counter % 2 !== 0;
}

exports.default = {
	inRectangle: getElementsInRectangle,
	inPolygon: getElementsInPolygon
};

},{"../../../util/vec2":686}],572:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _rgroupatom = require('./rgroupatom');

var _rgroupatom2 = _interopRequireDefault(_rgroupatom);

var _select = require('./select');

var _select2 = _interopRequireDefault(_select);

var _sgroup = require('./sgroup');

var _sgroup2 = _interopRequireDefault(_sgroup);

var _eraser = require('./eraser');

var _eraser2 = _interopRequireDefault(_eraser);

var _atom = require('./atom');

var _atom2 = _interopRequireDefault(_atom);

var _bond = require('./bond');

var _bond2 = _interopRequireDefault(_bond);

var _chain = require('./chain');

var _chain2 = _interopRequireDefault(_chain);

var _chiralFlag = require('./chiral-flag');

var _chiralFlag2 = _interopRequireDefault(_chiralFlag);

var _template = require('./template');

var _template2 = _interopRequireDefault(_template);

var _charge = require('./charge');

var _charge2 = _interopRequireDefault(_charge);

var _rgroupfragment = require('./rgroupfragment');

var _rgroupfragment2 = _interopRequireDefault(_rgroupfragment);

var _apoint = require('./apoint');

var _apoint2 = _interopRequireDefault(_apoint);

var _attach = require('./attach');

var _attach2 = _interopRequireDefault(_attach);

var _reactionarrow = require('./reactionarrow');

var _reactionarrow2 = _interopRequireDefault(_reactionarrow);

var _reactionplus = require('./reactionplus');

var _reactionplus2 = _interopRequireDefault(_reactionplus);

var _reactionmap = require('./reactionmap');

var _reactionmap2 = _interopRequireDefault(_reactionmap);

var _reactionunmap = require('./reactionunmap');

var _reactionunmap2 = _interopRequireDefault(_reactionunmap);

var _paste = require('./paste');

var _paste2 = _interopRequireDefault(_paste);

var _rotate = require('./rotate');

var _rotate2 = _interopRequireDefault(_rotate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	rgroupatom: _rgroupatom2.default,
	select: _select2.default,
	sgroup: _sgroup2.default,
	eraser: _eraser2.default,
	atom: _atom2.default,
	bond: _bond2.default,
	chain: _chain2.default,
	chiralFlag: _chiralFlag2.default,
	template: _template2.default,
	charge: _charge2.default,
	rgroupfragment: _rgroupfragment2.default,
	apoint: _apoint2.default,
	attach: _attach2.default,
	reactionarrow: _reactionarrow2.default,
	reactionplus: _reactionplus2.default,
	reactionmap: _reactionmap2.default,
	reactionunmap: _reactionunmap2.default,
	paste: _paste2.default,
	rotate: _rotate2.default
}; /****************************************************************************
    * Copyright 2018 EPAM Systems
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *    http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    ***************************************************************************/

},{"./apoint":562,"./atom":563,"./attach":564,"./bond":565,"./chain":566,"./charge":567,"./chiral-flag":568,"./eraser":569,"./paste":573,"./reactionarrow":574,"./reactionmap":575,"./reactionplus":576,"./reactionunmap":577,"./rgroupatom":578,"./rgroupfragment":579,"./rotate":580,"./select":581,"./sgroup":582,"./template":583}],573:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /****************************************************************************
opyright 2018 EPAM Systems

icensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
ou may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

nless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
ee the License for the specific language governing permissions and
limitations under the License.


var _paste = require('../actions/paste');

var _closelyFusing = require('../actions/closely-fusing');

function PasteTool(editor, struct) {
	if (!(this instanceof PasteTool)) return new PasteTool(editor, struct);

	this.editor = editor;
	this.editor.selection(null);
	this.struct = struct;

	var rnd = editor.render;
	var point = editor.lastEvent ? rnd.page2obj(editor.lastEvent) : null;

	var _fromPaste = (0, _paste.fromPaste)(rnd.ctab, this.struct, point),
	    _fromPaste2 = _slicedToArray(_fromPaste, 2),
	    action = _fromPaste2[0],
	    pasteItems = _fromPaste2[1];

	this.action = action;
	this.editor.update(this.action, true);

	this.mergeItems = (0, _closelyFusing.getItemsToFuse)(this.editor, pasteItems);
	this.editor.hover((0, _closelyFusing.getHoverToFuse)(this.mergeItems), this);
}

PasteTool.prototype.mousemove = function (event) {
	var rnd = this.editor.render;

	if (this.action) this.action.perform(rnd.ctab);

	var _fromPaste3 = (0, _paste.fromPaste)(rnd.ctab, this.struct, rnd.page2obj(event)),
	    _fromPaste4 = _slicedToArray(_fromPaste3, 2),
	    action = _fromPaste4[0],
	    pasteItems = _fromPaste4[1];

	this.action = action;
	this.editor.update(this.action, true);

	this.mergeItems = (0, _closelyFusing.getItemsToFuse)(this.editor, pasteItems);
	this.editor.hover((0, _closelyFusing.getHoverToFuse)(this.mergeItems));
};

PasteTool.prototype.mouseup = function () {
	var editor = this.editor;
	var restruct = editor.render.ctab;

	editor.selection(null);

	this.action = this.action ? (0, _closelyFusing.fromItemsFuse)(restruct, this.mergeItems).mergeWith(this.action) : (0, _closelyFusing.fromItemsFuse)(restruct, this.mergeItems);

	editor.hover(null);

	if (this.action) {
		var action = this.action;
		delete this.action;
		this.editor.update(action);
	}
};

PasteTool.prototype.cancel = function () {
	var rnd = this.editor.render;
	this.editor.hover(null);
	if (this.action) {
		this.action.perform(rnd.ctab); // revert the action
		delete this.action;
		rnd.update();
	}
};
PasteTool.prototype.mouseleave = PasteTool.prototype.cancel;

exports.default = PasteTool;

},{"../actions/closely-fusing":547,"../actions/paste":549}],574:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _action = require('../shared/action');

var _action2 = _interopRequireDefault(_action);

var _reaction = require('../actions/reaction');

var _fragment = require('../actions/fragment');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ReactionArrowTool(editor) {
	if (!(this instanceof ReactionArrowTool)) return new ReactionArrowTool(editor);

	this.editor = editor;
	this.editor.selection(null);
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

ReactionArrowTool.prototype.mousedown = function (event) {
	var rnd = this.editor.render;
	var ci = this.editor.findItem(event, ['rxnArrows']);
	if (ci && ci.map === 'rxnArrows') {
		this.editor.hover(null);
		this.editor.selection({ rxnArrows: [ci.id] });
		this.dragCtx = {
			xy0: rnd.page2obj(event),
			action: new _action2.default()
		};
	}
};

ReactionArrowTool.prototype.mousemove = function (event) {
	var rnd = this.editor.render;
	if ('dragCtx' in this) {
		if (this.dragCtx.action) this.dragCtx.action.perform(rnd.ctab);

		this.dragCtx.action = (0, _fragment.fromMultipleMove)(rnd.ctab, this.editor.selection() || {}, rnd.page2obj(event).sub(this.dragCtx.xy0));
		this.editor.update(this.dragCtx.action, true);
	} else {
		this.editor.hover(this.editor.findItem(event, ['rxnArrows']));
	}
};

ReactionArrowTool.prototype.mouseup = function () {
	if (this.dragCtx) {
		this.editor.update(this.dragCtx.action); // TODO investigate, subsequent undo/redo fails
		delete this.dragCtx;
	}
};

ReactionArrowTool.prototype.click = function (event) {
	var rnd = this.editor.render;
	if (rnd.ctab.molecule.rxnArrows.size < 1) this.editor.update((0, _reaction.fromArrowAddition)(rnd.ctab, rnd.page2obj(event)));
};

exports.default = ReactionArrowTool;

},{"../actions/fragment":548,"../actions/reaction":550,"../shared/action":557}],575:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _scale = require('../../util/scale');

var _scale2 = _interopRequireDefault(_scale);

var _action = require('../shared/action');

var _action2 = _interopRequireDefault(_action);

var _draw = require('../../render/draw');

var _draw2 = _interopRequireDefault(_draw);

var _atom = require('../actions/atom');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function ReactionMapTool(editor) {
	if (!(this instanceof ReactionMapTool)) return new ReactionMapTool(editor);

	this.editor = editor;
	this.editor.selection(null);
}

ReactionMapTool.prototype.mousedown = function (event) {
	var rnd = this.editor.render;
	this.rcs = rnd.ctab.molecule.getComponents();

	var ci = this.editor.findItem(event, ['atoms']);
	if (ci && ci.map === 'atoms') {
		this.editor.hover(null);
		this.dragCtx = {
			item: ci,
			xy0: rnd.page2obj(event)
		};
	}
};
ReactionMapTool.prototype.mousemove = function (event) {
	var rnd = this.editor.render;
	if ('dragCtx' in this) {
		var ci = this.editor.findItem(event, ['atoms'], this.dragCtx.item);
		var atoms = rnd.ctab.molecule.atoms;
		if (ci && ci.map === 'atoms' && isValidMap(this.rcs, this.dragCtx.item.id, ci.id)) {
			this.editor.hover(ci);
			this.updateLine(atoms.get(this.dragCtx.item.id).pp, atoms.get(ci.id).pp);
		} else {
			this.editor.hover(null);
			this.updateLine(atoms.get(this.dragCtx.item.id).pp, rnd.page2obj(event));
		}
	} else {
		this.editor.hover(this.editor.findItem(event, ['atoms']));
	}
};

ReactionMapTool.prototype.updateLine = function (p1, p2) {
	if (this.line) {
		this.line.remove();
		this.line = null;
	}
	if (p1 && p2) {
		var rnd = this.editor.render;
		this.line = _draw2.default.selectionLine(rnd.paper, _scale2.default.obj2scaled(p1, rnd.options).add(rnd.options.offset), _scale2.default.obj2scaled(p2, rnd.options).add(rnd.options.offset), rnd.options);
	}
};

ReactionMapTool.prototype.mouseup = function (event) {
	var _this = this;

	// eslint-disable-line max-statements
	if ('dragCtx' in this) {
		var rnd = this.editor.render;
		var ci = this.editor.findItem(event, ['atoms'], this.dragCtx.item);
		if (ci && ci.map === 'atoms' && isValidMap(this.rcs, this.dragCtx.item.id, ci.id)) {
			var action = new _action2.default();
			var atoms = rnd.ctab.molecule.atoms;
			var atom1 = atoms.get(this.dragCtx.item.id);
			var atom2 = atoms.get(ci.id);
			var aam1 = atom1.aam;
			var aam2 = atom2.aam;
			if (!aam1 || aam1 !== aam2) {
				if (aam1 && aam1 !== aam2 || !aam1 && aam2) {
					// eslint-disable-line no-mixed-operators
					atoms.forEach(function (atom, aid) {
						if (aid !== _this.dragCtx.item.id && (aam1 && atom.aam === aam1 || aam2 && atom.aam === aam2)) action.mergeWith((0, _atom.fromAtomsAttrs)(rnd.ctab, aid, { aam: 0 }));
					});
				}
				if (aam1) {
					action.mergeWith((0, _atom.fromAtomsAttrs)(rnd.ctab, ci.id, { aam: aam1 }));
				} else {
					var aam = 0;
					atoms.forEach(function (atom) {
						aam = Math.max(aam, atom.aam || 0);
					});
					action.mergeWith((0, _atom.fromAtomsAttrs)(rnd.ctab, this.dragCtx.item.id, { aam: aam + 1 }));
					action.mergeWith((0, _atom.fromAtomsAttrs)(rnd.ctab, ci.id, { aam: aam + 1 }));
				}
				this.editor.update(action);
			}
		}
		this.updateLine(null);
		delete this.dragCtx;
	}
	this.editor.hover(null);
};

function isValidMap(rcs, aid1, aid2) {
	var t1;
	var t2;
	for (var ri = 0; (!t1 || !t2) && ri < rcs.reactants.length; ri++) {
		var ro = Array.from(rcs.reactants[ri]);
		if (!t1 && ro.indexOf(aid1) >= 0) t1 = 'r';
		if (!t2 && ro.indexOf(aid2) >= 0) t2 = 'r';
	}
	for (var pi = 0; (!t1 || !t2) && pi < rcs.products.length; pi++) {
		var po = Array.from(rcs.products[pi]);
		if (!t1 && po.indexOf(aid1) >= 0) t1 = 'p';
		if (!t2 && po.indexOf(aid2) >= 0) t2 = 'p';
	}
	return t1 && t2 && t1 !== t2;
}

exports.default = ReactionMapTool;

},{"../../render/draw":585,"../../util/scale":685,"../actions/atom":542,"../shared/action":557}],576:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _reaction = require('../actions/reaction');

var _fragment = require('../actions/fragment');

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function ReactionPlusTool(editor) {
	if (!(this instanceof ReactionPlusTool)) return new ReactionPlusTool(editor);

	this.editor = editor;
	this.editor.selection(null);
}

ReactionPlusTool.prototype.mousedown = function (event) {
	var rnd = this.editor.render;
	var ci = this.editor.findItem(event, ['rxnPluses']);
	if (ci && ci.map === 'rxnPluses') {
		this.editor.hover(null);
		this.editor.selection({ rxnPluses: [ci.id] });
		this.dragCtx = { xy0: rnd.page2obj(event) };
	}
};

ReactionPlusTool.prototype.mousemove = function (event) {
	var rnd = this.editor.render;
	if ('dragCtx' in this) {
		if (this.dragCtx.action) this.dragCtx.action.perform(rnd.ctab);
		this.dragCtx.action = (0, _fragment.fromMultipleMove)(rnd.ctab, this.editor.selection() || {}, rnd.page2obj(event).sub(this.dragCtx.xy0));
		this.editor.update(this.dragCtx.action, true);
	} else {
		this.editor.hover(this.editor.findItem(event, ['rxnPluses']));
	}
};

ReactionPlusTool.prototype.mouseup = function () {
	if (this.dragCtx) {
		this.editor.update(this.dragCtx.action); // TODO investigate, subsequent undo/redo fails
		delete this.dragCtx;
	}
};

ReactionPlusTool.prototype.click = function (event) {
	var rnd = this.editor.render;
	this.editor.update((0, _reaction.fromPlusAddition)(rnd.ctab, rnd.page2obj(event)));
};

exports.default = ReactionPlusTool;

},{"../actions/fragment":548,"../actions/reaction":550}],577:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _action = require('../shared/action');

var _action2 = _interopRequireDefault(_action);

var _atom = require('../actions/atom');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function ReactionUnmapTool(editor) {
	if (!(this instanceof ReactionUnmapTool)) return new ReactionUnmapTool(editor);

	this.editor = editor;
	this.editor.selection(null);
}
ReactionUnmapTool.prototype.mousemove = function (event) {
	var ci = this.editor.findItem(event, ['atoms']);
	if (ci && ci.map === 'atoms') this.editor.hover(this.editor.render.ctab.molecule.atoms.get(ci.id).aam ? ci : null);else this.editor.hover(null);
};
ReactionUnmapTool.prototype.mouseup = function (event) {
	var _this = this;

	var ci = this.editor.findItem(event, ['atoms']);
	var atoms = this.editor.render.ctab.molecule.atoms;
	if (ci && ci.map === 'atoms' && atoms.get(ci.id).aam) {
		var action = new _action2.default();
		var aam = atoms.get(ci.id).aam;
		atoms.forEach(function (atom, aid) {
			if (atom.aam === aam) action.mergeWith((0, _atom.fromAtomsAttrs)(_this.editor.render.ctab, aid, { aam: 0 }));
		});
		this.editor.update(action);
	}
	this.editor.hover(null);
};

exports.default = ReactionUnmapTool;

},{"../actions/atom":542,"../shared/action":557}],578:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _struct = require('../../chem/struct');

var _atom = require('../actions/atom');

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function RGroupAtomTool(editor) {
	if (!(this instanceof RGroupAtomTool)) {
		// TODO: map atoms with labels
		editor.selection(null);
		return new RGroupAtomTool(editor);
	}

	this.editor = editor;
}

RGroupAtomTool.prototype.mousemove = function (event) {
	this.editor.hover(this.editor.findItem(event, ['atoms']));
};

RGroupAtomTool.prototype.click = function (event) {
	var rnd = this.editor.render;
	var ci = this.editor.findItem(event, ['atoms']);

	if (!ci) {
		//  ci.type == 'Canvas'
		this.editor.hover(null);
		propsDialog(this.editor, null, rnd.page2obj(event));
		return true;
	} else if (ci.map === 'atoms') {
		this.editor.hover(null);
		propsDialog(this.editor, ci.id);
		return true;
	}
	return true;
};

function propsDialog(editor, id, pos) {
	var struct = editor.render.ctab.molecule;
	var atom = id || id === 0 ? struct.atoms.get(id) : null;
	var rglabel = atom ? atom.rglabel : 0;
	var label = atom ? atom.label : 'R#';

	var res = editor.event.elementEdit.dispatch({
		label: 'R#',
		rglabel: rglabel,
		fragId: atom ? atom.fragment : null
	});

	Promise.resolve(res).then(function (elem) {
		// TODO review: using Atom.attrlist as a source of default property values
		elem = Object.assign({}, _struct.Atom.attrlist, elem);

		if (!id && id !== 0 && elem.rglabel) {
			editor.update((0, _atom.fromAtomAddition)(editor.render.ctab, pos, elem));
		} else if (rglabel !== elem.rglabel) {
			elem.aam = atom.aam; // WTF??
			elem.attpnt = atom.attpnt;

			if (!elem.rglabel && label !== 'R#') elem.label = label;

			editor.update((0, _atom.fromAtomsAttrs)(editor.render.ctab, id, elem));
		}
	}).catch(function () {
		return null;
	}); // w/o changes
}

exports.default = RGroupAtomTool;

},{"../../chem/struct":537,"../actions/atom":542}],579:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _struct = require('../../chem/struct');

var _rgroup = require('../actions/rgroup');

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function RGroupFragmentTool(editor) {
	if (!(this instanceof RGroupFragmentTool)) {
		// TODO: check if it's a fragments already
		editor.selection(null);
		return new RGroupFragmentTool(editor);
	}

	this.editor = editor;
}

RGroupFragmentTool.prototype.mousemove = function (event) {
	this.editor.hover(this.editor.findItem(event, ['frags', 'rgroups']));
};

RGroupFragmentTool.prototype.click = function (event) {
	var editor = this.editor;
	var struct = editor.render.ctab.molecule;
	var ci = editor.findItem(event, ['frags', 'rgroups']);

	if (!ci) return true;

	this.editor.hover(null);

	var label = ci.map === 'rgroups' ? ci.id : _struct.RGroup.findRGroupByFragment(struct.rgroups, ci.id);

	var rg = Object.assign({ label: label }, ci.map === 'frags' ? { fragId: ci.id } : struct.rgroups.get(ci.id));

	var res = editor.event.rgroupEdit.dispatch(rg);

	Promise.resolve(res).then(function (newRg) {
		var restruct = editor.render.ctab;

		var action = null;
		if (ci.map !== 'rgroups') {
			var rgidOld = _struct.RGroup.findRGroupByFragment(restruct.molecule.rgroups, ci.id);

			action = (0, _rgroup.fromRGroupFragment)(restruct, newRg.label, ci.id).mergeWith((0, _rgroup.fromUpdateIfThen)(restruct, newRg.label, rgidOld));
		} else {
			action = (0, _rgroup.fromRGroupAttrs)(restruct, ci.id, newRg);
		}

		editor.update(action);
	}).catch(function () {
		return null;
	}); // w/o changes

	return true;
};

RGroupFragmentTool.prototype.cancel = function () {
	this.editor.hover(null);
};

exports.default = RGroupFragmentTool;

},{"../../chem/struct":537,"../actions/rgroup":551}],580:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _utils = require('../shared/utils');

var _utils2 = _interopRequireDefault(_utils);

var _rotate = require('../actions/rotate');

var _closelyFusing = require('../actions/closely-fusing');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function RotateTool(editor, dir) {
	if (!(this instanceof RotateTool)) {
		if (!dir) return new RotateTool(editor);

		var restruct = editor.render.ctab;
		var selection = editor.selection();
		var singleBond = selection && selection.bonds && Object.keys(selection).length === 1 && selection.bonds.length === 1;

		var action = !singleBond ? (0, _rotate.fromFlip)(restruct, selection, dir) : (0, _rotate.fromBondAlign)(restruct, selection.bonds[0], dir);
		editor.update(action);
		return null;
	}

	this.editor = editor;

	if (!editor.selection() || !editor.selection().atoms)
		// otherwise, clear selection
		this.editor.selection(null);
}

RotateTool.prototype.mousedown = function (event) {
	var xy0 = new _vec2.default();
	var selection = this.editor.selection();
	var rnd = this.editor.render;
	var struct = rnd.ctab.molecule;

	if (selection && selection.atoms) {
		console.assert(selection.atoms.length > 0);

		var rotId = null;
		var rotAll = false;

		selection.atoms.forEach(function (aid) {
			var atom = struct.atoms.get(aid);

			xy0.add_(atom.pp); // eslint-disable-line no-underscore-dangle

			if (rotAll) return;

			atom.neighbors.find(function (nei) {
				var hb = struct.halfBonds.get(nei);

				if (selection.atoms.indexOf(hb.end) === -1) {
					if (hb.loop >= 0) {
						var neiAtom = struct.atoms.get(aid);
						if (!neiAtom.neighbors.find(function (neiNei) {
							var neiHb = struct.halfBonds.get(neiNei);
							return neiHb.loop >= 0 && selection.atoms.indexOf(neiHb.end) !== -1;
						})) {
							rotAll = true;
							return true;
						}
					}
					if (rotId == null) {
						rotId = aid;
					} else if (rotId !== aid) {
						rotAll = true;
						return true;
					}
				}
				return false;
			});
		});

		if (!rotAll && rotId !== null) xy0 = struct.atoms.get(rotId).pp;else xy0 = xy0.scaled(1 / selection.atoms.length);
	} else {
		struct.atoms.forEach(function (atom) {
			xy0.add_(atom.pp);
		}); // eslint-disable-line no-underscore-dangle, max-len
		// poor man struct center (without chiral, sdata, etc)
		xy0 = xy0.scaled(1 / struct.atoms.size);
	}
	this.dragCtx = {
		xy0: xy0,
		angle1: _utils2.default.calcAngle(xy0, rnd.page2obj(event))
	};
	return true;
};

RotateTool.prototype.mousemove = function (event) {
	// eslint-disable-line max-statements
	if (!this.dragCtx) return true;

	var rnd = this.editor.render;
	var dragCtx = this.dragCtx;

	var pos = rnd.page2obj(event);
	var angle = _utils2.default.calcAngle(dragCtx.xy0, pos) - dragCtx.angle1;
	if (!event.ctrlKey) angle = _utils2.default.fracAngle(angle);

	var degrees = _utils2.default.degrees(angle);

	if ('angle' in dragCtx && dragCtx.angle === degrees) return true;
	if ('action' in dragCtx) dragCtx.action.perform(rnd.ctab);

	dragCtx.angle = degrees;
	dragCtx.action = (0, _rotate.fromRotate)(rnd.ctab, this.editor.selection(), dragCtx.xy0, angle);

	this.editor.event.message.dispatch({ info: degrees + 'º' });

	var expSel = this.editor.explicitSelected();
	dragCtx.mergeItems = (0, _closelyFusing.getItemsToFuse)(this.editor, expSel);
	this.editor.hover((0, _closelyFusing.getHoverToFuse)(dragCtx.mergeItems));

	this.editor.update(dragCtx.action, true);
	return true;
};

RotateTool.prototype.mouseup = function () {
	if (!this.dragCtx) return true;
	var dragCtx = this.dragCtx;
	var restruct = this.editor.render.ctab;

	var action = dragCtx.action ? (0, _closelyFusing.fromItemsFuse)(restruct, dragCtx.mergeItems).mergeWith(dragCtx.action) : (0, _closelyFusing.fromItemsFuse)(restruct, dragCtx.mergeItems);
	delete this.dragCtx;

	this.editor.update(action);
	this.editor.hover(null);
	if (dragCtx.mergeItems) this.editor.selection(null);
	this.editor.event.message.dispatch({
		info: false
	});
	return true;
};

RotateTool.prototype.cancel = RotateTool.prototype.mouseup;
RotateTool.prototype.mouseleave = RotateTool.prototype.mouseup;

exports.default = RotateTool;

},{"../../util/vec2":686,"../actions/closely-fusing":547,"../actions/rotate":552,"../shared/utils":561}],581:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _xor2 = require('lodash/fp/xor');

var _xor3 = _interopRequireDefault(_xor2);

var _struct = require('../../chem/struct');

var _lasso = require('./helper/lasso');

var _lasso2 = _interopRequireDefault(_lasso);

var _sgroup = require('./sgroup');

var _atom = require('./atom');

var _fragment = require('../actions/fragment');

var _atom2 = require('../actions/atom');

var _bond = require('../actions/bond');

var _closelyFusing = require('../actions/closely-fusing');

var _utils = require('../shared/utils');

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function SelectTool(editor, mode) {
	if (!(this instanceof SelectTool)) return new SelectTool(editor, mode);

	this.editor = editor;
	this.lassoHelper = new _lasso2.default(mode === 'lasso' ? 0 : 1, editor, mode === 'fragment');
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

SelectTool.prototype.mousedown = function (event) {
	// eslint-disable-line max-statements
	var rnd = this.editor.render;
	var ctab = rnd.ctab;
	var struct = ctab.molecule;

	this.editor.hover(null); // TODO review hovering for touch devicess

	var selectFragment = this.lassoHelper.fragment || event.ctrlKey;
	var ci = this.editor.findItem(event, selectFragment ? ['frags', 'sgroups', 'sgroupData', 'rgroups', 'rxnArrows', 'rxnPluses', 'chiralFlags'] : ['atoms', 'bonds', 'sgroups', 'sgroupData', 'rgroups', 'rxnArrows', 'rxnPluses', 'chiralFlags']);

	this.dragCtx = {
		item: ci,
		xy0: rnd.page2obj(event)
	};

	if (!ci || ci.map === 'atoms') (0, _atom.atomLongtapEvent)(this, rnd);

	if (!ci) {
		//  ci.type == 'Canvas'
		delete this.dragCtx.item;
		if (!this.lassoHelper.fragment) this.lassoHelper.begin(event);
		return true;
	}

	var sel = closestToSel(ci);
	var selection = this.editor.selection();
	if (ci.map === 'frags') {
		var frag = ctab.frags.get(ci.id);
		sel = {
			atoms: frag.fragGetAtoms(ctab, ci.id),
			bonds: frag.fragGetBonds(ctab, ci.id)
		};
	} else if (ci.map === 'sgroups') {
		var sgroup = ctab.sgroups.get(ci.id).item;
		sel = {
			atoms: _struct.SGroup.getAtoms(struct, sgroup),
			bonds: _struct.SGroup.getBonds(struct, sgroup)
		};
	} else if (ci.map === 'rgroups') {
		var rgroup = ctab.rgroups.get(ci.id);
		sel = {
			atoms: rgroup.getAtoms(rnd),
			bonds: rgroup.getBonds(rnd)
		};
	} else if (ci.map === 'sgroupData') {
		if (isSelected(selection, ci)) return true;
	}

	if (!event.shiftKey) this.editor.selection(isSelected(selection, ci) ? selection : sel);else this.editor.selection(selMerge(sel, selection, true));
	return true;
};

SelectTool.prototype.mousemove = function (event) {
	var editor = this.editor;
	var rnd = editor.render;
	var restruct = editor.render.ctab;
	var dragCtx = this.dragCtx;
	if (dragCtx && dragCtx.stopTapping) dragCtx.stopTapping();
	if (dragCtx && dragCtx.item) {
		var atoms = restruct.molecule.atoms;
		var selection = editor.selection();
		var shouldDisplayDegree = dragCtx.item.map === 'atoms' && atoms.get(dragCtx.item.id).neighbors.length === 1 && selection.atoms.length === 1 && !selection.bonds;
		if (shouldDisplayDegree) {
			// moving selected objects
			var pos = rnd.page2obj(event);
			var angle = _utils2.default.calcAngle(dragCtx.xy0, pos);
			var degrees = _utils2.default.degrees(angle);
			this.editor.event.message.dispatch({ info: degrees + 'º' });
		}
		if (dragCtx.action) {
			dragCtx.action.perform(restruct);
			// redraw the elements in unshifted position, lest the have different offset
			editor.update(dragCtx.action, true);
		}

		var expSel = editor.explicitSelected();
		dragCtx.action = (0, _fragment.fromMultipleMove)(restruct, expSel, editor.render.page2obj(event).sub(dragCtx.xy0));

		dragCtx.mergeItems = (0, _closelyFusing.getItemsToFuse)(editor, expSel);
		editor.hover((0, _closelyFusing.getHoverToFuse)(dragCtx.mergeItems));

		editor.update(dragCtx.action, true);
		return true;
	}

	if (this.lassoHelper.running()) {
		var sel = this.lassoHelper.addPoint(event);
		editor.selection(!event.shiftKey ? sel : selMerge(sel, editor.selection(), false));
		return true;
	}

	var maps = this.lassoHelper.fragment || event.ctrlKey ? ['frags', 'sgroups', 'sgroupData', 'rgroups', 'rxnArrows', 'rxnPluses', 'chiralFlags'] : ['atoms', 'bonds', 'sgroups', 'sgroupData', 'rgroups', 'rxnArrows', 'rxnPluses', 'chiralFlags'];

	editor.hover(editor.findItem(event, maps));

	return true;
};

SelectTool.prototype.mouseup = function (event) {
	// eslint-disable-line max-statements
	var editor = this.editor;
	var restruct = editor.render.ctab;
	var dragCtx = this.dragCtx;

	if (dragCtx && dragCtx.stopTapping) dragCtx.stopTapping();

	if (dragCtx && dragCtx.item) {
		dragCtx.action = dragCtx.action ? (0, _closelyFusing.fromItemsFuse)(restruct, dragCtx.mergeItems).mergeWith(dragCtx.action) : (0, _closelyFusing.fromItemsFuse)(restruct, dragCtx.mergeItems);

		editor.hover(null);
		if (dragCtx.mergeItems) editor.selection(null);
		if (dragCtx.action.operations.length !== 0) editor.update(dragCtx.action);

		delete this.dragCtx;
	} else if (this.lassoHelper.running()) {
		// TODO it catches more events than needed, to be re-factored
		var sel = this.lassoHelper.end();
		editor.selection(!event.shiftKey ? sel : selMerge(sel, editor.selection()));
	} else if (this.lassoHelper.fragment) {
		if (!event.shiftKey) editor.selection(null);
	}
	this.editor.event.message.dispatch({
		info: false
	});
	return true;
};

SelectTool.prototype.dblclick = function (event) {
	// eslint-disable-line max-statements
	var editor = this.editor;
	var rnd = this.editor.render;
	var ci = this.editor.findItem(event, ['atoms', 'bonds', 'sgroups', 'sgroupData']);
	if (!ci) return true;

	var struct = rnd.ctab.molecule;
	if (ci.map === 'atoms') {
		this.editor.selection(closestToSel(ci));
		var atom = struct.atoms.get(ci.id);
		var ra = editor.event.elementEdit.dispatch(atom);
		Promise.resolve(ra).then(function (newatom) {
			// TODO: deep compare to not produce dummy, e.g.
			// atom.label != attrs.label || !atom.atomList.equals(attrs.atomList)
			editor.update((0, _atom2.fromAtomsAttrs)(rnd.ctab, ci.id, newatom));
		}).catch(function () {
			return null;
		}); // w/o changes
	} else if (ci.map === 'bonds') {
		this.editor.selection(closestToSel(ci));
		var bond = rnd.ctab.bonds.get(ci.id).b;
		var rb = editor.event.bondEdit.dispatch(bond);
		Promise.resolve(rb).then(function (newbond) {
			editor.update((0, _bond.fromBondsAttrs)(rnd.ctab, ci.id, newbond));
		}).catch(function () {
			return null;
		}); // w/o changes
	} else if (ci.map === 'sgroups' || ci.map === 'sgroupData') {
		this.editor.selection(closestToSel(ci));
		(0, _sgroup.sgroupDialog)(this.editor, ci.id);
	}
	return true;
};

SelectTool.prototype.cancel = function () {
	if (this.dragCtx && this.dragCtx.stopTapping) this.dragCtx.stopTapping();

	if (this.dragCtx && this.dragCtx.action) {
		var action = this.dragCtx.action;
		this.editor.update(action);
	}
	if (this.lassoHelper.running()) this.editor.selection(this.lassoHelper.end());

	delete this.dragCtx;

	this.editor.hover(null);
};
SelectTool.prototype.mouseleave = SelectTool.prototype.cancel;

function closestToSel(ci) {
	var res = {};
	res[ci.map] = [ci.id];
	return res;
}

// TODO: deep-merge?
function selMerge(selection, add, reversible) {
	if (add) {
		Object.keys(add).forEach(function (item) {
			if (!selection[item]) selection[item] = add[item].slice();else selection[item] = uniqArray(selection[item], add[item], reversible);
		});
	}
	return selection;
}

function isSelected(selection, item) {
	return selection && selection[item.map] && selection[item.map].includes(item.id);
}

function uniqArray(dest, add, reversible) {
	return add.reduce(function (res, item) {
		if (reversible) dest = (0, _xor3.default)(dest, [item]);else if (!dest.includes(item)) dest.push(item);
		return dest;
	}, []);
}

exports.default = SelectTool;

},{"../../chem/struct":537,"../actions/atom":542,"../actions/bond":544,"../actions/closely-fusing":547,"../actions/fragment":548,"../shared/utils":561,"./atom":563,"./helper/lasso":570,"./sgroup":582,"lodash/fp/xor":438}],582:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.sgroupDialog = sgroupDialog;

var _isEqual = require('lodash/fp/isEqual');

var _isEqual2 = _interopRequireDefault(_isEqual);

var _constants = require('../shared/constants');

var _pile = require('../../util/pile');

var _pile2 = _interopRequireDefault(_pile);

var _struct = require('../../chem/struct');

var _lasso = require('./helper/lasso');

var _lasso2 = _interopRequireDefault(_lasso);

var _sgroup = require('../actions/sgroup');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

var searchMaps = ['atoms', 'bonds', 'sgroups', 'sgroupData'];

function SGroupTool(editor, type) {
	if (!(this instanceof SGroupTool)) {
		var selection = editor.selection() || {};
		if (!selection.atoms && !selection.bonds) return new SGroupTool(editor, type);

		var sgroups = editor.render.ctab.molecule.sgroups;
		var selectedAtoms = editor.selection().atoms;

		var id = sgroups.find(function (_, sgroup) {
			return (0, _isEqual2.default)(sgroup.atoms, selectedAtoms);
		});

		sgroupDialog(editor, id !== undefined ? id : null, type);
		return null;
	}

	this.editor = editor;
	this.type = type;

	this.lassoHelper = new _lasso2.default(1, editor);
	this.editor.selection(null);
}

SGroupTool.prototype.mousedown = function (event) {
	var ci = this.editor.findItem(event, searchMaps);
	if (!ci) //  ci.type == 'Canvas'
		this.lassoHelper.begin(event);
};

SGroupTool.prototype.mousemove = function (event) {
	if (this.lassoHelper.running(event)) this.editor.selection(this.lassoHelper.addPoint(event));else this.editor.hover(this.editor.findItem(event, searchMaps));
};

SGroupTool.prototype.mouseleave = function (event) {
	if (this.lassoHelper.running(event)) this.lassoHelper.end(event);
};

SGroupTool.prototype.mouseup = function (event) {
	var id = null; // id of an existing group, if we're editing one
	var selection = null; // atoms to include in a newly created group
	if (this.lassoHelper.running(event)) {
		// TODO it catches more events than needed, to be re-factored
		selection = this.lassoHelper.end(event);
	} else {
		var ci = this.editor.findItem(event, searchMaps);
		if (!ci) // ci.type == 'Canvas'
			return;
		this.editor.hover(null);

		if (ci.map === 'atoms') {
			// if we click the SGroup tool on a single atom or bond, make a group out of those
			selection = { atoms: [ci.id] };
		} else if (ci.map === 'bonds') {
			var bond = this.editor.render.ctab.bonds.get(ci.id);
			selection = { atoms: [bond.b.begin, bond.b.end] };
		} else if (ci.map === 'sgroups' || ci.map === 'sgroupData') {
			id = ci.id;
		} else {
			return;
		}
	}

	// TODO: handle click on an existing group?
	if (id !== null || selection && selection.atoms) sgroupDialog(this.editor, id, this.type);
};

SGroupTool.prototype.cancel = function () {
	if (this.lassoHelper.running()) this.lassoHelper.end();
	this.editor.selection(null);
};

function sgroupDialog(editor, id, defaultType) {
	var restruct = editor.render.ctab;
	var struct = restruct.molecule;
	var selection = editor.selection() || {};
	var sg = id !== null ? struct.sgroups.get(id) : null;
	var type = sg ? sg.type : defaultType;
	var eventName = type === 'DAT' ? 'sdataEdit' : 'sgroupEdit';

	if (!selection.atoms && !selection.bonds && !sg) {
		console.info('There is no selection or sgroup');
		return;
	}

	var attrs = null;
	if (sg) {
		attrs = sg.getAttrs();
		attrs.context = getContextBySgroup(restruct, sg.atoms);
	} else {
		attrs = {
			context: getContextBySelection(restruct, selection)
		};
	}

	var res = editor.event[eventName].dispatch({
		type: type,
		attrs: attrs
	});

	Promise.resolve(res).then(function (newSg) {
		// TODO: check before signal
		if (newSg.type !== 'DAT' && // when data s-group separates
		checkOverlapping(struct, selection.atoms || [])) {
			editor.event.message.dispatch({
				error: 'Partial S-group overlapping is not allowed.'
			});
		} else {
			if (!sg && newSg.type !== 'DAT' && (!selection.atoms || selection.atoms.length === 0)) return;

			var isDataSg = sg && sg.getAttrs().context === newSg.attrs.context;

			if (isDataSg) {
				var action = (0, _sgroup.fromSeveralSgroupAddition)(restruct, newSg.type, sg.atoms, newSg.attrs).mergeWith((0, _sgroup.fromSgroupDeletion)(restruct, id));

				editor.update(action);
				editor.selection(selection);
				return;
			}

			var result = fromContextType(id, editor, newSg, selection);
			editor.update(result.action);
			editor.selection(result.selection);
		}
	}).catch(function () {
		return null;
	}); // w/o changes
}

function getContextBySgroup(restruct, sgAtoms) {
	var struct = restruct.molecule;

	if (sgAtoms.length === 1) return _constants.SgContexts.Atom;

	if (manyComponentsSelected(restruct, sgAtoms)) return _constants.SgContexts.Multifragment;

	if (singleComponentSelected(restruct, sgAtoms)) return _constants.SgContexts.Fragment;

	var atomSet = new _pile2.default(sgAtoms);

	var sgBonds = Array.from(struct.bonds.values()).filter(function (bond) {
		return atomSet.has(bond.begin) && atomSet.has(bond.end);
	});

	return anyChainedBonds(sgBonds) ? _constants.SgContexts.Group : _constants.SgContexts.Bond;
}

function getContextBySelection(restruct, selection) {
	var struct = restruct.molecule;

	if (selection.atoms && !selection.bonds) return _constants.SgContexts.Atom;

	var bonds = selection.bonds.map(function (bondid) {
		return struct.bonds.get(bondid);
	});

	if (!anyChainedBonds(bonds)) return _constants.SgContexts.Bond;

	selection.atoms = selection.atoms || [];

	var atomSet = new _pile2.default(selection.atoms);
	var allBondsSelected = bonds.every(function (bond) {
		return atomSet.has(bond.begin) && atomSet.has(bond.end);
	});

	if (singleComponentSelected(restruct, selection.atoms) && allBondsSelected) return _constants.SgContexts.Fragment;

	return manyComponentsSelected(restruct, selection.atoms) ? _constants.SgContexts.Multifragment : _constants.SgContexts.Group;
}

function fromContextType(id, editor, newSg, currSelection) {
	var restruct = editor.render.ctab;
	var sg = restruct.molecule.sgroups.get(id);
	var sourceAtoms = sg && sg.atoms || currSelection.atoms || [];
	var context = newSg.attrs.context;

	var result = (0, _sgroup.fromSgroupAction)(context, restruct, newSg, sourceAtoms, currSelection);

	result.selection = result.selection || currSelection;

	if (id !== null && id !== undefined) result.action = result.action.mergeWith((0, _sgroup.fromSgroupDeletion)(restruct, id));

	editor.selection(result.selection);

	return result;
}

function anyChainedBonds(bonds) {
	if (bonds.length === 0) return true;

	for (var i = 0; i < bonds.length; ++i) {
		var fixedBond = bonds[i];
		for (var j = 0; j < bonds.length; ++j) {
			if (i === j) continue;

			var bond = bonds[j];

			if (fixedBond.end === bond.begin || fixedBond.end === bond.end) return true;
		}
	}

	return false;
}

function singleComponentSelected(restruct, atoms) {
	return countOfSelectedComponents(restruct, atoms) === 1;
}

function manyComponentsSelected(restruct, atoms) {
	return countOfSelectedComponents(restruct, atoms) > 1;
}

function countOfSelectedComponents(restruct, atoms) {
	var atomSet = new _pile2.default(atoms);

	return Array.from(restruct.connectedComponents.values()).reduce(function (acc, component) {
		return acc + (atomSet.isSuperset(component) ? 1 : 0);
	}, 0);
}

function checkOverlapping(struct, atoms) {
	var sgroups = atoms.reduce(function (res, aid) {
		var atom = struct.atoms.get(aid);
		return res.union(atom.sgs);
	}, new _pile2.default());

	return Array.from(sgroups).some(function (sid) {
		var sg = struct.sgroups.get(sid);
		if (sg.type === 'DAT') return false;
		var sgAtoms = _struct.SGroup.getAtoms(struct, sg);

		return sgAtoms.length < atoms.length ? sgAtoms.findIndex(function (aid) {
			return atoms.indexOf(aid) === -1;
		}) >= 0 : atoms.findIndex(function (aid) {
			return sgAtoms.indexOf(aid) === -1;
		}) >= 0;
	});
}

exports.default = SGroupTool;

},{"../../chem/struct":537,"../../util/pile":683,"../actions/sgroup":553,"../shared/constants":559,"./helper/lasso":570,"lodash/fp/isEqual":428}],583:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /****************************************************************************
opyright 2018 EPAM Systems

icensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
ou may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

nless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
ee the License for the specific language governing permissions and
limitations under the License.


var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _utils = require('../shared/utils');

var _utils2 = _interopRequireDefault(_utils);

var _template = require('../actions/template');

var _closelyFusing = require('../actions/closely-fusing');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TemplateTool(editor, tmpl) {
	// eslint-disable-line max-statements
	if (!(this instanceof TemplateTool)) return new TemplateTool(editor, tmpl);

	this.editor = editor;
	this.editor.selection(null);

	this.template = {
		aid: parseInt(tmpl.aid) || 0,
		bid: parseInt(tmpl.bid) || 0
	};

	var frag = tmpl.struct;
	frag.rescale();

	var xy0 = new _vec2.default();
	frag.atoms.forEach(function (atom) {
		xy0.add_(atom.pp); // eslint-disable-line no-underscore-dangle
	});

	this.template.molecule = frag; // preloaded struct
	this.findItems = [];
	this.template.xy0 = xy0.scaled(1 / (frag.atoms.size || 1)); // template center

	var atom = frag.atoms.get(this.template.aid);
	if (atom) {
		this.template.angle0 = _utils2.default.calcAngle(atom.pp, this.template.xy0); // center tilt
		this.findItems.push('atoms');
	}

	var bond = frag.bonds.get(this.template.bid);
	if (bond) {
		// template location sign against attachment bond
		this.template.sign = getSign(frag, bond, this.template.xy0);
		this.findItems.push('bonds');
	}
}

TemplateTool.prototype.mousedown = function (event) {
	// eslint-disable-line max-statements
	var editor = this.editor;
	var restruct = editor.render.ctab;
	this.editor.hover(null);

	this.dragCtx = {
		xy0: editor.render.page2obj(event),
		item: editor.findItem(event, this.findItems)
	};

	var dragCtx = this.dragCtx;
	var ci = dragCtx.item;

	if (!ci) {
		//  ci.type == 'Canvas'
		delete dragCtx.item;
		return true;
	}

	if (ci.map === 'bonds') {
		// calculate fragment center
		var molecule = restruct.molecule;
		var xy0 = new _vec2.default();
		var bond = molecule.bonds.get(ci.id);
		var frid = molecule.atoms.get(bond.begin).fragment;
		var frIds = molecule.getFragmentIds(frid);
		var count = 0;

		var loop = molecule.halfBonds.get(bond.hb1).loop;

		if (loop < 0) loop = molecule.halfBonds.get(bond.hb2).loop;

		if (loop >= 0) {
			var loopHbs = molecule.loops.get(loop).hbs;
			loopHbs.forEach(function (hb) {
				xy0.add_(molecule.atoms.get(molecule.halfBonds.get(hb).begin).pp); // eslint-disable-line no-underscore-dangle, max-len
				count++;
			});
		} else {
			frIds.forEach(function (id) {
				xy0.add_(molecule.atoms.get(id).pp); // eslint-disable-line no-underscore-dangle
				count++;
			});
		}

		dragCtx.v0 = xy0.scaled(1 / count);

		var sign = getSign(molecule, bond, dragCtx.v0);

		// calculate default template flip
		dragCtx.sign1 = sign || 1;
		dragCtx.sign2 = this.template.sign;
	}

	return true;
};

TemplateTool.prototype.mousemove = function (event) {
	// eslint-disable-line max-statements
	var restruct = this.editor.render.ctab;

	if (!this.dragCtx) {
		this.editor.hover(this.editor.findItem(event, this.findItems));
		return true;
	}

	var dragCtx = this.dragCtx;
	var ci = dragCtx.item;
	var pos0 = null;
	var pos1 = this.editor.render.page2obj(event);
	var struct = restruct.molecule;

	/* moving when attached to bond */
	if (ci && ci.map === 'bonds') {
		var bond = struct.bonds.get(ci.id);
		var sign = getSign(struct, bond, pos1);

		if (dragCtx.sign1 * this.template.sign > 0) sign = -sign;

		if (sign !== dragCtx.sign2 || !dragCtx.action) {
			if (dragCtx.action) dragCtx.action.perform(restruct); // undo previous action

			dragCtx.sign2 = sign;

			var _fromTemplateOnBondAc = (0, _template.fromTemplateOnBondAction)(restruct, this.template, ci.id, this.editor.event, dragCtx.sign1 * dragCtx.sign2 > 0, false);

			var _fromTemplateOnBondAc2 = _slicedToArray(_fromTemplateOnBondAc, 2);

			action = _fromTemplateOnBondAc2[0];
			pasteItems = _fromTemplateOnBondAc2[1];


			dragCtx.action = action;
			this.editor.update(dragCtx.action, true);

			dragCtx.mergeItems = (0, _closelyFusing.getItemsToFuse)(this.editor, pasteItems);
			this.editor.hover((0, _closelyFusing.getHoverToFuse)(dragCtx.mergeItems));
		}
		return true;
	}
	/* end */

	var extraBond = null;
	// calc initial pos and is extra bond needed
	if (!ci) {
		//  ci.type == 'Canvas'
		pos0 = dragCtx.xy0;
	} else if (ci.map === 'atoms') {
		pos0 = struct.atoms.get(ci.id).pp;
		extraBond = _vec2.default.dist(pos0, pos1) > 1;
	}

	// calc angle
	var angle = _utils2.default.calcAngle(pos0, pos1);
	if (!event.ctrlKey) angle = _utils2.default.fracAngle(angle);
	var degrees = _utils2.default.degrees(angle);
	this.editor.event.message.dispatch({ info: degrees + 'º' });

	// check if anything changed since last time
	if (dragCtx.hasOwnProperty('angle') && dragCtx.angle === degrees && ( // eslint-disable-line no-prototype-builtins
	!dragCtx.hasOwnProperty('extra_bond') || dragCtx.extra_bond === extraBond)) // eslint-disable-line no-prototype-builtins
		return true;

	// undo previous action
	if (dragCtx.action) dragCtx.action.perform(restruct);

	// create new action
	dragCtx.angle = degrees;
	var action = null;
	var pasteItems = void 0;

	if (!ci) {
		var _fromTemplateOnCanvas = (0, _template.fromTemplateOnCanvas)(restruct, this.template, pos0, angle); // ci.type == 'Canvas'


		var _fromTemplateOnCanvas2 = _slicedToArray(_fromTemplateOnCanvas, 2);

		action = _fromTemplateOnCanvas2[0];
		pasteItems = _fromTemplateOnCanvas2[1];
	} else if (ci.map === 'atoms') {
		var _fromTemplateOnAtom = (0, _template.fromTemplateOnAtom)(restruct, this.template, ci.id, angle, extraBond);

		var _fromTemplateOnAtom2 = _slicedToArray(_fromTemplateOnAtom, 2);

		action = _fromTemplateOnAtom2[0];
		pasteItems = _fromTemplateOnAtom2[1];

		dragCtx.extra_bond = extraBond;
	}
	dragCtx.action = action;

	this.editor.update(dragCtx.action, true);

	dragCtx.mergeItems = (0, _closelyFusing.getItemsToFuse)(this.editor, pasteItems);
	this.editor.hover((0, _closelyFusing.getHoverToFuse)(dragCtx.mergeItems));

	return true;
};

TemplateTool.prototype.mouseup = function (event) {
	var _this = this;

	// eslint-disable-line max-statements
	var dragCtx = this.dragCtx;
	if (!dragCtx) return true;
	delete this.dragCtx;

	var restruct = this.editor.render.ctab;
	var struct = restruct.molecule;
	var ci = dragCtx.item;

	/* after moving around bond */
	if (dragCtx.action && ci && ci.map === 'bonds') {
		dragCtx.action.perform(restruct); // revert drag action
		(0, _template.fromTemplateOnBondAction)(restruct, this.template, ci.id, this.editor.event, dragCtx.sign1 * dragCtx.sign2 > 0, true).then(function (_ref) {
			var _ref2 = _slicedToArray(_ref, 2),
			    action = _ref2[0],
			    pasteItems = _ref2[1];

			var mergeItems = (0, _closelyFusing.getItemsToFuse)(_this.editor, pasteItems);
			action = (0, _closelyFusing.fromItemsFuse)(restruct, mergeItems).mergeWith(action);
			_this.editor.update(action);
		});
		return true;
	}
	/* end */

	var action = void 0;
	var pasteItems = null;

	if (!dragCtx.action) {
		if (!ci) {
			var _fromTemplateOnCanvas3 = (0, _template.fromTemplateOnCanvas)(restruct, this.template, dragCtx.xy0, 0); //  ci.type == 'Canvas'


			var _fromTemplateOnCanvas4 = _slicedToArray(_fromTemplateOnCanvas3, 2);

			action = _fromTemplateOnCanvas4[0];
			pasteItems = _fromTemplateOnCanvas4[1];

			dragCtx.action = action;
		} else if (ci.map === 'atoms') {
			var degree = restruct.atoms.get(ci.id).a.neighbors.length;
			var angle = void 0;
			var extraBond = void 0;

			if (degree > 1) {
				// common case
				angle = null;
				extraBond = true;
			} else if (degree === 1) {
				// on chain end
				var atom = struct.atoms.get(ci.id);
				var neiId = struct.halfBonds.get(atom.neighbors[0]).end;
				var nei = struct.atoms.get(neiId);

				angle = event.ctrlKey ? _utils2.default.calcAngle(nei.pp, atom.pp) : _utils2.default.fracAngle(_utils2.default.calcAngle(nei.pp, atom.pp));
				extraBond = false;
			} else {
				// on single atom
				angle = 0;
				extraBond = false;
			}

			var _fromTemplateOnAtom3 = (0, _template.fromTemplateOnAtom)(restruct, this.template, ci.id, angle, extraBond);

			var _fromTemplateOnAtom4 = _slicedToArray(_fromTemplateOnAtom3, 2);

			action = _fromTemplateOnAtom4[0];
			pasteItems = _fromTemplateOnAtom4[1];

			dragCtx.action = action;
		} else if (ci.map === 'bonds') {
			(0, _template.fromTemplateOnBondAction)(restruct, this.template, ci.id, this.editor.event, dragCtx.sign1 * dragCtx.sign2 > 0, true).then(function (_ref3) {
				var _ref4 = _slicedToArray(_ref3, 2),
				    action = _ref4[0],
				    pasteItems = _ref4[1];

				// eslint-disable-line no-shadow
				var mergeItems = (0, _closelyFusing.getItemsToFuse)(_this.editor, pasteItems);
				action = (0, _closelyFusing.fromItemsFuse)(restruct, mergeItems).mergeWith(action);
				_this.editor.update(action);
			});

			return true;
		}
	}

	this.editor.selection(null);

	if (!dragCtx.mergeItems && pasteItems) dragCtx.mergeItems = (0, _closelyFusing.getItemsToFuse)(this.editor, pasteItems);
	dragCtx.action = dragCtx.action ? (0, _closelyFusing.fromItemsFuse)(restruct, dragCtx.mergeItems).mergeWith(dragCtx.action) : (0, _closelyFusing.fromItemsFuse)(restruct, dragCtx.mergeItems);

	this.editor.hover(null);
	var completeAction = dragCtx.action;
	if (completeAction && !completeAction.isDummy()) this.editor.update(completeAction);
	this.editor.event.message.dispatch({
		info: false
	});

	return true;
};

TemplateTool.prototype.cancel = TemplateTool.prototype.mouseup;
TemplateTool.prototype.mouseleave = TemplateTool.prototype.mouseup;

function getSign(molecule, bond, v) {
	var begin = molecule.atoms.get(bond.begin).pp;
	var end = molecule.atoms.get(bond.end).pp;

	var sign = _vec2.default.cross(_vec2.default.diff(begin, end), _vec2.default.diff(v, end));

	if (sign > 0) return 1;
	if (sign < 0) return -1;
	return 0;
}

exports.default = TemplateTool;

},{"../../util/vec2":686,"../actions/closely-fusing":547,"../actions/template":554,"../shared/utils":561}],584:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _raphael = require('raphael');

var _raphael2 = _interopRequireDefault(_raphael);

var _vec = require('./util/vec2');

var _vec2 = _interopRequireDefault(_vec);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// TODO: refactor ugly prototype extensions to plain old functions
/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

// Single entry point to Raphaël library

_raphael2.default.el.translateAbs = function (x, y) {
  this.delta = this.delta || new _vec2.default();
  this.delta.x += x - 0;
  this.delta.y += y - 0;
  this.transform('t' + this.delta.x.toString() + ',' + this.delta.y.toString());
};

_raphael2.default.st.translateAbs = function (x, y) {
  this.forEach(function (el) {
    el.translateAbs(x, y);
  });
};

exports.default = _raphael2.default;

},{"./util/vec2":686,"raphael":497}],585:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _util = require('./util');

var _util2 = _interopRequireDefault(_util);

var _vec = require('../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _raphaelExt = require('../raphael-ext');

var _raphaelExt2 = _interopRequireDefault(_raphaelExt);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var tfx = _util2.default.tfx; /****************************************************************************
                               * Copyright 2018 EPAM Systems
                               *
                               * Licensed under the Apache License, Version 2.0 (the "License");
                               * you may not use this file except in compliance with the License.
                               * You may obtain a copy of the License at
                               *
                               *    http://www.apache.org/licenses/LICENSE-2.0
                               *
                               * Unless required by applicable law or agreed to in writing, software
                               * distributed under the License is distributed on an "AS IS" BASIS,
                               * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                               * See the License for the specific language governing permissions and
                               * limitations under the License.
                               ***************************************************************************/

function arrow(paper, a, b, options) {
	var width = 5,
	    length = 7;
	return paper.path('M{0},{1}L{2},{3}L{4},{5}M{2},{3}L{4},{6}', tfx(a.x), tfx(a.y), tfx(b.x), tfx(b.y), tfx(b.x - length), tfx(b.y - width), tfx(b.y + width)).attr(options.lineattr);
}

function plus(paper, c, options) {
	var s = options.scale / 5;
	return paper.path('M{0},{4}L{0},{5}M{2},{1}L{3},{1}', tfx(c.x), tfx(c.y), tfx(c.x - s), tfx(c.x + s), tfx(c.y - s), tfx(c.y + s)).attr(options.lineattr);
}

function bondSingle(paper, hb1, hb2, options) {
	var a = hb1.p,
	    b = hb2.p;
	return paper.path(makeStroke(a, b)).attr(options.lineattr);
}

function bondSingleUp(paper, a, b2, b3, options) {
	// eslint-disable-line max-params
	return paper.path('M{0},{1}L{2},{3}L{4},{5}Z', tfx(a.x), tfx(a.y), tfx(b2.x), tfx(b2.y), tfx(b3.x), tfx(b3.y)).attr(options.lineattr).attr({ fill: '#000' });
}

function bondSingleStereoBold(paper, a1, a2, a3, a4, options) {
	// eslint-disable-line max-params
	return paper.path('M{0},{1}L{2},{3}L{4},{5}L{6},{7}Z', tfx(a1.x), tfx(a1.y), tfx(a2.x), tfx(a2.y), tfx(a3.x), tfx(a3.y), tfx(a4.x), tfx(a4.y)).attr(options.lineattr).attr({
		stroke: '#000',
		fill: '#000'
	});
}

function bondDoubleStereoBold(paper, sgBondPath, b1, b2, options) {
	// eslint-disable-line max-params
	return paper.set([sgBondPath, paper.path('M{0},{1}L{2},{3}', tfx(b1.x), tfx(b1.y), tfx(b2.x), tfx(b2.y)).attr(options.lineattr)]);
}

function bondSingleDown(paper, hb1, d, nlines, step, options) {
	// eslint-disable-line max-params
	var a = hb1.p,
	    n = hb1.norm;
	var bsp = 0.7 * options.stereoBond;

	var path = '',
	    p,
	    q,
	    r;
	for (var i = 0; i < nlines; ++i) {
		r = a.addScaled(d, step * i);
		p = r.addScaled(n, bsp * (i + 0.5) / (nlines - 0.5));
		q = r.addScaled(n, -bsp * (i + 0.5) / (nlines - 0.5));
		path += makeStroke(p, q);
	}
	return paper.path(path).attr(options.lineattr);
}

function bondSingleEither(paper, hb1, d, nlines, step, options) {
	// eslint-disable-line max-params
	var a = hb1.p,
	    n = hb1.norm;
	var bsp = 0.7 * options.stereoBond;

	var path = 'M' + tfx(a.x) + ',' + tfx(a.y),
	    r = a;
	for (var i = 0; i < nlines; ++i) {
		r = a.addScaled(d, step * (i + 0.5)).addScaled(n, (i & 1 ? -1 : +1) * bsp * (i + 0.5) / (nlines - 0.5));
		path += 'L' + tfx(r.x) + ',' + tfx(r.y);
	}
	return paper.path(path).attr(options.lineattr);
}

function bondDouble(paper, a1, a2, b1, b2, cisTrans, options) {
	// eslint-disable-line max-params
	return paper.path(cisTrans ? 'M{0},{1}L{6},{7}M{4},{5}L{2},{3}' : 'M{0},{1}L{2},{3}M{4},{5}L{6},{7}', tfx(a1.x), tfx(a1.y), tfx(b1.x), tfx(b1.y), tfx(a2.x), tfx(a2.y), tfx(b2.x), tfx(b2.y)).attr(options.lineattr);
}

function bondSingleOrDouble(paper, hb1, hb2, nSect, options) {
	// eslint-disable-line max-statements, max-params
	var a = hb1.p,
	    b = hb2.p,
	    n = hb1.norm;
	var bsp = options.bondSpace / 2;

	var path = '',
	    pi,
	    pp = a;
	for (var i = 1; i <= nSect; ++i) {
		pi = _vec2.default.lc2(a, (nSect - i) / nSect, b, i / nSect);
		if (i & 1) {
			path += makeStroke(pp, pi);
		} else {
			path += makeStroke(pp.addScaled(n, bsp), pi.addScaled(n, bsp));
			path += makeStroke(pp.addScaled(n, -bsp), pi.addScaled(n, -bsp));
		}
		pp = pi;
	}
	return paper.path(path).attr(options.lineattr);
}

function bondTriple(paper, hb1, hb2, options) {
	var a = hb1.p,
	    b = hb2.p,
	    n = hb1.norm;
	var a2 = a.addScaled(n, options.bondSpace);
	var b2 = b.addScaled(n, options.bondSpace);
	var a3 = a.addScaled(n, -options.bondSpace);
	var b3 = b.addScaled(n, -options.bondSpace);
	return paper.path(makeStroke(a, b) + makeStroke(a2, b2) + makeStroke(a3, b3)).attr(options.lineattr);
}

function bondAromatic(paper, paths, bondShift, options) {
	var l1 = paper.path(paths[0]).attr(options.lineattr);
	var l2 = paper.path(paths[1]).attr(options.lineattr);
	if (bondShift !== undefined && bondShift !== null) (bondShift > 0 ? l1 : l2).attr({ 'stroke-dasharray': '- ' });

	return paper.set([l1, l2]);
}

function bondAny(paper, hb1, hb2, options) {
	var a = hb1.p,
	    b = hb2.p;
	return paper.path(makeStroke(a, b)).attr(options.lineattr).attr({ 'stroke-dasharray': '- ' });
}

function reactingCenter(paper, p, options) {
	var pathdesc = '';
	for (var i = 0; i < p.length / 2; ++i) {
		pathdesc += makeStroke(p[2 * i], p[2 * i + 1]);
	}return paper.path(pathdesc).attr(options.lineattr);
}

function topologyMark(paper, p, mark, options) {
	var path = paper.text(p.x, p.y, mark).attr({
		font: options.font,
		'font-size': options.fontszsub,
		fill: '#000'
	});
	var rbb = _util2.default.relBox(path.getBBox());
	recenterText(path, rbb);
	return path;
}

function radicalCap(paper, p, options) {
	var s = options.lineWidth * 0.9;
	var dw = s,
	    dh = 2 * s;
	return paper.path('M{0},{1}L{2},{3}L{4},{5}', tfx(p.x - dw), tfx(p.y + dh), tfx(p.x), tfx(p.y), tfx(p.x + dw), tfx(p.y + dh)).attr({
		stroke: '#000',
		'stroke-width': options.lineWidth * 0.7,
		'stroke-linecap': 'square',
		'stroke-linejoin': 'miter'
	});
}

function radicalBullet(paper, p, options) {
	return paper.circle(tfx(p.x), tfx(p.y), options.lineWidth).attr({
		stroke: null,
		fill: '#000'
	});
}

function bracket(paper, d, n, c, bracketWidth, bracketHeight, options) {
	// eslint-disable-line max-params
	bracketWidth = bracketWidth || 0.25;
	bracketHeight = bracketHeight || 1.0;
	var a0 = c.addScaled(n, -0.5 * bracketHeight);
	var a1 = c.addScaled(n, 0.5 * bracketHeight);
	var b0 = a0.addScaled(d, -bracketWidth);
	var b1 = a1.addScaled(d, -bracketWidth);

	return paper.path('M{0},{1}L{2},{3}L{4},{5}L{6},{7}', tfx(b0.x), tfx(b0.y), tfx(a0.x), tfx(a0.y), tfx(a1.x), tfx(a1.y), tfx(b1.x), tfx(b1.y)).attr(options.sgroupBracketStyle);
}

function selectionRectangle(paper, p0, p1, options) {
	return paper.rect(tfx(Math.min(p0.x, p1.x)), tfx(Math.min(p0.y, p1.y)), tfx(Math.abs(p1.x - p0.x)), tfx(Math.abs(p1.y - p0.y))).attr(options.lassoStyle);
}

function selectionPolygon(paper, r, options) {
	var v = r[r.length - 1];
	var pstr = 'M' + tfx(v.x) + ',' + tfx(v.y);
	for (var i = 0; i < r.length; ++i) {
		pstr += 'L' + tfx(r[i].x) + ',' + tfx(r[i].y);
	}return paper.path(pstr).attr(options.lassoStyle);
}

function selectionLine(paper, p0, p1, options) {
	return paper.path(makeStroke(p0, p1)).attr(options.lassoStyle);
}

function makeStroke(a, b) {
	return 'M' + tfx(a.x) + ',' + tfx(a.y) + 'L' + tfx(b.x) + ',' + tfx(b.y) + '	';
}

function dashedPath(p0, p1, dash) {
	var t0 = 0;
	var t1 = _vec2.default.dist(p0, p1);
	var d = _vec2.default.diff(p1, p0).normalized();
	var black = true;
	var path = '';
	var i = 0;

	while (t0 < t1) {
		var len = dash[i % dash.length];
		var t2 = t0 + Math.min(len, t1 - t0);
		if (black) path += 'M ' + p0.addScaled(d, t0).coordStr() + ' L ' + p0.addScaled(d, t2).coordStr();
		t0 += len;
		black = !black;
		i++;
	}
	return path;
}

function aromaticBondPaths(a2, a3, b2, b3, mask, dash) {
	// eslint-disable-line max-params
	var l1 = dash && mask & 1 ? dashedPath(a2, b2, dash) : makeStroke(a2, b2);
	var l2 = dash && mask & 2 ? dashedPath(a3, b3, dash) : makeStroke(a3, b3);

	return [l1, l2];
}

function recenterText(path, rbb) {
	// TODO: find a better way
	if (_raphaelExt2.default.vml) {
		// dirty hack
		console.assert(null, 'Souldn\'t go here!');
		var gap = rbb.height * 0.16;
		path.translateAbs(0, gap);
		rbb.y += gap;
	}
}

exports.default = {
	recenterText: recenterText,
	arrow: arrow,
	plus: plus,
	aromaticBondPaths: aromaticBondPaths,
	bondSingle: bondSingle,
	bondSingleUp: bondSingleUp,
	bondSingleStereoBold: bondSingleStereoBold,
	bondDoubleStereoBold: bondDoubleStereoBold,
	bondSingleDown: bondSingleDown,
	bondSingleEither: bondSingleEither,
	bondDouble: bondDouble,
	bondSingleOrDouble: bondSingleOrDouble,
	bondTriple: bondTriple,
	bondAromatic: bondAromatic,
	bondAny: bondAny,
	reactingCenter: reactingCenter,
	topologyMark: topologyMark,
	radicalCap: radicalCap,
	radicalBullet: radicalBullet,
	bracket: bracket,
	selectionRectangle: selectionRectangle,
	selectionPolygon: selectionPolygon,
	selectionLine: selectionLine
};

},{"../raphael-ext":584,"../util/vec2":686,"./util":601}],586:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _raphaelExt = require('../raphael-ext');

var _raphaelExt2 = _interopRequireDefault(_raphaelExt);

var _box2abs = require('../util/box2abs');

var _box2abs2 = _interopRequireDefault(_box2abs);

var _vec = require('../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _scale = require('../util/scale');

var _scale2 = _interopRequireDefault(_scale);

var _struct = require('../chem/struct');

var _struct2 = _interopRequireDefault(_struct);

var _restruct = require('./restruct');

var _restruct2 = _interopRequireDefault(_restruct);

var _options = require('./options');

var _options2 = _interopRequireDefault(_options);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DEBUG = { debug: false, logcnt: 0, logmouse: false, hl: false }; /****************************************************************************
                                                                      * Copyright 2018 EPAM Systems
                                                                      *
                                                                      * Licensed under the Apache License, Version 2.0 (the "License");
                                                                      * you may not use this file except in compliance with the License.
                                                                      * You may obtain a copy of the License at
                                                                      *
                                                                      *    http://www.apache.org/licenses/LICENSE-2.0
                                                                      *
                                                                      * Unless required by applicable law or agreed to in writing, software
                                                                      * distributed under the License is distributed on an "AS IS" BASIS,
                                                                      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                      * See the License for the specific language governing permissions and
                                                                      * limitations under the License.
                                                                      ***************************************************************************/

DEBUG.logMethod = function () {};
// DEBUG.logMethod = function (method) {addionalAtoms("METHOD: " + method);

function Render(clientArea, opt) {
	var renderWidth = clientArea.clientWidth - 10;
	var renderHeight = clientArea.clientHeight - 10;
	renderWidth = renderWidth > 0 ? renderWidth : 0;
	renderHeight = renderHeight > 0 ? renderHeight : 0;

	this.userOpts = opt;
	this.clientArea = clientArea;
	this.paper = new _raphaelExt2.default(clientArea, renderWidth, renderHeight);
	this.sz = _vec2.default.ZERO;
	this.ctab = new _restruct2.default(new _struct2.default(), this);
	this.options = (0, _options2.default)(this.userOpts);
}

Render.prototype.view2obj = function (p, isRelative) {
	var scroll = this.scrollPos();
	if (!this.useOldZoom) {
		p = p.scaled(1 / this.options.zoom);
		scroll = scroll.scaled(1 / this.options.zoom);
	}
	p = isRelative ? p : p.add(scroll).sub(this.options.offset);
	return _scale2.default.scaled2obj(p, this.options);
};

Render.prototype.obj2view = function (v, isRelative) {
	var p = _scale2.default.obj2scaled(v, this.options);
	p = isRelative ? p : p.add(this.options.offset).sub(this.scrollPos().scaled(1 / this.options.zoom));
	if (!this.useOldZoom) p = p.scaled(this.options.zoom);
	return p;
};

Render.prototype.scrollPos = function () {
	return new _vec2.default(this.clientArea.scrollLeft, this.clientArea.scrollTop);
};

function cumulativeOffset(el) {
	var curtop = 0;
	var curleft = 0;
	if (el.parentNode) {
		do {
			curtop += el.offsetTop || 0;
			curleft += el.offsetLeft || 0;
			el = el.offsetParent;
		} while (el);
	}
	return { left: curleft, top: curtop };
}

Render.prototype.page2obj = function (pagePos) {
	var offset = cumulativeOffset(this.clientArea);
	var pp = new _vec2.default(pagePos.pageX - offset.left, pagePos.pageY - offset.top);
	return this.view2obj(pp);
};

Render.prototype.setPaperSize = function (sz) {
	DEBUG.logMethod('setPaperSize');
	this.sz = sz;
	this.paper.setSize(sz.x * this.options.zoom, sz.y * this.options.zoom);
	this.setViewBox(this.options.zoom);
};

Render.prototype.setOffset = function (newoffset) {
	DEBUG.logMethod('setOffset');
	var delta = new _vec2.default(newoffset.x - this.options.offset.x, newoffset.y - this.options.offset.y);
	this.clientArea.scrollLeft += delta.x;
	this.clientArea.scrollTop += delta.y;
	this.options.offset = newoffset;
};

Render.prototype.setZoom = function (zoom) {
	// when scaling the canvas down it may happen that the scaled canvas is smaller than the view window
	// don't forget to call setScrollOffset after zooming (or use extendCanvas directly)
	console.info('set zoom', zoom);
	this.options.zoom = zoom;
	this.paper.setSize(this.sz.x * zoom, this.sz.y * zoom);
	this.setViewBox(zoom);
};

function calcExtend(sSz, x0, y0, x1, y1) {
	// eslint-disable-line max-params
	var ex = x0 < 0 ? -x0 : 0;
	var ey = y0 < 0 ? -y0 : 0;

	if (sSz.x < x1) ex += x1 - sSz.x;
	if (sSz.y < y1) ey += y1 - sSz.y;
	return new _vec2.default(ex, ey);
}

Render.prototype.setScrollOffset = function (x, y) {
	var clientArea = this.clientArea;
	var cx = clientArea.clientWidth;
	var cy = clientArea.clientHeight;
	var e = calcExtend(this.sz.scaled(this.options.zoom), x, y, cx + x, cy + y).scaled(1 / this.options.zoom);
	if (e.x > 0 || e.y > 0) {
		this.setPaperSize(this.sz.add(e));
		var d = new _vec2.default(x < 0 ? -x : 0, y < 0 ? -y : 0).scaled(1 / this.options.zoom);
		if (d.x > 0 || d.y > 0) {
			this.ctab.translate(d);
			this.setOffset(this.options.offset.add(d));
		}
	}
	clientArea.scrollLeft = x;
	clientArea.scrollTop = y;
	// TODO: store drag position in scaled systems
	// scrollLeft = clientArea.scrollLeft;
	// scrollTop = clientArea.scrollTop;
	this.update(false);
};

Render.prototype.setScale = function (z) {
	if (this.options.offset) this.options.offset = this.options.offset.scaled(1 / z).scaled(z);
	this.userOpts.scale *= z;
	this.options = null;
	this.update(true);
};

Render.prototype.setViewBox = function (z) {
	if (!this.useOldZoom) this.paper.canvas.setAttribute('viewBox', '0 0 ' + this.sz.x + ' ' + this.sz.y);else this.setScale(z);
};

Render.prototype.setMolecule = function (ctab) {
	DEBUG.logMethod('setMolecule');
	this.paper.clear();
	this.ctab = new _restruct2.default(ctab, this);
	this.options.offset = new _vec2.default();
	this.update(false);
};

Render.prototype.update = function (force, viewSz) {
	// eslint-disable-line max-statements
	viewSz = viewSz || new _vec2.default(this.clientArea.clientWidth || 100, this.clientArea.clientHeight || 100);

	var changes = this.ctab.update(force);
	this.ctab.setSelection(); // [MK] redraw the selection bits where necessary
	if (changes) {
		var sf = this.options.scale;
		var bb = this.ctab.getVBoxObj().transform(_scale2.default.obj2scaled, this.options).translate(this.options.offset || new _vec2.default());

		if (!this.options.autoScale) {
			var ext = _vec2.default.UNIT.scaled(sf);
			var eb = bb.sz().length() > 0 ? bb.extend(ext, ext) : bb;
			var vb = new _box2abs2.default(this.scrollPos(), viewSz.scaled(1 / this.options.zoom).sub(_vec2.default.UNIT.scaled(20)));
			var cb = _box2abs2.default.union(vb, eb);
			if (!this.oldCb) this.oldCb = new _box2abs2.default();

			var sz = cb.sz().floor();
			var delta = this.oldCb.p0.sub(cb.p0).ceil();
			this.oldBb = bb;
			if (!this.sz || sz.x != this.sz.x || sz.y != this.sz.y) this.setPaperSize(sz);

			this.options.offset = this.options.offset || new _vec2.default();
			if (delta.x != 0 || delta.y != 0) {
				this.setOffset(this.options.offset.add(delta));
				this.ctab.translate(delta);
			}
		} else {
			var sz1 = bb.sz();
			var marg = this.options.autoScaleMargin;
			var mv = new _vec2.default(marg, marg);
			var csz = viewSz;
			if (csz.x < 2 * marg + 1 || csz.y < 2 * marg + 1) throw new Error('View box too small for the given margin');
			var rescale = Math.max(sz1.x / (csz.x - 2 * marg), sz1.y / (csz.y - 2 * marg));
			if (this.options.maxBondLength / rescale > 1.0) rescale = 1.0;
			var sz2 = sz1.add(mv.scaled(2 * rescale));
			/* eslint-disable no-mixed-operators*/
			this.paper.setViewBox(bb.pos().x - marg * rescale - (csz.x * rescale - sz2.x) / 2, bb.pos().y - marg * rescale - (csz.y * rescale - sz2.y) / 2, csz.x * rescale, csz.y * rescale);
			/* eslint-enable no-mixed-operators*/
		}
	}
};

exports.default = Render;

},{"../chem/struct":537,"../raphael-ext":584,"../util/box2abs":682,"../util/scale":685,"../util/vec2":686,"./options":587,"./restruct":588}],587:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _utils = require('../editor/shared/utils');

var _utils2 = _interopRequireDefault(_utils);

var _vec = require('../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function defaultOptions(opt) {
	var scaleFactor = opt.scale || 100;

	if (opt.rotationStep) _utils2.default.setFracAngle(opt.rotationStep);

	var labelFontSize = Math.ceil(1.9 * (scaleFactor / 6));
	var subFontSize = Math.ceil(0.7 * labelFontSize);

	var defaultOptions = {
		// flags for debugging
		showAtomIds: false,
		showBondIds: false,
		showHalfBondIds: false,
		showLoopIds: false,
		// rendering customization flags
		hideChiralFlag: false,
		showValenceWarnings: true,
		autoScale: false, // scale structure to fit into the given view box, used in view mode
		autoScaleMargin: 0,
		maxBondLength: 0, // 0 stands for "not specified"
		atomColoring: true,
		hideImplicitHydrogen: false,
		hideTerminalLabels: false,
		// atoms
		carbonExplicitly: false,
		showCharge: true,
		showHydrogenLabels: 'on',
		showValence: true,
		// bonds
		aromaticCircle: true,

		scale: scaleFactor,
		zoom: 1.0,
		offset: new _vec2.default(),

		lineWidth: scaleFactor / 20,
		bondSpace: opt.doubleBondWidth || scaleFactor / 7,
		stereoBond: opt.stereoBondWidth || scaleFactor / 7,
		subFontSize: subFontSize,
		font: '30px Arial',
		fontsz: labelFontSize,
		fontszsub: subFontSize,
		fontRLabel: labelFontSize * 1.2,
		fontRLogic: labelFontSize * 0.7,

		/* styles */
		lineattr: {
			stroke: '#000',
			'stroke-width': opt.bondThickness || scaleFactor / 20,
			'stroke-linecap': 'round',
			'stroke-linejoin': 'round'
		},
		/* eslint-enable quote-props */
		selectionStyle: {
			fill: '#7f7',
			stroke: 'none'
		},
		highlightStyle: {
			stroke: '#0c0',
			'stroke-width': 0.6 * scaleFactor / 20
		},
		sgroupBracketStyle: {
			stroke: 'darkgray',
			'stroke-width': 0.5 * scaleFactor / 20
		},
		lassoStyle: {
			stroke: 'gray',
			'stroke-width': '1px'
		},
		atomSelectionPlateRadius: labelFontSize * 1.2
	};

	return Object.assign({}, defaultOptions, opt);
}

exports.default = defaultOptions;

},{"../editor/shared/utils":561,"../util/vec2":686}],588:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.ReSGroup = exports.ReChiralFlag = exports.ReRGroup = exports.ReFrag = exports.ReRxnArrow = exports.ReRxnPlus = exports.ReBond = exports.ReAtom = undefined;

var _box2abs = require('../../util/box2abs');

var _box2abs2 = _interopRequireDefault(_box2abs);

var _pool = require('../../util/pool');

var _pool2 = _interopRequireDefault(_pool);

var _pile = require('../../util/pile');

var _pile2 = _interopRequireDefault(_pile);

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _util = require('../util');

var _util2 = _interopRequireDefault(_util);

var _struct = require('../../chem/struct');

var _struct2 = _interopRequireDefault(_struct);

var _reatom = require('./reatom');

var _reatom2 = _interopRequireDefault(_reatom);

var _rebond = require('./rebond');

var _rebond2 = _interopRequireDefault(_rebond);

var _rerxnplus = require('./rerxnplus');

var _rerxnplus2 = _interopRequireDefault(_rerxnplus);

var _rerxnarrow = require('./rerxnarrow');

var _rerxnarrow2 = _interopRequireDefault(_rerxnarrow);

var _refrag = require('./refrag');

var _refrag2 = _interopRequireDefault(_refrag);

var _rergroup = require('./rergroup');

var _rergroup2 = _interopRequireDefault(_rergroup);

var _redatasgroupdata = require('./redatasgroupdata');

var _redatasgroupdata2 = _interopRequireDefault(_redatasgroupdata);

var _rechiralflag = require('./rechiralflag');

var _rechiralflag2 = _interopRequireDefault(_rechiralflag);

var _resgroup = require('./resgroup');

var _resgroup2 = _interopRequireDefault(_resgroup);

var _reloop = require('./reloop');

var _reloop2 = _interopRequireDefault(_reloop);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

/* eslint-disable guard-for-in,no-prototype-builtins */ // todo

// ReStruct is to store all the auxiliary information for
//  Struct while rendering
var LAYER_MAP = {
	background: 0,
	selectionPlate: 1,
	highlighting: 2,
	warnings: 3,
	data: 4,
	indices: 5
};

function ReStruct(molecule, render) {
	var _this = this;

	// eslint-disable-line max-statements
	this.render = render;
	this.atoms = new _pool2.default();
	this.bonds = new _pool2.default();
	this.reloops = new _pool2.default();
	this.rxnPluses = new _pool2.default();
	this.rxnArrows = new _pool2.default();
	this.frags = new _pool2.default();
	this.rgroups = new _pool2.default();
	this.sgroups = new _pool2.default();
	this.sgroupData = new _pool2.default();
	this.chiralFlags = new _pool2.default();
	this.molecule = molecule || new _struct2.default();
	this.initialized = false;
	this.layers = [];
	this.initLayers();

	this.connectedComponents = new _pool2.default();
	this.ccFragmentType = new _pool2.default();

	this.clearMarks();

	this.structChanged = false;

	// TODO: eachItem ?

	molecule.atoms.forEach(function (atom, aid) {
		_this.atoms.set(aid, new _reatom2.default(atom));
	});

	molecule.bonds.forEach(function (bond, bid) {
		_this.bonds.set(bid, new _rebond2.default(bond));
	});

	molecule.loops.forEach(function (loop, lid) {
		_this.reloops.set(lid, new _reloop2.default(loop));
	});

	molecule.rxnPluses.forEach(function (item, id) {
		_this.rxnPluses.set(id, new _rerxnplus2.default(item));
	});

	molecule.rxnArrows.forEach(function (item, id) {
		_this.rxnArrows.set(id, new _rerxnarrow2.default(item));
	});

	molecule.frags.forEach(function (item, id) {
		_this.frags.set(id, new _refrag2.default(item));
	});

	molecule.rgroups.forEach(function (item, id) {
		_this.rgroups.set(id, new _rergroup2.default(item));
	});

	molecule.sgroups.forEach(function (item, id) {
		_this.sgroups.set(id, new _resgroup2.default(item));
		if (item.type === 'DAT' && !item.data.attached) _this.sgroupData.set(id, new _redatasgroupdata2.default(item)); // [MK] sort of a hack, we use the SGroup id for the data field id
	});

	if (molecule.isChiral) {
		var bb = molecule.getCoordBoundingBox();
		this.chiralFlags.set(0, new _rechiralflag2.default(new _vec2.default(bb.max.x, bb.min.y - 1)));
	}
}

/**
 * @param aid { number }
 * @param atom { Atom }
 */
ReStruct.prototype.connectedComponentRemoveAtom = function (aid) {
	var atom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

	atom = atom || this.atoms.get(aid);
	if (atom.component < 0) return;
	var cc = this.connectedComponents.get(atom.component);

	cc.delete(aid);
	if (cc.size < 1) this.connectedComponents.delete(atom.component);

	atom.component = -1;
};

ReStruct.prototype.clearConnectedComponents = function () {
	this.connectedComponents.clear();
	this.atoms.forEach(function (atom) {
		atom.component = -1;
	});
};

/**
 * @param aid { Array<number>|number }
 * @param adjacentComponents { Pile }
 * @returns { Pile }
 */
ReStruct.prototype.getConnectedComponent = function (aid, adjacentComponents) {
	var _this2 = this;

	var list = Array.isArray(aid) ? Array.from(aid) : [aid];
	var ids = new _pile2.default();

	while (list.length > 0) {
		var _aid = list.pop();
		ids.add(_aid);
		var atom = this.atoms.get(_aid);

		if (atom.component >= 0) adjacentComponents.add(atom.component);

		atom.a.neighbors.forEach(function (neighbor) {
			var neiId = _this2.molecule.halfBonds.get(neighbor).end;
			if (!ids.has(neiId)) list.push(neiId);
		});
	}

	return ids;
};

/**
 * @param idSet { Pile<number> }
 * @returns { number }
 */
ReStruct.prototype.addConnectedComponent = function (idSet) {
	var _this3 = this;

	var compId = this.connectedComponents.add(idSet);
	var adjacentComponents = new _pile2.default();
	var aidSet = this.getConnectedComponent(Array.from(idSet), adjacentComponents);

	adjacentComponents.delete(compId);

	var type = -1;
	aidSet.forEach(function (aid) {
		var atom = _this3.atoms.get(aid);
		atom.component = compId;
		if (atom.a.rxnFragmentType !== -1) type = atom.a.rxnFragmentType;
	});

	this.ccFragmentType.set(compId, type);
	return compId;
};

/**
 * @param ccid { number }
 * @returns { number }
 */
ReStruct.prototype.removeConnectedComponent = function (ccid) {
	var _this4 = this;

	this.connectedComponents.get(ccid).forEach(function (aid) {
		_this4.atoms.get(aid).component = -1;
	});

	return this.connectedComponents.delete(ccid);
};

ReStruct.prototype.assignConnectedComponents = function () {
	var _this5 = this;

	this.atoms.forEach(function (atom, aid) {
		if (atom.component >= 0) return;

		var adjacentComponents = new _pile2.default();
		var idSet = _this5.getConnectedComponent(aid, adjacentComponents);
		adjacentComponents.forEach(function (ccid) {
			_this5.removeConnectedComponent(ccid);
		});

		_this5.addConnectedComponent(idSet);
	});
};

ReStruct.prototype.initLayers = function () {
	for (var group in LAYER_MAP) {
		this.layers[LAYER_MAP[group]] = this.render.paper.rect(0, 0, 10, 10).attr({
			class: group + 'Layer',
			fill: '#000',
			opacity: '0.0'
		}).toFront();
	}
};

ReStruct.prototype.addReObjectPath = function (group, visel, path, pos, visible) {
	// eslint-disable-line max-params
	if (!path || !this.layers[LAYER_MAP[group]].node.parentNode) return;

	var offset = this.render.options.offset;
	var bb = visible ? _box2abs2.default.fromRelBox(_util2.default.relBox(path.getBBox())) : null;
	var ext = pos && bb ? bb.translate(pos.negated()) : null;
	if (offset !== null) {
		path.translateAbs(offset.x, offset.y);
		bb = bb ? bb.translate(offset) : null;
	}
	visel.add(path, bb, ext);
	path.insertBefore(this.layers[LAYER_MAP[group]]);
};

ReStruct.prototype.clearMarks = function () {
	var _this6 = this;

	Object.keys(ReStruct.maps).forEach(function (map) {
		_this6[map + 'Changed'] = new Map();
	});

	this.structChanged = false;
};

ReStruct.prototype.markItemRemoved = function () {
	this.structChanged = true;
};

ReStruct.prototype.markBond = function (bid, mark) {
	this.markItem('bonds', bid, mark);
};

ReStruct.prototype.markAtom = function (aid, mark) {
	this.markItem('atoms', aid, mark);
};

ReStruct.prototype.markItem = function (map, id, mark) {
	var mapChanged = this[map + 'Changed'];

	var value = mapChanged.has(id) ? Math.max(mark, mapChanged.get(id)) : mark;

	mapChanged.set(id, value);

	if (this[map].has(id)) this.clearVisel(this[map].get(id).visel);
};

ReStruct.prototype.clearVisel = function (visel) {
	visel.paths.forEach(function (path) {
		path.remove();
	});
	visel.clear();
};

ReStruct.prototype.eachItem = function (func) {
	var _this7 = this;

	Object.keys(ReStruct.maps).forEach(function (map) {
		_this7[map].forEach(func);
	});
};

ReStruct.prototype.getVBoxObj = function (selection) {
	var _this8 = this;

	selection = selection || {};

	if (isSelectionEmpty(selection)) {
		Object.keys(ReStruct.maps).forEach(function (map) {
			selection[map] = Array.from(_this8[map].keys());
		});
	}

	var vbox = null;
	Object.keys(ReStruct.maps).forEach(function (map) {
		if (!selection[map]) return;

		selection[map].forEach(function (id) {
			var box = _this8[map].get(id).getVBoxObj(_this8.render);
			if (box) vbox = vbox ? _box2abs2.default.union(vbox, box) : box.clone();
		});
	});

	vbox = vbox || new _box2abs2.default(0, 0, 0, 0);
	return vbox;
};

function isSelectionEmpty(selection) {
	if (!selection) return true;

	var anySelection = Object.keys(ReStruct.maps).some(function (map) {
		return selection[map] && selection[map].length > 0;
	});

	return !anySelection;
}

ReStruct.prototype.translate = function (d) {
	this.eachItem(function (item) {
		return item.visel.translate(d);
	});
};

ReStruct.prototype.scale = function (s) {
	// NOTE: bounding boxes are not valid after scaling
	this.eachItem(function (item) {
		return scaleVisel(item.visel, s);
	});
};

function scaleRPath(path, s) {
	if (path.type == 'set') {
		// TODO: rework scaling
		for (var i = 0; i < path.length; ++i) {
			scaleRPath(path[i], s);
		}
	} else {
		if (!(typeof path.attrs === 'undefined')) {
			if ('font-size' in path.attrs) path.attr('font-size', path.attrs['font-size'] * s);else if ('stroke-width' in path.attrs) path.attr('stroke-width', path.attrs['stroke-width'] * s);
		}
		path.scale(s, s, 0, 0);
	}
}

function scaleVisel(visel, s) {
	for (var i = 0; i < visel.paths.length; ++i) {
		scaleRPath(visel.paths[i], s);
	}
}

ReStruct.prototype.clearVisels = function () {
	var _this9 = this;

	this.eachItem(function (item) {
		return _this9.clearVisel(item.visel);
	});
};

ReStruct.prototype.update = function (force) {
	var _this10 = this;

	// eslint-disable-line max-statements
	force = force || !this.initialized;

	// check items to update
	Object.keys(ReStruct.maps).forEach(function (map) {
		var mapChanged = _this10[map + 'Changed'];

		if (force) {
			_this10[map].forEach(function (item, id) {
				return mapChanged.set(id, 1);
			});
		} else {
			// check if some of the items marked are already gone
			mapChanged.forEach(function (value, id) {
				if (!_this10[map].has(id)) mapChanged.delete(id);
			});
		}
	});

	this.atomsChanged.forEach(function (value, aid) {
		return _this10.connectedComponentRemoveAtom(aid);
	});

	// clean up empty fragments
	// TODO: fragment removal should be triggered by the action responsible for the fragment contents removal and form an operation of its own
	var emptyFrags = this.frags.filter(function (fid, frag) {
		return !frag.calcBBox(_this10.render.ctab, fid, _this10.render);
	});

	emptyFrags.forEach(function (frag, fid) {
		_this10.clearVisel(frag.visel);
		_this10.frags.delete(fid);
		_this10.molecule.frags.delete(fid);
	});

	Object.keys(ReStruct.maps).forEach(function (map) {
		var mapChanged = _this10[map + 'Changed'];

		mapChanged.forEach(function (value, id) {
			_this10.clearVisel(_this10[map].get(id).visel);
			_this10.structChanged |= mapChanged.get(id) > 0;
		});
	});

	// TODO: when to update sgroup?
	this.sgroups.forEach(function (sgroup) {
		_this10.clearVisel(sgroup.visel);
		sgroup.highlighting = null;
		sgroup.selectionPlate = null;
	});

	// TODO [RB] need to implement update-on-demand for fragments and r-groups
	this.frags.forEach(function (frag) {
		_this10.clearVisel(frag.visel);
	});

	this.rgroups.forEach(function (rgroup) {
		_this10.clearVisel(rgroup.visel);
	});

	if (force) {
		// clear and recreate all half-bonds
		this.clearConnectedComponents();
		this.molecule.initHalfBonds();
		this.molecule.initNeighbors();
	}

	// only update half-bonds adjacent to atoms that have moved
	var atomsChangedArray = Array.from(this.atomsChanged.keys());
	this.molecule.updateHalfBonds(atomsChangedArray);
	this.molecule.sortNeighbors(atomsChangedArray);

	this.assignConnectedComponents();
	this.initialized = true;

	this.verifyLoops();
	var updLoops = force || this.structChanged;
	if (updLoops) this.updateLoops();
	this.setImplicitHydrogen();
	this.showLabels();
	this.showBonds();
	if (updLoops) this.showLoops();
	this.showReactionSymbols();
	this.showSGroups();

	this.showFragments();
	this.showRGroups();
	this.showChiralFlags();
	this.clearMarks();
	return true;
};

ReStruct.prototype.updateLoops = function () {
	var _this11 = this;

	this.reloops.forEach(function (reloop) {
		_this11.clearVisel(reloop.visel);
	});
	var ret = this.molecule.findLoops();
	ret.bondsToMark.forEach(function (bid) {
		_this11.markBond(bid, 1);
	});
	ret.newLoops.forEach(function (loopId) {
		_this11.reloops.set(loopId, new _reloop2.default(_this11.molecule.loops.get(loopId)));
	});
};

ReStruct.prototype.showLoops = function () {
	var _this12 = this;

	var options = this.render.options;
	this.reloops.forEach(function (reloop, rlid) {
		reloop.show(_this12, rlid, options);
	});
};

ReStruct.prototype.showReactionSymbols = function () {
	var _this13 = this;

	var options = this.render.options;

	this.rxnArrowsChanged.forEach(function (value, id) {
		var arrow = _this13.rxnArrows.get(id);
		arrow.show(_this13, id, options);
	});

	this.rxnPlusesChanged.forEach(function (value, id) {
		var plus = _this13.rxnPluses.get(id);
		plus.show(_this13, id, options);
	});
};

ReStruct.prototype.showSGroups = function () {
	var _this14 = this;

	var options = this.render.options;

	this.molecule.sGroupForest.getSGroupsBFS().reverse().forEach(function (id) {
		var resgroup = _this14.sgroups.get(id);
		resgroup.show(_this14, id, options);
	});
};

ReStruct.prototype.showFragments = function () {
	var _this15 = this;

	this.frags.forEach(function (frag, id) {
		var path = frag.draw(_this15.render, id);
		if (path) _this15.addReObjectPath('data', frag.visel, path, null, true);
		// TODO fragment selection & highlighting
	});
};

ReStruct.prototype.showRGroups = function () {
	var _this16 = this;

	var options = this.render.options;
	this.rgroups.forEach(function (rgroup, id) {
		rgroup.show(_this16, id, options);
	});
};

ReStruct.prototype.setImplicitHydrogen = function () {
	// calculate implicit hydrogens for atoms that have been modified
	this.molecule.setImplicitHydrogen(Array.from(this.atomsChanged.keys()));
};

ReStruct.prototype.loopRemove = function (loopId) {
	var _this17 = this;

	if (!this.reloops.has(loopId)) return;

	var reloop = this.reloops.get(loopId);
	this.clearVisel(reloop.visel);

	var bondlist = [];

	reloop.loop.hbs.forEach(function (hbid) {
		if (!_this17.molecule.halfBonds.has(hbid)) return;

		var hb = _this17.molecule.halfBonds.get(hbid);
		hb.loop = -1;
		_this17.markBond(hb.bid, 1);
		_this17.markAtom(hb.begin, 1);
		bondlist.push(hb.bid);
	});

	this.reloops.delete(loopId);
	this.molecule.loops.delete(loopId);
};

ReStruct.prototype.verifyLoops = function () {
	var _this18 = this;

	this.reloops.forEach(function (reloop, rlid) {
		if (!reloop.isValid(_this18.molecule, rlid)) _this18.loopRemove(rlid);
	});
};

ReStruct.prototype.showLabels = function () {
	var _this19 = this;

	// eslint-disable-line max-statements
	var options = this.render.options;

	this.atomsChanged.forEach(function (value, aid) {
		var atom = _this19.atoms.get(aid);
		atom.show(_this19, aid, options);
	});
};

ReStruct.prototype.showChiralFlags = function () {
	var _this20 = this;

	// eslint-disable-line max-statements
	var options = this.render.options;

	if (this.render.options.hideChiralFlag !== true) {
		this.chiralFlagsChanged.forEach(function (value, chid) {
			var flag = _this20.chiralFlags.get(chid);
			flag.show(_this20, chid, options);
		});
	}
};

ReStruct.prototype.showBonds = function () {
	var _this21 = this;

	// eslint-disable-line max-statements
	var options = this.render.options;

	this.bondsChanged.forEach(function (value, bid) {
		var bond = _this21.bonds.get(bid);
		bond.show(_this21, bid, options);
	});
};

ReStruct.prototype.setSelection = function (selection) {
	var _this22 = this;

	var redraw = arguments.length === 0; // render.update only

	Object.keys(ReStruct.maps).forEach(function (map) {
		if (ReStruct.maps[map].isSelectable()) {
			_this22[map].forEach(function (item, id) {
				var selected = redraw ? item.selected : selection && selection[map] && selection[map].indexOf(id) > -1;

				_this22.showItemSelection(item, selected);
			});
		}
	});
};

ReStruct.prototype.showItemSelection = function (item, selected) {
	var exists = item.selectionPlate !== null && !item.selectionPlate.removed;
	// TODO: simplify me, who sets `removed`?
	item.selected = selected;
	if (item instanceof _redatasgroupdata2.default) item.sgroup.selected = selected;
	if (selected) {
		if (!exists) {
			var render = this.render;
			var options = render.options;
			var paper = render.paper;

			item.selectionPlate = item.makeSelectionPlate(this, paper, options);
			this.addReObjectPath('selectionPlate', item.visel, item.selectionPlate);
		}
		if (item.selectionPlate) item.selectionPlate.show(); // TODO [RB] review
	} else if (exists && item.selectionPlate) {
		item.selectionPlate.hide(); // TODO [RB] review
	}
};

ReStruct.maps = {
	atoms: _reatom2.default,
	bonds: _rebond2.default,
	rxnPluses: _rerxnplus2.default,
	rxnArrows: _rerxnarrow2.default,
	frags: _refrag2.default,
	rgroups: _rergroup2.default,
	sgroupData: _redatasgroupdata2.default,
	chiralFlags: _rechiralflag2.default,
	sgroups: _resgroup2.default,
	reloops: _reloop2.default
};

exports.default = ReStruct;
exports.ReAtom = _reatom2.default;
exports.ReBond = _rebond2.default;
exports.ReRxnPlus = _rerxnplus2.default;
exports.ReRxnArrow = _rerxnarrow2.default;
exports.ReFrag = _refrag2.default;
exports.ReRGroup = _rergroup2.default;
exports.ReChiralFlag = _rechiralflag2.default;
exports.ReSGroup = _resgroup2.default;

},{"../../chem/struct":537,"../../util/box2abs":682,"../../util/pile":683,"../../util/pool":684,"../../util/vec2":686,"../util":601,"./reatom":589,"./rebond":590,"./rechiralflag":591,"./redatasgroupdata":592,"./refrag":593,"./reloop":594,"./rergroup":596,"./rerxnarrow":597,"./rerxnplus":598,"./resgroup":599}],589:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _box2abs = require('../../util/box2abs');

var _box2abs2 = _interopRequireDefault(_box2abs);

var _reobject = require('./reobject');

var _reobject2 = _interopRequireDefault(_reobject);

var _scale = require('../../util/scale');

var _scale2 = _interopRequireDefault(_scale);

var _element = require('../../chem/element');

var _element2 = _interopRequireDefault(_element);

var _elementColor = require('../../chem/element-color');

var _draw = require('../draw');

var _draw2 = _interopRequireDefault(_draw);

var _util = require('../util');

var _util2 = _interopRequireDefault(_util);

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _struct = require('../../chem/struct');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ReAtom( /* chem.Atom*/atom) {
	this.init('atom');

	this.a = atom; // TODO rename a to item
	this.showLabel = false;

	this.hydrogenOnTheLeft = false;

	this.color = '#000000';
	this.component = -1;
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

ReAtom.prototype = new _reobject2.default();
ReAtom.isSelectable = function () {
	return true;
};

ReAtom.prototype.getVBoxObj = function (render) {
	if (this.visel.boundingBox) return _reobject2.default.prototype.getVBoxObj.call(this, render);
	return new _box2abs2.default(this.a.pp, this.a.pp);
};

ReAtom.prototype.drawHighlight = function (render) {
	var ret = this.makeHighlightPlate(render);
	render.ctab.addReObjectPath('highlighting', this.visel, ret);
	return ret;
};

ReAtom.prototype.makeHighlightPlate = function (render) {
	var paper = render.paper;
	var options = render.options;
	var ps = _scale2.default.obj2scaled(this.a.pp, options);
	return paper.circle(ps.x, ps.y, options.atomSelectionPlateRadius).attr(options.highlightStyle);
};

ReAtom.prototype.makeSelectionPlate = function (restruct, paper, styles) {
	var ps = _scale2.default.obj2scaled(this.a.pp, restruct.render.options);
	return paper.circle(ps.x, ps.y, styles.atomSelectionPlateRadius).attr(styles.selectionStyle);
};

ReAtom.prototype.show = function (restruct, aid, options) {
	// eslint-disable-line max-statements
	var render = restruct.render;
	var ps = _scale2.default.obj2scaled(this.a.pp, render.options);

	this.hydrogenOnTheLeft = setHydrogenPos(restruct.molecule, this);
	this.showLabel = isLabelVisible(restruct, render.options, this);
	this.color = 'black'; // reset colour
	if (this.showLabel) {
		var label = buildLabel(this, render.paper, ps, options);
		var delta = 0.5 * options.lineWidth;
		var rightMargin = label.rbb.width / 2;
		var leftMargin = -label.rbb.width / 2;
		var implh = Math.floor(this.a.implicitH);
		var isHydrogen = label.text === 'H';
		restruct.addReObjectPath('data', this.visel, label.path, ps, true);

		var index = null;
		if (options.showAtomIds) {
			index = {};
			index.text = aid.toString();
			index.path = render.paper.text(ps.x, ps.y, index.text).attr({
				font: options.font,
				'font-size': options.fontszsub,
				fill: '#070'
			});
			index.rbb = _util2.default.relBox(index.path.getBBox());
			_draw2.default.recenterText(index.path, index.rbb);
			restruct.addReObjectPath('indices', this.visel, index.path, ps);
		}
		this.setHighlight(this.highlight, render);
	}

	if (this.showLabel && !this.a.alias && !this.a.pseudo) {
		var hydroIndex = null;
		if (isHydrogen && implh > 0) {
			hydroIndex = showHydroIndex(this, render, implh, rightMargin);
			rightMargin += hydroIndex.rbb.width + delta;
			restruct.addReObjectPath('data', this.visel, hydroIndex.path, ps, true);
		}

		if (this.a.radical != 0) {
			var radical = showRadical(this, render);
			restruct.addReObjectPath('data', this.visel, radical.path, ps, true);
		}
		if (this.a.isotope != 0) {
			var isotope = showIsotope(this, render, leftMargin);
			leftMargin -= isotope.rbb.width + delta;
			restruct.addReObjectPath('data', this.visel, isotope.path, ps, true);
		}
		if (!isHydrogen && implh > 0 && displayHydrogen(options.showHydrogenLabels, this)) {
			var data = showHydrogen(this, render, implh, {
				hydrogen: {},
				hydroIndex: hydroIndex,
				rightMargin: rightMargin,
				leftMargin: leftMargin
			});
			var hydrogen = data.hydrogen;
			hydroIndex = data.hydroIndex;
			rightMargin = data.rightMargin;
			leftMargin = data.leftMargin;
			restruct.addReObjectPath('data', this.visel, hydrogen.path, ps, true);
			if (hydroIndex != null) restruct.addReObjectPath('data', this.visel, hydroIndex.path, ps, true);
		}

		if (this.a.charge != 0 && options.showCharge) {
			var charge = showCharge(this, render, rightMargin);
			rightMargin += charge.rbb.width + delta;
			restruct.addReObjectPath('data', this.visel, charge.path, ps, true);
		}
		if (this.a.explicitValence >= 0 && options.showValence) {
			var valence = showExplicitValence(this, render, rightMargin);
			rightMargin += valence.rbb.width + delta;
			restruct.addReObjectPath('data', this.visel, valence.path, ps, true);
		}

		if (this.a.badConn && options.showValenceWarnings) {
			var warning = showWarning(this, render, leftMargin, rightMargin);
			restruct.addReObjectPath('warnings', this.visel, warning.path, ps, true);
		}
		if (index) {
			/* eslint-disable no-mixed-operators */
			pathAndRBoxTranslate(index.path, index.rbb, -0.5 * label.rbb.width - 0.5 * index.rbb.width - delta, 0.3 * label.rbb.height);
			/* eslint-enable no-mixed-operators */
		}
	}

	if (this.a.attpnt) {
		var lsb = bisectLargestSector(this, restruct.molecule);
		showAttpnt(this, render, lsb, restruct.addReObjectPath.bind(restruct));
	}

	var aamText = getAamText(this);
	var queryAttrsText = !this.a.alias && !this.a.pseudo ? getQueryAttrsText(this) : '';

	// this includes both aam flags, if any, and query features, if any
	// we render them together to avoid possible collisions
	aamText = (queryAttrsText.length > 0 ? queryAttrsText + '\n' : '') + (aamText.length > 0 ? '.' + aamText + '.' : '');
	if (aamText.length > 0) {
		var elem = _element2.default.map[this.a.label];
		var aamPath = render.paper.text(ps.x, ps.y, aamText).attr({
			font: options.font,
			'font-size': options.fontszsub,
			fill: options.atomColoring && elem ? _elementColor.sketchingColors[this.a.label] : '#000'
		});
		var aamBox = _util2.default.relBox(aamPath.getBBox());
		_draw2.default.recenterText(aamPath, aamBox);
		var dir = bisectLargestSector(this, restruct.molecule);
		var visel = this.visel;
		var t = 3;
		// estimate the shift to clear the atom label
		for (var i = 0; i < visel.exts.length; ++i) {
			t = Math.max(t, _util2.default.shiftRayBox(ps, dir, visel.exts[i].translate(ps)));
		} // estimate the shift backwards to account for the size of the aam/query text box itself
		t += _util2.default.shiftRayBox(ps, dir.negated(), _box2abs2.default.fromRelBox(aamBox));
		dir = dir.scaled(8 + t);
		pathAndRBoxTranslate(aamPath, aamBox, dir.x, dir.y);
		restruct.addReObjectPath('data', this.visel, aamPath, ps, true);
	}
};

function isLabelVisible(restruct, options, atom) {
	var visibleTerminal = options.showHydrogenLabels !== 'off' && options.showHydrogenLabels !== 'Hetero';

	var neighborsLength = atom.a.neighbors.length === 0 || atom.a.neighbors.length < 2 && visibleTerminal;

	var shouldBeVisible = neighborsLength || options.carbonExplicitly || atom.a.alias || atom.a.isotope !== 0 || atom.a.radical !== 0 || atom.a.charge !== 0 || atom.a.explicitValence >= 0 || atom.a.atomList !== null || atom.a.rglabel !== null || atom.a.badConn && options.showValenceWarnings || atom.a.label.toLowerCase() !== 'c';

	if (shouldBeVisible) return true;

	if (atom.a.neighbors.length === 2) {
		var nei1 = atom.a.neighbors[0];
		var nei2 = atom.a.neighbors[1];
		var hb1 = restruct.molecule.halfBonds.get(nei1);
		var hb2 = restruct.molecule.halfBonds.get(nei2);
		var bond1 = restruct.bonds.get(hb1.bid);
		var bond2 = restruct.bonds.get(hb2.bid);

		var sameNotStereo = bond1.b.type === bond2.b.type && bond1.b.stereo === _struct.Bond.PATTERN.STEREO.NONE && bond2.b.stereo === _struct.Bond.PATTERN.STEREO.NONE;

		if (sameNotStereo && Math.abs(_vec2.default.cross(hb1.dir, hb2.dir)) < 0.2) return true;
	}

	return false;
}

function displayHydrogen(hydrogenLabels, atom) {
	return hydrogenLabels === 'on' || hydrogenLabels === 'Terminal' && atom.a.neighbors.length < 2 || hydrogenLabels === 'Hetero' && atom.label.text.toLowerCase() !== 'c' || hydrogenLabels === 'Terminal and Hetero' && (atom.a.neighbors.length < 2 || atom.label.text.toLowerCase() !== 'c');
}

function setHydrogenPos(struct, atom) {
	// check where should the hydrogen be put on the left of the label
	if (atom.a.neighbors.length === 0) {
		var elem = _element2.default.map[atom.a.label];
		return !elem || _element2.default[elem].leftH;
	}

	var yl = 1;
	var yr = 1;
	var nl = 0;
	var nr = 0;

	atom.a.neighbors.forEach(function (nei) {
		var d = struct.halfBonds.get(nei).dir;

		if (d.x <= 0) {
			yl = Math.min(yl, Math.abs(d.y));
			nl++;
		} else {
			yr = Math.min(yr, Math.abs(d.y));
			nr++;
		}
	});

	return yl < 0.51 || yr < 0.51 ? yr < yl : nr > nl;
}

function buildLabel(atom, paper, ps, options) {
	// eslint-disable-line max-statements
	var label = {};
	label.text = getLabelText(atom.a);

	if (label.text === '') label = 'R#'; // for structures that missed 'M  RGP' tag in molfile

	if (label.text === atom.a.label) {
		var elem = _element2.default.map[label.text];
		if (options.atomColoring && elem) atom.color = _elementColor.sketchingColors[label.text] || '#000';
	}

	label.path = paper.text(ps.x, ps.y, label.text).attr({
		font: options.font,
		'font-size': options.fontsz,
		fill: atom.color,
		'font-style': atom.a.pseudo ? 'italic' : ''
	});

	label.rbb = _util2.default.relBox(label.path.getBBox());
	_draw2.default.recenterText(label.path, label.rbb);

	if (atom.a.atomList !== null) pathAndRBoxTranslate(label.path, label.rbb, (atom.hydrogenOnTheLeft ? -1 : 1) * (label.rbb.width - label.rbb.height) / 2, 0);

	atom.label = label;
	return label;
}

function getLabelText(atom) {
	if (atom.atomList !== null) return atom.atomList.label();

	if (atom.pseudo) return atom.pseudo;

	if (atom.alias) return atom.alias;

	if (atom.label === 'R#' && atom.rglabel !== null) {
		var text = '';

		for (var rgi = 0; rgi < 32; rgi++) {
			if (atom.rglabel & 1 << rgi) // eslint-disable-line max-depth
				text += 'R' + (rgi + 1).toString();
		}

		return text;
	}

	return atom.label;
}

function showHydroIndex(atom, render, implh, rightMargin) {
	var ps = _scale2.default.obj2scaled(atom.a.pp, render.options);
	var options = render.options;
	var delta = 0.5 * options.lineWidth;
	var hydroIndex = {};
	hydroIndex.text = (implh + 1).toString();
	hydroIndex.path = render.paper.text(ps.x, ps.y, hydroIndex.text).attr({
		font: options.font,
		'font-size': options.fontszsub,
		fill: atom.color
	});
	hydroIndex.rbb = _util2.default.relBox(hydroIndex.path.getBBox());
	_draw2.default.recenterText(hydroIndex.path, hydroIndex.rbb);
	/* eslint-disable no-mixed-operators*/
	pathAndRBoxTranslate(hydroIndex.path, hydroIndex.rbb, rightMargin + 0.5 * hydroIndex.rbb.width + delta, 0.2 * atom.label.rbb.height);
	/* eslint-enable no-mixed-operators*/
	return hydroIndex;
}

function showRadical(atom, render) {
	var ps = _scale2.default.obj2scaled(atom.a.pp, render.options);
	var options = render.options;
	var paper = render.paper;
	var radical = {};
	var hshift;
	switch (atom.a.radical) {
		case 1:
			radical.path = paper.set();
			hshift = 1.6 * options.lineWidth;
			radical.path.push(_draw2.default.radicalBullet(paper, ps.add(new _vec2.default(-hshift, 0)), options), _draw2.default.radicalBullet(paper, ps.add(new _vec2.default(hshift, 0)), options));
			radical.path.attr('fill', atom.color);
			break;
		case 2:
			radical.path = paper.set();
			radical.path.push(_draw2.default.radicalBullet(paper, ps, options));
			radical.path.attr('fill', atom.color);
			break;
		case 3:
			radical.path = paper.set();
			hshift = 1.6 * options.lineWidth;
			radical.path.push(_draw2.default.radicalCap(paper, ps.add(new _vec2.default(-hshift, 0)), options), _draw2.default.radicalCap(paper, ps.add(new _vec2.default(hshift, 0)), options));
			radical.path.attr('stroke', atom.color);
			break;
		default:
			break;
	}
	radical.rbb = _util2.default.relBox(radical.path.getBBox());
	var vshift = -0.5 * (atom.label.rbb.height + radical.rbb.height);
	if (atom.a.radical === 3) vshift -= options.lineWidth / 2;
	pathAndRBoxTranslate(radical.path, radical.rbb, 0, vshift);
	return radical;
}

function showIsotope(atom, render, leftMargin) {
	var ps = _scale2.default.obj2scaled(atom.a.pp, render.options);
	var options = render.options;
	var delta = 0.5 * options.lineWidth;
	var isotope = {};
	isotope.text = atom.a.isotope.toString();
	isotope.path = render.paper.text(ps.x, ps.y, isotope.text).attr({
		font: options.font,
		'font-size': options.fontszsub,
		fill: atom.color
	});
	isotope.rbb = _util2.default.relBox(isotope.path.getBBox());
	_draw2.default.recenterText(isotope.path, isotope.rbb);
	/* eslint-disable no-mixed-operators*/
	pathAndRBoxTranslate(isotope.path, isotope.rbb, leftMargin - 0.5 * isotope.rbb.width - delta, -0.3 * atom.label.rbb.height);
	/* eslint-enable no-mixed-operators*/
	return isotope;
}

function showCharge(atom, render, rightMargin) {
	var ps = _scale2.default.obj2scaled(atom.a.pp, render.options);
	var options = render.options;
	var delta = 0.5 * options.lineWidth;
	var charge = {};
	charge.text = '';
	var absCharge = Math.abs(atom.a.charge);
	if (absCharge != 1) charge.text = absCharge.toString();
	if (atom.a.charge < 0) charge.text += '\u2013';else charge.text += '+';

	charge.path = render.paper.text(ps.x, ps.y, charge.text).attr({
		font: options.font,
		'font-size': options.fontszsub,
		fill: atom.color
	});
	charge.rbb = _util2.default.relBox(charge.path.getBBox());
	_draw2.default.recenterText(charge.path, charge.rbb);
	/* eslint-disable no-mixed-operators*/
	pathAndRBoxTranslate(charge.path, charge.rbb, rightMargin + 0.5 * charge.rbb.width + delta, -0.3 * atom.label.rbb.height);
	/* eslint-enable no-mixed-operators*/
	return charge;
}

function showExplicitValence(atom, render, rightMargin) {
	var mapValence = {
		0: '0',
		1: 'I',
		2: 'II',
		3: 'III',
		4: 'IV',
		5: 'V',
		6: 'VI',
		7: 'VII',
		8: 'VIII',
		9: 'IX',
		10: 'X',
		11: 'XI',
		12: 'XII',
		13: 'XIII',
		14: 'XIV'
	};
	var ps = _scale2.default.obj2scaled(atom.a.pp, render.options);
	var options = render.options;
	var delta = 0.5 * options.lineWidth;
	var valence = {};
	valence.text = mapValence[atom.a.explicitValence];
	if (!valence.text) throw new Error('invalid valence ' + atom.a.explicitValence.toString());
	valence.text = '(' + valence.text + ')';
	valence.path = render.paper.text(ps.x, ps.y, valence.text).attr({
		font: options.font,
		'font-size': options.fontszsub,
		fill: atom.color
	});
	valence.rbb = _util2.default.relBox(valence.path.getBBox());
	_draw2.default.recenterText(valence.path, valence.rbb);
	/* eslint-disable no-mixed-operators*/
	pathAndRBoxTranslate(valence.path, valence.rbb, rightMargin + 0.5 * valence.rbb.width + delta, -0.3 * atom.label.rbb.height);
	/* eslint-enable no-mixed-operators*/
	return valence;
}

function showHydrogen(atom, render, implh, data) {
	// eslint-disable-line max-statements
	var hydroIndex = data.hydroIndex;
	var hydrogenLeft = atom.hydrogenOnTheLeft;
	var ps = _scale2.default.obj2scaled(atom.a.pp, render.options);
	var options = render.options;
	var delta = 0.5 * options.lineWidth;
	var hydrogen = data.hydrogen;
	hydrogen.text = 'H';
	hydrogen.path = render.paper.text(ps.x, ps.y, hydrogen.text).attr({
		font: options.font,
		'font-size': options.fontsz,
		fill: atom.color
	});
	hydrogen.rbb = _util2.default.relBox(hydrogen.path.getBBox());
	_draw2.default.recenterText(hydrogen.path, hydrogen.rbb);
	if (!hydrogenLeft) {
		pathAndRBoxTranslate(hydrogen.path, hydrogen.rbb, data.rightMargin + 0.5 * hydrogen.rbb.width + delta, 0);
		data.rightMargin += hydrogen.rbb.width + delta;
	}
	if (implh > 1) {
		hydroIndex = {};
		hydroIndex.text = implh.toString();
		hydroIndex.path = render.paper.text(ps.x, ps.y, hydroIndex.text).attr({
			font: options.font,
			'font-size': options.fontszsub,
			fill: atom.color
		});
		hydroIndex.rbb = _util2.default.relBox(hydroIndex.path.getBBox());
		_draw2.default.recenterText(hydroIndex.path, hydroIndex.rbb);
		if (!hydrogenLeft) {
			pathAndRBoxTranslate(hydroIndex.path, hydroIndex.rbb, data.rightMargin + 0.5 * hydroIndex.rbb.width + delta, 0.2 * atom.label.rbb.height);
			data.rightMargin += hydroIndex.rbb.width + delta;
		}
	}
	if (hydrogenLeft) {
		if (hydroIndex != null) {
			pathAndRBoxTranslate(hydroIndex.path, hydroIndex.rbb, data.leftMargin - 0.5 * hydroIndex.rbb.width - delta, 0.2 * atom.label.rbb.height);
			data.leftMargin -= hydroIndex.rbb.width + delta;
		}
		pathAndRBoxTranslate(hydrogen.path, hydrogen.rbb, data.leftMargin - 0.5 * hydrogen.rbb.width - delta, 0);
		data.leftMargin -= hydrogen.rbb.width + delta;
	}
	return Object.assign(data, { hydrogen: hydrogen, hydroIndex: hydroIndex });
}

function showWarning(atom, render, leftMargin, rightMargin) {
	var ps = _scale2.default.obj2scaled(atom.a.pp, render.options);
	var delta = 0.5 * render.options.lineWidth;
	var tfx = _util2.default.tfx;
	var warning = {};
	var y = ps.y + atom.label.rbb.height / 2 + delta;
	warning.path = render.paper.path('M{0},{1}L{2},{3}', tfx(ps.x + leftMargin), tfx(y), tfx(ps.x + rightMargin), tfx(y)).attr(render.options.lineattr).attr({ stroke: '#F00' });
	warning.rbb = _util2.default.relBox(warning.path.getBBox());
	return warning;
}

function showAttpnt(atom, render, lsb, addReObjectPath) {
	// eslint-disable-line max-statements
	var asterisk = '∗';
	var ps = _scale2.default.obj2scaled(atom.a.pp, render.options);
	var options = render.options;
	var tfx = _util2.default.tfx;
	var i, j;
	for (i = 0; i < 4; ++i) {
		var attpntText = '';
		if (atom.a.attpnt & 1 << i) {
			if (attpntText.length > 0) attpntText += ' ';
			attpntText += asterisk;
			for (j = 0; j < (i == 0 ? 0 : i + 1); ++j) {
				attpntText += '\'';
			}var pos0 = new _vec2.default(ps);
			var pos1 = ps.addScaled(lsb, 0.7 * options.scale);

			var attpntPath1 = render.paper.text(pos1.x, pos1.y, attpntText).attr({
				font: options.font,
				'font-size': options.fontsz,
				fill: atom.color
			});
			var attpntRbb = _util2.default.relBox(attpntPath1.getBBox());
			_draw2.default.recenterText(attpntPath1, attpntRbb);

			var lsbn = lsb.negated();
			/* eslint-disable no-mixed-operators*/
			pos1 = pos1.addScaled(lsbn, _util2.default.shiftRayBox(pos1, lsbn, _box2abs2.default.fromRelBox(attpntRbb)) + options.lineWidth / 2);
			/* eslint-enable no-mixed-operators*/
			pos0 = shiftBondEnd(atom, pos0, lsb, options.lineWidth);
			var n = lsb.rotateSC(1, 0);
			var arrowLeft = pos1.addScaled(n, 0.05 * options.scale).addScaled(lsbn, 0.09 * options.scale);
			var arrowRight = pos1.addScaled(n, -0.05 * options.scale).addScaled(lsbn, 0.09 * options.scale);
			var attpntPath = render.paper.set();
			attpntPath.push(attpntPath1, render.paper.path('M{0},{1}L{2},{3}M{4},{5}L{2},{3}L{6},{7}', tfx(pos0.x), tfx(pos0.y), tfx(pos1.x), tfx(pos1.y), tfx(arrowLeft.x), tfx(arrowLeft.y), tfx(arrowRight.x), tfx(arrowRight.y)).attr(render.options.lineattr).attr({ 'stroke-width': options.lineWidth / 2 }));
			addReObjectPath('indices', atom.visel, attpntPath, ps);
			lsb = lsb.rotate(Math.PI / 6);
		}
	}
}

function getAamText(atom) {
	var aamText = '';
	if (atom.a.aam > 0) aamText += atom.a.aam;
	if (atom.a.invRet > 0) {
		if (aamText.length > 0) aamText += ',';
		if (atom.a.invRet == 1) aamText += 'Inv';else if (atom.a.invRet == 2) aamText += 'Ret';else throw new Error('Invalid value for the invert/retain flag');
	}
	if (atom.a.exactChangeFlag > 0) {
		if (aamText.length > 0) aamText += ',';
		if (atom.a.exactChangeFlag == 1) aamText += 'ext';else throw new Error('Invalid value for the exact change flag');
	}
	return aamText;
}

function getQueryAttrsText(atom) {
	var queryAttrsText = '';
	if (atom.a.ringBondCount != 0) {
		if (atom.a.ringBondCount > 0) queryAttrsText += 'rb' + atom.a.ringBondCount.toString();else if (atom.a.ringBondCount == -1) queryAttrsText += 'rb0';else if (atom.a.ringBondCount == -2) queryAttrsText += 'rb*';else throw new Error('Ring bond count invalid');
	}
	if (atom.a.substitutionCount != 0) {
		if (queryAttrsText.length > 0) queryAttrsText += ',';
		if (atom.a.substitutionCount > 0) queryAttrsText += 's' + atom.a.substitutionCount.toString();else if (atom.a.substitutionCount == -1) queryAttrsText += 's0';else if (atom.a.substitutionCount == -2) queryAttrsText += 's*';else throw new Error('Substitution count invalid');
	}
	if (atom.a.unsaturatedAtom > 0) {
		if (queryAttrsText.length > 0) queryAttrsText += ',';
		if (atom.a.unsaturatedAtom == 1) queryAttrsText += 'u';else throw new Error('Unsaturated atom invalid value');
	}
	if (atom.a.hCount > 0) {
		if (queryAttrsText.length > 0) queryAttrsText += ',';
		queryAttrsText += 'H' + (atom.a.hCount - 1).toString();
	}
	return queryAttrsText;
}

function pathAndRBoxTranslate(path, rbb, x, y) {
	path.translateAbs(x, y);
	rbb.x += x;
	rbb.y += y;
}

function bisectLargestSector(atom, struct) {
	var angles = [];
	atom.a.neighbors.forEach(function (hbid) {
		var hb = struct.halfBonds.get(hbid);
		angles.push(hb.ang);
	});
	angles = angles.sort(function (a, b) {
		return a - b;
	});
	var da = [];
	for (var i = 0; i < angles.length - 1; ++i) {
		da.push(angles[(i + 1) % angles.length] - angles[i]);
	}da.push(angles[0] - angles[angles.length - 1] + 2 * Math.PI);
	var daMax = 0;
	var ang = -Math.PI / 2;
	for (i = 0; i < angles.length; ++i) {
		if (da[i] > daMax) {
			daMax = da[i];
			ang = angles[i] + da[i] / 2;
		}
	}
	return new _vec2.default(Math.cos(ang), Math.sin(ang));
}

function shiftBondEnd(atom, pos0, dir, margin) {
	var t = 0;
	var visel = atom.visel;
	for (var k = 0; k < visel.exts.length; ++k) {
		var box = visel.exts[k].translate(pos0);
		t = Math.max(t, _util2.default.shiftRayBox(pos0, dir, box));
	}
	if (t > 0) pos0 = pos0.addScaled(dir, t + margin);
	return pos0;
}

exports.default = ReAtom;

},{"../../chem/element":520,"../../chem/element-color":519,"../../chem/struct":537,"../../util/box2abs":682,"../../util/scale":685,"../../util/vec2":686,"../draw":585,"../util":601,"./reobject":595}],590:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _reobject = require('./reobject');

var _reobject2 = _interopRequireDefault(_reobject);

var _struct = require('../../chem/struct');

var _draw = require('../draw');

var _draw2 = _interopRequireDefault(_draw);

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _util = require('../util');

var _util2 = _interopRequireDefault(_util);

var _scale = require('../../util/scale');

var _scale2 = _interopRequireDefault(_scale);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @param bond { Bond }
 * @constructor
 */
/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function ReBond(bond) {
	this.init('bond');

	this.b = bond; // TODO rename b to item
	this.doubleBondShift = 0;
}

ReBond.prototype = new _reobject2.default();
ReBond.isSelectable = function () {
	return true;
};

ReBond.prototype.drawHighlight = function (render) {
	var ret = this.makeHighlightPlate(render);
	render.ctab.addReObjectPath('highlighting', this.visel, ret);
	return ret;
};

ReBond.prototype.makeHighlightPlate = function (render) {
	var options = render.options;
	bondRecalc(this, render.ctab, options);
	var c = _scale2.default.obj2scaled(this.b.center, options);
	return render.paper.circle(c.x, c.y, 0.8 * options.atomSelectionPlateRadius).attr(options.highlightStyle);
};

ReBond.prototype.makeSelectionPlate = function (restruct, paper, options) {
	bondRecalc(this, restruct, options);
	var c = _scale2.default.obj2scaled(this.b.center, options);
	return paper.circle(c.x, c.y, 0.8 * options.atomSelectionPlateRadius).attr(options.selectionStyle);
};

/**
 * @param restruct { ReStruct }
 * @param bid { number }
 * @param options { object }
 */
ReBond.prototype.show = function (restruct, bid, options) {
	// eslint-disable-line max-statements
	var render = restruct.render;
	var struct = restruct.molecule;
	var paper = render.paper;
	var hb1 = struct.halfBonds.get(this.b.hb1),
	    hb2 = struct.halfBonds.get(this.b.hb2);

	checkStereoBold(bid, this, restruct);
	bondRecalc(this, restruct, options);
	setDoubleBondShift(this, struct);

	this.path = getBondPath(restruct, this, hb1, hb2);

	this.rbb = _util2.default.relBox(this.path.getBBox());
	restruct.addReObjectPath('data', this.visel, this.path, null, true);
	var reactingCenter = {};
	reactingCenter.path = getReactingCenterPath(render, this, hb1, hb2);
	if (reactingCenter.path) {
		reactingCenter.rbb = _util2.default.relBox(reactingCenter.path.getBBox());
		restruct.addReObjectPath('data', this.visel, reactingCenter.path, null, true);
	}
	var topology = {};
	topology.path = getTopologyMark(render, this, hb1, hb2);
	if (topology.path) {
		topology.rbb = _util2.default.relBox(topology.path.getBBox());
		restruct.addReObjectPath('data', this.visel, topology.path, null, true);
	}
	this.setHighlight(this.highlight, render);

	var ipath = null;
	var bondIdxOff = options.subFontSize * 0.6;
	if (options.showBondIds) {
		ipath = getIdsPath(bid, paper, hb1, hb2, bondIdxOff, 0.5, 0.5, hb1.norm);
		restruct.addReObjectPath('indices', this.visel, ipath);
	}
	if (options.showHalfBondIds) {
		ipath = getIdsPath(this.b.hb1, paper, hb1, hb2, bondIdxOff, 0.8, 0.2, hb1.norm);
		restruct.addReObjectPath('indices', this.visel, ipath);
		ipath = getIdsPath(this.b.hb2, paper, hb1, hb2, bondIdxOff, 0.2, 0.8, hb2.norm);
		restruct.addReObjectPath('indices', this.visel, ipath);
	}
	if (options.showLoopIds && !options.showBondIds) {
		ipath = getIdsPath(hb1.loop, paper, hb1, hb2, bondIdxOff, 0.5, 0.5, hb2.norm);
		restruct.addReObjectPath('indices', this.visel, ipath);
		ipath = getIdsPath(hb2.loop, paper, hb1, hb2, bondIdxOff, 0.5, 0.5, hb1.norm);
		restruct.addReObjectPath('indices', this.visel, ipath);
	}
};

function findIncomingStereoUpBond(atom, bid0, includeBoldStereoBond, restruct) {
	return atom.neighbors.findIndex(function (hbid) {
		var hb = restruct.molecule.halfBonds.get(hbid);
		var bid = hb.bid;
		if (bid === bid0) return false;

		var neibond = restruct.bonds.get(bid);

		var singleUp = neibond.b.type === _struct.Bond.PATTERN.TYPE.SINGLE && neibond.b.stereo === _struct.Bond.PATTERN.STEREO.UP;

		if (singleUp) return neibond.b.end === hb.begin || neibond.boldStereo && includeBoldStereoBond;

		return !!(neibond.b.type === _struct.Bond.PATTERN.TYPE.DOUBLE && neibond.b.stereo === _struct.Bond.PATTERN.STEREO.NONE && includeBoldStereoBond && neibond.boldStereo);
	});
}

function findIncomingUpBonds(bid0, bond, restruct) {
	var halfbonds = [bond.b.begin, bond.b.end].map(function (aid) {
		var atom = restruct.molecule.atoms.get(aid);
		var pos = findIncomingStereoUpBond(atom, bid0, true, restruct);
		return pos < 0 ? -1 : atom.neighbors[pos];
	});
	console.assert(halfbonds.length === 2);
	bond.neihbid1 = restruct.atoms.get(bond.b.begin).showLabel ? -1 : halfbonds[0];
	bond.neihbid2 = restruct.atoms.get(bond.b.end).showLabel ? -1 : halfbonds[1];
}

function checkStereoBold(bid0, bond, restruct) {
	var halfbonds = [bond.b.begin, bond.b.end].map(function (aid) {
		var atom = restruct.molecule.atoms.get(aid);
		var pos = findIncomingStereoUpBond(atom, bid0, false, restruct);
		return pos < 0 ? -1 : atom.neighbors[pos];
	});
	console.assert(halfbonds.length === 2);
	bond.boldStereo = halfbonds[0] >= 0 && halfbonds[1] >= 0;
}

/**
 * @param restruct { ReStruct }
 * @param bond { ReBond }
 * @param hb1 { HalfBond }
 * @param hb2 { HalfBond }
 * @return {*}
 */
function getBondPath(restruct, bond, hb1, hb2) {
	var path = null;
	var render = restruct.render;
	var struct = restruct.molecule;
	var shiftA = !restruct.atoms.get(hb1.begin).showLabel;
	var shiftB = !restruct.atoms.get(hb2.begin).showLabel;

	switch (bond.b.type) {
		case _struct.Bond.PATTERN.TYPE.SINGLE:
			switch (bond.b.stereo) {
				case _struct.Bond.PATTERN.STEREO.UP:
					findIncomingUpBonds(hb1.bid, bond, restruct);
					if (bond.boldStereo && bond.neihbid1 >= 0 && bond.neihbid2 >= 0) path = getBondSingleStereoBoldPath(render, hb1, hb2, bond, struct);else path = getBondSingleUpPath(render, hb1, hb2, bond, struct);
					break;
				case _struct.Bond.PATTERN.STEREO.DOWN:
					path = getBondSingleDownPath(render, hb1, hb2);
					break;
				case _struct.Bond.PATTERN.STEREO.EITHER:
					path = getBondSingleEitherPath(render, hb1, hb2);
					break;
				default:
					path = _draw2.default.bondSingle(render.paper, hb1, hb2, render.options);
					break;
			}
			break;
		case _struct.Bond.PATTERN.TYPE.DOUBLE:
			findIncomingUpBonds(hb1.bid, bond, restruct);
			if (bond.b.stereo === _struct.Bond.PATTERN.STEREO.NONE && bond.boldStereo && bond.neihbid1 >= 0 && bond.neihbid2 >= 0) path = getBondDoubleStereoBoldPath(render, hb1, hb2, bond, struct, shiftA, shiftB);else path = getBondDoublePath(render, hb1, hb2, bond, shiftA, shiftB);
			break;
		case _struct.Bond.PATTERN.TYPE.TRIPLE:
			path = _draw2.default.bondTriple(render.paper, hb1, hb2, render.options);
			break;
		case _struct.Bond.PATTERN.TYPE.AROMATIC:
			var inAromaticLoop = hb1.loop >= 0 && struct.loops.get(hb1.loop).aromatic || hb2.loop >= 0 && struct.loops.get(hb2.loop).aromatic;
			path = inAromaticLoop ? _draw2.default.bondSingle(render.paper, hb1, hb2, render.options) : getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB);
			break;
		case _struct.Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE:
			path = getSingleOrDoublePath(render, hb1, hb2);
			break;
		case _struct.Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC:
			path = getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB);
			break;
		case _struct.Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC:
			path = getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB);
			break;
		case _struct.Bond.PATTERN.TYPE.ANY:
			path = _draw2.default.bondAny(render.paper, hb1, hb2, render.options);
			break;
		default:
			throw new Error('Bond type ' + bond.b.type + ' not supported');
	}
	return path;
}

/* Get Path */
function getBondSingleUpPath(render, hb1, hb2, bond, struct) {
	// eslint-disable-line max-params
	var a = hb1.p,
	    b = hb2.p,
	    n = hb1.norm;
	var options = render.options;
	var bsp = 0.7 * options.stereoBond;
	var b2 = b.addScaled(n, bsp);
	var b3 = b.addScaled(n, -bsp);
	if (bond.neihbid2 >= 0) {
		// if the end is shared with another up-bond heading this way
		var coords = stereoUpBondGetCoordinates(hb2, bond.neihbid2, options.stereoBond, struct);
		b2 = coords[0];
		b3 = coords[1];
	}
	return _draw2.default.bondSingleUp(render.paper, a, b2, b3, options);
}

function getBondSingleStereoBoldPath(render, hb1, hb2, bond, struct) {
	// eslint-disable-line max-params
	var options = render.options;
	var coords1 = stereoUpBondGetCoordinates(hb1, bond.neihbid1, options.stereoBond, struct);
	var coords2 = stereoUpBondGetCoordinates(hb2, bond.neihbid2, options.stereoBond, struct);
	var a1 = coords1[0];
	var a2 = coords1[1];
	var a3 = coords2[0];
	var a4 = coords2[1];
	return _draw2.default.bondSingleStereoBold(render.paper, a1, a2, a3, a4, options);
}

function getBondDoubleStereoBoldPath(render, hb1, hb2, bond, struct, shiftA, shiftB) {
	// eslint-disable-line max-params
	var a = hb1.p,
	    b = hb2.p,
	    n = hb1.norm,
	    shift = bond.doubleBondShift;
	var bsp = 1.5 * render.options.stereoBond;
	var b1 = a.addScaled(n, bsp * shift);
	var b2 = b.addScaled(n, bsp * shift);
	if (shift > 0) {
		if (shiftA) b1 = b1.addScaled(hb1.dir, bsp * getBondLineShift(hb1.rightCos, hb1.rightSin));
		if (shiftB) b2 = b2.addScaled(hb1.dir, -bsp * getBondLineShift(hb2.leftCos, hb2.leftSin));
	} else if (shift < 0) {
		if (shiftA) b1 = b1.addScaled(hb1.dir, bsp * getBondLineShift(hb1.leftCos, hb1.leftSin));
		if (shiftB) b2 = b2.addScaled(hb1.dir, -bsp * getBondLineShift(hb2.rightCos, hb2.rightSin));
	}
	var sgBondPath = getBondSingleStereoBoldPath(render, hb1, hb2, bond, struct);
	return _draw2.default.bondDoubleStereoBold(render.paper, sgBondPath, b1, b2, render.options);
}

function getBondLineShift(cos, sin) {
	if (sin < 0 || Math.abs(cos) > 0.9) return 0;
	return sin / (1 - cos);
}

function stereoUpBondGetCoordinates(hb, neihbid, bondSpace, struct) {
	var neihb = struct.halfBonds.get(neihbid);
	var cos = _vec2.default.dot(hb.dir, neihb.dir);
	var sin = _vec2.default.cross(hb.dir, neihb.dir);
	var cosHalf = Math.sqrt(0.5 * (1 - cos));
	var biss = neihb.dir.rotateSC((sin >= 0 ? -1 : 1) * cosHalf, Math.sqrt(0.5 * (1 + cos)));

	var denomAdd = 0.3;
	var scale = 0.7;
	var a1 = hb.p.addScaled(biss, scale * bondSpace / (cosHalf + denomAdd));
	var a2 = hb.p.addScaled(biss.negated(), scale * bondSpace / (cosHalf + denomAdd));
	return sin > 0 ? [a1, a2] : [a2, a1];
}

function getBondSingleDownPath(render, hb1, hb2) {
	var a = hb1.p,
	    b = hb2.p;
	var options = render.options;
	var d = b.sub(a);
	var len = d.length() + 0.2;
	d = d.normalized();
	var interval = 1.2 * options.lineWidth;
	var nlines = Math.max(Math.floor((len - options.lineWidth) / (options.lineWidth + interval)), 0) + 2;
	var step = len / (nlines - 1);
	return _draw2.default.bondSingleDown(render.paper, hb1, d, nlines, step, options);
}

function getBondSingleEitherPath(render, hb1, hb2) {
	var a = hb1.p,
	    b = hb2.p;
	var options = render.options;
	var d = b.sub(a);
	var len = d.length();
	d = d.normalized();
	var interval = 0.6 * options.lineWidth;
	var nlines = Math.max(Math.floor((len - options.lineWidth) / (options.lineWidth + interval)), 0) + 2;
	var step = len / (nlines - 0.5);
	return _draw2.default.bondSingleEither(render.paper, hb1, d, nlines, step, options);
}

function getBondDoublePath(render, hb1, hb2, bond, shiftA, shiftB) {
	// eslint-disable-line max-params, max-statements
	var cisTrans = bond.b.stereo === _struct.Bond.PATTERN.STEREO.CIS_TRANS;

	var a = hb1.p;
	var b = hb2.p;
	var n = hb1.norm;
	var shift = cisTrans ? 0 : bond.doubleBondShift;

	var options = render.options;
	var bsp = options.bondSpace / 2;
	var s1 = bsp + shift * bsp;
	var s2 = -bsp + shift * bsp;

	var a1 = a.addScaled(n, s1);
	var b1 = b.addScaled(n, s1);
	var a2 = a.addScaled(n, s2);
	var b2 = b.addScaled(n, s2);

	if (shift > 0) {
		if (shiftA) {
			a1 = a1.addScaled(hb1.dir, options.bondSpace * getBondLineShift(hb1.rightCos, hb1.rightSin));
		}
		if (shiftB) {
			b1 = b1.addScaled(hb1.dir, -options.bondSpace * getBondLineShift(hb2.leftCos, hb2.leftSin));
		}
	} else if (shift < 0) {
		if (shiftA) {
			a2 = a2.addScaled(hb1.dir, options.bondSpace * getBondLineShift(hb1.leftCos, hb1.leftSin));
		}
		if (shiftB) {
			b2 = b2.addScaled(hb1.dir, -options.bondSpace * getBondLineShift(hb2.rightCos, hb2.rightSin));
		}
	}

	return _draw2.default.bondDouble(render.paper, a1, a2, b1, b2, cisTrans, options);
}

function getSingleOrDoublePath(render, hb1, hb2) {
	var a = hb1.p,
	    b = hb2.p;
	var options = render.options;

	var nSect = (_vec2.default.dist(a, b) / (options.bondSpace + options.lineWidth)).toFixed() - 0;
	if (!(nSect & 1)) nSect += 1;
	return _draw2.default.bondSingleOrDouble(render.paper, hb1, hb2, nSect, options);
}

function getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB) {
	// eslint-disable-line max-params
	var dashdotPattern = [0.125, 0.125, 0.005, 0.125];
	var mark = null,
	    dash = null;
	var options = render.options;
	var bondShift = bond.doubleBondShift;

	if (bond.b.type === _struct.Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC) {
		mark = bondShift > 0 ? 1 : 2;
		dash = dashdotPattern.map(function (v) {
			return v * options.scale;
		});
	}
	if (bond.b.type === _struct.Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC) {
		mark = 3;
		dash = dashdotPattern.map(function (v) {
			return v * options.scale;
		});
	}
	var paths = getAromaticBondPaths(hb1, hb2, bondShift, shiftA, shiftB, options.bondSpace, mark, dash);
	return _draw2.default.bondAromatic(render.paper, paths, bondShift, options);
}

function getAromaticBondPaths(hb1, hb2, shift, shiftA, shiftB, bondSpace, mask, dash) {
	// eslint-disable-line max-params, max-statements
	var a = hb1.p,
	    b = hb2.p,
	    n = hb1.norm;
	var bsp = bondSpace / 2;
	var s1 = bsp + shift * bsp,
	    s2 = -bsp + shift * bsp;
	var a2 = a.addScaled(n, s1);
	var b2 = b.addScaled(n, s1);
	var a3 = a.addScaled(n, s2);
	var b3 = b.addScaled(n, s2);
	if (shift > 0) {
		if (shiftA) {
			a2 = a2.addScaled(hb1.dir, bondSpace * getBondLineShift(hb1.rightCos, hb1.rightSin));
		}
		if (shiftB) {
			b2 = b2.addScaled(hb1.dir, -bondSpace * getBondLineShift(hb2.leftCos, hb2.leftSin));
		}
	} else if (shift < 0) {
		if (shiftA) {
			a3 = a3.addScaled(hb1.dir, bondSpace * getBondLineShift(hb1.leftCos, hb1.leftSin));
		}
		if (shiftB) {
			b3 = b3.addScaled(hb1.dir, -bondSpace * getBondLineShift(hb2.rightCos, hb2.rightSin));
		}
	}
	return _draw2.default.aromaticBondPaths(a2, a3, b2, b3, mask, dash);
}

function getReactingCenterPath(render, bond, hb1, hb2) {
	// eslint-disable-line max-statements
	var a = hb1.p,
	    b = hb2.p;
	var c = b.add(a).scaled(0.5);
	var d = b.sub(a).normalized();
	var n = d.rotateSC(1, 0);

	var p = [];

	var lw = render.options.lineWidth,
	    bs = render.options.bondSpace / 2;
	var alongIntRc = lw,
	    // half interval along for CENTER
	alongIntMadeBroken = 2 * lw,
	    // half interval between along for MADE_OR_BROKEN
	alongSz = 1.5 * bs,
	    // half size along for CENTER
	acrossInt = 1.5 * bs,
	    // half interval across for CENTER
	acrossSz = 3.0 * bs,
	    // half size across for all
	tiltTan = 0.2; // tangent of the tilt angle

	switch (bond.b.reactingCenterStatus) {
		case _struct.Bond.PATTERN.REACTING_CENTER.NOT_CENTER:
			// X
			p.push(c.addScaled(n, acrossSz).addScaled(d, tiltTan * acrossSz));
			p.push(c.addScaled(n, -acrossSz).addScaled(d, -tiltTan * acrossSz));
			p.push(c.addScaled(n, acrossSz).addScaled(d, -tiltTan * acrossSz));
			p.push(c.addScaled(n, -acrossSz).addScaled(d, tiltTan * acrossSz));
			break;
		case _struct.Bond.PATTERN.REACTING_CENTER.CENTER:
			// #
			p.push(c.addScaled(n, acrossSz).addScaled(d, tiltTan * acrossSz).addScaled(d, alongIntRc));
			p.push(c.addScaled(n, -acrossSz).addScaled(d, -tiltTan * acrossSz).addScaled(d, alongIntRc));
			p.push(c.addScaled(n, acrossSz).addScaled(d, tiltTan * acrossSz).addScaled(d, -alongIntRc));
			p.push(c.addScaled(n, -acrossSz).addScaled(d, -tiltTan * acrossSz).addScaled(d, -alongIntRc));
			p.push(c.addScaled(d, alongSz).addScaled(n, acrossInt));
			p.push(c.addScaled(d, -alongSz).addScaled(n, acrossInt));
			p.push(c.addScaled(d, alongSz).addScaled(n, -acrossInt));
			p.push(c.addScaled(d, -alongSz).addScaled(n, -acrossInt));
			break;
		// case Bond.PATTERN.REACTING_CENTER.UNCHANGED: draw a circle
		case _struct.Bond.PATTERN.REACTING_CENTER.MADE_OR_BROKEN:
			p.push(c.addScaled(n, acrossSz).addScaled(d, alongIntMadeBroken));
			p.push(c.addScaled(n, -acrossSz).addScaled(d, alongIntMadeBroken));
			p.push(c.addScaled(n, acrossSz).addScaled(d, -alongIntMadeBroken));
			p.push(c.addScaled(n, -acrossSz).addScaled(d, -alongIntMadeBroken));
			break;
		case _struct.Bond.PATTERN.REACTING_CENTER.ORDER_CHANGED:
			p.push(c.addScaled(n, acrossSz));
			p.push(c.addScaled(n, -acrossSz));
			break;
		case _struct.Bond.PATTERN.REACTING_CENTER.MADE_OR_BROKEN_AND_CHANGED:
			p.push(c.addScaled(n, acrossSz).addScaled(d, alongIntMadeBroken));
			p.push(c.addScaled(n, -acrossSz).addScaled(d, alongIntMadeBroken));
			p.push(c.addScaled(n, acrossSz).addScaled(d, -alongIntMadeBroken));
			p.push(c.addScaled(n, -acrossSz).addScaled(d, -alongIntMadeBroken));
			p.push(c.addScaled(n, acrossSz));
			p.push(c.addScaled(n, -acrossSz));
			break;
		default:
			return null;
	}
	return _draw2.default.reactingCenter(render.paper, p, render.options);
}

function getTopologyMark(render, bond, hb1, hb2) {
	// eslint-disable-line max-statements
	var options = render.options;
	var mark = null;

	if (bond.b.topology === _struct.Bond.PATTERN.TOPOLOGY.RING) mark = 'rng';else if (bond.b.topology === _struct.Bond.PATTERN.TOPOLOGY.CHAIN) mark = 'chn';else return null;

	var a = hb1.p,
	    b = hb2.p;
	var c = b.add(a).scaled(0.5);
	var d = b.sub(a).normalized();
	var n = d.rotateSC(1, 0);
	var fixed = options.lineWidth;
	if (bond.doubleBondShift > 0) n = n.scaled(-bond.doubleBondShift);else if (bond.doubleBondShift == 0) fixed += options.bondSpace / 2;

	var s = new _vec2.default(2, 1).scaled(options.bondSpace);
	if (bond.b.type == _struct.Bond.PATTERN.TYPE.TRIPLE) fixed += options.bondSpace;
	var p = c.add(new _vec2.default(n.x * (s.x + fixed), n.y * (s.y + fixed)));

	return _draw2.default.topologyMark(render.paper, p, mark, options);
}

function getIdsPath(bid, paper, hb1, hb2, bondIdxOff, param1, param2, norm) {
	// eslint-disable-line max-params
	var pb = _vec2.default.lc(hb1.p, param1, hb2.p, param2, norm, bondIdxOff);
	var ipath = paper.text(pb.x, pb.y, bid.toString());
	var irbb = _util2.default.relBox(ipath.getBBox());
	_draw2.default.recenterText(ipath, irbb);
	return ipath;
}
/* ----- */

function setDoubleBondShift(bond, struct) {
	var loop1, loop2;
	loop1 = struct.halfBonds.get(bond.b.hb1).loop;
	loop2 = struct.halfBonds.get(bond.b.hb2).loop;
	if (loop1 >= 0 && loop2 >= 0) {
		var d1 = struct.loops.get(loop1).dblBonds;
		var d2 = struct.loops.get(loop2).dblBonds;
		var n1 = struct.loops.get(loop1).hbs.length;
		var n2 = struct.loops.get(loop2).hbs.length;
		bond.doubleBondShift = selectDoubleBondShift(n1, n2, d1, d2);
	} else if (loop1 >= 0) {
		bond.doubleBondShift = -1;
	} else if (loop2 >= 0) {
		bond.doubleBondShift = 1;
	} else {
		bond.doubleBondShift = selectDoubleBondShiftChain(struct, bond);
	}
}

function bondRecalc(bond, restruct, options) {
	var render = restruct.render;
	var atom1 = restruct.atoms.get(bond.b.begin);
	var atom2 = restruct.atoms.get(bond.b.end);
	var p1 = _scale2.default.obj2scaled(atom1.a.pp, render.options);
	var p2 = _scale2.default.obj2scaled(atom2.a.pp, render.options);
	var hb1 = restruct.molecule.halfBonds.get(bond.b.hb1);
	var hb2 = restruct.molecule.halfBonds.get(bond.b.hb2);
	hb1.p = shiftBondEnd(atom1, p1, hb1.dir, 2 * options.lineWidth);
	hb2.p = shiftBondEnd(atom2, p2, hb2.dir, 2 * options.lineWidth);
	bond.b.center = _vec2.default.lc2(atom1.a.pp, 0.5, atom2.a.pp, 0.5);
	bond.b.len = _vec2.default.dist(p1, p2);
	bond.b.sb = options.lineWidth * 5;
	/* eslint-disable no-mixed-operators*/
	bond.b.sa = Math.max(bond.b.sb, bond.b.len / 2 - options.lineWidth * 2);
	/* eslint-enable no-mixed-operators*/
	bond.b.angle = Math.atan2(hb1.dir.y, hb1.dir.x) * 180 / Math.PI;
}

function shiftBondEnd(atom, pos0, dir, margin) {
	var t = 0;
	var visel = atom.visel;
	for (var k = 0; k < visel.exts.length; ++k) {
		var box = visel.exts[k].translate(pos0);
		t = Math.max(t, _util2.default.shiftRayBox(pos0, dir, box));
	}
	if (t > 0) pos0 = pos0.addScaled(dir, t + margin);
	return pos0;
}

function selectDoubleBondShift(n1, n2, d1, d2) {
	if (n1 == 6 && n2 != 6 && (d1 > 1 || d2 == 1)) return -1;
	if (n2 == 6 && n1 != 6 && (d2 > 1 || d1 == 1)) return 1;
	if (n2 * d1 > n1 * d2) return -1;
	if (n2 * d1 < n1 * d2) return 1;
	if (n2 > n1) return -1;
	return 1;
}

function selectDoubleBondShiftChain(struct, bond) {
	var hb1 = struct.halfBonds.get(bond.b.hb1);
	var hb2 = struct.halfBonds.get(bond.b.hb2);
	var nLeft = (hb1.leftSin > 0.3 ? 1 : 0) + (hb2.rightSin > 0.3 ? 1 : 0);
	var nRight = (hb2.leftSin > 0.3 ? 1 : 0) + (hb1.rightSin > 0.3 ? 1 : 0);
	if (nLeft > nRight) return -1;
	if (nLeft < nRight) return 1;
	if ((hb1.leftSin > 0.3 ? 1 : 0) + (hb1.rightSin > 0.3 ? 1 : 0) == 1) return 1;
	return 0;
}

exports.default = ReBond;

},{"../../chem/struct":537,"../../util/scale":685,"../../util/vec2":686,"../draw":585,"../util":601,"./reobject":595}],591:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _box2abs = require('../../util/box2abs');

var _box2abs2 = _interopRequireDefault(_box2abs);

var _scale = require('../../util/scale');

var _scale2 = _interopRequireDefault(_scale);

var _reobject = require('./reobject');

var _reobject2 = _interopRequireDefault(_reobject);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ReChiralFlag(pos) {
	this.init('chiralFlag');

	this.pp = pos;
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

ReChiralFlag.prototype = new _reobject2.default();
ReChiralFlag.isSelectable = function () {
	return true;
};

ReChiralFlag.prototype.highlightPath = function (render) {
	var box = _box2abs2.default.fromRelBox(this.path.getBBox());
	var sz = box.p1.sub(box.p0);
	var p0 = box.p0.sub(render.options.offset);
	return render.paper.rect(p0.x, p0.y, sz.x, sz.y);
};

ReChiralFlag.prototype.drawHighlight = function (render) {
	if (!this.path) return null;
	var ret = this.highlightPath(render).attr(render.options.highlightStyle);
	render.ctab.addReObjectPath('highlighting', this.visel, ret);
	return ret;
};

ReChiralFlag.prototype.makeSelectionPlate = function (restruct, paper, options) {
	if (!this.path) return null;
	return this.highlightPath(restruct.render).attr(options.selectionStyle);
};

ReChiralFlag.prototype.show = function (restruct, id, options) {
	var render = restruct.render;
	if (restruct.chiralFlagsChanged[id] <= 0) return;

	var paper = render.paper;
	var ps = _scale2.default.obj2scaled(this.pp, options);
	this.path = paper.text(ps.x, ps.y, 'Chiral').attr({
		font: options.font,
		'font-size': options.fontsz,
		fill: '#000'
	});
	render.ctab.addReObjectPath('data', this.visel, this.path, null, true);
};

exports.default = ReChiralFlag;

},{"../../util/box2abs":682,"../../util/scale":685,"./reobject":595}],592:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reobject = require('./reobject');

var _reobject2 = _interopRequireDefault(_reobject);

var _scale = require('../../util/scale');

var _scale2 = _interopRequireDefault(_scale);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function ReDataSGroupData(sgroup) {
  this.init('sgroupData');

  this.sgroup = sgroup;
}

ReDataSGroupData.prototype = new _reobject2.default();
ReDataSGroupData.isSelectable = function () {
  return true;
};

ReDataSGroupData.prototype.highlightPath = function (render) {
  var box = this.sgroup.dataArea;
  var p0 = _scale2.default.obj2scaled(box.p0, render.options);
  var sz = _scale2.default.obj2scaled(box.p1, render.options).sub(p0);
  return render.paper.rect(p0.x, p0.y, sz.x, sz.y);
};

ReDataSGroupData.prototype.drawHighlight = function (render) {
  var ret = this.highlightPath(render).attr(render.options.highlightStyle);
  render.ctab.addReObjectPath('highlighting', this.visel, ret);
  return ret;
};

ReDataSGroupData.prototype.makeSelectionPlate = function (restruct, paper, styles) {
  // TODO [MK] review parameters
  return this.highlightPath(restruct.render).attr(styles.selectionStyle);
};

exports.default = ReDataSGroupData;

},{"../../util/scale":685,"./reobject":595}],593:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _box2abs = require('../../util/box2abs');

var _box2abs2 = _interopRequireDefault(_box2abs);

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _reobject = require('./reobject');

var _reobject2 = _interopRequireDefault(_reobject);

var _scale = require('../../util/scale');

var _scale2 = _interopRequireDefault(_scale);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function ReFrag( /* Struct.Fragment = {}*/frag) {
	this.init('frag');
	this.item = frag;
}

ReFrag.prototype = new _reobject2.default();

ReFrag.isSelectable = function () {
	return false;
};

ReFrag.prototype.fragGetAtoms = function (restruct, fid) {
	return Array.from(restruct.atoms.keys()).filter(function (aid) {
		return restruct.atoms.get(aid).a.fragment === fid;
	});
};

ReFrag.prototype.fragGetBonds = function (restruct, fid) {
	return Array.from(restruct.bonds.keys()).filter(function (bid) {
		var bond = restruct.bonds.get(bid).b;

		var firstFrag = restruct.atoms.get(bond.begin).a.fragment;
		var secondFrag = restruct.atoms.get(bond.end).a.fragment;

		return firstFrag === fid && secondFrag === fid;
	});
};

ReFrag.prototype.calcBBox = function (restruct, fid, render) {
	// TODO need to review parameter list
	var ret;
	restruct.atoms.forEach(function (atom) {
		if (atom.a.fragment !== fid) return;

		// TODO ReObject.calcBBox to be used instead
		var bba = atom.visel.boundingBox;
		if (!bba) {
			bba = new _box2abs2.default(atom.a.pp, atom.a.pp);
			var ext = new _vec2.default(0.05 * 3, 0.05 * 3);
			bba = bba.extend(ext, ext);
		} else {
			if (!render) render = global._ui_editor.render; // eslint-disable-line
			bba = bba.translate((render.options.offset || new _vec2.default()).negated()).transform(_scale2.default.scaled2obj, render.options);
		}
		ret = ret ? _box2abs2.default.union(ret, bba) : bba;
	});

	return ret;
};

// TODO need to review parameter list
ReFrag.prototype._draw = function (render, fid, attrs) {
	// eslint-disable-line no-underscore-dangle
	var bb = this.calcBBox(render.ctab, fid, render);

	if (bb) {
		var p0 = _scale2.default.obj2scaled(new _vec2.default(bb.p0.x, bb.p0.y), render.options);
		var p1 = _scale2.default.obj2scaled(new _vec2.default(bb.p1.x, bb.p1.y), render.options);
		return render.paper.rect(p0.x, p0.y, p1.x - p0.x, p1.y - p0.y, 0).attr(attrs);
	}

	// TODO abnormal situation, empty fragments must be destroyed by tools
	return console.assert(null, 'Empty fragment');
};

ReFrag.prototype.draw = function (render) {
	// eslint-disable-line no-unused-vars
	return null; // this._draw(render, fid, { 'stroke' : 'lightgray' }); // [RB] for debugging only
};

ReFrag.prototype.drawHighlight = function (render) {// eslint-disable-line no-unused-vars
	// Do nothing. This method shouldn't actually be called.
};

ReFrag.prototype.setHighlight = function (highLight, render) {
	var fid = render.ctab.frags.keyOf(this);

	if (!fid && fid !== 0) {
		console.warn('Fragment does not belong to the render');
		return;
	}

	fid = parseInt(fid, 10);

	render.ctab.atoms.forEach(function (atom) {
		if (atom.a.fragment === fid) atom.setHighlight(highLight, render);
	});

	render.ctab.bonds.forEach(function (bond) {
		if (render.ctab.atoms.get(bond.b.begin).a.fragment === fid) bond.setHighlight(highLight, render);
	});
};

exports.default = ReFrag;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../../util/box2abs":682,"../../util/scale":685,"../../util/vec2":686,"./reobject":595}],594:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _visel = require('./visel');

var _visel2 = _interopRequireDefault(_visel);

var _reobject = require('./reobject');

var _reobject2 = _interopRequireDefault(_reobject);

var _scale = require('../../util/scale');

var _scale2 = _interopRequireDefault(_scale);

var _util = require('../util');

var _util2 = _interopRequireDefault(_util);

var _struct = require('../../chem/struct');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

var tfx = _util2.default.tfx;

function ReLoop(loop) {
	this.loop = loop;
	this.visel = new _visel2.default('loop');
	this.centre = new _vec2.default();
	this.radius = new _vec2.default();
}
ReLoop.prototype = new _reobject2.default();
ReLoop.isSelectable = function () {
	return false;
};

ReLoop.prototype.show = function (restruct, rlid, options) {
	var _this = this;

	// eslint-disable-line max-statements
	var render = restruct.render;
	var paper = render.paper;
	var molecule = restruct.molecule;
	var loop = this.loop;
	this.centre = new _vec2.default();
	loop.hbs.forEach(function (hbid) {
		var hb = molecule.halfBonds.get(hbid);
		var bond = restruct.bonds.get(hb.bid);
		var apos = _scale2.default.obj2scaled(restruct.atoms.get(hb.begin).a.pp, options);
		if (bond.b.type !== _struct.Bond.PATTERN.TYPE.AROMATIC) loop.aromatic = false;
		_this.centre.add_(apos); // eslint-disable-line no-underscore-dangle
	});
	loop.convex = true;
	for (var k = 0; k < this.loop.hbs.length; ++k) {
		var hba = molecule.halfBonds.get(loop.hbs[k]);
		var hbb = molecule.halfBonds.get(loop.hbs[(k + 1) % loop.hbs.length]);
		var angle = Math.atan2(_vec2.default.cross(hba.dir, hbb.dir), _vec2.default.dot(hba.dir, hbb.dir));
		if (angle > 0) loop.convex = false;
	}

	this.centre = this.centre.scaled(1.0 / loop.hbs.length);
	this.radius = -1;
	loop.hbs.forEach(function (hbid) {
		var hb = molecule.halfBonds.get(hbid);
		var apos = _scale2.default.obj2scaled(restruct.atoms.get(hb.begin).a.pp, options);
		var bpos = _scale2.default.obj2scaled(restruct.atoms.get(hb.end).a.pp, options);
		var n = _vec2.default.diff(bpos, apos).rotateSC(1, 0).normalized();
		var dist = _vec2.default.dot(_vec2.default.diff(apos, _this.centre), n);
		_this.radius = _this.radius < 0 ? dist : Math.min(_this.radius, dist);
	});
	this.radius *= 0.7;
	if (!loop.aromatic) return;
	var path = null;
	if (loop.convex && options.aromaticCircle) {
		path = paper.circle(this.centre.x, this.centre.y, this.radius).attr({
			stroke: '#000',
			'stroke-width': options.lineattr['stroke-width']
		});
	} else {
		var pathStr = '';
		for (k = 0; k < loop.hbs.length; ++k) {
			hba = molecule.halfBonds.get(loop.hbs[k]);
			hbb = molecule.halfBonds.get(loop.hbs[(k + 1) % loop.hbs.length]);
			angle = Math.atan2(_vec2.default.cross(hba.dir, hbb.dir), _vec2.default.dot(hba.dir, hbb.dir));
			var halfAngle = (Math.PI - angle) / 2;
			var dir = hbb.dir.rotate(halfAngle);
			var pi = _scale2.default.obj2scaled(restruct.atoms.get(hbb.begin).a.pp, options);
			var sin = Math.sin(halfAngle);
			var minSin = 0.1;
			if (Math.abs(sin) < minSin) sin = sin * minSin / Math.abs(sin);
			var offset = options.bondSpace / sin;
			var qi = pi.addScaled(dir, -offset);
			pathStr += k === 0 ? 'M' : 'L';
			pathStr += tfx(qi.x) + ',' + tfx(qi.y);
		}
		pathStr += 'Z';
		path = paper.path(pathStr).attr({
			stroke: '#000',
			'stroke-width': options.lineattr['stroke-width'],
			'stroke-dasharray': '- '
		});
	}
	restruct.addReObjectPath('data', this.visel, path, null, true);
};

ReLoop.prototype.isValid = function (struct, rlid) {
	var halfBonds = struct.halfBonds;
	return this.loop.hbs.every(function (hbid) {
		return halfBonds.has(hbid) && halfBonds.get(hbid).loop === rlid;
	});
};

exports.default = ReLoop;

},{"../../chem/struct":537,"../../util/scale":685,"../../util/vec2":686,"../util":601,"./reobject":595,"./visel":600}],595:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _visel = require('./visel');

var _visel2 = _interopRequireDefault(_visel);

var _scale = require('../../util/scale');

var _scale2 = _interopRequireDefault(_scale);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function ReObject() {}

ReObject.prototype.init = function (viselType) {
	this.visel = new _visel2.default(viselType);

	this.highlight = false;
	this.highlighting = null;
	this.selected = false;
	this.selectionPlate = null;
};

// returns the bounding box of a ReObject in the object coordinates
ReObject.prototype.getVBoxObj = function (render) {
	var vbox = this.visel.boundingBox;
	if (vbox === null) return null;
	if (render.options.offset) vbox = vbox.translate(render.options.offset.negated());
	return vbox.transform(_scale2.default.scaled2obj, render.options);
};

ReObject.prototype.setHighlight = function (highLight, render) {
	// TODO render should be field
	if (highLight) {
		var noredraw = 'highlighting' in this && this.highlighting !== null; // && !this.highlighting.removed;
		if (noredraw) {
			if (this.highlighting.type === 'set') {
				if (!this.highlighting[0]) return;
				noredraw = !this.highlighting[0].removed;
			} else {
				noredraw = !this.highlighting.removed;
			}
		}
		if (noredraw) {
			this.highlighting.show();
		} else {
			render.paper.setStart();
			this.drawHighlight(render);
			this.highlighting = render.paper.setFinish();
		}
	} else if (this.highlighting) {
		this.highlighting.hide();
	}

	this.highlight = highLight;
};

ReObject.prototype.drawHighlight = function () {
	console.assert('ReObject.drawHighlight is not overridden'); // eslint-disable-line no-console
};

ReObject.prototype.makeSelectionPlate = function () {
	console.assert(null, 'ReObject.makeSelectionPlate is not overridden'); // eslint-disable-line no-console
};

exports.default = ReObject;

},{"../../util/scale":685,"./visel":600}],596:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _box2abs = require('../../util/box2abs');

var _box2abs2 = _interopRequireDefault(_box2abs);

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _util = require('../util');

var _util2 = _interopRequireDefault(_util);

var _draw = require('../draw');

var _draw2 = _interopRequireDefault(_draw);

var _scale = require('../../util/scale');

var _scale2 = _interopRequireDefault(_scale);

var _reobject = require('./reobject');

var _reobject2 = _interopRequireDefault(_reobject);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

var BORDER_EXT = new _vec2.default(0.05 * 3, 0.05 * 3);

function ReRGroup( /* RGroup*/rgroup) {
	this.init('rgroup');

	this.labelBox = null;
	this.item = rgroup;
}
ReRGroup.prototype = new _reobject2.default();
ReRGroup.isSelectable = function () {
	return false;
};

ReRGroup.prototype.getAtoms = function (render) {
	var ret = [];
	this.item.frags.forEach(function (fid) {
		ret = ret.concat(render.ctab.frags.get(fid).fragGetAtoms(render.ctab, fid));
	});
	return ret;
};

ReRGroup.prototype.getBonds = function (render) {
	var ret = [];
	this.item.frags.forEach(function (fid) {
		ret = ret.concat(render.ctab.frags.get(fid).fragGetBonds(render.ctab, fid));
	});
	return ret;
};

ReRGroup.prototype.calcBBox = function (render) {
	var ret = null;
	this.item.frags.forEach(function (fid) {
		var bbf = render.ctab.frags.get(fid).calcBBox(render.ctab, fid, render);
		if (bbf) ret = ret ? _box2abs2.default.union(ret, bbf) : bbf;
	});

	if (ret) ret = ret.extend(BORDER_EXT, BORDER_EXT);

	return ret;
};

function rGroupdrawBrackets(set, render, bb, d) {
	d = _scale2.default.obj2scaled(d || new _vec2.default(1, 0), render.options);
	var bracketWidth = Math.min(0.25, bb.sz().x * 0.3);
	var bracketHeight = bb.p1.y - bb.p0.y;
	var cy = 0.5 * (bb.p1.y + bb.p0.y);

	var leftBracket = _draw2.default.bracket(render.paper, d.negated(), d.negated().rotateSC(1, 0), _scale2.default.obj2scaled(new _vec2.default(bb.p0.x, cy), render.options), bracketWidth, bracketHeight, render.options);

	var rightBracket = _draw2.default.bracket(render.paper, d, d.rotateSC(1, 0), _scale2.default.obj2scaled(new _vec2.default(bb.p1.x, cy), render.options), bracketWidth, bracketHeight, render.options);

	return set.push(leftBracket, rightBracket);
}

// TODO need to review parameter list
ReRGroup.prototype.draw = function (render, options) {
	// eslint-disable-line max-statements
	var bb = this.calcBBox(render);

	if (!bb) {
		console.error('Abnormal situation, empty fragments must be destroyed by tools');
		return {};
	}

	var ret = { data: [] };
	var p0 = _scale2.default.obj2scaled(bb.p0, options);
	var p1 = _scale2.default.obj2scaled(bb.p1, options);
	var brackets = render.paper.set();

	rGroupdrawBrackets(brackets, render, bb); // eslint-disable-line new-cap

	ret.data.push(brackets);
	var key = render.ctab.rgroups.keyOf(this);
	var labelSet = render.paper.set();
	var label = render.paper.text(p0.x, (p0.y + p1.y) / 2, 'R' + key + '=').attr({
		font: options.font,
		'font-size': options.fontRLabel,
		fill: 'black'
	});

	var labelBox = _util2.default.relBox(label.getBBox());
	label.translateAbs(-labelBox.width / 2 - options.lineWidth, 0);

	labelSet.push(label);
	var logicStyle = {
		font: options.font,
		'font-size': options.fontRLogic,
		fill: 'black'
	};

	var logic = [rLogicToString(key, this.item)];

	var shift = labelBox.height / 2 + options.lineWidth / 2;
	for (var i = 0; i < logic.length; ++i) {
		var logicPath = render.paper.text(p0.x, (p0.y + p1.y) / 2, logic[i]).attr(logicStyle);
		var logicBox = _util2.default.relBox(logicPath.getBBox());
		shift += logicBox.height / 2;
		logicPath.translateAbs(-logicBox.width / 2 - 6 * options.lineWidth, shift);
		shift += logicBox.height / 2 + options.lineWidth / 2;
		ret.data.push(logicPath);
		labelSet.push(logicPath);
	}

	ret.data.push(label);
	this.labelBox = _box2abs2.default.fromRelBox(labelSet.getBBox()).transform(_scale2.default.scaled2obj, render.options);
	return ret;
};

function rLogicToString(id, rLogic) {
	var ifThen = rLogic.ifthen > 0 ? 'IF ' : '';

	var rangeExists = rLogic.range.startsWith('>') || rLogic.range.startsWith('<') || rLogic.range.startsWith('=');

	var range = null;
	if (rLogic.range.length > 0) range = rangeExists ? rLogic.range : '=' + rLogic.range;else range = '>0';

	var restH = rLogic.resth ? ' (RestH)' : '';
	var nextRg = rLogic.ifthen > 0 ? '\nTHEN R' + rLogic.ifthen.toString() : '';

	return ifThen + 'R' + id.toString() + range + restH + nextRg;
}

// TODO need to review parameter list
ReRGroup.prototype._draw = function (render, rgid, attrs) {
	// eslint-disable-line no-underscore-dangle
	var bb = this.getVBoxObj(render).extend(BORDER_EXT, BORDER_EXT); // eslint-disable-line no-underscore-dangle

	if (!bb) return null;

	var p0 = _scale2.default.obj2scaled(bb.p0, render.options);
	var p1 = _scale2.default.obj2scaled(bb.p1, render.options);
	return render.paper.rect(p0.x, p0.y, p1.x - p0.x, p1.y - p0.y, 0).attr(attrs);
};

ReRGroup.prototype.drawHighlight = function (render) {
	var rgid = render.ctab.rgroups.keyOf(this);

	if (!rgid) {
		console.error('Abnormal situation, fragment does not belong to the render');
		return null;
	}

	var ret = this._draw(render, rgid, render.options.highlightStyle /* { 'fill' : 'red' }*/); // eslint-disable-line no-underscore-dangle
	render.ctab.addReObjectPath('highlighting', this.visel, ret);

	this.item.frags.forEach(function (fnum, fid) {
		render.ctab.frags.get(fid).drawHighlight(render);
	});

	return ret;
};

ReRGroup.prototype.show = function (restruct, id, options) {
	var _this = this;

	var drawing = this.draw(restruct.render, options);

	Object.keys(drawing).forEach(function (group) {
		while (drawing[group].length > 0) {
			restruct.addReObjectPath(group, _this.visel, drawing[group].shift(), null, true);
		}
	});
	// TODO rgroup selection & highlighting
};

exports.default = ReRGroup;

},{"../../util/box2abs":682,"../../util/scale":685,"../../util/vec2":686,"../draw":585,"../util":601,"./reobject":595}],597:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _reobject = require('./reobject');

var _reobject2 = _interopRequireDefault(_reobject);

var _box2abs = require('../../util/box2abs');

var _box2abs2 = _interopRequireDefault(_box2abs);

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _draw = require('../draw');

var _draw2 = _interopRequireDefault(_draw);

var _util = require('../util');

var _util2 = _interopRequireDefault(_util);

var _scale = require('../../util/scale');

var _scale2 = _interopRequireDefault(_scale);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function ReRxnArrow( /* chem.RxnArrow*/arrow) {
	this.init('rxnArrow');

	this.item = arrow;
}
ReRxnArrow.prototype = new _reobject2.default();
ReRxnArrow.isSelectable = function () {
	return true;
};

ReRxnArrow.prototype.highlightPath = function (render) {
	var p = _scale2.default.obj2scaled(this.item.pp, render.options);
	var s = render.options.scale;
	return render.paper.rect(p.x - s, p.y - s / 4, 2 * s, s / 2, s / 8); // eslint-disable-line no-mixed-operators
};

ReRxnArrow.prototype.drawHighlight = function (render) {
	var ret = this.highlightPath(render).attr(render.options.highlightStyle);
	render.ctab.addReObjectPath('highlighting', this.visel, ret);
	return ret;
};

ReRxnArrow.prototype.makeSelectionPlate = function (restruct, paper, styles) {
	return this.highlightPath(restruct.render).attr(styles.selectionStyle);
};

ReRxnArrow.prototype.show = function (restruct, id, options) {
	var render = restruct.render;
	var centre = _scale2.default.obj2scaled(this.item.pp, options);
	var path = _draw2.default.arrow(render.paper, new _vec2.default(centre.x - options.scale, centre.y), new _vec2.default(centre.x + options.scale, centre.y), options);
	var offset = options.offset;
	if (offset != null) path.translateAbs(offset.x, offset.y);
	this.visel.add(path, _box2abs2.default.fromRelBox(_util2.default.relBox(path.getBBox())));
};

exports.default = ReRxnArrow;

},{"../../util/box2abs":682,"../../util/scale":685,"../../util/vec2":686,"../draw":585,"../util":601,"./reobject":595}],598:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _reobject = require('./reobject');

var _reobject2 = _interopRequireDefault(_reobject);

var _box2abs = require('../../util/box2abs');

var _box2abs2 = _interopRequireDefault(_box2abs);

var _draw = require('../draw');

var _draw2 = _interopRequireDefault(_draw);

var _util = require('../util');

var _util2 = _interopRequireDefault(_util);

var _scale = require('../../util/scale');

var _scale2 = _interopRequireDefault(_scale);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ReRxnPlus( /* chem.RxnPlus*/plus) {
	this.init('rxnPlus');

	this.item = plus;
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

ReRxnPlus.prototype = new _reobject2.default();
ReRxnPlus.isSelectable = function () {
	return true;
};

ReRxnPlus.prototype.highlightPath = function (render) {
	var p = _scale2.default.obj2scaled(this.item.pp, render.options);
	var s = render.options.scale;
	/* eslint-disable no-mixed-operators*/
	return render.paper.rect(p.x - s / 4, p.y - s / 4, s / 2, s / 2, s / 8);
	/* eslint-enable no-mixed-operators*/
};

ReRxnPlus.prototype.drawHighlight = function (render) {
	var ret = this.highlightPath(render).attr(render.options.highlightStyle);
	render.ctab.addReObjectPath('highlighting', this.visel, ret);
	return ret;
};

ReRxnPlus.prototype.makeSelectionPlate = function (restruct, paper, styles) {
	// TODO [MK] review parameters
	return this.highlightPath(restruct.render).attr(styles.selectionStyle);
};

ReRxnPlus.prototype.show = function (restruct, id, options) {
	var render = restruct.render;
	var centre = _scale2.default.obj2scaled(this.item.pp, options);
	var path = _draw2.default.plus(render.paper, centre, options);
	var offset = options.offset;
	if (offset != null) path.translateAbs(offset.x, offset.y);
	this.visel.add(path, _box2abs2.default.fromRelBox(_util2.default.relBox(path.getBBox())));
};

exports.default = ReRxnPlus;

},{"../../util/box2abs":682,"../../util/scale":685,"../draw":585,"../util":601,"./reobject":595}],599:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _box2abs = require('../../util/box2abs');

var _box2abs2 = _interopRequireDefault(_box2abs);

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

var _pile = require('../../util/pile');

var _pile2 = _interopRequireDefault(_pile);

var _util = require('../util');

var _util2 = _interopRequireDefault(_util);

var _scale = require('../../util/scale');

var _scale2 = _interopRequireDefault(_scale);

var _struct = require('../../chem/struct');

var _draw = require('../draw');

var _draw2 = _interopRequireDefault(_draw);

var _redatasgroupdata = require('./redatasgroupdata');

var _redatasgroupdata2 = _interopRequireDefault(_redatasgroupdata);

var _reobject = require('./reobject');

var _reobject2 = _interopRequireDefault(_reobject);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var tfx = _util2.default.tfx; /****************************************************************************
                               * Copyright 2018 EPAM Systems
                               *
                               * Licensed under the Apache License, Version 2.0 (the "License");
                               * you may not use this file except in compliance with the License.
                               * You may obtain a copy of the License at
                               *
                               *    http://www.apache.org/licenses/LICENSE-2.0
                               *
                               * Unless required by applicable law or agreed to in writing, software
                               * distributed under the License is distributed on an "AS IS" BASIS,
                               * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                               * See the License for the specific language governing permissions and
                               * limitations under the License.
                               ***************************************************************************/

function ReSGroup(sgroup) {
	this.init('sgroup');

	this.item = sgroup;
}
ReSGroup.prototype = new _reobject2.default();
ReSGroup.isSelectable = function () {
	return false;
};

ReSGroup.prototype.draw = function (remol, sgroup) {
	var render = remol.render;
	var set = render.paper.set();
	var inBonds = [],
	    xBonds = [];
	var atomSet = new _pile2.default(sgroup.atoms);
	_struct.SGroup.getCrossBonds(inBonds, xBonds, remol.molecule, atomSet);
	bracketPos(sgroup, render, remol.molecule, xBonds);
	var bb = sgroup.bracketBox;
	var d = sgroup.bracketDir;
	sgroup.areas = [bb];

	switch (sgroup.type) {
		case 'MUL':
			SGroupdrawBrackets(set, render, sgroup, xBonds, atomSet, bb, d, sgroup.data.mul);
			break;
		case 'SRU':
			var connectivity = sgroup.data.connectivity || 'eu';
			if (connectivity == 'ht') connectivity = '';
			var subscript = sgroup.data.subscript || 'n';
			SGroupdrawBrackets(set, render, sgroup, xBonds, atomSet, bb, d, subscript, connectivity);
			break;
		case 'SUP':
			SGroupdrawBrackets(set, render, sgroup, xBonds, atomSet, bb, d, sgroup.data.name, null, { 'font-style': 'italic' });
			break;
		case 'GEN':
			SGroupdrawBrackets(set, render, sgroup, xBonds, atomSet, bb, d);
			break;
		case 'DAT':
			set = drawGroupDat(remol, sgroup);
			break;
		default:
			break;
	}
	return set;
};

function SGroupdrawBrackets(set, render, sg, xbonds, atomSet, bb, d, lowerIndexText, upperIndexText, indexAttribute) {
	// eslint-disable-line max-params
	var brackets = getBracketParameters(render.ctab.molecule, xbonds, atomSet, bb, d, render, sg.id);
	var ir = -1;
	for (var i = 0; i < brackets.length; ++i) {
		var bracket = brackets[i];
		var path = _draw2.default.bracket(render.paper, _scale2.default.obj2scaled(bracket.d, render.options), _scale2.default.obj2scaled(bracket.n, render.options), _scale2.default.obj2scaled(bracket.c, render.options), bracket.w, bracket.h, render.options);
		set.push(path);
		if (ir < 0 || brackets[ir].d.x < bracket.d.x || brackets[ir].d.x == bracket.d.x && brackets[ir].d.y > bracket.d.y) ir = i;
	}
	var bracketR = brackets[ir];
	function renderIndex(text, shift) {
		var indexPos = _scale2.default.obj2scaled(bracketR.c.addScaled(bracketR.n, shift * bracketR.h), render.options);
		var indexPath = render.paper.text(indexPos.x, indexPos.y, text).attr({
			font: render.options.font,
			'font-size': render.options.fontszsub
		});
		if (indexAttribute) indexPath.attr(indexAttribute);
		var indexBox = _box2abs2.default.fromRelBox(_util2.default.relBox(indexPath.getBBox()));
		var t = Math.max(_util2.default.shiftRayBox(indexPos, bracketR.d.negated(), indexBox), 3) + 2;
		indexPath.translateAbs(t * bracketR.d.x, t * bracketR.d.y);
		set.push(indexPath);
	}
	if (lowerIndexText) renderIndex(lowerIndexText, 0.5);
	if (upperIndexText) renderIndex(upperIndexText, -0.5);
}

function showValue(paper, pos, sg, options) {
	var text = paper.text(pos.x, pos.y, sg.data.fieldValue).attr({
		font: options.font,
		'font-size': options.fontsz
	});
	var box = text.getBBox();
	var rect = paper.rect(box.x - 1, box.y - 1, box.width + 2, box.height + 2, 3, 3);
	rect = sg.selected ? rect.attr(options.selectionStyle) : rect.attr({ fill: '#fff', stroke: '#fff' });
	var st = paper.set();
	st.push(rect, text.toFront());
	return st;
}

function drawGroupDat(restruct, sgroup) {
	var render = restruct.render;

	// NB: we did not pass xbonds parameter to the backetPos method above,
	//  so the result will be in the regular coordinate system

	bracketPos(sgroup, render, restruct.molecule);
	sgroup.areas = sgroup.bracketBox ? [sgroup.bracketBox] : [];

	if (sgroup.pp === null) sgroup.pp = definePP(restruct, sgroup);

	return sgroup.data.attached ? drawAttachedDat(restruct, sgroup) : drawAbsoluteDat(restruct, sgroup);
}

function definePP(restruct, sgroup) {
	var topLeftPoint = sgroup.bracketBox.p1.add(new _vec2.default(0.5, 0.5));
	var sgroups = Array.from(restruct.molecule.sgroups.values());
	for (var i = 0; i < restruct.molecule.sgroups.size; ++i) {
		if (!descriptorIntersects(sgroups, topLeftPoint)) break;

		topLeftPoint = topLeftPoint.add(new _vec2.default(0, 0.5));
	}

	return topLeftPoint;
}

function descriptorIntersects(sgroups, topLeftPoint) {
	return sgroups.some(function (sg) {
		if (!sg.pp) return false;

		var sgBottomRightPoint = sg.pp.add(new _vec2.default(0.5, 0.5));
		var bottomRightPoint = topLeftPoint.add(new _vec2.default(0.5, 0.5));

		return _box2abs2.default.segmentIntersection(sg.pp, sgBottomRightPoint, topLeftPoint, bottomRightPoint);
	});
}

function drawAbsoluteDat(restruct, sgroup) {
	var render = restruct.render;
	var options = render.options;
	var paper = render.paper;
	var set = paper.set();

	var ps = sgroup.pp.scaled(options.scale);
	var name = showValue(paper, ps, sgroup, options);
	var box = _util2.default.relBox(name.getBBox());

	name.translateAbs(0.5 * box.width, -0.5 * box.height);
	set.push(name);

	var sbox = _box2abs2.default.fromRelBox(_util2.default.relBox(name.getBBox()));
	sgroup.dataArea = sbox.transform(_scale2.default.scaled2obj, render.options);

	if (!restruct.sgroupData.has(sgroup.id)) restruct.sgroupData.set(sgroup.id, new _redatasgroupdata2.default(sgroup));

	return set;
}

function drawAttachedDat(restruct, sgroup) {
	var render = restruct.render;
	var options = render.options;
	var paper = render.paper;
	var set = paper.set();

	_struct.SGroup.getAtoms(restruct, sgroup).forEach(function (aid) {
		var atom = restruct.atoms.get(aid);
		var p = _scale2.default.obj2scaled(atom.a.pp, options);
		var bb = atom.visel.boundingBox;

		if (bb !== null) p.x = Math.max(p.x, bb.p1.x);

		p.x += options.lineWidth; // shift a bit to the right

		var nameI = showValue(paper, p, sgroup, options);
		var boxI = _util2.default.relBox(nameI.getBBox());

		nameI.translateAbs(0.5 * boxI.width, -0.3 * boxI.height);
		set.push(nameI);

		var sboxI = _box2abs2.default.fromRelBox(_util2.default.relBox(nameI.getBBox()));
		sboxI = sboxI.transform(_scale2.default.scaled2obj, render.options);
		sgroup.areas.push(sboxI);
	});

	return set;
}

function bracketPos(sg, render, mol, xbonds) {
	// eslint-disable-line max-statements
	var atoms = sg.atoms;

	if (!xbonds || xbonds.length !== 2) {
		sg.bracketDir = new _vec2.default(1, 0);
	} else {
		var p1 = mol.bonds.get(xbonds[0]).getCenter(mol);
		var p2 = mol.bonds.get(xbonds[1]).getCenter(mol);
		sg.bracketDir = _vec2.default.diff(p2, p1).normalized();
	}
	var d = sg.bracketDir;

	var bb = null;
	var contentBoxes = [];

	atoms.forEach(function (aid) {
		var atom = mol.atoms.get(aid);
		var bba = render ? render.ctab.atoms.get(aid).visel.boundingBox : null;
		if (!bba) {
			var pos = new _vec2.default(atom.pp);
			var ext = new _vec2.default(0.05 * 3, 0.05 * 3);
			bba = new _box2abs2.default(pos, pos).extend(ext, ext);
		} else {
			bba = bba.translate((render.options.offset || new _vec2.default()).negated()).transform(_scale2.default.scaled2obj, render.options);
		}
		contentBoxes.push(bba);
	});
	mol.sGroupForest.children.get(sg.id).forEach(function (sgid) {
		var bba = render.ctab.sgroups.get(sgid).visel.boundingBox;
		bba = bba.translate((render.options.offset || new _vec2.default()).negated()).transform(_scale2.default.scaled2obj, render.options);
		contentBoxes.push(bba);
	});
	contentBoxes.forEach(function (bba) {
		var bbb = null;
		[bba.p0.x, bba.p1.x].forEach(function (x) {
			[bba.p0.y, bba.p1.y].forEach(function (y) {
				var v = new _vec2.default(x, y);
				var p = new _vec2.default(_vec2.default.dot(v, d), _vec2.default.dot(v, d.rotateSC(1, 0)));
				bbb = bbb === null ? new _box2abs2.default(p, p) : bbb.include(p);
			});
		});
		bb = bb === null ? bbb : _box2abs2.default.union(bb, bbb);
	});
	var vext = new _vec2.default(0.2, 0.4);
	if (bb !== null) bb = bb.extend(vext, vext);
	sg.bracketBox = bb;
}

function getBracketParameters(mol, xbonds, atomSet, bb, d, render, id) {
	// eslint-disable-line max-params
	function BracketParams(c, d, w, h) {
		this.c = c;
		this.d = d;
		this.n = d.rotateSC(1, 0);
		this.w = w;
		this.h = h;
	}
	var brackets = [];
	var n = d.rotateSC(1, 0);
	if (xbonds.length < 2) {
		(function () {
			d = d || new _vec2.default(1, 0);
			n = n || d.rotateSC(1, 0);
			var bracketWidth = Math.min(0.25, bb.sz().x * 0.3);
			var cl = _vec2.default.lc2(d, bb.p0.x, n, 0.5 * (bb.p0.y + bb.p1.y));
			var cr = _vec2.default.lc2(d, bb.p1.x, n, 0.5 * (bb.p0.y + bb.p1.y));
			var bracketHeight = bb.sz().y;

			brackets.push(new BracketParams(cl, d.negated(), bracketWidth, bracketHeight), new BracketParams(cr, d, bracketWidth, bracketHeight));
		})();
	} else if (xbonds.length === 2) {
		(function () {
			// eslint-disable-line max-statements
			var b1 = mol.bonds.get(xbonds[0]);
			var b2 = mol.bonds.get(xbonds[1]);
			var cl0 = b1.getCenter(mol);
			var cr0 = b2.getCenter(mol);
			var tl = -1;
			var tr = -1;
			var tt = -1;
			var tb = -1;
			var cc = _vec2.default.centre(cl0, cr0);
			var dr = _vec2.default.diff(cr0, cl0).normalized();
			var dl = dr.negated();
			var dt = dr.rotateSC(1, 0);
			var db = dt.negated();

			mol.sGroupForest.children.get(id).forEach(function (sgid) {
				var bba = render.ctab.sgroups.get(sgid).visel.boundingBox;
				bba = bba.translate((render.options.offset || new _vec2.default()).negated()).transform(_scale2.default.scaled2obj, render.options);
				tl = Math.max(tl, _util2.default.shiftRayBox(cl0, dl, bba));
				tr = Math.max(tr, _util2.default.shiftRayBox(cr0, dr, bba));
				tt = Math.max(tt, _util2.default.shiftRayBox(cc, dt, bba));
				tb = Math.max(tb, _util2.default.shiftRayBox(cc, db, bba));
			}, this);
			tl = Math.max(tl + 0.2, 0);
			tr = Math.max(tr + 0.2, 0);
			tt = Math.max(Math.max(tt, tb) + 0.1, 0);
			var bracketWidth = 0.25;
			var bracketHeight = 1.5 + tt;
			brackets.push(new BracketParams(cl0.addScaled(dl, tl), dl, bracketWidth, bracketHeight), new BracketParams(cr0.addScaled(dr, tr), dr, bracketWidth, bracketHeight));
		})();
	} else {
		(function () {
			for (var i = 0; i < xbonds.length; ++i) {
				var b = mol.bonds.get(xbonds[i]);
				var c = b.getCenter(mol);
				var d = atomSet.has(b.begin) ? b.getDir(mol) : b.getDir(mol).negated();
				brackets.push(new BracketParams(c, d, 0.2, 1.0));
			}
		})();
	}
	return brackets;
}

ReSGroup.prototype.drawHighlight = function (render) {
	// eslint-disable-line max-statements
	var options = render.options;
	var paper = render.paper;
	var sg = this.item;
	var bb = sg.bracketBox.transform(_scale2.default.obj2scaled, options);
	var lw = options.lineWidth;
	var vext = new _vec2.default(lw * 4, lw * 6);
	bb = bb.extend(vext, vext);
	var d = sg.bracketDir,
	    n = d.rotateSC(1, 0);
	var a0 = _vec2.default.lc2(d, bb.p0.x, n, bb.p0.y);
	var a1 = _vec2.default.lc2(d, bb.p0.x, n, bb.p1.y);
	var b0 = _vec2.default.lc2(d, bb.p1.x, n, bb.p0.y);
	var b1 = _vec2.default.lc2(d, bb.p1.x, n, bb.p1.y);

	var set = paper.set();
	sg.highlighting = paper.path('M{0},{1}L{2},{3}L{4},{5}L{6},{7}L{0},{1}', tfx(a0.x), tfx(a0.y), tfx(a1.x), tfx(a1.y), tfx(b1.x), tfx(b1.y), tfx(b0.x), tfx(b0.y)).attr(options.highlightStyle);
	set.push(sg.highlighting);

	_struct.SGroup.getAtoms(render.ctab.molecule, sg).forEach(function (aid) {
		set.push(render.ctab.atoms.get(aid).makeHighlightPlate(render));
	}, this);
	_struct.SGroup.getBonds(render.ctab.molecule, sg).forEach(function (bid) {
		set.push(render.ctab.bonds.get(bid).makeHighlightPlate(render));
	}, this);
	render.ctab.addReObjectPath('highlighting', this.visel, set);
};

ReSGroup.prototype.show = function (restruct) {
	var render = restruct.render;
	var sgroup = this.item;
	if (sgroup.data.fieldName !== 'MRV_IMPLICIT_H') {
		var remol = render.ctab;
		var path = this.draw(remol, sgroup);
		restruct.addReObjectPath('data', this.visel, path, null, true);
		this.setHighlight(this.highlight, render); // TODO: fix this
	}
};

exports.default = ReSGroup;

},{"../../chem/struct":537,"../../util/box2abs":682,"../../util/pile":683,"../../util/scale":685,"../../util/vec2":686,"../draw":585,"../util":601,"./redatasgroupdata":592,"./reobject":595}],600:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _box2abs = require('../../util/box2abs');

var _box2abs2 = _interopRequireDefault(_box2abs);

var _vec = require('../../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

// Visel is a shorthand for VISual ELement
// It corresponds to a visualization (i.e. set of paths) of an atom or a bond.
function Visel(type) {
	this.type = type;
	this.paths = [];
	this.boxes = [];
	this.boundingBox = null;
}

Visel.prototype.add = function (path, bb, ext) {
	this.paths.push(path);
	if (bb) {
		this.boxes.push(bb);
		this.boundingBox = this.boundingBox == null ? bb : _box2abs2.default.union(this.boundingBox, bb);
	}
	if (ext) this.exts.push(ext);
};

Visel.prototype.clear = function () {
	this.paths = [];
	this.boxes = [];
	this.exts = [];
	this.boundingBox = null;
};

Visel.prototype.translate = function (x, y) {
	if (arguments.length > 2) // TODO: replace to debug time assert
		throw new Error('One vector or two scalar arguments expected');
	if (y === undefined) {
		this.translate(x.x, x.y);
	} else {
		var delta = new _vec2.default(x, y);
		for (var i = 0; i < this.paths.length; ++i) {
			this.paths[i].translateAbs(x, y);
		}for (var j = 0; j < this.boxes.length; ++j) {
			this.boxes[j] = this.boxes[j].translate(delta);
		}if (this.boundingBox !== null) this.boundingBox = this.boundingBox.translate(delta);
	}
};

exports.default = Visel;

},{"../../util/box2abs":682,"../../util/vec2":686}],601:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _vec = require('../util/vec2');

var _vec2 = _interopRequireDefault(_vec);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function tfx(v) {
	return parseFloat(v).toFixed(8);
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

function relBox(box) {
	return {
		x: box.x,
		y: box.y,
		width: box.width,
		height: box.height
	};
}

/**
 * Finds intersection of a ray and a box and
 * Returns the shift magnitude to avoid it
 * @param p { Vec2 }
 * @param d { Vec2 }
 * @param bb { Box2Abs }
 */
function shiftRayBox(p, d, bb) {
	console.assert(!!p);
	console.assert(!!d);
	console.assert(!!bb);

	// four corner points of the box
	var b = [bb.p0, new _vec2.default(bb.p1.x, bb.p0.y), bb.p1, new _vec2.default(bb.p0.x, bb.p1.y)];

	var r = b.map(function (v) {
		return v.sub(p);
	}); // b relative to p

	d = d.normalized();

	var rc = r.map(function (v) {
		return _vec2.default.cross(v, d);
	}); // cross prods
	var rd = r.map(function (v) {
		return _vec2.default.dot(v, d);
	}); // dot prods

	// find foremost points on the right and on the left of the ray
	var pid = -1;
	var nid = -1;

	for (var i = 0; i < 4; ++i) {
		if (rc[i] > 0) {
			if (pid < 0 || rd[pid] < rd[i]) pid = i;
		} else if (nid < 0 || rd[nid] < rd[i]) {
			nid = i;
		}
	}

	if (nid < 0 || pid < 0) // no intersection, no shift
		return 0;

	// check the order
	var id0 = rd[pid] > rd[nid] ? nid : pid;
	var id1 = rd[pid] > rd[nid] ? pid : nid;

	// simple proportion to calculate the shift
	/* eslint-disable no-mixed-operators*/
	return rd[id0] + Math.abs(rc[id0]) * (rd[id1] - rd[id0]) / (Math.abs(rc[id0]) + Math.abs(rc[id1]));
	/* eslint-enable no-mixed-operators*/
}

exports.default = {
	tfx: tfx,
	relBox: relBox,
	shiftRayBox: shiftRayBox
};

},{"../util/vec2":686}],602:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

var basic = exports.basic = ['H', 'C', 'N', 'O', 'S', 'P', 'F', 'Cl', 'Br', 'I'];

var atomCuts = exports.atomCuts = {
	H: 'h',
	C: 'c',
	N: 'n',
	O: 'o',
	S: 's',
	P: 'p',
	F: 'f',
	Cl: 'Shift+c',
	Br: 'Shift+b',
	I: 'i',
	A: 'a'
};

exports.default = Object.keys(atomCuts).reduce(function (res, label) {
	res['atom-' + label.toLowerCase()] = {
		title: 'Atom ' + label,
		shortcut: atomCuts[label],
		action: {
			tool: 'atom',
			opts: { label: label }
		}
	};
	return res;
}, {});

},{}],603:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _molfile = require('../../chem/molfile');

var _molfile2 = _interopRequireDefault(_molfile);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	// original: for dev purposes
	'force-update': {
		shortcut: 'Ctrl+Shift+r',
		action: function action(editor) {
			editor.update(true);
		}
	},
	'qs-serialize': {
		shortcut: 'Alt+Shift+r',
		action: function action(editor) {
			var molStr = _molfile2.default.stringify(editor.struct());
			var molQs = 'mol=' + encodeURIComponent(molStr).replace(/%20/g, '+');
			var qs = document.location.search;
			document.location.search = !qs ? '?' + molQs : // eslint-disable-line
			qs.search('mol=') === -1 ? qs + '&' + molQs : qs.replace(/mol=[^&$]*/, molQs);
		}
	}
}; /****************************************************************************
    * Copyright 2018 EPAM Systems
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *    http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    ***************************************************************************/

},{"../../chem/molfile":523}],604:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /****************************************************************************
                                                                                                                                                                                                                                                                   * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                   * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                   * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                   * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                   * limitations under the License.
                                                                                                                                                                                                                                                                   ***************************************************************************/

/* eslint-disable no-shadow */

var _tools = require('./tools');

var _tools2 = _interopRequireDefault(_tools);

var _atoms = require('./atoms');

var _atoms2 = _interopRequireDefault(_atoms);

var _zoom = require('./zoom');

var _zoom2 = _interopRequireDefault(_zoom);

var _server = require('./server');

var _server2 = _interopRequireDefault(_server);

var _debug = require('./debug');

var _debug2 = _interopRequireDefault(_debug);

var _templates = require('./templates');

var _templates2 = _interopRequireDefault(_templates);

var _cliparea = require('../component/cliparea');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _extends({
	new: {
		shortcut: 'Mod+Delete',
		title: 'Clear Canvas',
		action: {
			thunk: function thunk(dispatch, getState) {
				var editor = getState().editor;
				if (!editor.struct().isBlank()) editor.struct(null);
				dispatch({ type: 'ACTION', action: _tools2.default['select-lasso'].action });
			}
		}
	},
	open: {
		shortcut: 'Mod+o',
		title: 'Open…',
		action: { dialog: 'open' }
	},
	save: {
		shortcut: 'Mod+s',
		title: 'Save As…',
		action: { dialog: 'save' }
	},
	undo: {
		shortcut: 'Mod+z',
		title: 'Undo',
		action: function action(editor) {
			editor.undo();
		},
		disabled: function disabled(editor) {
			return editor.historySize().undo === 0;
		}
	},
	redo: {
		shortcut: ['Mod+Shift+z', 'Mod+y'],
		title: 'Redo',
		action: function action(editor) {
			editor.redo();
		},
		disabled: function disabled(editor) {
			return editor.historySize().redo === 0;
		}
	},
	cut: {
		shortcut: 'Mod+x',
		title: 'Cut',
		action: function action() {
			(0, _cliparea.exec)('cut') || dontClipMessage('Cut'); // eslint-disable-line no-unused-expressions
		},
		disabled: function disabled(editor) {
			return !hasSelection(editor);
		}
	},
	copy: {
		shortcut: 'Mod+c',
		title: 'Copy',
		action: function action() {
			(0, _cliparea.exec)('copy') || dontClipMessage('Copy'); // eslint-disable-line no-unused-expressions
		},
		disabled: function disabled(editor) {
			return !hasSelection(editor);
		}
	},
	paste: {
		shortcut: 'Mod+v',
		title: 'Paste',
		action: function action() {
			(0, _cliparea.exec)('paste') || dontClipMessage('Paste'); // eslint-disable-line no-unused-expressions
		},
		selected: function selected(_ref) {
			var actions = _ref.actions;
			return actions && // TMP
			actions.active && actions.active.tool === 'paste';
		}
	},
	settings: {
		title: 'Settings',
		action: { dialog: 'settings' }
	},
	help: {
		shortcut: ['?', '&', 'Shift+/'],
		title: 'Help',
		action: { dialog: 'help' }
	},
	about: {
		title: 'About',
		action: { dialog: 'about' }
	},
	'reaction-automap': {
		title: 'Reaction Auto-Mapping Tool',
		action: { dialog: 'automap' },
		disabled: function disabled(editor, server, options) {
			return !options.app.server || !editor.struct().hasRxnArrow();
		}
	},
	'period-table': {
		title: 'Periodic Table',
		action: { dialog: 'period-table' }
	},
	'select-all': {
		title: 'Select All',
		shortcut: 'Mod+a',
		action: {
			thunk: function thunk(dispatch, getState) {
				getState().editor.selection('all');
				var selectionTool = getState().toolbar.visibleTools.select;
				dispatch({ type: 'ACTION', action: _tools2.default[selectionTool].action });
			}
		}
	},
	'deselect-all': {
		title: 'Deselect All',
		shortcut: 'Mod+Shift+a',
		action: function action(editor) {
			editor.selection(null);
		}
	},
	'select-descriptors': {
		title: 'Select descriptors',
		shortcut: 'Mod+d',
		action: {
			thunk: function thunk(dispatch, getState) {
				var selectionTool = getState().toolbar.visibleTools.select;
				var editor = getState().editor;
				editor.alignDescriptors();
				editor.selection('descriptors');
				dispatch({ type: 'ACTION', action: _tools2.default[selectionTool].action });
			}
		}
	}
}, _server2.default, _debug2.default, _tools2.default, _atoms2.default, _zoom2.default, _templates2.default);


function hasSelection(editor) {
	var selection = editor.selection();
	return selection && ( // if not only sgroupData selected
	Object.keys(selection).length > 1 || !selection.sgroupData);
}

function dontClipMessage(title) {
	alert('This action is unavailable via menu.\n' + // eslint-disable-line no-undef
	'Instead, use shortcut to ' + title + '.');
}

},{"../component/cliparea":615,"./atoms":602,"./debug":603,"./server":605,"./templates":606,"./tools":607,"./zoom":608}],605:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _server = require('../state/server');

exports.default = {
	layout: {
		shortcut: 'Mod+l',
		title: 'Layout',
		action: {
			thunk: (0, _server.serverTransform)('layout')
		},
		disabled: function disabled(editor, server, options) {
			return !options.app.server;
		}
	},
	clean: {
		shortcut: 'Mod+Shift+l',
		title: 'Clean Up',
		action: {
			thunk: (0, _server.serverTransform)('clean')
		},
		disabled: function disabled(editor, server, options) {
			return !options.app.server;
		}
	},
	arom: {
		title: 'Aromatize',
		action: {
			thunk: (0, _server.serverTransform)('aromatize')
		},
		disabled: function disabled(editor, server, options) {
			return !options.app.server;
		}
	},
	dearom: {
		title: 'Dearomatize',
		action: {
			thunk: (0, _server.serverTransform)('dearomatize')
		},
		disabled: function disabled(editor, server, options) {
			return !options.app.server;
		}
	},
	cip: {
		shortcut: 'Mod+p',
		title: 'Calculate CIP',
		action: {
			thunk: (0, _server.serverTransform)('calculateCip')
		},
		disabled: function disabled(editor, server, options) {
			return !options.app.server;
		}
	},
	check: {
		title: 'Check Structure',
		action: { dialog: 'check' },
		disabled: function disabled(editor, server, options) {
			return !options.app.server;
		}
	},
	analyse: {
		title: 'Calculated Values',
		action: { dialog: 'analyse' },
		disabled: function disabled(editor, server, options) {
			return !options.app.server;
		}
	},
	recognize: {
		title: 'Recognize Molecule',
		action: { dialog: 'recognize' },
		disabled: function disabled(editor, server, options) {
			return !options.app.server;
		}
	},
	miew: {
		title: '3D Viewer',
		action: { dialog: 'miew' },
		disabled: function disabled() {
			return !window.Miew;
		}
	}
}; /****************************************************************************
    * Copyright 2018 EPAM Systems
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *    http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    ***************************************************************************/

},{"../state/server":676}],606:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _templates = require('../data/templates');

var _templates2 = _interopRequireDefault(_templates);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var templateLib = {
	'template-lib': {
		shortcut: 'Shift+t',
		title: 'Custom Templates',
		action: { dialog: 'templates' },
		disabled: function disabled(editor, server, options) {
			return !options.app.templates;
		}
	}
}; /****************************************************************************
    * Copyright 2018 EPAM Systems
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *    http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    ***************************************************************************/

exports.default = _templates2.default.reduce(function (res, struct, i) {
	res['template-' + i] = {
		title: '' + struct.name,
		shortcut: 't',
		action: {
			tool: 'template',
			opts: { struct: struct }
		}
	};
	return res;
}, templateLib);

},{"../data/templates":643}],607:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _structSchema = require('../data/schema/struct-schema');

var _structconv = require('../data/convert/structconv');

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

var toolActions = {
	'select-lasso': {
		title: 'Lasso Selection',
		shortcut: 'Escape',
		action: { tool: 'select', opts: 'lasso' }
	},
	'select-rectangle': {
		title: 'Rectangle Selection',
		shortcut: 'Escape',
		action: { tool: 'select', opts: 'rectangle' }
	},
	'select-fragment': {
		title: 'Fragment Selection',
		shortcut: 'Escape',
		action: { tool: 'select', opts: 'fragment' }
	},
	erase: {
		title: 'Erase',
		shortcut: ['Delete', 'Backspace'],
		action: { tool: 'eraser', opts: 1 // TODO last selector mode is better
		} },
	chain: {
		title: 'Chain',
		action: { tool: 'chain' }
	},
	'chiral-flag': {
		title: 'Chiral Flag',
		action: { tool: 'chiralFlag' },
		selected: function selected(editor) {
			return editor.struct().isChiral;
		}
	},
	'charge-plus': {
		shortcut: '5',
		title: 'Charge Plus',
		action: { tool: 'charge', opts: 1 }
	},
	'charge-minus': {
		shortcut: '5',
		title: 'Charge Minus',
		action: { tool: 'charge', opts: -1 }
	},
	'transform-rotate': {
		shortcut: 'Alt+r',
		title: 'Rotate Tool',
		action: { tool: 'rotate' }
	},
	'transform-flip-h': {
		shortcut: 'Alt+h',
		title: 'Horizontal Flip',
		action: { tool: 'rotate', opts: 'horizontal' }
	},
	'transform-flip-v': {
		shortcut: 'Alt+v',
		title: 'Vertical Flip',
		action: { tool: 'rotate', opts: 'vertical' }
	},
	sgroup: {
		shortcut: 'Mod+g',
		title: 'S-Group',
		action: { tool: 'sgroup' }
	},
	'sgroup-data': {
		shortcut: 'Mod+g',
		title: 'Data S-Group',
		action: { tool: 'sgroup', opts: 'DAT' }
	},
	'reaction-arrow': {
		title: 'Reaction Arrow Tool',
		action: { tool: 'reactionarrow' }
	},
	'reaction-plus': {
		title: 'Reaction Plus Tool',
		action: { tool: 'reactionplus' }
	},
	'reaction-map': {
		title: 'Reaction Mapping Tool',
		action: { tool: 'reactionmap' }
	},
	'reaction-unmap': {
		title: 'Reaction Unmapping Tool',
		action: { tool: 'reactionunmap' }
	},
	'rgroup-label': {
		shortcut: 'Mod+r',
		title: 'R-Group Label Tool',
		action: { tool: 'rgroupatom' }
	},
	'rgroup-fragment': {
		shortcut: ['Mod+Shift+r', 'Mod+r'],
		title: 'R-Group Fragment Tool',
		action: { tool: 'rgroupfragment' }
	},
	'rgroup-attpoints': {
		shortcut: 'Mod+r',
		title: 'Attachment Point Tool',
		action: { tool: 'apoint' }
	}
};

var bondCuts = {
	single: '1',
	double: '2',
	triple: '3',
	up: '1',
	down: '1',
	updown: '1',
	crossed: '2',
	any: '0',
	aromatic: '4'
};

var typeSchema = _structSchema.bond.properties.type;

exports.default = typeSchema.enum.reduce(function (res, type, i) {
	res['bond-' + type] = {
		title: typeSchema.enumNames[i] + ' Bond',
		shortcut: bondCuts[type],
		action: {
			tool: 'bond',
			opts: (0, _structconv.toBondType)(type)
		}
	};
	return res;
}, toolActions);

},{"../data/convert/structconv":637,"../data/schema/struct-schema":642}],608:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.zoomList = undefined;

var _findLastIndex2 = require('lodash/fp/findLastIndex');

var _findLastIndex3 = _interopRequireDefault(_findLastIndex2);

var _findIndex2 = require('lodash/fp/findIndex');

var _findIndex3 = _interopRequireDefault(_findIndex2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

var zoomList = exports.zoomList = [0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.7, 2, 2.5, 3, 3.5, 4];

exports.default = {
	zoom: {
		selected: function selected(editor) {
			return editor.zoom();
		}
	},
	'zoom-out': {
		shortcut: ['-', '_', 'Shift+-'],
		title: 'Zoom Out',
		disabled: function disabled(editor) {
			return editor.zoom() <= zoomList[0] // unsave
			;
		},
		action: function action(editor) {
			var zoom = editor.zoom();
			var i = (0, _findIndex3.default)(function (z) {
				return z >= zoom;
			}, zoomList);
			editor.zoom(zoomList[zoomList[i] === zoom && i > 0 ? i - 1 : i]);
		}
	},
	'zoom-in': {
		shortcut: ['+', '=', 'Shift+='],
		title: 'Zoom In',
		disabled: function disabled(editor) {
			return zoomList[zoomList.length - 1] <= editor.zoom();
		},
		action: function action(editor) {
			var zoom = editor.zoom();
			var i = (0, _findLastIndex3.default)(function (z) {
				return z <= zoom;
			}, zoomList);
			editor.zoom(zoomList[zoomList[i] === zoom && i < zoomList.length - 1 ? i + 1 : i]);
		}
	}
};

},{"lodash/fp/findIndex":424,"lodash/fp/findLastIndex":425}],609:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _preactRedux = require('preact-redux');

var _editor = require('../state/editor');

var _editor2 = _interopRequireDefault(_editor);

var _structeditor = require('../component/structeditor');

var _structeditor2 = _interopRequireDefault(_structeditor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var AppEditor = (0, _preactRedux.connect)(function (state) {
  return {
    options: state.options.settings
  };
}, function (dispatch) {
  return dispatch(_editor2.default);
})(_structeditor2.default); /****************************************************************************
                             * Copyright 2018 EPAM Systems
                             *
                             * Licensed under the Apache License, Version 2.0 (the "License");
                             * you may not use this file except in compliance with the License.
                             * You may obtain a copy of the License at
                             *
                             *    http://www.apache.org/licenses/LICENSE-2.0
                             *
                             * Unless required by applicable law or agreed to in writing, software
                             * distributed under the License is distributed on an "AS IS" BASIS,
                             * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                             * See the License for the specific language governing permissions and
                             * limitations under the License.
                             ***************************************************************************/

exports.default = AppEditor;

},{"../component/structeditor":626,"../state/editor":669,"preact-redux":484}],610:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AppCliparea = exports.AppHidden = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _cliparea = require('../component/cliparea');

var _cliparea2 = _interopRequireDefault(_cliparea);

var _toolbar = require('../state/toolbar');

var _hotkeys = require('../state/hotkeys');

var _templates = require('../state/templates');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.


var AppHidden = exports.AppHidden = (0, _preactRedux.connect)(null, function (dispatch) {
  return {
    onInitTmpls: function onInitTmpls(cacheEl) {
      return (0, _templates.initTmplLib)(dispatch, '', cacheEl);
    }
  };
})(function (_Component) {
  _inherits(_class2, _Component);

  function _class2() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, _class2);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = _class2.__proto__ || Object.getPrototypeOf(_class2)).call.apply(_ref, [this].concat(args))), _this), _this.render = function () {
      return (0, _preact.h)('div', { className: 'cellar', ref: function ref(c) {
          _this.cacheEl = c;
        } });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(_class2, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.props.onInitTmpls(this.cacheEl);
      (0, _toolbar.initIcons)(this.cacheEl);
    }
  }]);

  return _class2;
}(_preact.Component));

var AppCliparea = exports.AppCliparea = (0, _preactRedux.connect)(null, function (dispatch) {
  return dispatch(_hotkeys.initClipboard);
})(_cliparea2.default);

},{"../component/cliparea":615,"../state/hotkeys":670,"../state/templates":678,"../state/toolbar":680,"preact":485,"preact-redux":484}],611:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _hidden = require('./hidden');

var _editor = require('./editor');

var _editor2 = _interopRequireDefault(_editor);

var _modal = require('./modal');

var _modal2 = _interopRequireDefault(_modal);

var _toolbar = require('./toolbar');

var _toolbar2 = _interopRequireDefault(_toolbar);

var _state = require('../state');

var _state2 = _interopRequireDefault(_state);

var _server = require('../state/server');

var _hotkeys = require('../state/hotkeys');

var _toolbar3 = require('../state/toolbar');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.


var App = (0, _preactRedux.connect)(null, { onAction: _state.onAction, checkServer: _server.checkServer })(function (_Component) {
	_inherits(_class2, _Component);

	function _class2() {
		var _ref;

		var _temp, _this, _ret;

		_classCallCheck(this, _class2);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = _class2.__proto__ || Object.getPrototypeOf(_class2)).call.apply(_ref, [this].concat(args))), _this), _this.render = function (props) {
			return (0, _preact.h)(
				'main',
				{ role: 'application' },
				(0, _preact.h)(_hidden.AppHidden, null),
				(0, _preact.h)(_editor2.default, { id: 'canvas' }),
				(0, _preact.h)(_toolbar2.default, props),
				(0, _preact.h)(_hidden.AppCliparea, null),
				(0, _preact.h)(_modal2.default, null)
			);
		}, _temp), _possibleConstructorReturn(_this, _ret);
	}

	_createClass(_class2, [{
		key: 'componentDidMount',
		// eslint-disable-line
		value: function componentDidMount() {
			this.props.checkServer();
		}
	}]);

	return _class2;
}(_preact.Component));

function init(el, options, server) {
	var store = (0, _state2.default)(options, server);
	store.dispatch((0, _hotkeys.initKeydownListener)(el));
	store.dispatch((0, _toolbar3.initResize)());

	(0, _preact.render)((0, _preact.h)(
		_preactRedux.Provider,
		{ store: store },
		(0, _preact.h)(App, null)
	), el);

	return {
		load: function load(structStr, opts) {
			return store.dispatch((0, _state.load)(structStr, opts));
		}
	};
}

exports.default = init;

},{"../state":671,"../state/hotkeys":670,"../state/server":676,"../state/toolbar":680,"./editor":609,"./hidden":610,"./modal":612,"./toolbar":613,"preact":485,"preact-redux":484}],612:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _omit2 = require('lodash/fp/omit');

var _omit3 = _interopRequireDefault(_omit2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /****************************************************************************
                                                                                                                                                                                                                                                                   * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                   * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                   * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                   * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                   * limitations under the License.
                                                                                                                                                                                                                                                                   ***************************************************************************/

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _dialog = require('../dialog');

var _dialog2 = _interopRequireDefault(_dialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var mapStateToProps = function mapStateToProps(state) {
	return {
		modal: state.modal
	};
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	return {
		onOk: function onOk(res) {
			console.info('Output:', res);
			dispatch({ type: 'MODAL_CLOSE' });
		},
		onCancel: function onCancel() {
			dispatch({ type: 'MODAL_CLOSE' });
		}
	};
};

var mergeProps = function mergeProps(stateProps, dispatchProps) {
	var prop = stateProps.modal && stateProps.modal.prop;
	var initProps = prop ? (0, _omit3.default)(['onResult', 'onCancel'], prop) : {};
	return _extends({
		modal: stateProps.modal
	}, initProps, {
		onOk: function onOk(res) {
			if (prop && prop.onResult) prop.onResult(res);
			dispatchProps.onOk(res);
		},
		onCancel: function onCancel() {
			if (prop && prop.onCancel) prop.onCancel();
			dispatchProps.onCancel();
		}
	});
};

var AppModal = (0, _preactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps)(function (_ref) {
	var modal = _ref.modal,
	    props = _objectWithoutProperties(_ref, ['modal']);

	if (!modal) return null;

	var Modal = _dialog2.default[modal.name];

	if (!Modal) throw new Error('There is no modal window named ' + modal.name);

	return (0, _preact.h)(
		'div',
		{ className: 'ket-overlay' },
		(0, _preact.h)(Modal, props)
	);
});

exports.default = AppModal;

},{"../dialog":646,"lodash/fp/omit":429,"preact":485,"preact-redux":484}],613:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /****************************************************************************
                                                                                                                                                                                                                                                                   * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                   * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                   * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                   * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                   * limitations under the License.
                                                                                                                                                                                                                                                                   ***************************************************************************/

var _preactRedux = require('preact-redux');

var _preact = require('preact');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _element = require('../../chem/element');

var _element2 = _interopRequireDefault(_element);

var _atom = require('../component/view/atom');

var _atom2 = _interopRequireDefault(_atom);

var _icon = require('../component/view/icon');

var _icon2 = _interopRequireDefault(_icon);

var _actionmenu = require('../component/actionmenu');

var _actionmenu2 = _interopRequireDefault(_actionmenu);

var _action = require('../action');

var _action2 = _interopRequireDefault(_action);

var _atoms = require('../action/atoms');

var _zoom = require('../action/zoom');

var _templates = require('../data/templates');

var _templates2 = _interopRequireDefault(_templates);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var mainmenu = [{
	id: 'document',
	menu: ['new', 'open', 'save']
}, {
	id: 'edit',
	menu: ['undo', 'redo', 'cut', 'copy', 'paste']
}, {
	id: 'zoom',
	menu: ['zoom-in', 'zoom-out', {
		id: 'zoom-list',
		component: ZoomList
	}]
}, {
	id: 'process',
	menu: ['layout', 'clean', 'arom', 'dearom', 'cip', 'check', 'analyse', 'recognize', 'miew']
}, {
	id: 'meta',
	menu: ['settings', 'help', 'about']
}];

var toolbox = [{
	id: 'select',
	menu: ['select-lasso', 'select-rectangle', 'select-fragment']
}, 'erase', {
	id: 'bond',
	menu: [{
		id: 'bond-common',
		menu: ['bond-single', 'bond-double', 'bond-triple']
	}, {
		id: 'bond-stereo',
		menu: ['bond-up', 'bond-down', 'bond-updown', 'bond-crossed']
	}, {
		id: 'bond-query',
		menu: ['bond-any', 'bond-aromatic', 'bond-singledouble', 'bond-singlearomatic', 'bond-doublearomatic']
	}]
}, 'chain', {
	id: 'charge',
	menu: ['charge-plus', 'charge-minus']
}, {
	id: 'transform',
	menu: ['transform-rotate', 'transform-flip-h', 'transform-flip-v']
}, 'sgroup', 'sgroup-data', {
	id: 'reaction',
	menu: ['reaction-arrow', 'reaction-plus', 'reaction-automap', 'reaction-map', 'reaction-unmap']
}, {
	id: 'rgroup',
	menu: ['rgroup-label', 'rgroup-fragment', 'rgroup-attpoints']
}];

var template = [{
	id: 'template-common',
	component: TemplatesList
}, 'template-lib', 'chiral-flag'];

var elements = [{
	id: 'atom',
	component: function component(props) {
		return AtomsList(_atoms.basic, props);
	}
}, {
	id: 'freq-atoms',
	component: function component(props) {
		return AtomsList(props['freqAtoms'], props);
	}

}, 'period-table'];

var toolbar = [{ id: 'mainmenu', menu: mainmenu }, { id: 'toolbox', menu: toolbox }, { id: 'template', menu: template }, { id: 'elements', menu: elements }];

function ZoomList(_ref) {
	var status = _ref.status,
	    onAction = _ref.onAction;

	var zoom = status.zoom && status.zoom.selected; // TMP
	return (0, _preact.h)(
		'select',
		{
			value: zoom,
			onChange: function onChange(ev) {
				return onAction(function (editor) {
					return editor.zoom(parseFloat(ev.target.value));
				});
			}
		},
		_zoom.zoomList.map(function (val) {
			return (0, _preact.h)(
				'option',
				{ value: val },
				(val * 100).toFixed() + '%'
			);
		})
	);
}

function AtomsList(atoms, _ref2) {
	var active = _ref2.active,
	    onAction = _ref2.onAction;

	var isAtom = active && active.tool === 'atom';
	return (0, _preact.h)(
		'menu',
		null,
		atoms.map(function (label) {
			var index = _element2.default.map[label];
			var shortcut = _atoms.basic.indexOf(label) > -1 ? (0, _actionmenu.shortcutStr)(_atoms.atomCuts[label]) : null;
			return (0, _preact.h)(
				'li',
				{
					className: (0, _classnames2.default)({
						selected: isAtom && active.opts.label === label
					})
				},
				(0, _preact.h)(_atom2.default, {
					el: _element2.default[index],
					shortcut: shortcut,
					onClick: function onClick() {
						return onAction({ tool: 'atom', opts: { label: label } });
					}
				})
			);
		})
	);
}

function TemplatesList(_ref3) {
	var active = _ref3.active,
	    onAction = _ref3.onAction;

	var shortcut = (0, _actionmenu.shortcutStr)(_action2.default['template-0'].shortcut);
	var isTmpl = active && active.tool === 'template';
	return (0, _preact.h)(
		'menu',
		null,
		_templates2.default.map(function (struct, i) {
			return (0, _preact.h)(
				'li',
				{
					id: 'template-' + i,
					className: (0, _classnames2.default)({
						selected: isTmpl && active.opts.struct === struct
					})
				},
				(0, _preact.h)(
					'button',
					{
						title: struct.name + ' (' + shortcut + ')',
						onClick: function onClick() {
							return onAction({ tool: 'template', opts: { struct: struct } });
						}
					},
					(0, _preact.h)(_icon2.default, { name: 'template-' + i }),
					struct.name
				)
			);
		})
	);
}

exports.default = (0, _preactRedux.connect)(function (state) {
	return {
		active: state.actionState && state.actionState.activeTool,
		status: state.actionState || {},
		freqAtoms: state.toolbar.freqAtoms,
		opened: state.toolbar.opened,
		visibleTools: state.toolbar.visibleTools
	};
}, {
	onOpen: function onOpen(menuName, isSelected) {
		return { type: 'OPENED', data: { menuName: menuName, isSelected: isSelected } };
	}
})(function (props) {
	return (0, _preact.h)(_actionmenu2.default, _extends({ menu: toolbar, role: 'toolbar' }, props));
});

},{"../../chem/element":520,"../action":604,"../action/atoms":602,"../action/zoom":608,"../component/actionmenu":614,"../component/view/atom":629,"../component/view/icon":630,"../data/templates":643,"classnames":2,"preact":485,"preact-redux":484}],614:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /****************************************************************************
                                                                                                                                                                                                                                                                               * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                               * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                               * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                               * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                               *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                               * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                               * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                               * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                               * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                               * limitations under the License.
                                                                                                                                                                                                                                                                               ***************************************************************************/

exports.shortcutStr = shortcutStr;
exports.showMenuOrButton = showMenuOrButton;

var _preact = require('preact');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _action = require('../action');

var _action2 = _interopRequireDefault(_action);

var _toolbar = require('../state/toolbar');

var _icon = require('./view/icon');

var _icon2 = _interopRequireDefault(_icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var isMac = /Mac/.test(navigator.platform); // eslint-disable-line no-undef
var shortcutAliasMap = {
	Escape: 'Esc',
	Delete: 'Del',
	Mod: isMac ? '⌘' : 'Ctrl'
};

function shortcutStr(shortcut) {
	var key = Array.isArray(shortcut) ? shortcut[0] : shortcut;
	return key.replace(/(\b[a-z]\b$|Mod|Escape|Delete)/g, function (k) {
		return shortcutAliasMap[k] || k.toUpperCase();
	});
}

function isMenuOpened(currentNode) {
	var parentNode = (0, _toolbar.hiddenAncestor)(currentNode);
	return parentNode && parentNode.classList.contains('opened');
}

function showMenuOrButton(action, item, status, props) {
	// eslint-disable-line no-shadow
	if ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) !== 'object') {
		return (0, _preact.h)(ActionButton, _extends({}, props, {
			name: item,
			action: action[item],
			status: status
		}));
	}
	if (item.menu) {
		return (0, _preact.h)(ActionMenu, _extends({}, props, {
			name: item.id,
			menu: item.menu
		}));
	}
	return item.component(props);
}

function ActionButton(_ref) {
	var _this = this;

	var name = _ref.name,
	    action = _ref.action,
	    _ref$status = _ref.status,
	    status = _ref$status === undefined ? {} : _ref$status,
	    onAction = _ref.onAction;
	// eslint-disable-line no-shadow
	var shortcut = action.shortcut && shortcutStr(action.shortcut);
	return (0, _preact.h)(
		'button',
		{
			disabled: status.disabled,
			onClick: function onClick(ev) {
				if (!status.selected || isMenuOpened(_this.base) || action.action.tool === 'chiralFlag') {
					onAction(action.action);
					ev.stopPropagation();
				}
			},
			title: shortcut ? action.title + ' (' + shortcut + ')' : action.title
		},
		(0, _preact.h)(_icon2.default, { name: name }),
		action.title,
		(0, _preact.h)(
			'kbd',
			null,
			shortcut
		)
	);
}

function ActionMenu(_ref2) {
	var name = _ref2.name,
	    menu = _ref2.menu,
	    className = _ref2.className,
	    role = _ref2.role,
	    props = _objectWithoutProperties(_ref2, ['name', 'menu', 'className', 'role']);

	return (0, _preact.h)(
		'menu',
		{
			className: className,
			role: role,
			style: toolMargin(name, menu, props.visibleTools)
		},
		menu.map(function (item) {
			return (0, _preact.h)(
				'li',
				{
					id: item.id || item,
					className: (0, _classnames2.default)(props.status[item]) + (' ' + (item.id === props.opened ? 'opened' : '')),
					onClick: function onClick(ev) {
						return openHandle(ev, props.onOpen);
					}
				},
				showMenuOrButton(_action2.default, item, props.status[item], props),
				item.menu && (0, _preact.h)(_icon2.default, { name: 'dropdown' })
			);
		})
	);
}

function toolMargin(menuName, menu, visibleTools) {
	if (!visibleTools[menuName]) return {};
	// now not found better way
	var iconHeight = window.innerHeight < 600 || window.innerWidth < 1040 ? 32 : 40;
	var index = menu.indexOf(visibleTools[menuName]); // first level

	if (index === -1) {
		var tools = [];
		menu.forEach(function (item) {
			tools = tools.concat(item.menu);
		});

		index = tools.indexOf(visibleTools[menuName]); // second level. example: `bond: bond-any`
	}

	return index !== -1 ? { marginTop: -(iconHeight * index) + 'px' } : {};
}

function openHandle(event, onOpen) {
	var hiddenEl = (0, _toolbar.hiddenAncestor)(event.currentTarget);
	var isSelected = event.currentTarget.classList.contains('selected');

	onOpen(hiddenEl && hiddenEl.id, isSelected);
	event.stopPropagation();
}

exports.default = ActionMenu;

},{"../action":604,"../state/toolbar":680,"./view/icon":630,"classnames":2,"preact":485}],615:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.actions = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.exec = exec;

var _preact = require('preact');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ***************************************************************************/

var ieCb = window.clipboardData;

var ClipArea = function (_Component) {
	_inherits(ClipArea, _Component);

	function ClipArea() {
		_classCallCheck(this, ClipArea);

		return _possibleConstructorReturn(this, (ClipArea.__proto__ || Object.getPrototypeOf(ClipArea)).apply(this, arguments));
	}

	_createClass(ClipArea, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _this2 = this;

			var el = this.base;
			this.target = this.props.target || el.parentNode;

			this.listeners = {
				mouseup: function mouseup(event) {
					if (_this2.props.focused() && !isFormElement(event.target)) autofocus(el);
				},
				mousedown: function mousedown(event) {
					if (event.shiftKey && !isFormElement(event.target)) event.preventDefault();
				},
				copy: function copy(event) {
					if (_this2.props.focused() && _this2.props.onCopy) {
						var data = _this2.props.onCopy();

						if (data) _copy(event.clipboardData, data);

						event.preventDefault();
					}
				},
				cut: function cut(event) {
					if (_this2.props.focused() && _this2.props.onCut) {
						var data = _this2.props.onCut();

						if (data) _copy(event.clipboardData, data);

						event.preventDefault();
					}
				},
				paste: function paste(event) {
					if (_this2.props.focused() && _this2.props.onPaste) {
						var data = _paste(event.clipboardData, _this2.props.formats);

						if (data) _this2.props.onPaste(data);

						event.preventDefault();
					}
				}
			};

			Object.keys(this.listeners).forEach(function (en) {
				_this2.target.addEventListener(en, _this2.listeners[en]);
			});
		}
	}, {
		key: 'shouldComponentUpdate',
		value: function shouldComponentUpdate() {
			return false;
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			var _this3 = this;

			Object.keys(this.listeners).forEach(function (en) {
				_this3.target.removeEventListener(en, _this3.listeners[en]);
			});
		}
	}, {
		key: 'render',
		value: function render() {
			return (0, _preact.h)('textarea', {
				className: 'cliparea',
				contentEditable: true,
				autoFocus: true // eslint-disable-line jsx-a11y/no-autofocus
			});
		}
	}]);

	return ClipArea;
}(_preact.Component);

function isFormElement(el) {
	if (el.tagName === 'INPUT' && el.type === 'button') return false;
	return ['INPUT', 'SELECT', 'TEXTAREA', 'OPTION', 'LABEL'].includes(el.tagName);
}

function autofocus(cliparea) {
	cliparea.value = ' ';
	cliparea.focus();
	cliparea.select();
}

function _copy(cb, data) {
	if (!cb && ieCb) {
		ieCb.setData('text', data['text/plain']);
	} else {
		var curFmt = null;
		cb.setData('text/plain', data['text/plain']);
		try {
			Object.keys(data).forEach(function (fmt) {
				curFmt = fmt;
				cb.setData(fmt, data[fmt]);
			});
		} catch (ex) {
			console.info('Could not write exact type ' + curFmt);
		}
	}
}

function _paste(cb, formats) {
	var data = {};
	if (!cb && ieCb) {
		data['text/plain'] = ieCb.getData('text');
	} else {
		data['text/plain'] = cb.getData('text/plain');
		data = formats.reduce(function (res, fmt) {
			var d = cb.getData(fmt);
			if (d) res[fmt] = d;
			return res;
		}, data);
	}
	return data;
}

var actions = exports.actions = ['cut', 'copy', 'paste'];

function exec(action) {
	var enabled = document.queryCommandSupported(action);
	if (enabled) {
		try {
			enabled = document.execCommand(action) || window.ClipboardEvent || ieCb;
		} catch (ex) {
			// FF < 41
			enabled = false;
		}
	}
	return enabled;
}

exports.default = ClipArea;

},{"preact":485}],616:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _preact = require('preact');

var _w3cKeyname = require('w3c-keyname');

var _w3cKeyname2 = _interopRequireDefault(_w3cKeyname);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.


var Dialog = function (_Component) {
	_inherits(Dialog, _Component);

	function Dialog() {
		_classCallCheck(this, Dialog);

		return _possibleConstructorReturn(this, (Dialog.__proto__ || Object.getPrototypeOf(Dialog)).apply(this, arguments));
	}

	_createClass(Dialog, [{
		key: 'exit',
		value: function exit(mode) {
			var _props = this.props,
			    params = _props.params,
			    _props$result = _props.result,
			    result = _props$result === undefined ? function () {
				return null;
			} : _props$result,
			    _props$valid = _props.valid,
			    valid = _props$valid === undefined ? function () {
				return !!result();
			} : _props$valid;

			var key = mode === 'OK' ? 'onOk' : 'onCancel';
			if (params && key in params && (key !== 'onOk' || valid())) params[key](result());
		}
	}, {
		key: 'keyDown',
		value: function keyDown(ev) {
			var key = (0, _w3cKeyname2.default)(ev);
			var active = document.activeElement;
			var activeTextarea = active && active.tagName === 'TEXTAREA';
			if (key === 'Escape' || key === 'Enter' && !activeTextarea) {
				this.exit(key === 'Enter' ? 'OK' : 'Cancel');
				ev.preventDefault();
			}
			ev.stopPropagation();
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {
			var fe = this.base.querySelector(['input:not([type=checkbox]):not([type=button])', 'textarea', '[contenteditable]', 'select'].join(',')) || this.base.querySelector(['button.close'].join(','));
			console.assert(fe, 'No active buttons');
			if (fe.focus) fe.focus();
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			(document.querySelector('.cliparea') || document.body).focus();
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props2 = this.props,
			    children = _props2.children,
			    title = _props2.title,
			    _props2$params = _props2.params,
			    params = _props2$params === undefined ? {} : _props2$params,
			    _props2$result = _props2.result,
			    result = _props2$result === undefined ? function () {
				return null;
			} : _props2$result,
			    _props2$valid = _props2.valid,
			    valid = _props2$valid === undefined ? function () {
				return !!result();
			} : _props2$valid,
			    _props2$buttons = _props2.buttons,
			    buttons = _props2$buttons === undefined ? ['Cancel', 'OK'] : _props2$buttons,
			    props = _objectWithoutProperties(_props2, ['children', 'title', 'params', 'result', 'valid', 'buttons']); // see: https://git.io/v1KR6


			return (0, _preact.h)(
				'form',
				_extends({
					role: 'dialog',
					onSubmit: function onSubmit(ev) {
						return ev.preventDefault();
					},
					onKeyDown: function onKeyDown(ev) {
						return _this2.keyDown(ev);
					},
					tabIndex: '-1'
				}, props),
				(0, _preact.h)(
					'header',
					null,
					title,
					params.onCancel && title && (0, _preact.h)(
						'button',
						{
							className: 'close',
							onClick: function onClick() {
								return _this2.exit('Cancel');
							}
						},
						'\xD7'
					)
				),
				children,
				(0, _preact.h)(
					'footer',
					null,
					buttons.map(function (b) {
						return typeof b !== 'string' ? b : (0, _preact.h)('input', {
							type: 'button',
							value: b,
							disabled: b === 'OK' && !valid(),
							onClick: function onClick() {
								return _this2.exit(b);
							}
						});
					})
				)
			);
		}
	}]);

	return Dialog;
}(_preact.Component);

exports.default = Dialog;

},{"preact":485,"w3c-keyname":516}],617:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _xor2 = require('lodash/fp/xor');

var _xor3 = _interopRequireDefault(_xor2);

var _preact = require('preact');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function oneOrMore(multipl, values, item) {
	if (multipl) return (0, _xor3.default)(values, [item]);
	return (0, _xor3.default)(values, values.concat([item]));
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/


function ButtonList(_ref) {
	var value = _ref.value,
	    onChange = _ref.onChange,
	    schema = _ref.schema,
	    disabledIds = _ref.disabledIds,
	    multiple = _ref.multiple;

	var className = void 0;
	return (0, _preact.h)(
		'ul',
		null,
		schema.items.enum.map(function (item, i) {
			className = value.includes(item) ? 'selected' : '';
			return (0, _preact.h)(
				'li',
				null,
				(0, _preact.h)(
					'button',
					{
						disabled: disabledIds.includes(item),
						type: 'button',
						className: className,
						onClick: function onClick() {
							return onChange(oneOrMore(multiple, value, item));
						}
					},
					schema.items.enumNames[i]
				)
			);
		})
	);
}

exports.default = ButtonList;

},{"lodash/fp/xor":438,"preact":485}],618:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _preact = require('preact');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.


var ComboBox = function (_Component) {
	_inherits(ComboBox, _Component);

	function ComboBox(props) {
		_classCallCheck(this, ComboBox);

		var _this = _possibleConstructorReturn(this, (ComboBox.__proto__ || Object.getPrototypeOf(ComboBox)).call(this, props));

		_this.state = {
			suggestsHidden: true
		};

		_this.click = _this.click.bind(_this);
		_this.blur = _this.blur.bind(_this);
		_this.updateInput = _this.updateInput.bind(_this);
		return _this;
	}

	_createClass(ComboBox, [{
		key: 'updateInput',
		value: function updateInput(event) {
			var value = event.target.value || event.target.textContent;
			this.setState({ suggestsHidden: true });
			this.props.onChange(value);
		}
	}, {
		key: 'click',
		value: function click() {
			this.setState({ suggestsHidden: false });
		}
	}, {
		key: 'blur',
		value: function blur() {
			this.setState({ suggestsHidden: true });
		}
	}, {
		key: 'render',
		value: function render(props) {
			var _this2 = this;

			var value = props.value,
			    _props$type = props.type,
			    type = _props$type === undefined ? 'text' : _props$type,
			    schema = props.schema;


			var suggestList = schema.enumNames.filter(function (item) {
				return item !== value;
			}).map(function (item) {
				return (0, _preact.h)(
					'li',
					{ onMouseDown: _this2.updateInput },
					item
				);
			});

			return (0, _preact.h)(
				'div',
				null,
				(0, _preact.h)('input', {
					type: type,
					value: value,
					onClick: this.click,
					onBlur: this.blur,
					onInput: this.updateInput,
					autoComplete: 'off'
				}),
				suggestList.length !== 0 ? (0, _preact.h)(
					'ui',
					{
						className: 'suggestList',
						style: 'display: ' + (this.state.suggestsHidden ? 'none' : 'block')
					},
					suggestList
				) : ''
			);
		}
	}]);

	return ComboBox;
}(_preact.Component);

exports.default = ComboBox;

},{"preact":485}],619:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.SelectOneOf = exports.Field = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _jsonschema = require('jsonschema');

var _jsonschema2 = _interopRequireDefault(_jsonschema);

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _input = require('./input');

var _input2 = _interopRequireDefault(_input);

var _form = require('../../state/modal/form');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.


var Form = function (_Component) {
	_inherits(Form, _Component);

	function Form(_ref) {
		var onUpdate = _ref.onUpdate,
		    schema = _ref.schema,
		    init = _ref.init,
		    props = _objectWithoutProperties(_ref, ['onUpdate', 'schema', 'init']);

		_classCallCheck(this, Form);

		var _this = _possibleConstructorReturn(this, (Form.__proto__ || Object.getPrototypeOf(Form)).call(this));

		_this.schema = propSchema(schema, props);

		if (init) {
			var _this$schema$serializ = _this.schema.serialize(init),
			    valid = _this$schema$serializ.valid,
			    errors = _this$schema$serializ.errors;

			var errs = getErrorsObj(errors);

			init = Object.assign({}, init, { init: true });
			onUpdate(init, valid, errs);
		}
		return _this;
	}

	_createClass(Form, [{
		key: 'updateState',
		value: function updateState(newstate) {
			var _schema$serialize = this.schema.serialize(newstate),
			    instance = _schema$serialize.instance,
			    valid = _schema$serialize.valid,
			    errors = _schema$serialize.errors;

			var errs = getErrorsObj(errors);
			this.props.onUpdate(instance, valid, errs);
		}
	}, {
		key: 'getChildContext',
		value: function getChildContext() {
			var schema = this.props.schema;

			return { schema: schema, stateStore: this };
		}
	}, {
		key: 'field',
		value: function field(name, _onChange) {
			var _props = this.props,
			    result = _props.result,
			    errors = _props.errors;

			var value = result[name];
			var self = this;
			return {
				dataError: errors && errors[name] || false,
				value: value,
				onChange: function onChange(val) {
					var newstate = Object.assign({}, self.props.result, _defineProperty({}, name, val));
					self.updateState(newstate);
					if (_onChange) _onChange(val);
				}
			};
		}
	}, {
		key: 'render',
		value: function render(props) {
			var result = props.result,
			    errors = props.errors,
			    init = props.init,
			    children = props.children,
			    schema = props.schema,
			    prop = _objectWithoutProperties(props, ['result', 'errors', 'init', 'children', 'schema']);

			if (schema.key && schema.key !== this.schema.key) {
				this.schema = propSchema(schema, prop);
				this.schema.serialize(result); // hack: valid first state
				this.updateState(result);
			}

			return (0, _preact.h)(
				'form',
				prop,
				children
			);
		}
	}]);

	return Form;
}(_preact.Component);

exports.default = (0, _preactRedux.connect)(null, function (dispatch) {
	return {
		onUpdate: function onUpdate(result, valid, errors) {
			dispatch((0, _form.updateFormState)({ result: result, valid: valid, errors: errors }));
		}
	};
})(Form);


function Label(_ref2) {
	var labelPos = _ref2.labelPos,
	    title = _ref2.title,
	    children = _ref2.children,
	    props = _objectWithoutProperties(_ref2, ['labelPos', 'title', 'children']);

	return (0, _preact.h)(
		'label',
		props,
		title && labelPos !== 'after' ? title + ':' : '',
		children,
		title && labelPos === 'after' ? title : ''
	);
}

function Field(props) {
	var name = props.name,
	    onChange = props.onChange,
	    className = props.className,
	    component = props.component,
	    labelPos = props.labelPos,
	    prop = _objectWithoutProperties(props, ['name', 'onChange', 'className', 'component', 'labelPos']);

	var _context = this.context,
	    schema = _context.schema,
	    stateStore = _context.stateStore;

	var desc = prop.schema || schema.properties[name];

	var _stateStore$field = stateStore.field(name, onChange),
	    dataError = _stateStore$field.dataError,
	    fieldOpts = _objectWithoutProperties(_stateStore$field, ['dataError']);

	var formField = component ? (0, _preact.h)(component, _extends({}, fieldOpts, prop, { schema: desc })) : (0, _preact.h)(_input2.default, _extends({
		name: name,
		schema: desc
	}, fieldOpts, prop));

	if (labelPos === false) return formField;
	return (0, _preact.h)(
		Label,
		{
			className: className,
			'data-error': dataError,
			title: prop.title || desc.title,
			labelPos: labelPos
		},
		formField
	);
}

var SelectOneOf = function SelectOneOf(props) {
	var title = props.title,
	    name = props.name,
	    schema = props.schema,
	    prop = _objectWithoutProperties(props, ['title', 'name', 'schema']);

	var selectDesc = {
		title: title,
		enum: [],
		enumNames: []
	};

	Object.keys(schema).forEach(function (item) {
		selectDesc.enum.push(item);
		selectDesc.enumNames.push(schema[item].title || item);
	});

	return (0, _preact.h)(Field, _extends({ name: name, schema: selectDesc }, prop));
};

//

function propSchema(schema, _ref3) {
	var customValid = _ref3.customValid,
	    _ref3$serialize = _ref3.serialize,
	    _serialize = _ref3$serialize === undefined ? {} : _ref3$serialize,
	    _ref3$deserialize = _ref3.deserialize,
	    _deserialize = _ref3$deserialize === undefined ? {} : _ref3$deserialize;

	var v = new _jsonschema2.default.Validator();

	if (customValid) {
		schema = Object.assign({}, schema); // copy
		schema.properties = Object.keys(customValid).reduce(function (res, prop) {
			v.customFormats[prop] = customValid[prop];
			res[prop] = _extends({ format: prop }, res[prop]);
			return res;
		}, schema.properties);
	}

	return {
		key: schema.key || '',
		serialize: function serialize(inst) {
			return v.validate(inst, schema, {
				rewrite: serializeRewrite.bind(null, _serialize)
			});
		},
		deserialize: function deserialize(inst) {
			return v.validate(inst, schema, {
				rewrite: deserializeRewrite.bind(null, _deserialize)
			});
		}
	};
}

function serializeRewrite(serializeMap, instance, schema) {
	var res = {};
	if ((typeof instance === 'undefined' ? 'undefined' : _typeof(instance)) !== 'object' || !schema.properties) {
		return instance !== undefined ? instance : schema.default;
	}

	Object.keys(schema.properties).forEach(function (p) {
		if (p in instance) res[p] = instance[serializeMap[p]] || instance[p];
	});

	return res;
}

function deserializeRewrite(deserializeMap, instance) {
	return instance;
}

function getInvalidMessage(item) {
	if (!item.schema.invalidMessage) return item.message;
	return typeof item.schema.invalidMessage === 'function' ? item.schema.invalidMessage(item.instance) : item.schema.invalidMessage;
}

function getErrorsObj(errors) {
	var errs = {};
	var field = void 0;

	errors.forEach(function (item) {
		field = item.property.split('.')[1];
		if (!errs[field]) errs[field] = getInvalidMessage(item);
	});

	return errs;
}

exports.Field = Field;
exports.SelectOneOf = SelectOneOf;

},{"../../state/modal/form":672,"./input":620,"jsonschema":199,"preact":485,"preact-redux":484}],620:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _omit2 = require('lodash/omit');

var _omit3 = _interopRequireDefault(_omit2);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _preact = require('preact');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

function GenericInput(_ref) {
	var schema = _ref.schema,
	    value = _ref.value,
	    onChange = _ref.onChange,
	    _ref$type = _ref.type,
	    type = _ref$type === undefined ? 'text' : _ref$type,
	    props = _objectWithoutProperties(_ref, ['schema', 'value', 'onChange', 'type']);

	return (0, _preact.h)('input', _extends({ type: type, value: value, onInput: onChange }, props));
}

GenericInput.val = function (ev, schema) {
	var input = ev.target;
	var isNumber = input.type === 'number' || input.type === 'range' || schema && (schema.type === 'number' || schema.type === 'integer');
	var value = isNumber ? input.value.replace(/,/g, '.') : input.value;

	return isNumber && !isNaN(value - 0) ? value - 0 : value; // eslint-disable-line
};

function TextArea(_ref2) {
	var schema = _ref2.schema,
	    value = _ref2.value,
	    onChange = _ref2.onChange,
	    props = _objectWithoutProperties(_ref2, ['schema', 'value', 'onChange']);

	return (0, _preact.h)('textarea', _extends({ value: value, onInput: onChange }, props));
}

TextArea.val = function (ev) {
	return ev.target.value;
};

function CheckBox(_ref3) {
	var schema = _ref3.schema,
	    value = _ref3.value,
	    onChange = _ref3.onChange,
	    props = _objectWithoutProperties(_ref3, ['schema', 'value', 'onChange']);

	return (0, _preact.h)('input', _extends({ type: 'checkbox', checked: value, onClick: onChange }, props));
}

CheckBox.val = function (ev) {
	ev.stopPropagation();
	return !!ev.target.checked;
};

function Select(_ref4) {
	var schema = _ref4.schema,
	    value = _ref4.value,
	    selected = _ref4.selected,
	    onSelect = _ref4.onSelect,
	    props = _objectWithoutProperties(_ref4, ['schema', 'value', 'selected', 'onSelect']);

	return (0, _preact.h)(
		'select',
		_extends({ onChange: onSelect }, props),
		enumSchema(schema, function (title, val) {
			return (0, _preact.h)(
				'option',
				{
					selected: selected(val, value),
					value: (typeof val === 'undefined' ? 'undefined' : _typeof(val)) !== 'object' && val
				},
				title
			);
		})
	);
}

Select.val = function (ev, schema) {
	var select = ev.target;
	if (!select.multiple) return enumSchema(schema, select.selectedIndex);

	return [].reduce.call(select.options, function (res, o, i) {
		return !o.selected ? res : [enumSchema(schema, i)].concat(_toConsumableArray(res));
	}, []);
};

function FieldSet(_ref5) {
	var schema = _ref5.schema,
	    value = _ref5.value,
	    selected = _ref5.selected,
	    onSelect = _ref5.onSelect,
	    _ref5$type = _ref5.type,
	    type = _ref5$type === undefined ? 'radio' : _ref5$type,
	    props = _objectWithoutProperties(_ref5, ['schema', 'value', 'selected', 'onSelect', 'type']);

	return (0, _preact.h)(
		'fieldset',
		{ onClick: onSelect, className: 'radio' },
		enumSchema(schema, function (title, val) {
			return (0, _preact.h)(
				'li',
				null,
				(0, _preact.h)(
					'label',
					null,
					(0, _preact.h)('input', _extends({
						type: type,
						checked: selected(val, value),
						value: (typeof val === 'undefined' ? 'undefined' : _typeof(val)) !== 'object' && val
					}, props)),
					title
				)
			);
		})
	);
}

FieldSet.val = function (ev, schema) {
	var input = ev.target;
	if (ev.target.tagName !== 'INPUT') {
		ev.stopPropagation();
		return undefined;
	}
	// Hm.. looks like premature optimization
	//      should we inline this?
	var fieldset = input.parentNode.parentNode.parentNode;
	var result = [].reduce.call(fieldset.querySelectorAll('input'), function (res, inp, i) {
		return !inp.checked ? res : [enumSchema(schema, i)].concat(_toConsumableArray(res));
	}, []);
	return input.type === 'radio' ? result[0] : result;
};

function enumSchema(schema, cbOrIndex) {
	var isTypeValue = Array.isArray(schema);
	if (!isTypeValue && schema.items) schema = schema.items;

	if (typeof cbOrIndex === 'function') {
		return (isTypeValue ? schema : schema.enum).map(function (item, i) {
			var title = isTypeValue ? item.title : schema.enumNames && schema.enumNames[i];
			return cbOrIndex(title !== undefined ? title : item, item.value !== undefined ? item.value : item);
		});
	}

	if (!isTypeValue) return schema.enum[cbOrIndex];

	var res = schema[cbOrIndex];
	return res.value !== undefined ? res.value : res;
}

function inputCtrl(component, schema, _onChange) {
	var props = {};
	if (schema) {
		// TODO: infer maxLength, min, max, step, etc
		if (schema.type === 'number' || schema.type === 'integer') props = { type: 'text' };
	}

	return _extends({
		onChange: function onChange(ev) {
			var val = !component.val ? ev : component.val(ev, schema);
			_onChange(val);
		}
	}, props);
}

function singleSelectCtrl(component, schema, onChange) {
	return {
		selected: function selected(testVal, value) {
			return value === testVal;
		},
		onSelect: function onSelect(ev) {
			var val = !component.val ? ev : component.val(ev, schema);
			if (val !== undefined) onChange(val);
		}
	};
}

function multipleSelectCtrl(component, schema, onChange) {
	return {
		multiple: true,
		selected: function selected(testVal, values) {
			return values && values.indexOf(testVal) >= 0;
		},
		onSelect: function onSelect(ev, values) {
			if (component.val) {
				var val = component.val(ev, schema);
				if (val !== undefined) onChange(val);
			} else {
				var i = values ? values.indexOf(ev) : -1;
				if (i < 0) onChange(values ? [ev].concat(_toConsumableArray(values)) : [ev]);else onChange([].concat(_toConsumableArray(values.slice(0, i)), _toConsumableArray(values.slice(i + 1))));
			}
		}
	};
}

function ctrlMap(component, _ref6) {
	var schema = _ref6.schema,
	    multiple = _ref6.multiple,
	    onChange = _ref6.onChange;

	if (!schema || !schema.enum && !schema.items && !Array.isArray(schema) || schema.type === 'string') return inputCtrl(component, schema, onChange);

	if (multiple || schema.type === 'array') return multipleSelectCtrl(component, schema, onChange);

	return singleSelectCtrl(component, schema, onChange);
}

function componentMap(_ref7) {
	var schema = _ref7.schema,
	    type = _ref7.type,
	    multiple = _ref7.multiple;

	if (!schema || !schema.enum && !schema.items && !Array.isArray(schema)) {
		if (type === 'checkbox' || schema && schema.type === 'boolean') return CheckBox;

		return type === 'textarea' ? TextArea : GenericInput;
	}
	if (multiple || schema.type === 'array') return type === 'checkbox' ? FieldSet : Select;

	return type === 'radio' ? FieldSet : Select;
}

function shallowCompare(a, b) {
	for (var i in a) {
		if (!(i in b)) return true;
	}for (var _i in b) {
		if (a[_i] !== b[_i]) return true;
	}return false;
}

var Input = function (_Component) {
	_inherits(Input, _Component);

	function Input(_ref8) {
		var component = _ref8.component,
		    props = _objectWithoutProperties(_ref8, ['component']);

		_classCallCheck(this, Input);

		var _this = _possibleConstructorReturn(this, (Input.__proto__ || Object.getPrototypeOf(Input)).call(this, props));

		_this.component = component || componentMap(props);
		_this.ctrl = ctrlMap(_this.component, props);
		return _this;
	}

	_createClass(Input, [{
		key: 'shouldComponentUpdate',
		value: function shouldComponentUpdate(_ref9) {
			var children = _ref9.children,
			    onChange = _ref9.onChange,
			    style = _ref9.style,
			    nextProps = _objectWithoutProperties(_ref9, ['children', 'onChange', 'style']);

			var oldProps = (0, _omit3.default)(this.props, ['children', 'onChange', 'style']);
			return shallowCompare(oldProps, nextProps);
		}
	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    children = _props.children,
			    onChange = _props.onChange,
			    props = _objectWithoutProperties(_props, ['children', 'onChange']);

			return (0, _preact.h)(this.component, _extends({}, this.ctrl, props));
		}
	}]);

	return Input;
}(_preact.Component);

exports.default = Input;

},{"lodash/omit":464,"preact":485}],621:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _preact = require('preact');

var _input = require('./input');

var _input2 = _interopRequireDefault(_input);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.



var MeasureInput = function (_Component) {
	_inherits(MeasureInput, _Component);

	function MeasureInput(props) {
		_classCallCheck(this, MeasureInput);

		var _this = _possibleConstructorReturn(this, (MeasureInput.__proto__ || Object.getPrototypeOf(MeasureInput)).call(this, props));

		_this.state = {
			cust: props.value || props.schema.default,
			meas: 'px'
		};

		_this.calcValue = _this.calcValue.bind(_this);
		_this.handleChange = _this.handleChange.bind(_this);
		_this.handleMeasChange = _this.handleMeasChange.bind(_this);
		return _this;
	}

	_createClass(MeasureInput, [{
		key: 'handleChange',
		value: function handleChange(value) {
			var convValue = convertValue(value, this.state.meas, 'px');
			this.state.cust = value;
			this.props.onChange(convValue);
		}
	}, {
		key: 'handleMeasChange',
		value: function handleMeasChange(m) {
			this.setState(function (state) {
				return {
					meas: m,
					cust: convertValue(state.cust, state.meas, m)
				};
			});
		}
	}, {
		key: 'calcValue',
		value: function calcValue() {
			var _this2 = this;

			this.setState(function (state) {
				return {
					cust: convertValue(_this2.props.value, 'px', state.meas)
				};
			});
		}
	}, {
		key: 'render',
		value: function render() {
			var _state = this.state,
			    meas = _state.meas,
			    cust = _state.cust;

			var _props = this.props,
			    schema = _props.schema,
			    value = _props.value,
			    onChange = _props.onChange,
			    props = _objectWithoutProperties(_props, ['schema', 'value', 'onChange']);

			if (meas === 'px' && cust.toFixed() - 0 !== value) this.setState({ meas: 'px', cust: value }); // Hack: Set init value (RESET)

			return (0, _preact.h)(
				'div',
				_extends({ style: { display: 'inline-flex' } }, props),
				(0, _preact.h)(_input2.default, {
					schema: schema,
					step: meas === 'px' || meas === 'pt' ? '1' : '0.001',
					style: { width: '75%' },
					value: cust,
					onChange: this.handleChange,
					onBlur: this.calcValue
				}),
				(0, _preact.h)(_input2.default, {
					schema: { enum: ['cm', 'px', 'pt', 'inch'] },
					style: { width: '25%' },
					value: meas,
					onChange: this.handleMeasChange
				})
			);
		}
	}]);

	return MeasureInput;
}(_preact.Component);

var measureMap = {
	px: 1,
	cm: 37.795278,
	pt: 1.333333,
	inch: 96
};

function convertValue(value, measureFrom, measureTo) {
	if (!value && value !== 0 || isNaN(value)) return null; // eslint-disable-line

	return measureTo === 'px' || measureTo === 'pt' ? (value * measureMap[measureFrom] / measureMap[measureTo]).toFixed() - 0 : (value * measureMap[measureFrom] / measureMap[measureTo]).toFixed(3) - 0;
}

exports.default = MeasureInput;

},{"./input":620,"preact":485}],622:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _preact = require('preact');

var _input = require('./input');

var _input2 = _interopRequireDefault(_input);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/


function SelectCheckbox(_ref) {
  var schema = _ref.schema,
      props = _objectWithoutProperties(_ref, ['schema']);

  var desc = {
    title: schema.title,
    enum: [true, false],
    enumNames: ['on', 'off']
  };
  return (0, _preact.h)(_input2.default, _extends({ schema: desc }, props));
}

exports.default = SelectCheckbox;

},{"./input":620,"preact":485}],623:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _preact = require('preact');

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

function SelectList(_ref) {
	var schema = _ref.schema,
	    value = _ref.value,
	    onSelect = _ref.onSelect,
	    splitIndexes = _ref.splitIndexes,
	    props = _objectWithoutProperties(_ref, ['schema', 'value', 'onSelect', 'splitIndexes']);

	return (0, _preact.h)(
		'ul',
		props,
		schema.enum.map(function (opt, index) {
			return (0, _preact.h)(
				'li',
				{
					onClick: function onClick() {
						return onSelect(opt, index);
					},
					className: (opt === value ? 'selected ' : '') + (isSplitIndex(index, splitIndexes) ? 'split' : '')
				},
				schema.enumNames ? schema.enumNames[index] : opt
			);
		})
	);
}

function isSplitIndex(index, splitIndexes) {
	return index > 0 && splitIndexes && splitIndexes.includes(index);
}

exports.default = SelectList;

},{"preact":485}],624:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _preact = require('preact');

var _fontFaceObserver = require('font-face-observer');

var _fontFaceObserver2 = _interopRequireDefault(_fontFaceObserver);

var _input = require('./input');

var _input2 = _interopRequireDefault(_input);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the 'License');
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an 'AS IS' BASIS,
either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ***************************************************************************/

var commonFonts = ['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', 'Georgia', 'Impact', 'Charcoal', 'Lucida Console', 'Monaco', 'Palatino Linotype', 'Book Antiqua', 'Palatino', 'Tahoma', 'Geneva', 'Times New Roman', 'Times', 'Verdana', 'Symbol', 'MS Serif', 'MS Sans Serif', 'New York', 'Droid Sans', 'Droid Serif', 'Droid Sans Mono', 'Roboto'];

function checkInSystem() {
	var availableFontsPromises = commonFonts.map(function (fontName) {
		var observer = new _fontFaceObserver2.default(fontName);
		return observer.check().then(function () {
			return fontName;
		}, function () {
			return null;
		});
	});

	return Promise.all(availableFontsPromises);
}

var cache = null;

var SystemFonts = function (_Component) {
	_inherits(SystemFonts, _Component);

	function SystemFonts(props) {
		_classCallCheck(this, SystemFonts);

		var _this = _possibleConstructorReturn(this, (SystemFonts.__proto__ || Object.getPrototypeOf(SystemFonts)).call(this, props));

		_this.state = { availableFonts: [subfontname(props.value)] };
		_this.setAvailableFonts();
		return _this;
	}

	_createClass(SystemFonts, [{
		key: 'setAvailableFonts',
		value: function setAvailableFonts() {
			var _this2 = this;

			if (cache) {
				this.setState({ availableFonts: cache });
			} else {
				checkInSystem().then(function (results) {
					cache = results.filter(function (i) {
						return i !== null;
					});
					_this2.setState({ availableFonts: cache });
				});
			}
		}
	}, {
		key: 'render',
		value: function render() {
			var props = _objectWithoutProperties(this.props, []);

			var desc = {
				enum: [],
				enumNames: []
			};

			this.state.availableFonts.forEach(function (font) {
				desc.enum.push('30px ' + font);
				desc.enumNames.push(font);
			});

			return desc.enum.length !== 1 ? (0, _preact.h)(_input2.default, _extends({}, props, { schema: desc })) : (0, _preact.h)(
				'select',
				null,
				(0, _preact.h)(
					'option',
					null,
					desc.enumNames[0]
				)
			);
		}
	}]);

	return SystemFonts;
}(_preact.Component);

function subfontname(name) {
	return name.substring(name.indexOf('px ') + 3);
}

exports.default = SystemFonts;

},{"./input":620,"font-face-observer":195,"preact":485}],625:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _preact = require('preact');

var _preactRedux = require('preact-redux');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MeasureLog = function (_Component) {
	_inherits(MeasureLog, _Component);

	function MeasureLog() {
		_classCallCheck(this, MeasureLog);

		return _possibleConstructorReturn(this, (MeasureLog.__proto__ || Object.getPrototypeOf(MeasureLog)).apply(this, arguments));
	}

	_createClass(MeasureLog, [{
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(props, oldProps) {
			var _this2 = this;

			if (!oldProps.editor && props.editor) {
				props.editor.event.message.add(function (msg) {
					if (msg.info) {
						_this2.base.innerHTML = msg.info;
						_this2.base.classList.add('visible');
					} else {
						_this2.base.classList.remove('visible');
					}
				});
			}
		}
	}, {
		key: 'render',
		value: function render() {
			return (0, _preact.h)('div', { className: 'measure-log' });
		}
	}]);

	return MeasureLog;
}(_preact.Component);

exports.default = (0, _preactRedux.connect)(function (state) {
	return {
		editor: state.editor
	};
})(MeasureLog);

},{"preact":485,"preact-redux":484}],626:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _upperFirst2 = require('lodash/fp/upperFirst');

var _upperFirst3 = _interopRequireDefault(_upperFirst2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _preact = require('preact');

var _measurelog = require('./measurelog');

var _measurelog2 = _interopRequireDefault(_measurelog);

var _editor = require('../../editor');

var _editor2 = _interopRequireDefault(_editor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.


function setupEditor(editor, props) {
	var oldProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	var struct = props.struct,
	    tool = props.tool,
	    toolOpts = props.toolOpts,
	    options = props.options;


	if (struct !== oldProps.struct) editor.struct(struct);

	if (tool !== oldProps.tool || toolOpts !== oldProps.toolOpts) editor.tool(tool, toolOpts);

	if (oldProps.options && options !== oldProps.options) editor.options(options);

	// update handlers
	Object.keys(editor.event).forEach(function (name) {
		var eventName = 'on' + (0, _upperFirst3.default)(name);

		if (props[eventName] !== oldProps[eventName]) {
			if (oldProps[eventName]) editor.event[name].remove(oldProps[eventName]);

			if (props[eventName]) editor.event[name].add(props[eventName]);
		}
	});
}

function removeEditorHandlers(editor, props) {
	Object.keys(editor.event).forEach(function (name) {
		var eventName = 'on' + (0, _upperFirst3.default)(name);

		if (props[eventName]) editor.event[name].remove(props[eventName]);
	});
}

var StructEditor = function (_Component) {
	_inherits(StructEditor, _Component);

	function StructEditor() {
		_classCallCheck(this, StructEditor);

		return _possibleConstructorReturn(this, (StructEditor.__proto__ || Object.getPrototypeOf(StructEditor)).apply(this, arguments));
	}

	_createClass(StructEditor, [{
		key: 'shouldComponentUpdate',
		value: function shouldComponentUpdate() {
			return false;
		}
	}, {
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(props) {
			setupEditor(this.instance, props, this.props);
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {
			console.assert(this.base, 'No backing element');
			this.instance = new _editor2.default(this.base, _extends({}, this.props.options));
			setupEditor(this.instance, this.props);
			if (this.props.onInit) this.props.onInit(this.instance);
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			removeEditorHandlers(this.instance, this.props);
		}
	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    _props$Tag = _props.Tag,
			    Tag = _props$Tag === undefined ? 'div' : _props$Tag,
			    struct = _props.struct,
			    tool = _props.tool,
			    toolOpts = _props.toolOpts,
			    options = _props.options,
			    props = _objectWithoutProperties(_props, ['Tag', 'struct', 'tool', 'toolOpts', 'options']);

			return (0, _preact.h)(
				Tag,
				_extends({ onMouseDown: function onMouseDown(ev) {
						return ev.preventDefault();
					} }, props),
				(0, _preact.h)(_measurelog2.default, null)
			);
		}
	}]);

	return StructEditor;
}(_preact.Component);

exports.default = StructEditor;

},{"../../editor":556,"./measurelog":625,"lodash/fp/upperFirst":436,"preact":485}],627:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /****************************************************************************
                                                                                                                                                                                                                                                                   * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                   * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                   * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                   * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                   * limitations under the License.
                                                                                                                                                                                                                                                                   ***************************************************************************/

var _preact = require('preact');

var _struct = require('../../chem/struct');

var _struct2 = _interopRequireDefault(_struct);

var _molfile = require('../../chem/molfile');

var _molfile2 = _interopRequireDefault(_molfile);

var _render = require('../../render');

var _render2 = _interopRequireDefault(_render);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function renderStruct(el, struct) {
	var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

	if (el) {
		if (struct.prerender) {
			// Should it sit here?
			el.innerHTML = struct.prerender;
		} else {
			console.info('render!', el.clientWidth, el.clientWidth);
			var rnd = new _render2.default(el, _extends({
				autoScale: true
			}, options));
			rnd.setMolecule(struct);
			rnd.update();
			// console.info('render!');//, el.innerHTML);
			// struct.prerender = el.innerHTML;
		}
	}
}

var StructRender = function (_Component) {
	_inherits(StructRender, _Component);

	function StructRender(props) {
		_classCallCheck(this, StructRender);

		var _this = _possibleConstructorReturn(this, (StructRender.__proto__ || Object.getPrototypeOf(StructRender)).call(this, props));

		if (!(props.struct instanceof _struct2.default)) {
			try {
				_this.props.struct = _molfile2.default.parse(props.struct);
			} catch (e) {
				alert('Could not parse structure\n' + e.message); // eslint-disable-line no-undef
				_this.props.struct = null;
			}
		}
		return _this;
	}

	_createClass(StructRender, [{
		key: 'shouldComponentUpdate',
		value: function shouldComponentUpdate() {
			return false;
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {
			var el = this.base;
			var _props = this.props,
			    struct = _props.struct,
			    options = _props.options;

			renderStruct(el, struct, options);
		}
	}, {
		key: 'render',
		value: function render() {
			var _props2 = this.props,
			    struct = _props2.struct,
			    _props2$Tag = _props2.Tag,
			    Tag = _props2$Tag === undefined ? 'div' : _props2$Tag,
			    props = _objectWithoutProperties(_props2, ['struct', 'Tag']);

			return (0, _preact.h)(
				Tag /* ref="el" */,
				props,
				struct ? null : 'No molecule'
			);
		}
	}]);

	return StructRender;
}(_preact.Component);

exports.default = StructRender;

},{"../../chem/molfile":523,"../../chem/struct":537,"../../render":586,"preact":485}],628:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _xor2 = require('lodash/fp/xor');

var _xor3 = _interopRequireDefault(_xor2);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _preact = require('preact');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.


var Accordion = function (_Component) {
	_inherits(Accordion, _Component);

	function Accordion(props) {
		_classCallCheck(this, Accordion);

		var _this = _possibleConstructorReturn(this, (Accordion.__proto__ || Object.getPrototypeOf(Accordion)).call(this, props));

		_this.state.active = props.active || [];
		return _this;
	}

	_createClass(Accordion, [{
		key: 'onActive',
		value: function onActive(index) {
			var _props$multiple = this.props.multiple,
			    multiple = _props$multiple === undefined ? true : _props$multiple;


			if (!multiple) this.setState({ active: [index] });else this.setState({ active: (0, _xor3.default)(this.state.active, [index]) });
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props = this.props,
			    children = _props.children,
			    captions = _props.captions,
			    props = _objectWithoutProperties(_props, ['children', 'captions']);

			var active = this.state.active;

			return (0, _preact.h)(
				'ul',
				props,
				captions.map(function (caption, index) {
					return (0, _preact.h)(
						'li',
						{ className: 'ac_tab ' + (active.includes(index) ? 'active' : 'hidden') },
						(0, _preact.h)(
							'a',
							{ // eslint-disable-line
								onClick: function onClick() {
									return _this2.onActive(index);
								}
							},
							caption
						),
						children[index]
					);
				})
			);
		}
	}]);

	return Accordion;
}(_preact.Component);

exports.default = Accordion;

},{"lodash/fp/xor":438,"preact":485}],629:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _preact = require('preact');

var _element = require('../../../chem/element');

var _element2 = _interopRequireDefault(_element);

var _elementColor = require('../../../chem/element-color');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

var metPrefix = ['alkali', 'alkaline-earth', 'transition', 'post-transition']; // 'lanthanide', 'actinide'

function atomClass(el) {
	var type = metPrefix.indexOf(el.type) >= 0 ? el.type + ' metal' : el.type || 'unknown-props';
	return [type, el.state || 'unknown-state', el.origin];
}

function Atom(_ref) {
	var el = _ref.el,
	    shortcut = _ref.shortcut,
	    className = _ref.className,
	    props = _objectWithoutProperties(_ref, ['el', 'shortcut', 'className']);

	return (0, _preact.h)(
		'button',
		_extends({
			title: shortcut ? el.title + ' (' + shortcut + ')' : el.title,
			className: [].concat(_toConsumableArray(atomClass(el)), [className]).join(' '),
			style: { color: _elementColor.sketchingColors[el.label] },
			value: _element2.default.map[el.label]
		}, props),
		(0, _preact.h)(
			'span',
			null,
			el.label
		)
	);
}

exports.default = Atom;

},{"../../../chem/element":520,"../../../chem/element-color":519,"preact":485}],630:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _preact = require('preact');

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

function Icon(_ref) {
  var name = _ref.name,
      props = _objectWithoutProperties(_ref, ['name']);

  return (0, _preact.h)(
    'svg',
    props,
    (0, _preact.h)('use', { xlinkHref: '#icon-' + name })
  );
}
exports.default = Icon;

},{"preact":485}],631:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _preact = require('preact');

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.


var OpenButton = function (_Component) {
	_inherits(OpenButton, _Component);

	function OpenButton(props) {
		_classCallCheck(this, OpenButton);

		var _this = _possibleConstructorReturn(this, (OpenButton.__proto__ || Object.getPrototypeOf(OpenButton)).call(this, props));

		if (props.server) {
			fileOpener(props.server).then(function (opener) {
				_this.setState({ opener: opener });
			});
		}
		return _this;
	}

	_createClass(OpenButton, [{
		key: 'open',
		value: function open(ev) {
			var files = ev.target.files;
			var noop = function noop() {
				return null;
			};
			var _props = this.props,
			    _props$onLoad = _props.onLoad,
			    onLoad = _props$onLoad === undefined ? noop : _props$onLoad,
			    _props$onError = _props.onError,
			    onError = _props$onError === undefined ? noop : _props$onError;


			if (this.state.opener && files.length) this.state.opener(files[0]).then(onLoad, onError);else if (files.length) onLoad(files[0]);
			ev.target.value = null;
			ev.preventDefault();
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props2 = this.props,
			    children = _props2.children,
			    type = _props2.type,
			    server = _props2.server,
			    _props2$className = _props2.className,
			    className = _props2$className === undefined ? 'open-button' : _props2$className,
			    props = _objectWithoutProperties(_props2, ['children', 'type', 'server', 'className']);

			return (0, _preact.h)(
				'button',
				_extends({ onClick: function onClick() {
						return _this2.btn.click();
					}, className: className }, props),
				(0, _preact.h)('input', {
					onChange: function onChange(ev) {
						return _this2.open(ev);
					},
					accept: type,
					type: 'file',
					ref: function ref(el) {
						_this2.btn = el;
					}
				}),
				children
			);
		}
	}]);

	return OpenButton;
}(_preact.Component);

function fileOpener(server) {
	return new Promise(function (resolve, reject) {
		// TODO: refactor return
		if (global.FileReader) {
			resolve(throughFileReader);
		} else if (global.ActiveXObject) {
			try {
				var fso = new ActiveXObject('Scripting.FileSystemObject'); // eslint-disable-line no-undef
				resolve(function (file) {
					return Promise.resolve(throughFileSystemObject(fso, file));
				});
			} catch (e) {
				reject(e);
			}
		} else if (server) {
			resolve(server.then(function () {
				throw Error("Server doesn't still support echo method");
				// return resolve(throughForm2IframePosting);
			}));
		} else {
			reject(new Error('Your browser does not support opening files locally'));
		}
	});
}

function throughFileReader(file) {
	return new Promise(function (resolve, reject) {
		var rd = new FileReader(); // eslint-disable-line no-undef

		rd.onload = function () {
			var content = rd.result;
			if (file.msClose) file.msClose();
			resolve(content);
		};

		rd.onerror = function (event) {
			reject(event);
		};

		rd.readAsText(file, 'UTF-8');
	});
}

function throughFileSystemObject(fso, file) {
	// IE9 and below
	var fd = fso.OpenTextFile(file.name, 1);
	var content = fd.ReadAll();
	fd.Close();
	return content;
}

exports.default = OpenButton;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"preact":485}],632:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _preact = require('preact');

var _filesaver = require('filesaver.js');

var _filesaver2 = _interopRequireDefault(_filesaver);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.


var SaveButton = function (_Component) {
	_inherits(SaveButton, _Component);

	function SaveButton(_ref) {
		var _ref$filename = _ref.filename,
		    filename = _ref$filename === undefined ? 'unnamed' : _ref$filename,
		    _ref$type = _ref.type,
		    type = _ref$type === undefined ? 'text/plain' : _ref$type,
		    _ref$className = _ref.className,
		    className = _ref$className === undefined ? '' : _ref$className,
		    props = _objectWithoutProperties(_ref, ['filename', 'type', 'className']);

		_classCallCheck(this, SaveButton);

		var _this = _possibleConstructorReturn(this, (SaveButton.__proto__ || Object.getPrototypeOf(SaveButton)).call(this, _extends({ filename: filename, type: type, className: className }, props)));

		fileSaver(props.server).then(function (saver) {
			_this.setState({ saver: saver });
		});
		return _this;
	}

	_createClass(SaveButton, [{
		key: 'save',
		value: function save(ev) {
			var noop = function noop() {
				return null;
			};
			var _props = this.props,
			    filename = _props.filename,
			    data = _props.data,
			    type = _props.type,
			    _props$onSave = _props.onSave,
			    onSave = _props$onSave === undefined ? noop : _props$onSave,
			    _props$onError = _props.onError,
			    onError = _props$onError === undefined ? noop : _props$onError;


			if (this.state.saver && data) {
				try {
					this.state.saver(data, filename, type);
					onSave();
				} catch (e) {
					onError(e);
				}
			}

			ev.preventDefault();
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props2 = this.props,
			    children = _props2.children,
			    filename = _props2.filename,
			    data = _props2.data,
			    _props2$className = _props2.className,
			    className = _props2$className === undefined ? 'save-button' : _props2$className,
			    props = _objectWithoutProperties(_props2, ['children', 'filename', 'data', 'className']);

			return (0, _preact.h)(
				'button',
				_extends({
					onClick: function onClick(ev) {
						return _this2.save(ev);
					},
					className: !this.state.saver || !data ? 'disabled ' + className : className
				}, props),
				children
			);
		}
	}]);

	return SaveButton;
}(_preact.Component);

function fileSaver(server) {
	return new Promise(function (resolve, reject) {
		if (global.Blob && _filesaver2.default.saveAs) {
			resolve(function (data, fn, type) {
				var blob = new Blob([data], { type: type }); // eslint-disable-line no-undef
				_filesaver2.default.saveAs(blob, fn);
			});
		} else if (server) {
			resolve(server.then(function () {
				throw Error("Server doesn't still support echo method");
			}));
		} else {
			reject(new Error('Your browser does not support opening files locally'));
		}
	});
}

exports.default = SaveButton;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"filesaver.js":193,"preact":485}],633:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _preact = require("preact");

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

function Spin(_ref) {
  var props = _objectWithoutProperties(_ref, []);

  return (0, _preact.h)("div", _extends({ className: "ket-spinner" }, props));
}

exports.default = Spin;

},{"preact":485}],634:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _preact = require('preact');

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.


var Tabs = function (_Component) {
	_inherits(Tabs, _Component);

	function Tabs(props) {
		_classCallCheck(this, Tabs);

		var _this = _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));

		_this.state.tabIndex = props.tabIndex || 0;
		_this.props.changeTab(_this.state.tabIndex);
		return _this;
	}

	_createClass(Tabs, [{
		key: 'changeTab',
		value: function changeTab(ev, index) {
			this.setState({ tabIndex: index });
			if (this.props.changeTab) this.props.changeTab(index);
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props = this.props,
			    children = _props.children,
			    captions = _props.captions,
			    props = _objectWithoutProperties(_props, ['children', 'captions']);

			return (0, _preact.h)(
				'ul',
				props,
				(0, _preact.h)(
					'li',
					{ className: 'tabs' },
					captions.map(function (caption, index) {
						return (0, _preact.h)(
							'a',
							{ // eslint-disable-line
								className: _this2.state.tabIndex === index ? 'active' : '',
								onClick: function onClick(ev) {
									return _this2.changeTab(ev, index);
								}
							},
							caption
						);
					})
				),
				(0, _preact.h)(
					'li',
					{ className: 'tabs-content' },
					children[this.state.tabIndex]
				)
			);
		}
	}]);

	return Tabs;
}(_preact.Component);

exports.default = Tabs;

},{"preact":485}],635:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _preact = require('preact');

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.


/** @jsx h */

var STYLE_INNER = 'position:relative; overflow:hidden; width:100%; min-height:100%;';

var STYLE_CONTENT = 'position:absolute; top:0; left:0; height:100%; width:100%; overflow:visible;';

var VirtualList = function (_Component) {
	_inherits(VirtualList, _Component);

	function VirtualList(props) {
		_classCallCheck(this, VirtualList);

		var _this = _possibleConstructorReturn(this, (VirtualList.__proto__ || Object.getPrototypeOf(VirtualList)).call(this, props));

		_this.resize = function (ev, reset) {
			var height = _this.base.offsetHeight;

			if (_this.state.height !== height) _this.setState({ height: height });

			if (reset) {
				_this.setState({ offset: 0 });
				_this.base.scrollTop = 0;
			}
		};

		_this.handleScroll = function () {
			_this.setState({ offset: _this.base.scrollTop });
			if (_this.props.sync) _this.forceUpdate();
		};

		_this.state = {
			offset: 0,
			height: 0
		};
		return _this;
	}

	_createClass(VirtualList, [{
		key: 'componentDidUpdate',
		value: function componentDidUpdate(_ref) {
			var data = _ref.data;

			var equal = data.length === this.props.data.length && this.props.data.every(function (v, i) {
				return v === data[i];
			});

			this.resize(null, !equal);
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {
			this.resize();
			addEventListener('resize', this.resize); // eslint-disable-line
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			removeEventListener('resize', this.resize); // eslint-disable-line
		}
	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    data = _props.data,
			    rowHeight = _props.rowHeight,
			    children = _props.children,
			    _props$Tag = _props.Tag,
			    Tag = _props$Tag === undefined ? 'div' : _props$Tag,
			    _props$overscanCount = _props.overscanCount,
			    overscanCount = _props$overscanCount === undefined ? 1 : _props$overscanCount,
			    sync = _props.sync,
			    props = _objectWithoutProperties(_props, ['data', 'rowHeight', 'children', 'Tag', 'overscanCount', 'sync']);

			var _state = this.state,
			    offset = _state.offset,
			    height = _state.height;

			// first visible row index

			var start = offset / rowHeight || 0;
			var renderRow = children[0];

			// actual number of visible rows (without overscan)
			var visibleRowCount = height / rowHeight || 0;

			// Overscan: render blocks of rows modulo an overscan row count
			// This dramatically reduces DOM writes during scrolling
			if (overscanCount) {
				start = Math.max(0, start - start % overscanCount);
				visibleRowCount += overscanCount;
			}

			// last visible + overscan row index
			var end = start + 1 + visibleRowCount;

			// data slice currently in viewport plus overscan items
			var selection = data.slice(start, end);

			return (0, _preact.h)(
				'div',
				_extends({ onScroll: this.handleScroll }, props),
				(0, _preact.h)(
					'div',
					{ style: STYLE_INNER + ' height:' + data.length * rowHeight + 'px;' },
					(0, _preact.h)(
						Tag,
						{ style: STYLE_CONTENT + ' top:' + start * rowHeight + 'px;' },
						selection.map(function (d, i) {
							return renderRow(d, start + i);
						})
					)
				)
			);
		}
	}]);

	return VirtualList;
}(_preact.Component);

exports.default = VirtualList;

},{"preact":485}],636:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /****************************************************************************
                                                                                                                                                                                                                                                                               * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                               * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                               * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                               * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                               *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                               * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                               * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                               * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                               * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                               * limitations under the License.
                                                                                                                                                                                                                                                                               ***************************************************************************/

var _w3cKeyname = require('w3c-keyname');

var _w3cKeyname2 = _interopRequireDefault(_w3cKeyname);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var mac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false; // eslint-disable-line no-undef

function normalizeKeyName(name) {
	var parts = name.split(/\+(?!$)/);
	var result = parts[parts.length - 1];
	if (result === 'Space') result = ' ';
	var alt = void 0;
	var ctrl = void 0;
	var shift = void 0;
	var meta = void 0;

	for (var i = 0; i < parts.length - 1; i++) {
		var mod = parts[i];
		if (/^(cmd|meta|m)$/i.test(mod)) meta = true;else if (/^a(lt)?$/i.test(mod)) alt = true;else if (/^(c|ctrl|control)$/i.test(mod)) ctrl = true;else if (/^s(hift)?$/i.test(mod)) shift = true;else if (/^mod$/i.test(mod)) {
			if (mac) meta = true;else ctrl = true;
		} else throw new Error('Unrecognized modifier name: ' + mod);
	}

	if (alt) result = 'Alt+' + result;
	if (ctrl) result = 'Ctrl+' + result;
	if (meta) result = 'Meta+' + result;
	if (shift) result = 'Shift+' + result;

	return result;
}

function normalizeKeyMap(map) {
	var copy = Object.create(null);

	Object.keys(map).forEach(function (prop) {
		copy[normalizeKeyName(prop)] = map[prop];
	});

	return copy;
}

function modifiers(name, event, shift) {
	if (event.altKey) name = 'Alt+' + name;
	if (event.ctrlKey) name = 'Ctrl+' + name;
	if (event.metaKey) name = 'Meta+' + name;
	if (shift !== false && event.shiftKey) name = 'Shift+' + name;

	return name;
}

function rusToEng(name, event) {
	return name.replace(/[а-я]/, _w3cKeyname2.default.base[event.keyCode]).replace(/[А-Я]/, _w3cKeyname2.default.shift[event.keyCode]);
}

function normalizeKeyEvent(event) {
	var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

	var name = rusToEng((0, _w3cKeyname2.default)(event), event);
	var isChar = name.length === 1 && name !== ' ';

	return isChar && !base ? modifiers(name, event, !isChar) : modifiers(_w3cKeyname2.default.base[event.keyCode], event, true);
}

function keyNorm(obj) {
	if (obj instanceof KeyboardEvent) // eslint-disable-line no-undef
		return normalizeKeyEvent.apply(undefined, arguments); // eslint-disable-line prefer-rest-params

	return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' ? normalizeKeyMap(obj) : normalizeKeyName(obj);
}

function lookup(map, event) {
	var name = rusToEng((0, _w3cKeyname2.default)(event), event);
	if (name === 'Add') name = '+'; // numpad '+' and '-'
	if (name === 'Subtract') name = '-';

	var isChar = name.length === 1 && name !== ' ';
	var res = map[modifiers(name, event, !isChar)];
	var baseName = void 0;

	if (event.shiftKey && isChar && (baseName = _w3cKeyname2.default.base[event.keyCode])) res = map[modifiers(baseName, event, true)] || res;

	return res;
}

keyNorm.lookup = lookup;

exports.default = keyNorm;

},{"w3c-keyname":516}],637:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _capitalize2 = require('lodash/fp/capitalize');

var _capitalize3 = _interopRequireDefault(_capitalize2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /****************************************************************************
                                                                                                                                                                                                                                                                   * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                   * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                   * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                   * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                   * limitations under the License.
                                                                                                                                                                                                                                                                   ***************************************************************************/

exports.fromElement = fromElement;
exports.toElement = toElement;
exports.fromBond = fromBond;
exports.toBond = toBond;
exports.toBondType = toBondType;
exports.fromSgroup = fromSgroup;
exports.toSgroup = toSgroup;

var _index = require('../../../chem/struct/index');

var _element = require('../../../chem/element');

var _element2 = _interopRequireDefault(_element);

var _sdataSchema = require('../schema/sdata-schema');

var _structSchema = require('../schema/struct-schema');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function fromElement(selem) {
	if (selem.label === 'R#') {
		return _extends({
			type: 'rlabel',
			values: fromRlabel(selem.rglabel)
		}, selem);
	}
	if (selem.label === 'L#') return fromAtomList(selem);

	if (_element2.default.map[selem.label]) return fromAtom(selem);

	if (!selem.label && 'attpnt' in selem) return { ap: fromApoint(selem.attpnt) };

	return selem; // probably generic
}

function toElement(elem) {
	if (elem.type === 'rlabel') {
		return {
			label: elem.values.length ? 'R#' : 'C',
			rglabel: elem.values.length === 0 ? null : toRlabel(elem.values)
		};
	}
	if (elem.type === 'list' || elem.type === 'not-list') return toAtomList(elem);

	if (!elem.label && 'ap' in elem) return { attpnt: toApoint(elem.ap) };

	if (_element2.default.map[(0, _capitalize3.default)(elem.label)]) return toAtom(elem);

	if (elem.label === 'A' || elem.label === '*' || elem.label === 'Q' || elem.label === 'X' || elem.label === 'R') {
		elem.pseudo = elem.label;
		return toAtom(elem);
	}

	return elem;
}

function fromAtom(satom) {
	var alias = satom.alias || '';
	var charge = satom.charge.toString();

	return {
		alias: alias,
		label: satom.label,
		charge: charge,
		isotope: satom.isotope,
		explicitValence: satom.explicitValence,
		radical: satom.radical,
		invRet: satom.invRet,
		exactChangeFlag: !!satom.exactChangeFlag,
		ringBondCount: satom.ringBondCount,
		substitutionCount: satom.substitutionCount,
		unsaturatedAtom: !!satom.unsaturatedAtom,
		hCount: satom.hCount
	};
}

function toAtom(atom) {
	// TODO merge this to Atom.attrlist?
	//      see ratomtool
	var chargeRegexp = _structSchema.atom.properties.charge.pattern;
	var pch = chargeRegexp.exec(atom.charge);
	var charge = pch ? parseInt(pch[1] + pch[3] + pch[2]) : atom.charge;

	var conv = Object.assign({}, atom, {
		label: (0, _capitalize3.default)(atom.label)
	});
	if (charge !== undefined) conv.charge = charge;
	return conv;
}

function fromAtomList(satom) {
	return {
		type: satom.atomList.notList ? 'not-list' : 'list',
		values: satom.atomList.ids.map(function (i) {
			return _element2.default[i].label;
		})
	};
}

function toAtomList(atom) {
	return {
		pseudo: null,
		label: 'L#',
		atomList: new _index.AtomList({
			notList: atom.type === 'not-list',
			ids: atom.values.map(function (el) {
				return _element2.default.map[el];
			})
		})
	};
}

function fromApoint(sap) {
	return {
		primary: ((sap || 0) & 1) > 0,
		secondary: ((sap || 0) & 2) > 0
	};
}

function toApoint(ap) {
	return (ap.primary && 1) + (ap.secondary && 2);
}

function fromRlabel(rg) {
	var res = [];
	var rgi = void 0;
	var val = void 0;
	for (rgi = 0; rgi < 32; rgi++) {
		if (rg & 1 << rgi) {
			val = rgi + 1;
			res.push(val); // push the string
		}
	}
	return res;
}

function toRlabel(values) {
	var res = 0;
	values.forEach(function (val) {
		var rgi = val - 1;
		res |= 1 << rgi;
	});
	return res;
}

function fromBond(sbond) {
	var type = sbond.type;
	var stereo = sbond.stereo;
	return {
		type: fromBondType(type, stereo),
		topology: sbond.topology || 0,
		center: sbond.reactingCenterStatus || 0
	};
}

function toBond(bond) {
	return _extends({
		topology: bond.topology,
		reactingCenterStatus: bond.center
	}, toBondType(bond.type));
}

function toBondType(caption) {
	return Object.assign({}, bondCaptionMap[caption]);
}

function fromBondType(type, stereo) {
	for (var caption in bondCaptionMap) {
		if (bondCaptionMap[caption].type === type && bondCaptionMap[caption].stereo === stereo) return caption;
	}
	throw Error('No such bond caption');
}

var bondCaptionMap = {
	single: {
		type: _index.Bond.PATTERN.TYPE.SINGLE,
		stereo: _index.Bond.PATTERN.STEREO.NONE
	},
	up: {
		type: _index.Bond.PATTERN.TYPE.SINGLE,
		stereo: _index.Bond.PATTERN.STEREO.UP
	},
	down: {
		type: _index.Bond.PATTERN.TYPE.SINGLE,
		stereo: _index.Bond.PATTERN.STEREO.DOWN
	},
	updown: {
		type: _index.Bond.PATTERN.TYPE.SINGLE,
		stereo: _index.Bond.PATTERN.STEREO.EITHER
	},
	double: {
		type: _index.Bond.PATTERN.TYPE.DOUBLE,
		stereo: _index.Bond.PATTERN.STEREO.NONE
	},
	crossed: {
		type: _index.Bond.PATTERN.TYPE.DOUBLE,
		stereo: _index.Bond.PATTERN.STEREO.CIS_TRANS
	},
	triple: {
		type: _index.Bond.PATTERN.TYPE.TRIPLE,
		stereo: _index.Bond.PATTERN.STEREO.NONE
	},
	aromatic: {
		type: _index.Bond.PATTERN.TYPE.AROMATIC,
		stereo: _index.Bond.PATTERN.STEREO.NONE
	},
	singledouble: {
		type: _index.Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE,
		stereo: _index.Bond.PATTERN.STEREO.NONE
	},
	singlearomatic: {
		type: _index.Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC,
		stereo: _index.Bond.PATTERN.STEREO.NONE
	},
	doublearomatic: {
		type: _index.Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC,
		stereo: _index.Bond.PATTERN.STEREO.NONE
	},
	any: {
		type: _index.Bond.PATTERN.TYPE.ANY,
		stereo: _index.Bond.PATTERN.STEREO.NONE
	}
};

function fromSgroup(ssgroup) {
	var type = ssgroup.type || 'GEN';
	var _ssgroup$attrs = ssgroup.attrs,
	    context = _ssgroup$attrs.context,
	    fieldName = _ssgroup$attrs.fieldName,
	    fieldValue = _ssgroup$attrs.fieldValue,
	    absolute = _ssgroup$attrs.absolute,
	    attached = _ssgroup$attrs.attached;


	if (absolute === false && attached === false) ssgroup.attrs.radiobuttons = 'Relative';else ssgroup.attrs.radiobuttons = attached ? 'Attached' : 'Absolute';

	if (_sdataSchema.sdataSchema[context][fieldName] && _sdataSchema.sdataSchema[context][fieldName].properties.fieldValue.items) ssgroup.attrs.fieldValue = fieldValue.split('\n');

	return Object.assign({ type: type }, ssgroup.attrs);
}

function toSgroup(sgroup) {
	var type = sgroup.type,
	    radiobuttons = sgroup.radiobuttons,
	    props = _objectWithoutProperties(sgroup, ['type', 'radiobuttons']);

	var attrs = _extends({}, props);

	var absolute = 'absolute';
	var attached = 'attached';

	switch (radiobuttons) {
		case 'Absolute':
			attrs[absolute] = true;
			attrs[attached] = false;
			break;
		case 'Attached':
			attrs[absolute] = false;
			attrs[attached] = true;
			break;
		case 'Relative':
			attrs[absolute] = false;
			attrs[attached] = false;
			break;
		default:
			break;
	}

	if (attrs.fieldName) attrs.fieldName = attrs.fieldName.trim();

	if (attrs.fieldValue) {
		attrs.fieldValue = typeof attrs.fieldValue === 'string' ? attrs.fieldValue.trim() : attrs.fieldValue;
	}

	return {
		type: type,
		attrs: attrs
	};
}

},{"../../../chem/element":520,"../../../chem/struct/index":537,"../schema/sdata-schema":641,"../schema/struct-schema":642,"lodash/fp/capitalize":418}],638:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.map = undefined;
exports.guess = guess;
exports.toString = toString;
exports.fromString = fromString;
exports.couldBeSaved = couldBeSaved;

var _molfile = require('../../../chem/molfile');

var _molfile2 = _interopRequireDefault(_molfile);

var _smiles = require('../../../chem/smiles');

var _smiles2 = _interopRequireDefault(_smiles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

var map = exports.map = {
	mol: {
		name: 'MDL Molfile',
		mime: 'chemical/x-mdl-molfile',
		ext: ['.mol'],
		supportsCoords: true
	},
	rxn: {
		name: 'MDL Rxnfile',
		mime: 'chemical/x-mdl-rxnfile',
		ext: ['.rxn'],
		supportsCoords: true
	},
	smiles: {
		name: 'Daylight SMILES',
		mime: 'chemical/x-daylight-smiles',
		ext: ['.smi', '.smiles']
	},
	'smiles-ext': {
		name: 'Extended SMILES',
		mime: 'chemical/x-chemaxon-cxsmiles',
		ext: ['.cxsmi', '.cxsmiles']
	},
	smarts: {
		name: 'Daylight SMARTS',
		mime: 'chemical/x-daylight-smarts',
		ext: ['.smarts']
	},
	inchi: {
		name: 'InChI',
		mime: 'chemical/x-inchi',
		ext: ['.inchi']
	},
	'inchi-aux': {
		name: 'InChI AuxInfo',
		mime: 'chemical/x-inchi-aux',
		ext: ['.inchi']
	},
	cml: {
		name: 'CML',
		mime: 'chemical/x-cml',
		ext: ['.cml', '.mrv'],
		supportsCoords: true
	}
};

function guess(structStr, strict) {
	// Mimic Indigo/molecule_auto_loader.cpp as much as possible
	var molStr = structStr.trim();

	if (molStr.indexOf('$RXN') !== -1) return 'rxn';

	var molMatch = molStr.match(/^(M {2}END|\$END MOL)$/m);

	if (molMatch) {
		var end = molMatch.index + molMatch[0].length;
		if (end === molStr.length || molStr.slice(end, end + 20).search(/^\$(MOL|END CTAB)$/m) !== -1) return 'mol';
	}
	if (molStr[0] === '<' && molStr.indexOf('<molecule') !== -1) return 'cml';

	if (molStr.slice(0, 5) === 'InChI') return 'inchi';

	if (molStr.indexOf('\n') === -1) // TODO: smiles regexp
		return 'smiles';

	// Molfile by default as Indigo does
	return strict ? null : 'mol';
}

function toString(struct, format, server, serverOpts) {
	console.assert(map[format], 'No such format');

	return new Promise(function (resolve) {
		var moldata = _molfile2.default.stringify(struct);
		if (format === 'mol' || format === 'rxn') {
			resolve(moldata);
		} else if (format === 'smiles') {
			resolve(_smiles2.default.stringify(struct));
		} else {
			var converting = server.then(function () {
				return server.convert({
					struct: moldata,
					output_format: map[format].mime
				}, serverOpts);
			}).catch(function (err) {
				throw err.message === 'Server is not compatible' ? Error(map[format].name + ' is not supported in standalone mode.') : Error('Convert error!\n' + err.message);
			}).then(function (res) {
				return res.struct;
			});
			resolve(converting);
		}
	});
}

function fromString(structStr, opts, server, serverOpts) {
	return new Promise(function (resolve) {
		var format = guess(structStr);
		console.assert(map[format], 'No such format');

		if (format === 'mol' || format === 'rxn') {
			var struct = _molfile2.default.parse(structStr, opts);
			resolve(struct);
		} else {
			var withCoords = map[format].supportsCoords;
			var converting = server.then(function () {
				return withCoords ? server.convert({
					struct: structStr,
					output_format: map['mol'].mime
				}, serverOpts) : server.layout({
					struct: structStr.trim(),
					output_format: map['mol'].mime
				}, serverOpts);
			}).catch(function (err) {
				if (err.message === 'Server is not compatible') {
					var formatError = format === 'smiles' ? map['smiles-ext'].name + ' and opening of ' + map['smiles'].name : map[format].name;
					throw Error(formatError + ' is not supported in standalone mode.');
				} else {
					throw Error('Convert error!\n' + err.message);
				}
			}).then(function (res) {
				var struct = _molfile2.default.parse(res.struct);
				if (!withCoords) struct.rescale();
				return struct;
			});
			resolve(converting);
		}
	});
}

function couldBeSaved(struct, format) {
	if (format === 'inchi' || format === 'smiles') {
		if (struct.rgroups.size !== 0) return 'In ' + map[format].name + ' the structure will be saved without R-group fragments';
		struct = struct.clone(); // need this: .getScaffold()
		var isRg = struct.atoms.find(function (ind, atom) {
			return atom.label === 'R#';
		});
		if (isRg !== null) return 'In ' + map[format].name + ' the structure will be saved without R-group members';

		var isSg = struct.sgroups.find(function (ind, sg) {
			return sg.type !== 'MUL' && !/^INDIGO_.+_DESC$/i.test(sg.data.fieldName);
		});
		if (isSg !== null) return 'In ' + map[format].name + ' the structure will be saved without S-groups';
	}
	return null;
}

},{"../../../chem/molfile":523,"../../../chem/smiles":532}],639:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.MIEW_OPTIONS = exports.SERVER_OPTIONS = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /****************************************************************************
                                                                                                                                                                                                                                                                   * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                   * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                   * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                   * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                   * limitations under the License.
                                                                                                                                                                                                                                                                   ***************************************************************************/

exports.getDefaultOptions = getDefaultOptions;
exports.validation = validation;

var _jsonschema = require('jsonschema');

var _jsonschema2 = _interopRequireDefault(_jsonschema);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var editor = {
	resetToSelect: {
		title: 'Reset to Select Tool',
		enum: [true, 'paste', false],
		enumNames: ['on', 'After Paste', 'off'],
		default: 'paste'
	},
	rotationStep: {
		title: 'Rotation Step, º',
		type: 'integer',
		minimum: 1,
		maximum: 90,
		default: 15
	}
};

var render = {
	showValenceWarnings: {
		title: 'Show valence warnings',
		type: 'boolean',
		default: true
	},
	atomColoring: {
		title: 'Atom coloring',
		type: 'boolean',
		default: true
	},
	hideChiralFlag: {
		title: 'Do not show the Chiral flag',
		type: 'boolean',
		default: false
	},
	font: {
		title: 'Font',
		type: 'string',
		default: '30px Arial'
	},
	fontsz: {
		title: 'Font size',
		type: 'integer',
		default: 13,
		minimum: 1,
		maximum: 96
	},
	fontszsub: {
		title: 'Sub font size',
		type: 'integer',
		default: 13,
		minimum: 1,
		maximum: 96
	},
	// Atom
	carbonExplicitly: {
		title: 'Display carbon explicitly',
		type: 'boolean',
		default: false
	},
	showCharge: {
		title: 'Display charge',
		type: 'boolean',
		default: true
	},
	showValence: {
		title: 'Display valence',
		type: 'boolean',
		default: true
	},
	showHydrogenLabels: {
		title: 'Show hydrogen labels',
		enum: ['off', 'Hetero', 'Terminal', 'Terminal and Hetero', 'on'],
		default: 'on'
	},
	// Bonds
	aromaticCircle: {
		title: 'Aromatic Bonds as circle',
		type: 'boolean',
		default: true
	},
	doubleBondWidth: {
		title: 'Double bond width',
		type: 'integer',
		default: 6,
		minimum: 1,
		maximum: 96
	},
	bondThickness: {
		title: 'Bond thickness',
		type: 'integer',
		default: 2,
		minimum: 1,
		maximum: 96
	},
	stereoBondWidth: {
		title: 'Stereo (Wedge) bond width',
		type: 'integer',
		default: 6,
		minimum: 1,
		maximum: 96
	}
};

var server = {
	'smart-layout': {
		title: 'Smart-layout',
		type: 'boolean',
		default: true
	},
	'ignore-stereochemistry-errors': {
		title: 'Ignore stereochemistry errors',
		type: 'boolean',
		default: true
	},
	'mass-skip-error-on-pseudoatoms': {
		title: 'Ignore pseudoatoms at mass',
		type: 'boolean',
		default: false
	},
	'gross-formula-add-rsites': {
		title: 'Add Rsites at mass calculation',
		type: 'boolean',
		default: true
	},
	'gross-formula-add-isotopes': {
		title: 'Add Isotopes at mass calculation',
		type: 'boolean',
		default: true
	}
};

var SERVER_OPTIONS = exports.SERVER_OPTIONS = Object.keys(server);

var debug = {
	showAtomIds: {
		title: 'Show atom Ids',
		type: 'boolean',
		default: false
	},
	showBondIds: {
		title: 'Show bonds Ids',
		type: 'boolean',
		default: false
	},
	showHalfBondIds: {
		title: 'Show half bonds Ids',
		type: 'boolean',
		default: false
	},
	showLoopIds: {
		title: 'Show loop Ids',
		type: 'boolean',
		default: false
	}
};

var miew = {
	miewMode: {
		title: 'Display mode',
		enum: ['LN', 'BS', 'LC'],
		enumNames: ['Lines', 'Balls and Sticks', 'Licorice'],
		default: 'LN'
	},
	miewTheme: {
		title: 'Background color',
		enum: ['light', 'dark'],
		enumNames: ['Light', 'Dark'],
		default: 'light'
	},
	miewAtomLabel: {
		title: 'Label coloring',
		enum: ['no', 'bright', 'blackAndWhite', 'black'],
		enumNames: ['No', 'Bright', 'Black and White', 'Black'],
		default: 'bright'
	}
};

var MIEW_OPTIONS = exports.MIEW_OPTIONS = Object.keys(miew);

var optionsSchema = {
	title: 'Settings',
	type: 'object',
	required: [],
	properties: _extends({}, editor, render, server, debug, miew)
};

exports.default = optionsSchema;
function getDefaultOptions() {
	return Object.keys(optionsSchema.properties).reduce(function (res, prop) {
		res[prop] = optionsSchema.properties[prop].default;
		return res;
	}, {});
}

function validation(settings) {
	if ((typeof settings === 'undefined' ? 'undefined' : _typeof(settings)) !== 'object' || settings === null) return null;

	var v = new _jsonschema2.default.Validator();

	var _v$validate = v.validate(settings, optionsSchema),
	    errors = _v$validate.errors;

	var errProps = errors.map(function (err) {
		return err.property.split('.')[1];
	});

	return Object.keys(settings).reduce(function (res, prop) {
		if (optionsSchema.properties[prop] && errProps.indexOf(prop) === -1) res[prop] = settings[prop];
		return res;
	}, {});
}

},{"jsonschema":199}],640:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.mapOf = mapOf;
exports.selectListOf = selectListOf;
/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

/* schema utils */
function constant(schema, prop) {
	var desc = schema.properties[prop];
	return desc.constant || desc.enum[0]; // see https://git.io/v6hyP
}

function mapOf(schema, prop) {
	console.assert(schema.oneOf);
	return schema.oneOf.reduce(function (res, desc) {
		res[constant(desc, prop)] = desc;
		return res;
	}, {});
}

function selectListOf(schema, prop) {
	var desc = schema.properties && schema.properties[prop];
	if (desc) {
		return desc.enum.map(function (value, i) {
			var title = desc.enumNames && desc.enumNames[i];
			return title ? { title: title, value: value } : value;
		});
	}
	return schema.oneOf.map(function (ds) {
		return !ds.title ? constant(ds, prop) : {
			title: ds.title,
			value: constant(ds, prop)
		};
	});
}

},{}],641:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.sdataSchema = exports.sdataCustomSchema = undefined;
exports.getSdataDefault = getSdataDefault;

var _schemaHelper = require('./schema-helper');

var radioButtonsSchema = {
	enum: ['Absolute', 'Relative', 'Attached'],
	default: 'Absolute'
}; /****************************************************************************
    * Copyright 2018 EPAM Systems
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *    http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    ***************************************************************************/

var contextSchema = {
	title: 'Context',
	enum: ['Fragment', 'Multifragment', 'Bond', 'Atom', 'Group'],
	default: 'Fragment'
};

var sData = {
	Fragment: {
		title: 'Fragment',
		type: 'Object',
		oneOf: [{
			key: 'FRG_STR',
			title: 'MDLBG_FRAGMENT_STEREO',
			properties: {
				type: { enum: ['DAT'] },
				fieldName: {
					title: 'Field name',
					enum: ['MDLBG_FRAGMENT_STEREO'],
					default: 'MDLBG_FRAGMENT_STEREO'
				},
				fieldValue: {
					title: 'Field value',
					type: 'array',
					items: {
						enum: ['abs', '(+)-enantiomer', '(-)-enantiomer', 'racemate', 'steric', 'rel', 'R(a)', 'S(a)', 'R(p)', 'S(p)']
					},
					default: ['abs']
				},
				radiobuttons: radioButtonsSchema
			},
			required: ['fieldName', 'fieldValue', 'radiobuttons']
		}, {
			key: 'FRG_COEFF',
			title: 'MDLBG_FRAGMENT_COEFFICIENT',
			properties: {
				type: { enum: ['DAT'] },
				fieldName: {
					title: 'Field name',
					enum: ['MDLBG_FRAGMENT_COEFFICIENT'],
					default: 'MDLBG_FRAGMENT_COEFFICIENT'
				},
				fieldValue: {
					title: 'Field value',
					type: 'string',
					default: '',
					minLength: 1,
					invalidMessage: 'Please, specify field name'
				},
				radiobuttons: radioButtonsSchema
			},
			required: ['fieldName', 'fieldValue', 'radiobuttons']
		}, {
			key: 'FRG_CHRG',
			title: 'MDLBG_FRAGMENT_CHARGE',
			properties: {
				type: { enum: ['DAT'] },
				fieldName: {
					title: 'Field name',
					enum: ['MDLBG_FRAGMENT_CHARGE'],
					default: 'MDLBG_FRAGMENT_CHARGE'
				},
				fieldValue: {
					title: 'Field value',
					type: 'string',
					default: '',
					minLength: 1,
					invalidMessage: 'Please, specify field name'
				},
				radiobuttons: radioButtonsSchema
			},
			required: ['fieldName', 'fieldValue', 'radiobuttons']
		}, {
			key: 'FRG_RAD',
			title: 'MDLBG_FRAGMENT_RADICALS',
			properties: {
				type: { enum: ['DAT'] },
				fieldName: {
					title: 'Field name',
					enum: ['MDLBG_FRAGMENT_RADICALS'],
					default: 'MDLBG_FRAGMENT_RADICALS'
				},
				fieldValue: {
					title: 'Field value',
					type: 'string',
					default: '',
					minLength: 1,
					invalidMessage: 'Please, specify field name'
				},
				radiobuttons: radioButtonsSchema
			},
			required: ['fieldName', 'fieldValue', 'radiobuttons']
		}]
	},
	Multifragment: {
		title: 'Multifragment',
		type: 'Object',
		oneOf: [{
			key: 'MLT_FRG',
			title: 'KETCHER_MULTIPLE_FRAGMENT',
			properties: {
				type: { enum: ['DAT'] },
				fieldName: {
					title: 'Field name',
					enum: ['KETCHER_MULTIPLE_FRAGMENT'],
					default: 'KETCHER_MULTIPLE_FRAGMENT'
				},
				fieldValue: {
					title: 'Field value',
					type: 'array',
					items: {
						enum: ['aerosol', 'alloy', 'catenane', 'complex', 'composite', 'co-polymer', 'emulsion', 'host-guest complex', 'mixture', 'rotaxane', 'suspension']
					},
					default: ['aerosol']
				},
				radiobuttons: radioButtonsSchema
			},
			required: ['fieldName', 'fieldValue', 'radiobuttons']
		}]
	},
	Bond: {
		title: 'Bond',
		type: 'Object',
		oneOf: [{
			key: 'SB_STR',
			title: 'MDLBG_STEREO_KEY',
			properties: {
				type: { enum: ['DAT'] },
				fieldName: {
					title: 'Field name',
					enum: ['MDLBG_STEREO_KEY'],
					default: 'MDLBG_STEREO_KEY'
				},
				fieldValue: {
					title: 'Field value',
					type: 'array',
					items: {
						enum: ['erythro', 'threo', 'alpha', 'beta', 'endo', 'exo', 'anti', 'syn', 'ECL', 'STG']
					},
					default: ['erythro']
				},
				radiobuttons: radioButtonsSchema
			},
			required: ['fieldName', 'fieldValue', 'radiobuttons']
		}, {
			key: 'SB_BND',
			title: 'MDLBG_BOND_KEY',
			properties: {
				type: { enum: ['DAT'] },
				fieldName: {
					title: 'Field name',
					enum: ['MDLBG_BOND_KEY'],
					default: 'MDLBG_BOND_KEY'
				},
				fieldValue: {
					title: 'Field value',
					type: 'array',
					items: {
						enum: ['Value=4']
					},
					default: ['Value=4']
				},
				radiobuttons: radioButtonsSchema
			},
			required: ['fieldName', 'fieldValue', 'radiobuttons']
		}]
	},
	Atom: {
		title: 'Atom',
		type: 'Object',
		oneOf: [{
			key: 'AT_STR',
			title: 'MDLBG_STEREO_KEY',
			properties: {
				type: { enum: ['DAT'] },
				fieldName: {
					title: 'Field name',
					enum: ['MDLBG_STEREO_KEY'],
					default: 'MDLBG_STEREO_KEY'
				},
				fieldValue: {
					title: 'Field value',
					type: 'array',
					items: {
						enum: ['RS', 'SR', 'P-3', 'P-3-PI', 'SP-4', 'SP-4-PI', 'T-4', 'T-4-PI', 'SP-5', 'SP-5-PI', 'TB-5', 'TB-5-PI', 'OC-6', 'TP-6', 'PB-7', 'CU-8', 'SA-8', 'DD-8', 'HB-9', 'TPS-9']
					},
					default: ['RS']
				},
				radiobuttons: radioButtonsSchema
			},
			required: ['fieldName', 'fieldValue', 'radiobuttons']
		}]
	},
	Group: {
		title: 'Group',
		type: 'Object',
		oneOf: [{
			key: 'GRP_STR',
			title: 'MDLBG_STEREO_KEY',
			properties: {
				type: { enum: ['DAT'] },
				fieldName: {
					title: 'Field name',
					enum: ['MDLBG_STEREO_KEY'],
					default: 'MDLBG_STEREO_KEY'
				},
				fieldValue: {
					title: 'Field value',
					type: 'array',
					items: {
						enum: ['cis', 'trans']
					},
					default: ['cis']
				},
				radiobuttons: radioButtonsSchema
			},
			required: ['fieldName', 'fieldValue', 'radiobuttons']
		}]
	}
};

var sdataCustomSchema = exports.sdataCustomSchema = {
	key: 'Custom',
	properties: {
		type: { enum: ['DAT'] },
		context: {
			title: 'Context',
			enum: ['Fragment', 'Multifragment', 'Bond', 'Atom', 'Group'],
			default: 'Fragment'
		},
		fieldName: {
			title: 'Field name',
			type: 'string',
			default: '',
			minLength: 1,
			invalidMessage: 'Please, specify field name'
		},
		fieldValue: {
			title: 'Field value',
			type: 'string',
			default: '',
			minLength: 1,
			invalidMessage: 'Please, specify field value'
		},
		radiobuttons: {
			enum: ['Absolute', 'Relative', 'Attached'],
			default: 'Absolute'
		}
	},
	required: ['context', 'fieldName', 'fieldValue', 'radiobuttons']
};

var sdataSchema = exports.sdataSchema = Object.keys(sData).reduce(function (acc, title) {
	acc[title] = (0, _schemaHelper.mapOf)(sData[title], 'fieldName');
	Object.keys(acc[title]).forEach(function (fieldName) {
		acc[title][fieldName].properties.context = contextSchema;
	});
	return acc;
}, {});

/**
 * Returns first key of passed object
 * @param obj { object }
 */
function firstKeyOf(obj) {
	return Object.keys(obj)[0];
}

/**
 * Returns schema default values. Depends on passed arguments:
 * pass schema only -> returns default context
 * pass schema & context -> returns default fieldName
 * pass schema & context & fieldName -> returns default fieldValue
 * @param context? { string }
 * @param fieldName? { string }
 * @returns { string }
 */
function getSdataDefault(context, fieldName) {
	if (!context && !fieldName) return firstKeyOf(sdataSchema);

	if (!fieldName) return firstKeyOf(sdataSchema[context]);

	return sdataSchema[context][fieldName] ? sdataSchema[context][fieldName].properties.fieldValue.default : '';
}

},{"./schema-helper":640}],642:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.rgroupLogic = exports.sgroupMap = exports.bond = exports.attachmentPoints = exports.labelEdit = exports.rgroupSchema = exports.atom = undefined;

var _range2 = require('lodash/fp/range');

var _range3 = _interopRequireDefault(_range2);

var _schemaHelper = require('./schema-helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var atom = exports.atom = {
	title: 'Atom',
	type: 'object',
	required: 'label',
	properties: {
		label: {
			title: 'Label',
			type: 'string', // TODO:should really be enum of elements
			maxLength: 3,
			invalidMessage: 'Wrong label'
		},
		alias: {
			title: 'Alias',
			type: 'string',
			invalidMessage: 'Leading and trailing spaces are not allowed'
		},
		charge: {
			title: 'Charge',
			type: 'string',
			pattern: /^([+-]?)(\d{1,3}|1000)([+-]?)$/,
			maxLength: 5,
			default: '0',
			invalidMessage: 'Invalid charge value'
		},
		explicitValence: {
			title: 'Valence',
			enum: [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8],
			enumNames: ['', '0', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII'],
			default: -1
		},
		isotope: {
			title: 'Isotope',
			type: 'integer',
			minimum: 0,
			default: 0,
			invalidMessage: 'There must be integer'
		},
		radical: {
			title: 'Radical',
			enum: [0, 2, 1, 3],
			enumNames: ['', 'Monoradical', 'Diradical (singlet)', 'Diradical (triplet)'],
			default: 0
		},
		ringBondCount: {
			title: 'Ring bond count',
			enum: [0, -2, -1, 2, 3, 4],
			enumNames: ['', 'As drawn', '0', '2', '3', '4'],
			default: 0
		},
		hCount: {
			title: 'H count',
			enum: [0, 1, 2, 3, 4, 5],
			enumNames: ['', '0', '1', '2', '3', '4'],
			default: 0
		},
		substitutionCount: {
			title: 'Substitution count',
			enum: [0, -2, -1, 1, 2, 3, 4, 5, 6],
			enumNames: ['', 'As drawn', '0', '1', '2', '3', '4', '5', '6'],
			default: 0
		},
		unsaturatedAtom: {
			title: 'Unsaturated',
			type: 'boolean',
			default: false
		},
		invRet: {
			title: 'Inversion',
			enum: [0, 1, 2],
			enumNames: ['', 'Inverts', 'Retains'],
			default: 0
		},
		exactChangeFlag: {
			title: 'Exact change',
			type: 'boolean',
			default: false
		}
	}
}; /****************************************************************************
    * Copyright 2018 EPAM Systems
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *    http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    ***************************************************************************/

var rgroupSchema = exports.rgroupSchema = {
	title: 'R-group',
	type: 'object',
	properties: {
		values: {
			type: 'array',
			items: {
				type: 'string',
				enum: (0, _range3.default)(1, 33),
				enumNames: (0, _range3.default)(1, 33).map(function (item) {
					return 'R' + item;
				})
			}
		}
	}
};

var labelEdit = exports.labelEdit = {
	title: 'Label Edit',
	type: 'object',
	required: ['label'],
	properties: {
		label: {
			title: 'Atom',
			default: '',
			invalidMessage: 'Wrong atom symbol'
		}
	}
};

var attachmentPoints = exports.attachmentPoints = {
	title: 'Attachment Points',
	type: 'object',
	properties: {
		primary: {
			title: 'Primary attachment point',
			type: 'boolean'
		},
		secondary: {
			title: 'Secondary attachment point',
			type: 'boolean'
		}
	}
};

var bond = exports.bond = {
	title: 'Bond',
	type: 'object',
	required: ['type'],
	properties: {
		type: {
			title: 'Type',
			enum: ['single', 'up', 'down', 'updown', 'double', 'crossed', 'triple', 'aromatic', 'any', 'singledouble', 'singlearomatic', 'doublearomatic'],
			enumNames: ['Single', 'Single Up', 'Single Down', 'Single Up/Down', 'Double', 'Double Cis/Trans', 'Triple', 'Aromatic', 'Any', 'Single/Double', 'Single/Aromatic', 'Double/Aromatic'],
			default: 'single'
		},
		topology: {
			title: 'Topology',
			enum: [0, 1, 2],
			enumNames: ['Either', 'Ring', 'Chain'],
			default: 0
		},
		center: {
			title: 'Reacting Center',
			enum: [0, -1, 1, 2, 4, 8, 12], // 5, 9, 13
			enumNames: ['Unmarked', 'Not center', 'Center', 'No change', 'Made/broken', 'Order changes', 'Made/broken and changes'], // "Order changes" x 3
			default: 0
		}
	}
};

var sgroup = {
	title: 'SGroup',
	type: 'object',
	required: ['type'],
	oneOf: [{
		key: 'GEN',
		title: 'Generic',
		properties: {
			type: { enum: ['GEN'] }
		}
	}, {
		key: 'MUL',
		title: 'Multiple group',
		type: 'object',
		properties: {
			type: { enum: ['MUL'] },
			mul: {
				title: 'Repeat count',
				type: 'integer',
				default: 1,
				minimum: 1,
				maximum: 1000,
				invalidMessage: 'Value out of range: must be between 1 and 1000'
			}
		},
		required: ['mul']
	}, {
		key: 'SRU',
		title: 'SRU polymer',
		properties: {
			type: { enum: ['SRU'] },
			subscript: {
				title: 'Polymer label',
				type: 'string',
				default: 'n',
				pattern: /^[a-zA-Z]$/,
				invalidMessage: 'SRU subscript should consist of a single letter'
			},
			connectivity: {
				title: 'Repeat Pattern',
				enum: ['ht', 'hh', 'eu'],
				enumNames: ['Head-to-tail', 'Head-to-head', 'Either unknown'],
				default: 'ht'
			}
		},
		required: ['subscript', 'connectivity']
	}, {
		key: 'SUP',
		title: 'Superatom',
		properties: {
			type: { enum: ['SUP'] },
			name: {
				title: 'Name',
				type: 'string',
				default: '',
				minLength: 1,
				invalidMessage: 'Please, provide a name for the superatom'
			}
		},
		required: ['name']
	}]
};
var sgroupMap = exports.sgroupMap = (0, _schemaHelper.mapOf)(sgroup, 'type');

var rgroupLogic = exports.rgroupLogic = {
	title: 'R-Group',
	type: 'object',
	properties: {
		range: {
			title: 'Occurrence',
			type: 'string',
			maxLength: 50,
			invalidMessage: 'Wrong value'
		},
		resth: {
			title: 'RestH',
			type: 'boolean'
		},
		ifthen: {
			title: 'Condition',
			type: 'integer',
			minium: 0
		}
	}
};

},{"./schema-helper":640,"lodash/fp/range":433}],643:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _molfile = require('../../chem/molfile');

var _molfile2 = _interopRequireDefault(_molfile);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = ['Benzene\n' + '  Ketcher 11161218352D 1   1.00000     0.00000     0\n' + '\n' + '  6  6  0     0  0            999 V2000\n' + '    0.8660    2.0000    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    1.7320    1.5000    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    1.7320    0.5000    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    0.8660    0.0000    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    0.0000    0.5000    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    0.0000    1.5000    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '  1  2  1  0     0  0\n' + '  2  3  2  0     0  0\n' + '  3  4  1  0     0  0\n' + '  4  5  2  0     0  0\n' + '  5  6  1  0     0  0\n' + '  6  1  2  0     0  0\n' + 'M  END\n', 'Cyclopentadiene\n' + '  Ketcher 11161218352D 1   1.00000     0.00000     0\n' + '\n' + '  5  5  0     0  0            999 V2000\n' + '    0.0000    1.4257    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    0.8090    0.8379    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    0.5000   -0.1132    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '   -0.5000   -0.1132    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '   -0.8090    0.8379    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '  1  2  1  0     0  0\n' + '  2  3  2  0     0  0\n' + '  3  4  1  0     0  0\n' + '  4  5  2  0     0  0\n' + '  5  1  1  0     0  0\n' + 'M  END\n', 'Cyclohexane\n' + '  Ketcher 11161218352D 1   1.00000     0.00000     0\n' + '\n' + '  6  6  0     0  0            999 V2000\n' + '    0.8660    2.0000    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    1.7320    1.5000    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    1.7320    0.5000    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    0.8660    0.0000    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    0.0000    0.5000    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    0.0000    1.5000    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '  1  2  1  0     0  0\n' + '  2  3  1  0     0  0\n' + '  3  4  1  0     0  0\n' + '  4  5  1  0     0  0\n' + '  5  6  1  0     0  0\n' + '  6  1  1  0     0  0\n' + 'M  END\n', 'Cyclopentane\n' + '  Ketcher 11161218352D 1   1.00000     0.00000     0\n' + '\n' + '  5  5  0     0  0            999 V2000\n' + '    0.8090    1.5389    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    1.6180    0.9511    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    1.3090    0.0000    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    0.3090    0.0000    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    0.0000    0.9511    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '  1  2  1  0     0  0\n' + '  2  3  1  0     0  0\n' + '  3  4  1  0     0  0\n' + '  4  5  1  0     0  0\n' + '  5  1  1  0     0  0\n' + 'M  END\n', 'Cyclopropane\n' + '  Ketcher 11161218352D 1   1.00000     0.00000     0\n' + '\n' + '  3  3  0     0  0            999 V2000\n' + '   -3.2250   -0.2750    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '   -2.2250   -0.2750    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '   -2.7250    0.5910    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '  1  2  1  0     0  0\n' + '  2  3  1  0     0  0\n' + '  1  3  1  0     0  0\n' + 'M  END\n', 'Cyclobutane\n' + '  Ketcher 11161218352D 1   1.00000     0.00000     0\n' + '\n' + '  4  4  0     0  0            999 V2000\n' + '   -3.8250    1.5500    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '   -3.8250    0.5500    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '   -2.8250    1.5500    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '   -2.8250    0.5500    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '  1  2  1  0     0  0\n' + '  1  3  1  0     0  0\n' + '  3  4  1  0     0  0\n' + '  4  2  1  0     0  0\n' + 'M  END\n', 'Cycloheptane\n' + '  Ketcher 11161218352D 1   1.00000     0.00000     0\n' + '\n' + '  7  7  0     0  0            999 V2000\n' + '    0.0000    1.6293    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    0.7835    2.2465    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    1.7559    2.0242    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    2.1897    1.1289    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    0.0000    0.6228    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    1.7566    0.2224    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    0.7835    0.0000    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '  6  7  1  0     0  0\n' + '  5  7  1  0     0  0\n' + '  1  5  1  0     0  0\n' + '  4  6  1  0     0  0\n' + '  3  4  1  0     0  0\n' + '  2  3  1  0     0  0\n' + '  1  2  1  0     0  0\n' + 'M  END\n', 'Cyclooctane\n' + '  Ketcher 11161218352D 1   1.00000     0.00000     0\n' + '\n' + '  8  8  0     0  0            999 V2000\n' + '    0.0000    0.7053    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    0.0000    1.7078    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    0.7053    2.4131    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    0.7056    0.0000    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    1.7079    0.0000    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    2.4133    0.7053    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    2.4133    1.7078    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '    1.7079    2.4131    0.0000 C   0  0  0  0  0  0        0  0  0\n' + '  8  3  1  0     0  0\n' + '  7  8  1  0     0  0\n' + '  6  7  1  0     0  0\n' + '  5  6  1  0     0  0\n' + '  4  5  1  0     0  0\n' + '  1  4  1  0     0  0\n' + '  2  3  1  0     0  0\n' + '  1  2  1  0     0  0\n' + 'M  END\n'].map(function (structStr) {
	return _molfile2.default.parse(structStr);
}); /****************************************************************************
     * Copyright 2018 EPAM Systems
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *    http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     ***************************************************************************/

},{"../../chem/molfile":523}],644:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _preact = require('preact');

var _generics = require('../../../chem/generics');

var _generics2 = _interopRequireDefault(_generics);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

var viewSchema = {
	atom: {
		caption: 'Atom Generics',
		order: ['any', 'no-carbon', 'metal', 'halogen']
	},
	group: {
		caption: 'Group Generics',
		order: ['acyclic', 'cyclic']
	},
	special: {
		caption: 'Special Nodes',
		order: []
	},
	'group/acyclic': {
		caption: 'Acyclic',
		order: ['carbo', 'hetero']
	},
	'group/cyclic': {
		caption: 'Cyclic',
		order: ['no-carbon', 'carbo', 'hetero']
	},
	'group/acyclic/carbo': {
		caption: 'Carbo',
		order: ['alkynyl', 'alkyl', 'alkenyl']
	},
	'group/acyclic/hetero': {
		caption: 'Hetero',
		order: ['alkoxy']
	},
	'group/cyclic/carbo': {
		caption: 'Carbo',
		order: ['aryl', 'cycloalkyl', 'cycloalkenyl']
	},
	'group/cyclic/hetero': {
		caption: 'Hetero',
		order: ['aryl']
	},
	'atom/any': 'any atom',
	'atom/no-carbon': 'except C or H',
	'atom/metal': 'any metal',
	'atom/halogen': 'any halogen',
	'group/cyclic/no-carbon': 'no carbon',
	'group/cyclic/hetero/aryl': 'hetero aryl'
};

function GenSet(_ref) {
	var labels = _ref.labels,
	    _ref$caption = _ref.caption,
	    caption = _ref$caption === undefined ? '' : _ref$caption,
	    selected = _ref.selected,
	    onSelect = _ref.onSelect,
	    props = _objectWithoutProperties(_ref, ['labels', 'caption', 'selected', 'onSelect']);

	return (0, _preact.h)(
		'fieldset',
		props,
		labels.map(function (label) {
			return (0, _preact.h)(
				'button',
				{
					onClick: function onClick() {
						return onSelect(label);
					},
					className: selected(label) ? 'selected' : ''
				},
				label
			);
		}),
		caption ? (0, _preact.h)(
			'legend',
			null,
			caption
		) : null
	);
}

function GenGroup(_ref2) {
	var gen = _ref2.gen,
	    name = _ref2.name,
	    path = _ref2.path,
	    selected = _ref2.selected,
	    onSelect = _ref2.onSelect;

	var group = gen[name];
	var pk = path ? path + '/' + name : name;
	var schema = viewSchema[pk];

	return schema && schema.caption ? (0, _preact.h)(
		'fieldset',
		{ className: name },
		(0, _preact.h)(
			'legend',
			null,
			schema.caption
		),
		group.labels ? (0, _preact.h)(GenSet, {
			labels: group.labels,
			selected: selected,
			onSelect: onSelect
		}) : null,
		schema.order.map(function (child) {
			return (// TODO:order = Object.keys ifndef
				(0, _preact.h)(GenGroup, {
					gen: group,
					name: child,
					path: pk,
					selected: selected,
					onSelect: onSelect
				})
			);
		})
	) : (0, _preact.h)(GenSet, {
		labels: group.labels,
		caption: schema || name,
		className: name,
		selected: selected,
		onSelect: onSelect
	});
}

function GenericGroups(_ref3) {
	var _selected = _ref3.selected,
	    _onSelect = _ref3.onSelect,
	    props = _objectWithoutProperties(_ref3, ['selected', 'onSelect']);

	return (0, _preact.h)(
		'div',
		_extends({ summary: 'Generic Groups' }, props),
		(0, _preact.h)(
			'div',
			{ className: 'col' },
			(0, _preact.h)(GenGroup, {
				gen: _generics2.default,
				name: 'atom',
				selected: function selected(l) {
					return _selected(l);
				},
				onSelect: function onSelect(l) {
					return _onSelect(l);
				}
			}),
			(0, _preact.h)(GenGroup, {
				gen: _generics2.default,
				name: 'special',
				selected: function selected(l) {
					return _selected(l);
				},
				onSelect: function onSelect(l) {
					return _onSelect(l);
				}
			})
		),
		(0, _preact.h)(
			'div',
			{ className: 'col' },
			(0, _preact.h)(GenGroup, {
				gen: _generics2.default,
				name: 'group',
				selected: function selected(l) {
					return _selected(l);
				},
				onSelect: function onSelect(l) {
					return _onSelect(l);
				}
			})
		)
	);
}

exports.default = GenericGroups;

},{"../../../chem/generics":521,"preact":485}],645:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _xor2 = require('lodash/fp/xor');

var _xor3 = _interopRequireDefault(_xor2);

var _range2 = require('lodash/fp/range');

var _range3 = _interopRequireDefault(_range2);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _element = require('../../../chem/element');

var _element2 = _interopRequireDefault(_element);

var _elementColor = require('../../../chem/element-color');

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

var _atom = require('../../component/view/atom');

var _atom2 = _interopRequireDefault(_atom);

var _tabs = require('../../component/view/tabs');

var _tabs2 = _interopRequireDefault(_tabs);

var _genericGroups = require('./generic-groups');

var _genericGroups2 = _interopRequireDefault(_genericGroups);

var _structconv = require('../../data/convert/structconv');

var _state5 = require('../../state');

var _toolbar = require('../../state/toolbar');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

var typeSchema = [{ title: 'Single', value: 'atom' }, { title: 'List', value: 'list' }, { title: 'Not List', value: 'not-list' }];

var beforeSpan = {
	He: 16,
	B: 10,
	Al: 10,
	Hf: 1,
	Rf: 1
};

var main = rowPartition(_element2.default.filter(function (el) {
	return el && el.type !== 'actinide' && el.type !== 'lanthanide';
}));
var lanthanides = _element2.default.filter(function (el) {
	return el && el.type === 'lanthanide';
});
var actinides = _element2.default.filter(function (el) {
	return el && el.type === 'actinide';
});

function Header() {
	return (0, _preact.h)(
		'tr',
		null,
		(0, _range3.default)(0, 19).map(function (i) {
			return (0, _preact.h)(
				'th',
				null,
				i || ''
			);
		})
	);
}

function TypeChoise(_ref) {
	var value = _ref.value,
	    onChange = _ref.onChange,
	    props = _objectWithoutProperties(_ref, ['value', 'onChange']);

	return (0, _preact.h)(
		'fieldset',
		null,
		typeSchema.map(function (sc) {
			return (0, _preact.h)(
				'label',
				null,
				(0, _preact.h)('input', _extends({
					type: 'radio',
					value: sc.value,
					checked: sc.value === value,
					onClick: function onClick() {
						return onChange(sc.value);
					}
				}, props)),
				sc.title
			);
		})
	);
}

function MainRow(_ref2) {
	var row = _ref2.row,
	    caption = _ref2.caption,
	    refer = _ref2.refer,
	    selected = _ref2.selected,
	    onSelect = _ref2.onSelect,
	    curEvents = _ref2.curEvents;

	return (0, _preact.h)(
		'tr',
		null,
		(0, _preact.h)(
			'th',
			null,
			caption
		),
		row.map(function (el) {
			return typeof el !== 'number' ? // eslint-disable-line
			(0, _preact.h)(
				'td',
				null,
				(0, _preact.h)(_atom2.default, _extends({
					el: el,
					className: selected(el.label) ? 'selected' : '',
					onClick: function onClick() {
						return onSelect(el.label);
					}
				}, curEvents(el)))
			) : refer(el) ? (0, _preact.h)(
				'td',
				{ className: 'ref' },
				refer(el)
			) : (0, _preact.h)('td', { colSpan: el });
		})
	);
}

function OutinerRow(_ref3) {
	var row = _ref3.row,
	    caption = _ref3.caption,
	    selected = _ref3.selected,
	    onSelect = _ref3.onSelect,
	    curEvents = _ref3.curEvents;

	return (0, _preact.h)(
		'tr',
		null,
		(0, _preact.h)(
			'th',
			{ colSpan: '3', className: 'ref' },
			caption
		),
		row.map(function (el) {
			return (0, _preact.h)(
				'td',
				null,
				(0, _preact.h)(_atom2.default, _extends({
					el: el,
					className: selected(el.label) ? 'selected' : '',
					onClick: function onClick() {
						return onSelect(el.label);
					}
				}, curEvents(el)))
			);
		}),
		(0, _preact.h)('td', null)
	);
}

function AtomInfo(_ref4) {
	var el = _ref4.el,
	    isInfo = _ref4.isInfo;

	var numberStyle = { color: _elementColor.sketchingColors[el.label] || 'black', 'font-size': '1.2em' };
	var elemStyle = { color: _elementColor.sketchingColors[el.label] || 'black', 'font-weight': 'bold', 'font-size': '2em' };
	return (0, _preact.h)(
		'div',
		{ className: 'ket-atom-info ' + (isInfo ? '' : 'none') },
		(0, _preact.h)(
			'div',
			{ style: numberStyle },
			_element2.default.map[el.label]
		),
		(0, _preact.h)(
			'span',
			{ style: elemStyle },
			el.label
		),
		(0, _preact.h)('br', null),
		el.title,
		(0, _preact.h)('br', null),
		el.atomic_mass
	);
}

var PeriodTable = function (_Component) {
	_inherits(PeriodTable, _Component);

	function PeriodTable(props) {
		_classCallCheck(this, PeriodTable);

		var _this = _possibleConstructorReturn(this, (PeriodTable.__proto__ || Object.getPrototypeOf(PeriodTable)).call(this, props));

		_this.curEvents = function (el) {
			return {
				onMouseEnter: function onMouseEnter() {
					return _this.setState({ cur: el, isInfo: true });
				},
				onMouseLeave: function onMouseLeave() {
					return _this.setState({ isInfo: false });
				}
			};
		};

		var genType = !_this.props.pseudo ? null : 'gen';
		_this.state = {
			type: props.type || genType || 'atom',
			value: props.values || props.label || null,
			cur: _element2.default[2],
			isInfo: false
		};
		_this.firstType = true;
		_this.selected = _this.selected.bind(_this);
		_this.onSelect = _this.onSelect.bind(_this);
		return _this;
	}

	_createClass(PeriodTable, [{
		key: 'changeType',
		value: function changeType(type) {
			if (this.firstType) {
				this.firstType = false;
				return;
			}
			var pl = this.state.type === 'list' || this.state.type === 'not-list';
			var l = type === 'list' || type === 'not-list';
			if (l && pl) {
				this.setState({ type: type });
			} else {
				this.setState({
					type: type,
					value: type === 'atom' || type === 'gen' ? null : []
				});
			}
		}
	}, {
		key: 'selected',
		value: function selected(label) {
			var _state = this.state,
			    type = _state.type,
			    value = _state.value;

			return type === 'atom' || type === 'gen' ? value === label : value.includes(label);
		}
	}, {
		key: 'onSelect',
		value: function onSelect(label) {
			var _state2 = this.state,
			    type = _state2.type,
			    value = _state2.value;

			this.setState({ value: type === 'atom' || type === 'gen' ? label : (0, _xor3.default)([label], value) });
		}
	}, {
		key: 'result',
		value: function result() {
			var _state3 = this.state,
			    type = _state3.type,
			    value = _state3.value;

			if (type === 'atom') return value ? { label: value, pseudo: null } : null;else if (type === 'gen') return value ? { type: type, label: value, pseudo: value } : null;
			return value.length ? { type: type, values: value } : null;
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var tabs = ['Table', 'Extended'];
			var _state4 = this.state,
			    type = _state4.type,
			    value = _state4.value;

			return (0, _preact.h)(
				_dialog2.default,
				{
					title: 'Periodic table',
					className: 'elements-table',
					params: this.props,
					result: function result() {
						return _this2.result();
					}
				},
				(0, _preact.h)(
					_tabs2.default,
					{
						className: 'tabs',
						captions: tabs,
						tabIndex: type !== 'gen' ? 0 : 1,
						changeTab: function changeTab(i) {
							return _this2.changeType(i === 0 ? 'atom' : 'gen');
						}
					},
					(0, _preact.h)(
						'div',
						{ className: 'period-table' },
						(0, _preact.h)(AtomInfo, { el: this.state.cur, isInfo: this.state.isInfo }),
						(0, _preact.h)(ElementsTable, {
							value: value,
							curEvents: this.curEvents,
							selected: this.selected,
							onSelect: this.onSelect
						}),
						(0, _preact.h)(TypeChoise, {
							value: type,
							onChange: function onChange(t) {
								return _this2.changeType(t);
							}
						})
					),
					(0, _preact.h)(_genericGroups2.default, {
						className: 'generic-groups',
						selected: this.selected,
						onSelect: this.onSelect
					})
				)
			);
		}
	}]);

	return PeriodTable;
}(_preact.Component);

var ElementsTable = function (_Component2) {
	_inherits(ElementsTable, _Component2);

	function ElementsTable() {
		_classCallCheck(this, ElementsTable);

		return _possibleConstructorReturn(this, (ElementsTable.__proto__ || Object.getPrototypeOf(ElementsTable)).apply(this, arguments));
	}

	_createClass(ElementsTable, [{
		key: 'shouldComponentUpdate',
		// eslint-disable-line
		value: function shouldComponentUpdate(nextProps) {
			return nextProps.value !== this.props.value;
		}
	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    curEvents = _props.curEvents,
			    selected = _props.selected,
			    onSelect = _props.onSelect;

			var callbacks = { curEvents: curEvents, selected: selected, onSelect: onSelect };
			return (0, _preact.h)(
				'table',
				{ summary: 'Periodic table of the chemical elements' },
				(0, _preact.h)(Header, null),
				main.map(function (row, i) {
					return (0, _preact.h)(MainRow, _extends({
						row: row,
						caption: i + 1,
						refer: function refer(o) {
							return o === 1 && (i === 5 ? '*' : '**');
						}
					}, callbacks));
				}),
				(0, _preact.h)(OutinerRow, _extends({
					row: lanthanides,
					caption: '*'
				}, callbacks)),
				(0, _preact.h)(OutinerRow, _extends({
					row: actinides,
					caption: '**'
				}, callbacks))
			);
		}
	}]);

	return ElementsTable;
}(_preact.Component);

function rowPartition(elements) {
	return elements.reduce(function (res, el) {
		var row = res[el.period - 1];
		if (!row) {
			res.push([el]);
		} else {
			if (beforeSpan[el.label]) row.push(beforeSpan[el.label]);
			row.push(el);
		}
		return res;
	}, []);
}

function mapSelectionToProps(editor) {
	var selection = editor.selection();

	if (selection && Object.keys(selection).length === 1 && selection.atoms && Object.keys(selection.atoms).length === 1) {
		var struct = editor.struct();
		var atom = struct.atoms.get(selection.atoms[0]);
		return _extends({}, (0, _structconv.fromElement)(atom));
	}

	return {};
}

exports.default = (0, _preactRedux.connect)(function (store, props) {
	if (props.values || props.label) return {};
	return mapSelectionToProps(store.editor);
}, function (dispatch, props) {
	return {
		onOk: function onOk(res) {
			if (!res.type || res.type === 'atom') dispatch((0, _toolbar.addAtoms)(res.label));
			dispatch((0, _state5.onAction)({ tool: 'atom', opts: (0, _structconv.toElement)(res) }));
			props.onOk(res);
		}
	};
})(PeriodTable);

},{"../../../chem/element":520,"../../../chem/element-color":519,"../../component/dialog":616,"../../component/view/atom":629,"../../component/view/tabs":634,"../../data/convert/structconv":637,"../../state":671,"../../state/toolbar":680,"./generic-groups":644,"lodash/fp/range":433,"lodash/fp/xor":438,"preact":485,"preact-redux":484}],646:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _open = require('./mainmenu/open');

var _open2 = _interopRequireDefault(_open);

var _analyse = require('./mainmenu/analyse');

var _analyse2 = _interopRequireDefault(_analyse);

var _recognize = require('./mainmenu/recognize');

var _recognize2 = _interopRequireDefault(_recognize);

var _periodTable = require('./elements/period-table');

var _periodTable2 = _interopRequireDefault(_periodTable);

var _rgroup = require('./toolbox/rgroup');

var _rgroup2 = _interopRequireDefault(_rgroup);

var _templateAttach = require('./template/template-attach');

var _templateAttach2 = _interopRequireDefault(_templateAttach);

var _templateLib = require('./template/template-lib');

var _templateLib2 = _interopRequireDefault(_templateLib);

var _about = require('./mainmenu/about');

var _about2 = _interopRequireDefault(_about);

var _help = require('./mainmenu/help');

var _help2 = _interopRequireDefault(_help);

var _miew = require('./mainmenu/miew');

var _miew2 = _interopRequireDefault(_miew);

var _atom = require('./toolbox/atom');

var _atom2 = _interopRequireDefault(_atom);

var _attach = require('./toolbox/attach');

var _attach2 = _interopRequireDefault(_attach);

var _automap = require('./toolbox/automap');

var _automap2 = _interopRequireDefault(_automap);

var _bond = require('./toolbox/bond');

var _bond2 = _interopRequireDefault(_bond);

var _check = require('./mainmenu/check');

var _check2 = _interopRequireDefault(_check);

var _labeledit = require('./toolbox/labeledit');

var _labeledit2 = _interopRequireDefault(_labeledit);

var _rgroupLogic = require('./toolbox/rgroup-logic');

var _rgroupLogic2 = _interopRequireDefault(_rgroupLogic);

var _save = require('./mainmenu/save');

var _save2 = _interopRequireDefault(_save);

var _options = require('./mainmenu/options');

var _options2 = _interopRequireDefault(_options);

var _sgroup = require('./toolbox/sgroup');

var _sgroup2 = _interopRequireDefault(_sgroup);

var _sdata = require('./toolbox/sdata');

var _sdata2 = _interopRequireDefault(_sdata);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	open: _open2.default,
	analyse: _analyse2.default,
	recognize: _recognize2.default,
	'period-table': _periodTable2.default,
	rgroup: _rgroup2.default,
	attach: _templateAttach2.default,
	templates: _templateLib2.default,
	about: _about2.default,
	help: _help2.default,
	miew: _miew2.default,

	atomProps: _atom2.default,
	attachmentPoints: _attach2.default,
	automap: _automap2.default,
	bondProps: _bond2.default,
	check: _check2.default,
	labelEdit: _labeledit2.default,
	rgroupLogic: _rgroupLogic2.default,
	save: _save2.default,
	settings: _options2.default,
	sgroup: _sgroup2.default,
	sdata: _sdata2.default
};

// schemify dialogs
/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

},{"./elements/period-table":645,"./mainmenu/about":647,"./mainmenu/analyse":648,"./mainmenu/check":649,"./mainmenu/help":650,"./mainmenu/miew":651,"./mainmenu/open":652,"./mainmenu/options":653,"./mainmenu/recognize":654,"./mainmenu/save":655,"./template/template-attach":656,"./template/template-lib":657,"./toolbox/atom":658,"./toolbox/attach":659,"./toolbox/automap":660,"./toolbox/bond":661,"./toolbox/labeledit":662,"./toolbox/rgroup":664,"./toolbox/rgroup-logic":663,"./toolbox/sdata":665,"./toolbox/sgroup":666}],647:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /****************************************************************************
                                                                                                                                                                                                                                                                   * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                   * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                   * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                   * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                   * limitations under the License.
                                                                                                                                                                                                                                                                   ***************************************************************************/

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function About(props) {
	var indigoInfo = props.indigoVersion && props.indigoVersion.split('.r'); // Indigo version and build info

	return (0, _preact.h)(
		_dialog2.default,
		{
			title: 'About',
			className: 'about',
			params: props,
			buttons: ['Close']
		},
		(0, _preact.h)(
			'a',
			{ href: 'http://lifescience.opensource.epam.com/ketcher/', target: '_blank' },
			(0, _preact.h)('img', { alt: 'Ketcher', src: 'logo/ketcher-logo.svg' })
		),
		(0, _preact.h)(
			'dl',
			null,
			(0, _preact.h)(
				'dt',
				null,
				(0, _preact.h)(
					'a',
					{ href: 'http://lifescience.opensource.epam.com/ketcher/help.html', target: '_blank' },
					'Ketcher'
				)
			),
			(0, _preact.h)(
				'dd',
				null,
				'version',
				(0, _preact.h)(
					'var',
					null,
					props.version
				)
			),
			props.buildNumber ? (0, _preact.h)(
				'dd',
				null,
				'build #',
				(0, _preact.h)(
					'var',
					null,
					props.buildNumber
				),
				' at ',
				(0, _preact.h)(
					'time',
					null,
					props.buildDate
				)
			) : null,
			props.indigoVersion ? (0, _preact.h)(
				'div',
				null,
				(0, _preact.h)(
					'dt',
					null,
					(0, _preact.h)(
						'a',
						{ href: 'http://lifescience.opensource.epam.com/indigo/', target: '_blank' },
						'Indigo Toolkit'
					)
				),
				(0, _preact.h)(
					'dd',
					null,
					'version',
					(0, _preact.h)(
						'var',
						null,
						indigoInfo[0]
					)
				),
				(0, _preact.h)(
					'dd',
					null,
					'build #',
					(0, _preact.h)(
						'var',
						null,
						indigoInfo[1]
					)
				)
			) : (0, _preact.h)(
				'dd',
				null,
				'standalone'
			),
			(0, _preact.h)(
				'dt',
				null,
				(0, _preact.h)(
					'a',
					{ href: 'http://lifescience.opensource.epam.com/', target: '_blank' },
					'EPAM Life Sciences'
				)
			),
			(0, _preact.h)(
				'dd',
				null,
				(0, _preact.h)(
					'a',
					{ href: 'http://lifescience.opensource.epam.com/ketcher/#feedback', target: '_blank' },
					'Feedback'
				)
			)
		)
	);
}

exports.default = (0, _preactRedux.connect)(function (store) {
	return _extends({}, store.options.app);
})(About);

},{"../../component/dialog":616,"preact":485,"preact-redux":484}],648:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _range2 = require('lodash/fp/range');

var _range3 = _interopRequireDefault(_range2);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _w3cKeyname = require('w3c-keyname');

var _w3cKeyname2 = _interopRequireDefault(_w3cKeyname);

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

var _input = require('../../component/form/input');

var _input2 = _interopRequireDefault(_input);

var _options = require('../../state/options');

var _server = require('../../state/server');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ***************************************************************************/

function FrozenInput(_ref) {
	var value = _ref.value;

	return (0, _preact.h)('input', {
		type: 'text',
		spellCheck: false,
		value: value,
		onKeyDown: function onKeyDown(ev) {
			return allowMovement(ev);
		}
	});
}

var formulaRegexp = /\b(\d*)([A-Z][a-z]{0,3}#?)(\d*)\s*\b/g;
var errorRegexp = /error:.*/g;

function formulaInputMarkdown(value) {
	return (0, _preact.h)(
		'div',
		{
			className: 'chem-input',
			spellCheck: 'false',
			contentEditable: true,
			onKeyDown: function onKeyDown(ev) {
				return allowMovement(ev);
			}
		},
		value
	);
}

function FormulaInput(_ref2) {
	var value = _ref2.value;

	if (errorRegexp.test(value)) return formulaInputMarkdown(value);

	var content = [];
	var cnd = void 0;
	var pos = 0;

	while ((cnd = formulaRegexp.exec(value)) !== null) {
		if (cnd[1].length > 0) content.push((0, _preact.h)(
			'sup',
			null,
			cnd[1]
		));
		content.push(value.substring(pos, cnd.index) + cnd[2]);
		if (cnd[3].length > 0) content.push((0, _preact.h)(
			'sub',
			null,
			cnd[3]
		));
		pos = cnd.index + cnd[0].length;
	}

	if (pos === 0) content.push(value);else content.push(value.substring(pos, value.length));

	return formulaInputMarkdown(content);
}

var Analyse = function (_Component) {
	_inherits(Analyse, _Component);

	function Analyse(props) {
		_classCallCheck(this, Analyse);

		var _this = _possibleConstructorReturn(this, (Analyse.__proto__ || Object.getPrototypeOf(Analyse)).call(this, props));

		props.onAnalyse().catch(props.onCancel);
		return _this;
	}

	_createClass(Analyse, [{
		key: 'render',
		value: function render() {
			var _props = this.props,
			    values = _props.values,
			    round = _props.round,
			    onAnalyse = _props.onAnalyse,
			    onChangeRound = _props.onChangeRound,
			    props = _objectWithoutProperties(_props, ['values', 'round', 'onAnalyse', 'onChangeRound']);

			return (0, _preact.h)(
				_dialog2.default,
				{
					title: 'Calculated Values',
					className: 'analyse',
					buttons: ['Close'],
					params: props
				},
				(0, _preact.h)(
					'ul',
					null,
					[{ name: 'Chemical Formula', key: 'gross' }, { name: 'Molecular Weight', key: 'molecular-weight', round: 'roundWeight' }, { name: 'Exact Mass', key: 'monoisotopic-mass', round: 'roundMass' }, { name: 'Elemental Analysis', key: 'mass-composition' }].map(function (item) {
						return (0, _preact.h)(
							'li',
							null,
							(0, _preact.h)(
								'label',
								null,
								item.name,
								':'
							),
							item.key === 'gross' ? (0, _preact.h)(FormulaInput, { value: values ? values[item.key] : 0 }) : (0, _preact.h)(FrozenInput, { value: values ? roundOff(values[item.key], round[item.round]) : 0 }),
							item.round ? (0, _preact.h)(_input2.default, {
								schema: {
									enum: (0, _range3.default)(0, 8),
									enumNames: (0, _range3.default)(0, 8).map(function (i) {
										return i + ' decimal places';
									})
								},
								value: round[item.round],
								onChange: function onChange(val) {
									return onChangeRound(item.round, val);
								}
							}) : null
						);
					})
				)
			);
		}
	}]);

	return Analyse;
}(_preact.Component);

function allowMovement(event) {
	var movementKeys = ['Tab', 'ArrowLeft', 'ArrowRight', 'Home', 'End'];
	var key = (0, _w3cKeyname2.default)(event);

	if (movementKeys.indexOf(key) === -1) event.preventDefault();
}

function roundOff(value, round) {
	if (typeof value === 'number') return value.toFixed(round);

	return value.replace(/[0-9]*\.[0-9]+/g, function (str) {
		return (+str).toFixed(round);
	});
}

exports.default = (0, _preactRedux.connect)(function (store) {
	return {
		values: store.options.analyse.values,
		round: {
			roundWeight: store.options.analyse.roundWeight,
			roundMass: store.options.analyse.roundMass
		}
	};
}, function (dispatch) {
	return {
		onAnalyse: function onAnalyse() {
			return dispatch((0, _server.analyse)());
		},
		onChangeRound: function onChangeRound(roundName, val) {
			return dispatch((0, _options.changeRound)(roundName, val));
		}
	};
})(Analyse);

},{"../../component/dialog":616,"../../component/form/input":620,"../../state/options":675,"../../state/server":676,"lodash/fp/range":433,"preact":485,"preact-redux":484,"w3c-keyname":516}],649:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

var _tabs = require('../../component/view/tabs');

var _tabs2 = _interopRequireDefault(_tabs);

var _form = require('../../component/form/form');

var _form2 = _interopRequireDefault(_form);

var _server = require('../../state/server');

var _options = require('../../state/options');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

var checkSchema = {
	title: 'Check',
	type: 'object',
	properties: {
		checkOptions: {
			type: 'array',
			items: {
				type: 'string',
				enum: ['valence', 'radicals', 'pseudoatoms', 'stereo', 'query', 'overlapping_atoms', 'overlapping_bonds', 'rgroups', 'chiral', '3d', 'chiral_flag'],
				enumNames: ['Valence', 'Radical', 'Pseudoatom', 'Stereochemistry', 'Query', 'Overlapping Atoms', 'Overlapping Bonds', 'R-Groups', 'Chirality', '3D Structure', 'Chiral flag']
			}
		}
	}
};
function getOptionName(opt) {
	var d = checkSchema.properties.checkOptions.items;
	return d.enumNames[d.enum.indexOf(opt)];
}

function Check(props) {
	var tabs = ['Check', 'Settings'];

	var formState = props.formState,
	    checkState = props.checkState,
	    onCheck = props.onCheck,
	    prop = _objectWithoutProperties(props, ['formState', 'checkState', 'onCheck']);

	var _formState$result = formState.result,
	    _result = _formState$result === undefined ? checkState : _formState$result,
	    moleculeErrors = formState.moleculeErrors;

	return (0, _preact.h)(
		_dialog2.default,
		{
			title: 'Structure Check',
			className: 'check',
			result: function result() {
				return _result;
			},
			params: prop
		},
		(0, _preact.h)(
			_form2.default,
			_extends({
				schema: checkSchema,
				init: checkState
			}, formState),
			(0, _preact.h)(
				_tabs2.default,
				{
					className: 'tabs',
					captions: tabs,
					changeTab: function changeTab(i) {
						return i === 0 ? onCheck(_result.checkOptions) : null;
					}
				},
				(0, _preact.h)(ErrorsCheck, { moleculeErrors: moleculeErrors }),
				(0, _preact.h)(_form.Field, { name: 'checkOptions', multiple: true, type: 'checkbox', labelPos: false })
			)
		)
	);
}

function ErrorsCheck(props) {
	var moleculeErrors = props.moleculeErrors;

	var moleculeErrorsTypes = Object.keys(moleculeErrors);

	return (0, _preact.h)(
		'fieldset',
		props,
		moleculeErrorsTypes.length === 0 ? (0, _preact.h)(
			'dt',
			null,
			'No errors found'
		) : moleculeErrorsTypes.map(function (type) {
			return (0, _preact.h)(
				'div',
				null,
				(0, _preact.h)(
					'dt',
					null,
					getOptionName(type),
					' warning:'
				),
				(0, _preact.h)(
					'dd',
					null,
					moleculeErrors[type]
				)
			);
		})
	);
}

exports.default = (0, _preactRedux.connect)(function (store) {
	return {
		formState: store.modal.form,
		checkState: store.options.check
	};
}, function (dispatch, props) {
	return {
		onCheck: function onCheck(opts) {
			return dispatch((0, _server.check)(opts)).catch(props.onCancel);
		},
		onOk: function onOk(res) {
			dispatch((0, _options.checkOpts)(res));
			props.onOk(res);
		}
	};
})(Check);

},{"../../component/dialog":616,"../../component/form/form":619,"../../component/view/tabs":634,"../../state/options":675,"../../state/server":676,"preact":485,"preact-redux":484}],650:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _preact = require('preact');

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function Help(props) {
  return (0, _preact.h)(
    _dialog2.default,
    {
      title: 'Help',
      className: 'help',
      params: props,
      buttons: ['Close']
    },
    (0, _preact.h)('iframe', { className: 'help', src: 'doc/help.html' })
  );
}

exports.default = Help;

},{"../../component/dialog":616,"preact":485}],651:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _pick2 = require('lodash/fp/pick');

var _pick3 = _interopRequireDefault(_pick2);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

var _structformat = require('../../data/convert/structformat');

var structFormat = _interopRequireWildcard(_structformat);

var _optionsSchema = require('../../data/schema/options-schema');

var _state = require('../../state');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.


/* OPTIONS for MIEW */
var BACKGROUND_COLOR = {
	dark: '0x202020',
	light: '0xcccccc'
};

var MIEW_TX_TYPES = {
	no: null,
	bright: {
		colorer: 'EL'
	},
	blackAndWhite: {
		colorer: ['UN', { color: 0xFFFFFF }],
		bg: '0x000'
	},
	black: {
		colorer: ['UN', { color: 0x000000 }]
	}
};

var TXoptions = function TXoptions(userOpts) {
	var type = userOpts.miewAtomLabel;
	if (MIEW_TX_TYPES[type] === null) return null;
	return {
		colorer: MIEW_TX_TYPES[type].colorer,
		selector: 'not elem C',
		mode: ['TX', {
			bg: MIEW_TX_TYPES[type].bg || BACKGROUND_COLOR[userOpts.miewTheme],
			showBg: true,
			template: '{{elem}}'
		}]
	};
};

function createMiewOptions(userOpts) {
	var options = {
		settings: {
			theme: userOpts.miewTheme,
			autoPreset: false,
			editing: true,
			inversePanning: true
		},
		reps: [{
			mode: userOpts.miewMode
		}]
	};

	var textMode = TXoptions(userOpts);
	if (textMode) options.reps.push(textMode);

	return options;
}
/* ---------------- */
var CHANGING_WARNING = 'Stereocenters can be changed after the strong 3D rotation';

var MiewComponent = function (_Component) {
	_inherits(MiewComponent, _Component);

	function MiewComponent() {
		_classCallCheck(this, MiewComponent);

		return _possibleConstructorReturn(this, (MiewComponent.__proto__ || Object.getPrototypeOf(MiewComponent)).apply(this, arguments));
	}

	_createClass(MiewComponent, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _this2 = this;

			var _props = this.props,
			    struct = _props.struct,
			    server = _props.server,
			    miewOpts = _props.miewOpts;

			var Miew = window.Miew;

			this.viewer = new Miew({
				container: this.miewContainer
			});

			if (this.viewer.init()) this.viewer.run();

			structFormat.toString(struct, 'cml', server).then(function (res) {
				return _this2.viewer.load(res, { sourceType: 'immediate', fileType: 'cml' });
			}).then(function () {
				return _this2.viewer.setOptions(miewOpts);
			}).catch(function (ex) {
				return console.error(ex.message);
			});
		}
	}, {
		key: 'exportCML',
		value: function exportCML() {
			var cmlStruct = this.viewer.exportCML();
			this.props.onExportCML(cmlStruct);
		}
	}, {
		key: 'render',
		value: function render() {
			var _this3 = this;

			var _props2 = this.props,
			    miewOpts = _props2.miewOpts,
			    server = _props2.server,
			    struct = _props2.struct,
			    prop = _objectWithoutProperties(_props2, ['miewOpts', 'server', 'struct']);

			return (0, _preact.h)(
				_dialog2.default,
				{
					title: 'Miew',
					className: 'miew',
					params: prop,
					buttons: [(0, _preact.h)(
						'div',
						{ className: 'warning' },
						CHANGING_WARNING
					), 'Close', (0, _preact.h)(
						'button',
						{ onClick: function onClick() {
								return _this3.exportCML();
							} },
						'Apply'
					)]
				},
				(0, _preact.h)('div', {
					ref: function ref(el) {
						_this3.miewContainer = el;
					},
					className: 'miew-container',
					style: { width: '1024px', height: '600px', position: 'relative' }
				})
			);
		}
	}]);

	return MiewComponent;
}(_preact.Component);

exports.default = (0, _preactRedux.connect)(function (store) {
	return {
		miewOpts: createMiewOptions((0, _pick3.default)(_optionsSchema.MIEW_OPTIONS, store.options.settings)),
		server: store.options.app.server ? store.server : null,
		struct: store.editor.struct()
	};
}, function (dispatch, props) {
	return {
		onExportCML: function onExportCML(cmlStruct) {
			dispatch((0, _state.load)(cmlStruct));
			props.onOk();
		}
	};
})(MiewComponent);

},{"../../component/dialog":616,"../../data/convert/structformat":638,"../../data/schema/options-schema":639,"../../state":671,"lodash/fp/pick":430,"preact":485,"preact-redux":484}],652:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _structformat = require('../../data/convert/structformat');

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

var _openbutton = require('../../component/view/openbutton');

var _openbutton2 = _interopRequireDefault(_openbutton);

var _cliparea = require('../../component/cliparea');

var _cliparea2 = _interopRequireDefault(_cliparea);

var _state3 = require('../../state');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.


var Open = function (_Component) {
	_inherits(Open, _Component);

	function Open(props) {
		_classCallCheck(this, Open);

		var _this = _possibleConstructorReturn(this, (Open.__proto__ || Object.getPrototypeOf(Open)).call(this, props));

		_this.state = {
			structStr: '',
			fragment: false
		};
		return _this;
	}

	_createClass(Open, [{
		key: 'result',
		value: function result() {
			var _state = this.state,
			    structStr = _state.structStr,
			    fragment = _state.fragment;

			return structStr ? { structStr: structStr, fragment: fragment } : null;
		}
	}, {
		key: 'changeStructStr',
		value: function changeStructStr(structStr) {
			this.setState({ structStr: structStr });
		}
	}, {
		key: 'changeFragment',
		value: function changeFragment(target) {
			this.setState({
				fragment: target.checked
			});
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _state2 = this.state,
			    structStr = _state2.structStr,
			    fragment = _state2.fragment;

			return (0, _preact.h)(
				_dialog2.default,
				{
					title: 'Open Structure',
					className: 'open',
					result: function result() {
						return _this2.result();
					},
					params: this.props,
					buttons: [(0, _preact.h)(
						_openbutton2.default,
						{
							server: this.props.server,
							type: structAcceptMimes(),
							onLoad: function onLoad(s) {
								return _this2.changeStructStr(s);
							}
						},
						'Open From File\u2026'
					), 'Cancel', 'OK']
				},
				(0, _preact.h)('textarea', {
					value: structStr,
					onInput: function onInput(ev) {
						return _this2.changeStructStr(ev.target.value);
					}
				}),
				(0, _preact.h)(
					'label',
					null,
					(0, _preact.h)('input', {
						type: 'checkbox',
						checked: fragment,
						onClick: function onClick(ev) {
							return _this2.changeFragment(ev.target);
						}
					}),
					'Load as a fragment and copy to the Clipboard'
				),
				(0, _preact.h)(_cliparea2.default, {
					focused: function focused() {
						return true;
					},
					onCopy: function onCopy() {
						return { 'text/plain': structStr };
					}
				})
			);
		}
	}]);

	return Open;
}(_preact.Component);

function structAcceptMimes() {
	return Object.keys(_structformat.map).reduce(function (res, key) {
		return res.concat.apply(res, [_structformat.map[key].mime].concat(_toConsumableArray(_structformat.map[key].ext)));
	}, []).join(',');
}

exports.default = (0, _preactRedux.connect)(function (store) {
	return { server: store.server };
}, function (dispatch, props) {
	return {
		onOk: function onOk(res) {
			if (res.fragment) (0, _cliparea.exec)('copy');
			dispatch((0, _state3.load)(res.structStr, {
				badHeaderRecover: true,
				fragment: res.fragment
			}));
			props.onOk(res);
		}
	};
})(Open);

},{"../../component/cliparea":615,"../../component/dialog":616,"../../component/view/openbutton":631,"../../data/convert/structformat":638,"../../state":671,"preact":485,"preact-redux":484}],653:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _form = require('../../state/modal/form');

var _options = require('../../state/options');

var _optionsSchema = require('../../data/schema/options-schema');

var _optionsSchema2 = _interopRequireDefault(_optionsSchema);

var _storageExt = require('../../storage-ext');

var _form2 = require('../../component/form/form');

var _form3 = _interopRequireDefault(_form2);

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

var _accordion = require('../../component/view/accordion');

var _accordion2 = _interopRequireDefault(_accordion);

var _savebutton = require('../../component/view/savebutton');

var _savebutton2 = _interopRequireDefault(_savebutton);

var _openbutton = require('../../component/view/openbutton');

var _openbutton2 = _interopRequireDefault(_openbutton);

var _measureInput = require('../../component/form/measure-input');

var _measureInput2 = _interopRequireDefault(_measureInput);

var _systemfonts = require('../../component/form/systemfonts');

var _systemfonts2 = _interopRequireDefault(_systemfonts);

var _selectCheckbox = require('../../component/form/select-checkbox');

var _selectCheckbox2 = _interopRequireDefault(_selectCheckbox);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

function Settings(props) {
	var initState = props.initState,
	    formState = props.formState,
	    server = props.server,
	    onOpenFile = props.onOpenFile,
	    onReset = props.onReset,
	    appOpts = props.appOpts,
	    prop = _objectWithoutProperties(props, ['initState', 'formState', 'server', 'onOpenFile', 'onReset', 'appOpts']);

	var tabs = ['Rendering customization options', 'Atoms', 'Bonds', 'Server', '3D Viewer', 'Options for debugging'];

	return (0, _preact.h)(
		_dialog2.default,
		{
			title: 'Settings',
			className: 'settings',
			result: function result() {
				return formState.result;
			},
			valid: function valid() {
				return formState.valid;
			},
			params: prop,
			buttons: [(0, _preact.h)(
				_openbutton2.default,
				{ server: server, onLoad: onOpenFile },
				'Open From File\u2026'
			), (0, _preact.h)(
				_savebutton2.default,
				{ data: JSON.stringify(formState.result), filename: 'ketcher-settings' },
				'Save To File\u2026'
			), (0, _preact.h)(
				'button',
				{ onClick: onReset },
				'Reset'
			), 'Cancel', 'OK']
		},
		(0, _preact.h)(
			_form3.default,
			_extends({ schema: _optionsSchema2.default, init: initState }, formState),
			(0, _preact.h)(
				_accordion2.default,
				{ className: 'accordion', multiple: false, captions: tabs, active: [0] },
				(0, _preact.h)(
					'fieldset',
					{ className: 'render' },
					(0, _preact.h)(_form2.Field, { name: 'resetToSelect' }),
					(0, _preact.h)(_form2.Field, { name: 'rotationStep' }),
					(0, _preact.h)(_form2.Field, { name: 'showValenceWarnings', component: _selectCheckbox2.default }),
					(0, _preact.h)(_form2.Field, { name: 'atomColoring', component: _selectCheckbox2.default }),
					(0, _preact.h)(_form2.Field, { name: 'hideChiralFlag', component: _selectCheckbox2.default }),
					(0, _preact.h)(_form2.Field, { name: 'font', component: _systemfonts2.default }),
					(0, _preact.h)(_form2.Field, { name: 'fontsz', component: _measureInput2.default }),
					(0, _preact.h)(_form2.Field, { name: 'fontszsub', component: _measureInput2.default })
				),
				(0, _preact.h)(
					'fieldset',
					{ className: 'atoms' },
					(0, _preact.h)(_form2.Field, { name: 'carbonExplicitly', component: _selectCheckbox2.default }),
					(0, _preact.h)(_form2.Field, { name: 'showCharge', component: _selectCheckbox2.default }),
					(0, _preact.h)(_form2.Field, { name: 'showValence', component: _selectCheckbox2.default }),
					(0, _preact.h)(_form2.Field, { name: 'showHydrogenLabels', component: _selectCheckbox2.default })
				),
				(0, _preact.h)(
					'fieldset',
					{ className: 'bonds' },
					(0, _preact.h)(_form2.Field, { name: 'aromaticCircle', component: _selectCheckbox2.default }),
					(0, _preact.h)(_form2.Field, { name: 'doubleBondWidth', component: _measureInput2.default }),
					(0, _preact.h)(_form2.Field, { name: 'bondThickness', component: _measureInput2.default }),
					(0, _preact.h)(_form2.Field, { name: 'stereoBondWidth', component: _measureInput2.default })
				),
				(0, _preact.h)(
					'fieldset',
					{ className: 'server', disabled: !appOpts.server },
					(0, _preact.h)(_form2.Field, { name: 'smart-layout', component: _selectCheckbox2.default }),
					(0, _preact.h)(_form2.Field, { name: 'ignore-stereochemistry-errors', component: _selectCheckbox2.default }),
					(0, _preact.h)(_form2.Field, { name: 'mass-skip-error-on-pseudoatoms', component: _selectCheckbox2.default }),
					(0, _preact.h)(_form2.Field, { name: 'gross-formula-add-rsites', component: _selectCheckbox2.default }),
					(0, _preact.h)(_form2.Field, { name: 'gross-formula-add-isotopes', component: _selectCheckbox2.default })
				),
				(0, _preact.h)(
					'fieldset',
					{ className: 'miew', disabled: !window.Miew },
					(0, _preact.h)(_form2.Field, { name: 'miewMode' }),
					(0, _preact.h)(_form2.Field, { name: 'miewTheme' }),
					(0, _preact.h)(_form2.Field, { name: 'miewAtomLabel' })
				),
				(0, _preact.h)(
					'fieldset',
					{ className: 'debug' },
					(0, _preact.h)(_form2.Field, { name: 'showAtomIds', component: _selectCheckbox2.default }),
					(0, _preact.h)(_form2.Field, { name: 'showBondIds', component: _selectCheckbox2.default }),
					(0, _preact.h)(_form2.Field, { name: 'showHalfBondIds', component: _selectCheckbox2.default }),
					(0, _preact.h)(_form2.Field, { name: 'showLoopIds', component: _selectCheckbox2.default })
				)
			),
			!_storageExt.storage.isAvailable() ? (0, _preact.h)(
				'div',
				{ className: 'warning' },
				_storageExt.storage.warningMessage
			) : null
		)
	);
}

exports.default = (0, _preactRedux.connect)(function (store) {
	return {
		server: store.options.app.server ? store.server : null,
		appOpts: store.options.app,
		initState: store.options.settings,
		formState: store.modal.form
	};
}, function (dispatch, props) {
	return {
		onOpenFile: function onOpenFile(newOpts) {
			try {
				dispatch((0, _form.updateFormState)({ result: JSON.parse(newOpts) }));
			} catch (ex) {
				console.info('Bad file');
			}
		},
		onReset: function onReset() {
			return dispatch((0, _form.setDefaultSettings)());
		},
		onOk: function onOk(res) {
			dispatch((0, _options.saveSettings)(res));
			props.onOk(res);
		}
	};
})(Settings);

},{"../../component/dialog":616,"../../component/form/form":619,"../../component/form/measure-input":621,"../../component/form/select-checkbox":622,"../../component/form/systemfonts":624,"../../component/view/accordion":628,"../../component/view/openbutton":631,"../../component/view/savebutton":632,"../../data/schema/options-schema":639,"../../state/modal/form":672,"../../state/options":675,"../../storage-ext":681,"preact":485,"preact-redux":484}],654:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _range2 = require('lodash/fp/range');

var _range3 = _interopRequireDefault(_range2);

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _options = require('../../state/options');

var _state = require('../../state');

var _server = require('../../state/server');

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

var _input = require('../../component/form/input');

var _input2 = _interopRequireDefault(_input);

var _structrender = require('../../component/structrender');

var _structrender2 = _interopRequireDefault(_structrender);

var _openbutton = require('../../component/view/openbutton');

var _openbutton2 = _interopRequireDefault(_openbutton);

var _spin = require('../../component/view/spin');

var _spin2 = _interopRequireDefault(_spin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

function Recognize(prop) {
	var file = prop.file,
	    structStr = prop.structStr,
	    fragment = prop.fragment,
	    version = prop.version,
	    imagoVersions = prop.imagoVersions,
	    partProps = _objectWithoutProperties(prop, ['file', 'structStr', 'fragment', 'version', 'imagoVersions']);

	var onRecognize = partProps.onRecognize,
	    isFragment = partProps.isFragment,
	    onImage = partProps.onImage,
	    onChangeImago = partProps.onChangeImago,
	    props = _objectWithoutProperties(partProps, ['onRecognize', 'isFragment', 'onImage', 'onChangeImago']);

	var _result = function _result() {
		return structStr && !(structStr instanceof Promise) ? { structStr: structStr, fragment: fragment } : null;
	};

	return (0, _preact.h)(
		_dialog2.default,
		{
			title: 'Import From Image',
			className: 'recognize',
			params: props,
			result: function result() {
				return _result(structStr, fragment);
			},
			buttons: [(0, _preact.h)(
				_openbutton2.default,
				{ onLoad: onImage, type: 'image/*' },
				'Choose file\u2026'
			), (0, _preact.h)(
				'span',
				{ className: 'open-filename' },
				file ? file.name : null
			), file && (0, _preact.h)(
				'button',
				{
					onClick: function onClick() {
						return onRecognize(file, version);
					},
					disabled: structStr && typeof structStr !== 'string'
				},
				'Recognize'
			), 'Cancel', 'OK']
		},
		(0, _preact.h)(
			'label',
			{ className: 'change-version' },
			'Imago version:',
			(0, _preact.h)(_input2.default, {
				schema: {
					enum: imagoVersions,
					enumNames: (0, _range3.default)(1, imagoVersions.length + 1).map(function (i) {
						return 'Version ' + i;
					})
				},
				value: version,
				onChange: function onChange(v) {
					return onChangeImago(v);
				}
			})
		),
		(0, _preact.h)(
			'div',
			{ className: 'picture' },
			file && (0, _preact.h)('img', {
				alt: '',
				id: 'pic',
				src: url(file) || '',
				onError: function onError() {
					onImage(null);
					alert("Error, it isn't a picture"); // eslint-disable-line no-undef
				}
			})
		),
		(0, _preact.h)(
			'div',
			{ className: 'output' },
			structStr && (
			// in Edge 38: instanceof Promise always `false`
			structStr instanceof Promise || typeof structStr !== 'string' ? (0, _preact.h)(_spin2.default, null) : (0, _preact.h)(_structrender2.default, { className: 'struct', struct: structStr }))
		),
		(0, _preact.h)(
			'label',
			null,
			(0, _preact.h)(_input2.default, { type: 'checkbox', value: fragment, onChange: function onChange(v) {
					return isFragment(v);
				} }),
			'Load as a fragment'
		)
	);
}

function url(file) {
	if (!file) return null;
	var URL = window.URL || window.webkitURL;
	return URL ? URL.createObjectURL(file) : 'No preview';
}

exports.default = (0, _preactRedux.connect)(function (store) {
	return {
		imagoVersions: store.options.app.imagoVersions,
		file: store.options.recognize.file,
		structStr: store.options.recognize.structStr,
		fragment: store.options.recognize.fragment,
		version: store.options.recognize.version || store.options.app.imagoVersions[0]
	};
}, function (dispatch, props) {
	return {
		isFragment: function isFragment(v) {
			return dispatch((0, _options.shouldFragment)(v));
		},
		onImage: function onImage(file) {
			return dispatch((0, _options.changeImage)(file));
		},
		onRecognize: function onRecognize(file, ver) {
			return dispatch((0, _server.recognize)(file, ver));
		},
		onChangeImago: function onChangeImago(ver) {
			return dispatch((0, _options.changeVersion)(ver));
		},
		onOk: function onOk(res) {
			dispatch((0, _state.load)(res.structStr, {
				rescale: true,
				fragment: res.fragment
			}));
			props.onOk(res);
		}
	};
})(Recognize);

},{"../../component/dialog":616,"../../component/form/input":620,"../../component/structrender":627,"../../component/view/openbutton":631,"../../component/view/spin":633,"../../state":671,"../../state/options":675,"../../state/server":676,"lodash/fp/range":433,"preact":485,"preact-redux":484}],655:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _structformat = require('../../data/convert/structformat');

var structFormat = _interopRequireWildcard(_structformat);

var _templates = require('../../state/templates');

var _form = require('../../state/modal/form');

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

var _form2 = require('../../component/form/form');

var _form3 = _interopRequireDefault(_form2);

var _savebutton = require('../../component/view/savebutton');

var _savebutton2 = _interopRequireDefault(_savebutton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.


var saveSchema = {
	title: 'Save',
	type: 'object',
	properties: {
		filename: {
			title: 'Filename',
			type: 'string',
			maxLength: 128,
			pattern: /^[^.<>:?"*|/\\][^<>:?"*|/\\]*$/,
			invalidMessage: function invalidMessage(res) {
				if (!res) return 'Filename should contain at least one character';
				if (res.length > 128) return 'Filename is too long';
				return "A filename cannot contain characters: \\ / : * ? \" < > | and cannot start with '.'";
			}
		},
		format: {
			title: 'Format',
			enum: Object.keys(structFormat.map),
			enumNames: Object.keys(structFormat.map).map(function (fmt) {
				return structFormat.map[fmt].name;
			})
		}
	}
};

var Save = function (_Component) {
	_inherits(Save, _Component);

	function Save(props) {
		_classCallCheck(this, Save);

		var _this = _possibleConstructorReturn(this, (Save.__proto__ || Object.getPrototypeOf(Save)).call(this, props));

		_this.isRxn = _this.props.struct.hasRxnArrow();

		var formats = [_this.isRxn ? 'rxn' : 'mol', 'smiles'];
		if (_this.props.server) formats.push('smiles-ext', 'smarts', 'inchi', 'inchi-aux', 'cml');

		_this.saveSchema = saveSchema;
		_this.saveSchema.properties.format = Object.assign(_this.saveSchema.properties.format, {
			enum: formats,
			enumNames: formats.map(function (fmt) {
				return structFormat.map[fmt].name;
			})
		});

		_this.changeType(_this.isRxn ? 'rxn' : 'mol').then(function (res) {
			return res instanceof Error ? props.onCancel() : null;
		});
		return _this;
	}

	_createClass(Save, [{
		key: 'changeType',
		value: function changeType(type) {
			var _this2 = this;

			var _props = this.props,
			    struct = _props.struct,
			    server = _props.server,
			    options = _props.options,
			    formState = _props.formState;

			var converted = structFormat.toString(struct, type, server, options);
			return converted.then(function (structStr) {
				_this2.setState({ structStr: structStr });
				setTimeout(function () {
					return _this2.textarea.select();
				}, 10); // TODO: remove hack
			}, function (e) {
				alert(e.message); // eslint-disable-line no-undef
				_this2.props.onResetForm(formState);
				return e;
			});
		}
	}, {
		key: 'render',
		value: function render() {
			var _this3 = this;

			var structStr = this.state.structStr;

			var formState = this.props.formState;
			var _formState$result = formState.result,
			    filename = _formState$result.filename,
			    format = _formState$result.format;

			var warning = structFormat.couldBeSaved(this.props.struct, format);
			var isCleanStruct = this.props.struct.isBlank();

			return (0, _preact.h)(
				_dialog2.default,
				{
					title: 'Save Structure',
					className: 'save',
					params: this.props,
					buttons: [(0, _preact.h)(
						_savebutton2.default,
						{
							data: structStr,
							filename: filename + structFormat.map[format].ext[0],
							type: format.mime,
							server: this.props.server,
							onSave: function onSave() {
								return _this3.props.onOk();
							},
							disabled: !formState.valid || isCleanStruct
						},
						'Save To File\u2026'
					), (0, _preact.h)(
						'button',
						{
							className: 'save-tmpl',
							disabled: isCleanStruct,
							onClick: function onClick() {
								return _this3.props.onTmplSave(_this3.props.struct);
							}
						},
						'Save to Templates'
					), 'Close']
				},
				(0, _preact.h)(
					_form3.default,
					_extends({
						schema: this.saveSchema,
						init: { filename: filename, format: this.isRxn ? 'rxn' : 'mol' }
					}, formState),
					(0, _preact.h)(_form2.Field, { name: 'filename' }),
					(0, _preact.h)(_form2.Field, { name: 'format', onChange: function onChange(value) {
							return _this3.changeType(value);
						} })
				),
				(0, _preact.h)('textarea', {
					value: structStr,
					readOnly: true,
					ref: function ref(el) {
						_this3.textarea = el;
					}
				}),
				warning && (0, _preact.h)(
					'div',
					{ className: 'warning' },
					warning
				)
			);
		}
	}]);

	return Save;
}(_preact.Component);

exports.default = (0, _preactRedux.connect)(function (store) {
	return {
		server: store.options.app.server ? store.server : null,
		struct: store.editor.struct(),
		options: store.options.getServerSettings(),
		formState: store.modal.form
	};
}, function (dispatch) {
	return {
		onTmplSave: function onTmplSave(struct) {
			return dispatch((0, _templates.saveUserTmpl)(struct));
		},
		onResetForm: function onResetForm(prevState) {
			return dispatch((0, _form.updateFormState)(prevState));
		}
	};
})(Save);

},{"../../component/dialog":616,"../../component/form/form":619,"../../component/view/savebutton":632,"../../data/convert/structformat":638,"../../state/modal/form":672,"../../state/templates":678,"preact":485,"preact-redux":484}],656:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

var _input = require('../../component/form/input');

var _input2 = _interopRequireDefault(_input);

var _structeditor = require('../../component/structeditor');

var _structeditor2 = _interopRequireDefault(_structeditor);

var _storageExt = require('../../storage-ext');

var _templates = require('../../state/templates');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.


var EDITOR_STYLES = {
	selectionStyle: { fill: '#47b3ec', stroke: 'none' },
	highlightStyle: { stroke: '#1a7090', 'stroke-width': 1.2 }
};

var Attach = function (_Component) {
	_inherits(Attach, _Component);

	function Attach(_ref) {
		var onInit = _ref.onInit,
		    props = _objectWithoutProperties(_ref, ['onInit']);

		_classCallCheck(this, Attach);

		var _this = _possibleConstructorReturn(this, (Attach.__proto__ || Object.getPrototypeOf(Attach)).call(this));

		_this.tmpl = initTmpl(props.tmpl);
		onInit(_this.tmpl.struct.name, _this.tmpl.props);
		_this.onResult = _this.onResult.bind(_this);
		return _this;
	}

	_createClass(Attach, [{
		key: 'onResult',
		value: function onResult() {
			var _props = this.props,
			    name = _props.name,
			    atomid = _props.atomid,
			    bondid = _props.bondid;

			return name && (name !== this.tmpl.struct.name || atomid !== this.tmpl.props.atomid || bondid !== this.tmpl.props.bondid) ? { name: name, attach: { atomid: atomid, bondid: bondid } } : null;
		}
	}, {
		key: 'render',
		value: function render() {
			var _props2 = this.props,
			    name = _props2.name,
			    atomid = _props2.atomid,
			    bondid = _props2.bondid,
			    onNameEdit = _props2.onNameEdit,
			    onAttachEdit = _props2.onAttachEdit,
			    prop = _objectWithoutProperties(_props2, ['name', 'atomid', 'bondid', 'onNameEdit', 'onAttachEdit']);

			var struct = this.tmpl.struct;
			var options = Object.assign(EDITOR_STYLES, { scale: getScale(struct) });

			return (0, _preact.h)(
				_dialog2.default,
				{
					title: 'Template Edit',
					className: 'attach',
					result: this.onResult,
					params: prop
				},
				(0, _preact.h)(
					'label',
					null,
					'Template name:',
					(0, _preact.h)(_input2.default, { value: name, onChange: onNameEdit })
				),
				(0, _preact.h)(
					'label',
					null,
					'Choose attachment atom and bond:'
				),
				(0, _preact.h)(_structeditor2.default, {
					className: 'editor',
					struct: struct,
					onAttachEdit: onAttachEdit,
					tool: 'attach',
					toolOpts: { atomid: atomid, bondid: bondid },
					options: options
				}),
				!_storageExt.storage.isAvailable() ? (0, _preact.h)(
					'div',
					{ className: 'warning' },
					_storageExt.storage.warningMessage
				) : null
			);
		}
	}]);

	return Attach;
}(_preact.Component);

exports.default = (0, _preactRedux.connect)(function (store) {
	return _extends({}, store.templates.attach);
}, function (dispatch) {
	return {
		onInit: function onInit(name, ap) {
			return dispatch((0, _templates.initAttach)(name, ap));
		},
		onAttachEdit: function onAttachEdit(ap) {
			return dispatch((0, _templates.setAttachPoints)(ap));
		},
		onNameEdit: function onNameEdit(name) {
			return dispatch((0, _templates.setTmplName)(name));
		}
	};
})(Attach);


function initTmpl(tmpl) {
	var normTmpl = {
		struct: structNormalization(tmpl.struct),
		props: {
			atomid: +tmpl.props.atomid || 0,
			bondid: +tmpl.props.bondid || 0
		}
	};
	normTmpl.struct.name = tmpl.struct.name;
	return normTmpl;
}

function structNormalization(struct) {
	var normStruct = struct.clone();
	var cbb = normStruct.getCoordBoundingBox();

	normStruct.atoms.forEach(function (atom) {
		atom.pp = atom.pp.sub(cbb.min);
	});

	normStruct.sgroups.forEach(function (sg) {
		sg.pp = sg.pp ? sg.pp.sub(cbb.min) : cbb.min;
	});

	normStruct.rxnArrows.forEach(function (rxnArrow) {
		rxnArrow.pp = rxnArrow.pp.sub(cbb.min);
	});

	normStruct.rxnPluses.forEach(function (rxnPlus) {
		rxnPlus.pp = rxnPlus.pp.sub(cbb.min);
	});

	return normStruct;
}

function getScale(struct) {
	var cbb = struct.getCoordBoundingBox();
	var VIEW_SIZE = 220;
	var scale = VIEW_SIZE / Math.max(cbb.max.y - cbb.min.y, cbb.max.x - cbb.min.x);

	if (scale < 35) scale = 35;
	if (scale > 60) scale = 60;
	return scale;
}

},{"../../component/dialog":616,"../../component/form/input":620,"../../component/structeditor":626,"../../state/templates":678,"../../storage-ext":681,"preact":485,"preact-redux":484}],657:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _omit2 = require('lodash/fp/omit');

var _omit3 = _interopRequireDefault(_omit2);

var _reduce2 = require('lodash/fp/reduce');

var _reduce3 = _interopRequireDefault(_reduce2);

var _filter3 = require('lodash/fp/filter');

var _filter4 = _interopRequireDefault(_filter3);

var _flow2 = require('lodash/fp/flow');

var _flow3 = _interopRequireDefault(_flow2);

var _chunk2 = require('lodash/fp/chunk');

var _chunk3 = _interopRequireDefault(_chunk2);

var _escapeRegExp2 = require('lodash/fp/escapeRegExp');

var _escapeRegExp3 = _interopRequireDefault(_escapeRegExp2);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _reselect = require('reselect');

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _sdf = require('../../../chem/sdf');

var _sdf2 = _interopRequireDefault(_sdf);

var _visibleview = require('../../component/view/visibleview');

var _visibleview2 = _interopRequireDefault(_visibleview);

var _structrender = require('../../component/structrender');

var _structrender2 = _interopRequireDefault(_structrender);

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

var _savebutton = require('../../component/view/savebutton');

var _savebutton2 = _interopRequireDefault(_savebutton);

var _input = require('../../component/form/input');

var _input2 = _interopRequireDefault(_input);

var _select = require('../../component/form/select');

var _select2 = _interopRequireDefault(_select);

var _templates = require('../../state/templates');

var _state = require('../../state');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

var GREEK_SIMBOLS = {
	Alpha: 'A',
	alpha: 'α',
	Beta: 'B',
	beta: 'β',
	Gamma: 'Г',
	gamma: 'γ'
};

function tmplName(tmpl, i) {
	console.assert(tmpl.props && tmpl.props.group, 'No group');
	return tmpl.struct.name || tmpl.props.group + ' template ' + (i + 1);
}

function partition(n, array) {
	console.warn('partition', n);
	return (0, _chunk3.default)(n)(array);
}

var greekRe = new RegExp('\\b' + Object.keys(GREEK_SIMBOLS).join('\\b|\\b') + '\\b', 'g');
function greekify(str) {
	return str.replace(greekRe, function (sym) {
		return GREEK_SIMBOLS[sym];
	});
}

var filterLibSelector = (0, _reselect.createSelector)(function (props) {
	return props.lib;
}, function (props) {
	return props.filter;
}, filterLib);

function filterLib(lib, filter) {
	console.warn('Filter', filter);
	var re = new RegExp((0, _escapeRegExp3.default)(greekify(filter)), 'i');
	return (0, _flow3.default)((0, _filter4.default)(function (item) {
		return !filter || re.test(greekify(item.struct.name)) || re.test(greekify(item.props.group));
	}), (0, _reduce3.default)(function (res, item) {
		if (!res[item.props.group]) res[item.props.group] = [item];else res[item.props.group].push(item);
		return res;
	}, {}))(lib);
}

var libRowsSelector = (0, _reselect.createSelector)(function (props) {
	return props.lib;
}, function (props) {
	return props.group;
}, function (props) {
	return props.COLS;
}, libRows);

function libRows(lib, group, COLS) {
	console.warn('Group', group);
	return partition(COLS, lib[group]);
}

function RenderTmpl(_ref) {
	var tmpl = _ref.tmpl,
	    props = _objectWithoutProperties(_ref, ['tmpl']);

	return tmpl.props && tmpl.props.prerender ? (0, _preact.h)(
		'svg',
		props,
		(0, _preact.h)('use', { xlinkHref: tmpl.props.prerender })
	) : (0, _preact.h)(_structrender2.default, _extends({ struct: tmpl.struct, options: { autoScaleMargin: 15 } }, props));
}

var TemplateLib = function (_Component) {
	_inherits(TemplateLib, _Component);

	function TemplateLib() {
		_classCallCheck(this, TemplateLib);

		return _possibleConstructorReturn(this, (TemplateLib.__proto__ || Object.getPrototypeOf(TemplateLib)).apply(this, arguments));
	}

	_createClass(TemplateLib, [{
		key: 'select',
		value: function select(tmpl) {
			if (tmpl === this.props.selected) this.props.onOk(this.result());else this.props.onSelect(tmpl);
		}
	}, {
		key: 'result',
		value: function result() {
			var tmpl = this.props.selected;
			console.assert(!tmpl || tmpl.props, 'Incorrect SDF parse');
			return tmpl ? {
				struct: tmpl.struct,
				aid: parseInt(tmpl.props.atomid) || null,
				bid: parseInt(tmpl.props.bondid) || null
			} : null;
		}
	}, {
		key: 'renderRow',
		value: function renderRow(row, index, COLS) {
			var _this2 = this;

			return (0, _preact.h)(
				'div',
				{ className: 'tr', key: index },
				row.map(function (tmpl, i) {
					return (0, _preact.h)(
						'div',
						{
							className: tmpl === _this2.props.selected ? 'td selected' : 'td',
							title: greekify(tmplName(tmpl, index * COLS + i))
						},
						(0, _preact.h)(RenderTmpl, { tmpl: tmpl, className: 'struct', onClick: function onClick() {
								return _this2.select(tmpl);
							} }),
						(0, _preact.h)(
							'button',
							{ className: 'attach-button', onClick: function onClick() {
									return _this2.props.onAttach(tmpl);
								} },
							'Edit'
						)
					);
				})
			);
		}
	}, {
		key: 'render',
		value: function render() {
			var _this3 = this;

			var COLS = 3;

			var _props = this.props,
			    filter = _props.filter,
			    onFilter = _props.onFilter,
			    onChangeGroup = _props.onChangeGroup,
			    props = _objectWithoutProperties(_props, ['filter', 'onFilter', 'onChangeGroup']);

			var group = props.group;
			var lib = filterLibSelector(this.props);
			group = lib[group] ? group : Object.keys(lib)[0];

			return (0, _preact.h)(
				_dialog2.default,
				{
					title: 'Template Library',
					className: 'template-lib',
					params: (0, _omit3.default)(['group'], props),
					result: function result() {
						return _this3.result();
					},
					buttons: [(0, _preact.h)(
						_savebutton2.default,
						{
							data: _sdf2.default.stringify(this.props.lib),
							filename: 'ketcher-tmpls.sdf'
						},
						'Save To SDF\u2026'
					), 'Cancel', 'OK']
				},
				(0, _preact.h)(
					'label',
					null,
					'Filter:',
					(0, _preact.h)(_input2.default, {
						type: 'search',
						value: filter,
						onChange: function onChange(value) {
							return onFilter(value);
						}
					})
				),
				(0, _preact.h)(_input2.default, {
					className: 'groups',
					component: _select2.default,
					splitIndexes: [Object.keys(lib).indexOf('User Templates')],
					value: group,
					onChange: function onChange(g) {
						return onChangeGroup(g);
					},
					schema: {
						enum: Object.keys(lib),
						enumNames: Object.keys(lib).map(function (g) {
							return greekify(g);
						})
					}
				}),
				(0, _preact.h)(
					_visibleview2.default,
					{
						data: libRowsSelector({ lib: lib, group: group, COLS: COLS }),
						rowHeight: 120,
						className: 'table'
					},
					function (row, i) {
						return _this3.renderRow(row, i, COLS);
					}
				)
			);
		}
	}]);

	return TemplateLib;
}(_preact.Component);

exports.default = (0, _preactRedux.connect)(function (store) {
	return _extends({}, (0, _omit3.default)(['attach'], store.templates));
}, function (dispatch, props) {
	return {
		onFilter: function onFilter(filter) {
			return dispatch((0, _templates.changeFilter)(filter));
		},
		onSelect: function onSelect(tmpl) {
			return dispatch((0, _templates.selectTmpl)(tmpl));
		},
		onChangeGroup: function onChangeGroup(group) {
			return dispatch((0, _templates.changeGroup)(group));
		},
		onAttach: function onAttach(tmpl) {
			return dispatch((0, _templates.editTmpl)(tmpl));
		},
		onOk: function onOk(res) {
			dispatch((0, _state.onAction)({ tool: 'template', opts: res }));
			props.onOk(res);
		}
	};
})(TemplateLib);

},{"../../../chem/sdf":529,"../../component/dialog":616,"../../component/form/input":620,"../../component/form/select":623,"../../component/structrender":627,"../../component/view/savebutton":632,"../../component/view/visibleview":635,"../../state":671,"../../state/templates":678,"lodash/fp/chunk":419,"lodash/fp/escapeRegExp":422,"lodash/fp/filter":423,"lodash/fp/flow":426,"lodash/fp/omit":429,"lodash/fp/reduce":434,"preact":485,"preact-redux":484,"reselect":508}],658:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _capitalize2 = require('lodash/fp/capitalize');

var _capitalize3 = _interopRequireDefault(_capitalize2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _structSchema = require('../../data/schema/struct-schema');

var _form = require('../../component/form/form');

var _form2 = _interopRequireDefault(_form);

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

var _element = require('../../../chem/element');

var _element2 = _interopRequireDefault(_element);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

function ElementNumber(props, _ref) {
	var stateStore = _ref.stateStore;
	var result = stateStore.props.result;

	return (0, _preact.h)(
		'label',
		null,
		'Number:',
		(0, _preact.h)('input', {
			className: 'number',
			type: 'text',
			readOnly: true,
			value: _element2.default.map[(0, _capitalize3.default)(result.label)] || ''
		})
	);
}

function Atom(props) {
	var formState = props.formState,
	    prop = _objectWithoutProperties(props, ['formState']);

	return (0, _preact.h)(
		_dialog2.default,
		{
			title: 'Atom Properties',
			className: 'atom-props',
			result: function result() {
				return formState.result;
			},
			valid: function valid() {
				return formState.valid;
			},
			params: prop
		},
		(0, _preact.h)(
			_form2.default,
			_extends({
				schema: _structSchema.atom,
				customValid: {
					label: function label(l) {
						return atomValid(l);
					},
					charge: function charge(ch) {
						return chargeValid(ch);
					}
				},
				init: prop
			}, formState),
			(0, _preact.h)(
				'fieldset',
				{ className: 'main' },
				(0, _preact.h)(_form.Field, { name: 'label' }),
				(0, _preact.h)(_form.Field, { name: 'alias' }),
				(0, _preact.h)(ElementNumber, null),
				(0, _preact.h)(_form.Field, { name: 'charge', maxlength: '5' }),
				(0, _preact.h)(_form.Field, { name: 'explicitValence' }),
				(0, _preact.h)(_form.Field, { name: 'isotope' }),
				(0, _preact.h)(_form.Field, { name: 'radical' })
			),
			(0, _preact.h)(
				'fieldset',
				{ className: 'query' },
				(0, _preact.h)(
					'legend',
					null,
					'Query specific'
				),
				(0, _preact.h)(_form.Field, { name: 'ringBondCount' }),
				(0, _preact.h)(_form.Field, { name: 'hCount' }),
				(0, _preact.h)(_form.Field, { name: 'substitutionCount' }),
				(0, _preact.h)(_form.Field, { name: 'unsaturatedAtom' })
			),
			(0, _preact.h)(
				'fieldset',
				{ className: 'reaction' },
				(0, _preact.h)(
					'legend',
					null,
					'Reaction flags'
				),
				(0, _preact.h)(_form.Field, { name: 'invRet' }),
				(0, _preact.h)(_form.Field, { name: 'exactChangeFlag' })
			)
		)
	);
}

function atomValid(label) {
	return label && !!_element2.default.map[(0, _capitalize3.default)(label)];
}

function chargeValid(charge) {
	var pch = _structSchema.atom.properties.charge.pattern.exec(charge);
	return !(pch === null || pch[1] !== '' && pch[3] !== '');
}

exports.default = (0, _preactRedux.connect)(function (store) {
	return { formState: store.modal.form };
})(Atom);

},{"../../../chem/element":520,"../../component/dialog":616,"../../component/form/form":619,"../../data/schema/struct-schema":642,"lodash/fp/capitalize":418,"preact":485,"preact-redux":484}],659:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _structSchema = require('../../data/schema/struct-schema');

var _form = require('../../component/form/form');

var _form2 = _interopRequireDefault(_form);

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

function AttachmentPoints(props) {
	var formState = props.formState,
	    prop = _objectWithoutProperties(props, ['formState']);

	return (0, _preact.h)(
		_dialog2.default,
		{
			title: 'Attachment Points',
			className: 'attach-points',
			result: function result() {
				return formState.result;
			},
			valid: function valid() {
				return formState.valid;
			},
			params: prop
		},
		(0, _preact.h)(
			_form2.default,
			_extends({ schema: _structSchema.attachmentPoints, init: prop }, formState),
			(0, _preact.h)(_form.Field, { name: 'primary' }),
			(0, _preact.h)(_form.Field, { name: 'secondary' })
		)
	);
}

exports.default = (0, _preactRedux.connect)(function (store) {
	return { formState: store.modal.form };
})(AttachmentPoints);

},{"../../component/dialog":616,"../../component/form/form":619,"../../data/schema/struct-schema":642,"preact":485,"preact-redux":484}],660:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.automapSchema = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _form = require('../../component/form/form');

var _form2 = _interopRequireDefault(_form);

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

var _server = require('../../state/server');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                             /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

var automapSchema = exports.automapSchema = {
	title: 'Reaction Auto-Mapping',
	type: 'object',
	required: ['mode'],
	properties: {
		mode: {
			title: 'Mode',
			enum: ['discard', 'keep', 'alter', 'clear'],
			enumNames: ['Discard', 'Keep', 'Alter', 'Clear'],
			default: 'discard'
		}
	}
};

function Automap(props) {
	var formState = props.formState,
	    prop = _objectWithoutProperties(props, ['formState']);

	return (0, _preact.h)(
		_dialog2.default,
		{
			title: 'Reaction Auto-Mapping',
			className: 'automap',
			result: function result() {
				return formState.result;
			},
			valid: function valid() {
				return formState.valid;
			},
			params: prop
		},
		(0, _preact.h)(
			_form2.default,
			_extends({ schema: automapSchema }, formState),
			(0, _preact.h)(_form.Field, { name: 'mode' })
		)
	);
}

exports.default = (0, _preactRedux.connect)(function (store) {
	return { formState: store.modal.form };
}, function (dispatch, props) {
	return {
		onOk: function onOk(res) {
			dispatch((0, _server.automap)(res));
			props.onOk(res);
		}
	};
})(Automap);

},{"../../component/dialog":616,"../../component/form/form":619,"../../state/server":676,"preact":485,"preact-redux":484}],661:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _structSchema = require('../../data/schema/struct-schema');

var _form = require('../../component/form/form');

var _form2 = _interopRequireDefault(_form);

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

function Bond(props) {
	var formState = props.formState,
	    prop = _objectWithoutProperties(props, ['formState']);

	return (0, _preact.h)(
		_dialog2.default,
		{
			title: 'Bond Properties',
			className: 'bond',
			result: function result() {
				return formState.result;
			},
			valid: function valid() {
				return formState.valid;
			},
			params: prop
		},
		(0, _preact.h)(
			_form2.default,
			_extends({ schema: _structSchema.bond, init: prop }, formState),
			(0, _preact.h)(_form.Field, { name: 'type' }),
			(0, _preact.h)(_form.Field, { name: 'topology' }),
			(0, _preact.h)(_form.Field, { name: 'center' })
		)
	);
}

exports.default = (0, _preactRedux.connect)(function (store) {
	return { formState: store.modal.form };
})(Bond);

},{"../../component/dialog":616,"../../component/form/form":619,"../../data/schema/struct-schema":642,"preact":485,"preact-redux":484}],662:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _capitalize2 = require('lodash/fp/capitalize');

var _capitalize3 = _interopRequireDefault(_capitalize2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _element = require('../../../chem/element');

var _element2 = _interopRequireDefault(_element);

var _structSchema = require('../../data/schema/struct-schema');

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

var _form = require('../../component/form/form');

var _form2 = _interopRequireDefault(_form);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

function serialize(lc) {
	var charge = Math.abs(lc.charge);
	var radical = ['', ':', '.', '^^'][lc.radical] || '';
	var sign = '';
	if (charge) sign = lc.charge < 0 ? '-' : '+';
	return (lc.isotope || '') + lc.label + radical + (charge > 1 ? charge : '') + sign;
}

function deserialize(value) {
	var match = value.match(/^(\d+)?([a-z*]{1,3})(\.|:|\^\^)?(\d+[-+]|[-+])?$/i); // TODO: radical on last place
	if (match) {
		var label = match[2] === '*' ? 'A' : (0, _capitalize3.default)(match[2]);
		var charge = 0;
		var isotope = 0;
		var radical = 0;

		if (match[1]) isotope = parseInt(match[1]);

		if (match[3]) radical = { ':': 1, '.': 2, '^^': 3 }[match[3]];

		if (match[4]) {
			charge = parseInt(match[4]);
			if (isNaN(charge)) // eslint-disable-line
				charge = 1;
			if (match[4].endsWith('-')) charge = -charge;
		}
		// Not consistant
		if (label === 'A' || label === 'Q' || label === 'X' || label === 'M' || _element2.default.map[label]) return { label: label, charge: charge, isotope: isotope, radical: radical };
	}
	return null;
}

function LabelEdit(props) {
	var init = { label: props.letter || serialize(props) };

	var formState = props.formState,
	    prop = _objectWithoutProperties(props, ['formState']);

	var _result = formState.result,
	    _valid = formState.valid;

	return (0, _preact.h)(
		_dialog2.default,
		{
			title: 'Label Edit',
			className: 'labeledit',
			valid: function valid() {
				return _valid;
			},
			result: function result() {
				return deserialize(_result.label);
			},
			params: prop
		},
		(0, _preact.h)(
			_form2.default,
			_extends({
				schema: _structSchema.labelEdit,
				customValid: { label: function label(l) {
						return deserialize(l);
					} },
				init: init
			}, formState),
			(0, _preact.h)(_form.Field, { name: 'label', maxlength: '20', size: '10' })
		)
	);
}

exports.default = (0, _preactRedux.connect)(function (store) {
	return { formState: store.modal.form };
})(LabelEdit);

},{"../../../chem/element":520,"../../component/dialog":616,"../../component/form/form":619,"../../data/schema/struct-schema":642,"lodash/fp/capitalize":418,"preact":485,"preact-redux":484}],663:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /****************************************************************************
                                                                                                                                                                                                                                                                   * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                   * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                   * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                   * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                   * limitations under the License.
                                                                                                                                                                                                                                                                   ***************************************************************************/

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _structSchema = require('../../data/schema/struct-schema');

var _form = require('../../component/form/form');

var _form2 = _interopRequireDefault(_form);

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function IfThenSelect(props, _ref) {
	var schema = _ref.schema;
	var name = props.name,
	    rgids = props.rgids;


	var desc = {
		title: schema.properties[name].title,
		enum: [0],
		enumNames: ['Always']
	};

	rgids.forEach(function (label) {
		if (props.label !== label) {
			desc.enum.push(label);
			desc.enumNames.push('IF R' + props.label + ' THEN R' + label);
		}
	});

	return (0, _preact.h)(_form.Field, _extends({ name: name, schema: desc }, props));
}

function RgroupLogic(props) {
	var formState = props.formState,
	    label = props.label,
	    rgroupLabels = props.rgroupLabels,
	    prop = _objectWithoutProperties(props, ['formState', 'label', 'rgroupLabels']);

	return (0, _preact.h)(
		_dialog2.default,
		{
			title: 'R-Group Logic',
			className: 'rgroup-logic',
			result: function result() {
				return formState.result;
			},
			valid: function valid() {
				return formState.valid;
			},
			params: prop
		},
		(0, _preact.h)(
			_form2.default,
			_extends({
				schema: _structSchema.rgroupLogic,
				customValid: { range: function range(r) {
						return rangeConv(r);
					} },
				init: prop
			}, formState),
			(0, _preact.h)(_form.Field, { name: 'range' }),
			(0, _preact.h)(_form.Field, { name: 'resth' }),
			(0, _preact.h)(IfThenSelect, { name: 'ifthen', className: 'cond', label: label, rgids: rgroupLabels })
		)
	);
}

function rangeConv(range) {
	// structConv
	var res = range.replace(/\s*/g, '').replace(/,+/g, ',').replace(/^,/, '').replace(/,$/, '');

	return res.split(',').every(function (s) {
		return s.match(/^[>,<=]?[0-9]+$/g) || s.match(/^[0-9]+-[0-9]+$/g);
	});
}

exports.default = (0, _preactRedux.connect)(function (store) {
	return { formState: store.modal.form };
})(RgroupLogic);

},{"../../component/dialog":616,"../../component/form/form":619,"../../data/schema/struct-schema":642,"preact":485,"preact-redux":484}],664:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _structSchema = require('../../data/schema/struct-schema');

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

var _form = require('../../component/form/form');

var _form2 = _interopRequireDefault(_form);

var _buttonlist = require('../../component/form/buttonlist');

var _buttonlist2 = _interopRequireDefault(_buttonlist);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

function RGroup(_ref) {
	var disabledIds = _ref.disabledIds,
	    values = _ref.values,
	    formState = _ref.formState,
	    type = _ref.type,
	    props = _objectWithoutProperties(_ref, ['disabledIds', 'values', 'formState', 'type']);

	return (0, _preact.h)(
		_dialog2.default,
		{
			title: 'R-Group',
			className: 'rgroup',
			params: props,
			result: function result() {
				return formState.result;
			}
		},
		(0, _preact.h)(
			_form2.default,
			_extends({ schema: _structSchema.rgroupSchema, init: { values: values } }, formState),
			(0, _preact.h)(_form.Field, {
				name: 'values',
				multiple: type === 'atom',
				labelPos: false,
				component: _buttonlist2.default,
				disabledIds: disabledIds
			})
		)
	);
}

exports.default = (0, _preactRedux.connect)(function (store) {
	return { formState: store.modal.form };
})(RGroup);

},{"../../component/dialog":616,"../../component/form/buttonlist":617,"../../component/form/form":619,"../../data/schema/struct-schema":642,"preact":485,"preact-redux":484}],665:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _form = require('../../component/form/form');

var _form2 = _interopRequireDefault(_form);

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

var _combobox = require('../../component/form/combobox');

var _combobox2 = _interopRequireDefault(_combobox);

var _sdataSchema = require('../../data/schema/sdata-schema');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

function SelectInput(_ref) {
	var title = _ref.title,
	    name = _ref.name,
	    schema = _ref.schema,
	    prop = _objectWithoutProperties(_ref, ['title', 'name', 'schema']);

	var inputSelect = Object.keys(schema).reduce(function (acc, item) {
		acc.enum.push(item);
		acc.enumNames.push(schema[item].title || item);
		return acc;
	}, {
		title: title,
		type: 'string',
		default: '',
		minLength: 1,
		enum: [],
		enumNames: []
	});

	return (0, _preact.h)(_form.Field, _extends({ name: name, schema: inputSelect, component: _combobox2.default }, prop));
}

function SData(_ref2) {
	var context = _ref2.context,
	    fieldName = _ref2.fieldName,
	    fieldValue = _ref2.fieldValue,
	    type = _ref2.type,
	    radiobuttons = _ref2.radiobuttons,
	    formState = _ref2.formState,
	    prop = _objectWithoutProperties(_ref2, ['context', 'fieldName', 'fieldValue', 'type', 'radiobuttons', 'formState']);

	var _result = formState.result,
	    _valid = formState.valid;


	var init = {
		context: context,
		fieldName: fieldName || (0, _sdataSchema.getSdataDefault)(context),
		type: type,
		radiobuttons: radiobuttons
	};

	init.fieldValue = fieldValue || (0, _sdataSchema.getSdataDefault)(context, init.fieldName);

	var formSchema = _sdataSchema.sdataSchema[_result.context][_result.fieldName] || _sdataSchema.sdataCustomSchema;

	var serialize = {
		context: _result.context.trim(),
		fieldName: _result.fieldName.trim(),
		fieldValue: typeof _result.fieldValue === 'string' ? _result.fieldValue.trim() : _result.fieldValue
	};

	return (0, _preact.h)(
		_dialog2.default,
		{
			title: 'S-Group Properties',
			className: 'sgroup',
			result: function result() {
				return _result;
			},
			valid: function valid() {
				return _valid;
			},
			params: prop
		},
		(0, _preact.h)(
			_form2.default,
			_extends({ serialize: serialize, schema: formSchema, init: init }, formState),
			(0, _preact.h)(_form.SelectOneOf, { title: 'Context', name: 'context', schema: _sdataSchema.sdataSchema }),
			(0, _preact.h)(
				'fieldset',
				{ className: 'data' },
				(0, _preact.h)(SelectInput, { title: 'Field name', name: 'fieldName', schema: _sdataSchema.sdataSchema[_result.context] }),
				content(formSchema, _result.context, _result.fieldName)
			)
		)
	);
}

var content = function content(schema, context, fieldName) {
	return Object.keys(schema.properties).filter(function (prop) {
		return prop !== 'type' && prop !== 'context' && prop !== 'fieldName';
	}).map(function (prop) {
		return prop === 'radiobuttons' ? (0, _preact.h)(_form.Field, { name: prop, type: 'radio', key: context + '-' + fieldName + '-' + prop + '-radio' }) : (0, _preact.h)(_form.Field, { name: prop, type: 'textarea', multiple: true, size: '10', key: context + '-' + fieldName + '-' + prop + '-select' });
	});
};

exports.default = (0, _preactRedux.connect)(function (store) {
	return { formState: store.modal.form };
})(SData);

},{"../../component/dialog":616,"../../component/form/combobox":618,"../../component/form/form":619,"../../data/schema/sdata-schema":641,"preact":485,"preact-redux":484}],666:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _preact = require('preact');

var _preactRedux = require('preact-redux');

var _structSchema = require('../../data/schema/struct-schema');

var _form = require('../../component/form/form');

var _form2 = _interopRequireDefault(_form);

var _dialog = require('../../component/dialog');

var _dialog2 = _interopRequireDefault(_dialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

function Sgroup(_ref) {
	var formState = _ref.formState,
	    prop = _objectWithoutProperties(_ref, ['formState']);

	var _result = formState.result,
	    _valid = formState.valid;


	var type = _result.type;

	return (0, _preact.h)(
		_dialog2.default,
		{
			title: 'S-Group Properties',
			className: 'sgroup',
			result: function result() {
				return _result;
			},
			valid: function valid() {
				return _valid;
			},
			params: prop
		},
		(0, _preact.h)(
			_form2.default,
			_extends({ schema: _structSchema.sgroupMap[type], init: prop }, formState),
			(0, _preact.h)(_form.SelectOneOf, { title: 'Type', name: 'type', schema: _structSchema.sgroupMap }),
			(0, _preact.h)(
				'fieldset',
				{ className: type === 'DAT' ? 'data' : 'base' },
				content(type)
			)
		)
	);
}

var content = function content(type) {
	return Object.keys(_structSchema.sgroupMap[type].properties).filter(function (prop) {
		return prop !== 'type';
	}).map(function (prop) {
		var props = {};
		if (prop === 'name') props.maxlength = 15;
		if (prop === 'fieldName') props.maxlength = 30;
		if (prop === 'fieldValue') props.type = 'textarea';
		if (prop === 'radiobuttons') props.type = 'radio';

		return (0, _preact.h)(_form.Field, _extends({ name: prop, key: type + '-' + prop }, props));
	});
};

exports.default = (0, _preactRedux.connect)(function (store) {
	return { formState: store.modal.form };
})(Sgroup);

},{"../../component/dialog":616,"../../component/form/form":619,"../../data/schema/struct-schema":642,"preact":485,"preact-redux":484}],667:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _app = require('./app');

var _app2 = _interopRequireDefault(_app);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function init(opts, apiServer) {
  var ketcherWindow = document.querySelector('[role=application]') || document.body;
  return (0, _app2.default)(ketcherWindow, opts, apiServer);
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

exports.default = init;

},{"./app":611}],668:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _pickBy2 = require('lodash/fp/pickBy');

var _pickBy3 = _interopRequireDefault(_pickBy2);

var _isEmpty2 = require('lodash/fp/isEmpty');

var _isEmpty3 = _interopRequireDefault(_isEmpty2);

var _isEqual2 = require('lodash/fp/isEqual');

var _isEqual3 = _interopRequireDefault(_isEqual2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
	var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
	var _ref4 = arguments[1];

	var type = _ref4.type,
	    action = _ref4.action,
	    params = _objectWithoutProperties(_ref4, ['type', 'action']);

	switch (type) {
		case 'INIT':
			action = _action2.default['select-lasso'].action;
		case 'ACTION':
			// eslint-disable-line no-case-declarations
			var activeTool = execute(state && state.activeTool, _extends({}, params, { action: action
			}));
		case 'UPDATE':
			return Object.keys(_action2.default).reduce(function (res, key) {
				var value = status(key, res.activeTool, params);
				if (!(0, _isEmpty3.default)(value)) res[key] = value;
				return res;
			}, { activeTool: activeTool || state.activeTool });
		default:
			return state;
	}
};

var _action = require('../../action');

var _action2 = _interopRequireDefault(_action);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

function execute(activeTool, _ref) {
	var action = _ref.action,
	    editor = _ref.editor,
	    server = _ref.server,
	    options = _ref.options;

	if (action.tool) {
		if (editor.tool(action.tool, action.opts)) return action;
	} else if (typeof action === 'function') {
		action(editor, server, options);
	} else {
		console.info('no action');
	}
	return activeTool;
}

function selected(actObj, activeTool, _ref2) {
	var editor = _ref2.editor,
	    server = _ref2.server;

	if (typeof actObj.selected === 'function') return actObj.selected(editor, server);else if (actObj.action && actObj.action.tool) return (0, _isEqual3.default)(activeTool, actObj.action);
	return false;
}

function disabled(actObj, _ref3) {
	var editor = _ref3.editor,
	    server = _ref3.server,
	    options = _ref3.options;

	if (typeof actObj.disabled === 'function') return actObj.disabled(editor, server, options);
	return false;
}

function status(key, activeTool, params) {
	var actObj = _action2.default[key];
	return (0, _pickBy3.default)(function (x) {
		return x;
	}, {
		selected: selected(actObj, activeTool, params),
		disabled: disabled(actObj, params)
	});
}

},{"../../action":604,"lodash/fp/isEmpty":427,"lodash/fp/isEqual":428,"lodash/fp/pickBy":431}],669:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _debounce2 = require('lodash/fp/debounce');

var _debounce3 = _interopRequireDefault(_debounce2);

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /****************************************************************************
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * Copyright 2018 EPAM Systems

icensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
ou may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
ee the License for the specific language governing permissions and
limitations under the License.


exports.default = initEditor;

var _element = require('../../../chem/element');

var _element2 = _interopRequireDefault(_element);

var _structconv = require('../../data/convert/structconv');

var _action = require('../../action');

var _action2 = _interopRequireDefault(_action);

var _modal = require('../modal');

var _server = require('../server');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function initEditor(dispatch, getState) {
	var updateAction = (0, _debounce3.default)(100, function () {
		return dispatch({ type: 'UPDATE' });
	});
	var sleep = function sleep(time) {
		return new Promise(function (resolve) {
			return setTimeout(resolve, time);
		});
	};

	function resetToSelect(dispatch, getState) {
		// eslint-disable-line no-shadow
		var state = getState();
		var activeTool = state.actionState.activeTool.tool;
		if (activeTool === 'select') return;
		var selectMode = state.toolbar.visibleTools.select;
		var resetOption = state.options.settings.resetToSelect;
		if (resetOption === true || resetOption === activeTool) // example: 'paste'
			dispatch({ type: 'ACTION', action: _action2.default[selectMode].action });else updateAction();
	}

	return {
		onInit: function onInit(editor) {
			dispatch({ type: 'INIT', editor: editor });
		},
		onChange: function onChange(action) {
			if (action === undefined) sleep(0).then(function () {
				return dispatch(resetToSelect);
			}); // new tool in reducer
			else dispatch(resetToSelect);
		},
		onSelectionChange: function onSelectionChange() {
			updateAction();
		},
		onElementEdit: function onElementEdit(selem) {
			var elem = (0, _structconv.fromElement)(selem);
			var dlg = null;
			if (_element2.default.map[elem.label]) {
				dlg = (0, _modal.openDialog)(dispatch, 'atomProps', elem);
			} else if (Object.keys(elem).length === 1 && 'ap' in elem) {
				dlg = (0, _modal.openDialog)(dispatch, 'attachmentPoints', elem.ap).then(function (res) {
					return { ap: res };
				});
			} else if (elem.type === 'list' || elem.type === 'not-list') {
				dlg = (0, _modal.openDialog)(dispatch, 'period-table', elem);
			} else if (elem.type === 'rlabel') {
				var rgroups = getState().editor.struct().rgroups;
				var params = {
					type: 'atom',
					values: elem.values,
					disabledIds: Array.from(rgroups.entries()).reduce(function (acc, _ref) {
						var _ref2 = _slicedToArray(_ref, 2),
						    rgid = _ref2[0],
						    rg = _ref2[1];

						if (rg.frags.has(elem.fragId)) acc.push(rgid);

						return acc;
					}, [])
				};
				dlg = (0, _modal.openDialog)(dispatch, 'rgroup', params).then(function (res) {
					return {
						values: res.values,
						type: 'rlabel'
					};
				});
			} else {
				dlg = (0, _modal.openDialog)(dispatch, 'period-table', elem);
			}

			return dlg.then(_structconv.toElement);
		},
		onQuickEdit: function onQuickEdit(atom) {
			return (0, _modal.openDialog)(dispatch, 'labelEdit', atom);
		},
		onBondEdit: function onBondEdit(bond) {
			return (0, _modal.openDialog)(dispatch, 'bondProps', (0, _structconv.fromBond)(bond)).then(_structconv.toBond);
		},
		onRgroupEdit: function onRgroupEdit(rgroup) {
			var struct = getState().editor.struct();

			if (Object.keys(rgroup).length > 2) {
				var rgroupLabels = Array.from(struct.rgroups.keys());
				if (!rgroup.range) rgroup.range = '>0';

				return (0, _modal.openDialog)(dispatch, 'rgroupLogic', Object.assign({ rgroupLabels: rgroupLabels }, rgroup));
			}

			var disabledIds = Array.from(struct.atoms.values()).reduce(function (acc, atom) {
				if (atom.fragment === rgroup.fragId && atom.rglabel !== null) return acc.concat((0, _structconv.fromElement)(atom).values);

				return acc;
			}, []);
			var params = {
				type: 'fragment',
				values: [rgroup.label],
				disabledIds: disabledIds
			};
			return (0, _modal.openDialog)(dispatch, 'rgroup', params).then(function (res) {
				return { label: res.values[0] };
			});
		},
		onSgroupEdit: function onSgroupEdit(sgroup) {
			return sleep(0) // huck to open dialog after dispatch sgroup tool action
			.then(function () {
				return (0, _modal.openDialog)(dispatch, 'sgroup', (0, _structconv.fromSgroup)(sgroup));
			}).then(_structconv.toSgroup);
		},
		onSdataEdit: function onSdataEdit(sgroup) {
			return sleep(0).then(function () {
				return (0, _modal.openDialog)(dispatch, sgroup.type === 'DAT' ? 'sdata' : 'sgroup', (0, _structconv.fromSgroup)(sgroup));
			}).then(_structconv.toSgroup);
		},
		onMessage: function onMessage(msg) {
			if (msg.error) alert(msg.error); // eslint-disable-line no-undef
		},
		onAromatizeStruct: function onAromatizeStruct(struct) {
			var state = getState();
			var serverOpts = state.options.getServerSettings();
			return (0, _server.serverCall)(state.editor, state.server, 'aromatize', serverOpts, struct);
		},
		onDearomatizeStruct: function onDearomatizeStruct(struct) {
			var state = getState();
			var serverOpts = state.options.getServerSettings();
			return (0, _server.serverCall)(state.editor, state.server, 'dearomatize', serverOpts, struct);
		},
		onMouseDown: function onMouseDown() {
			updateAction();
		}
	};
}

},{"../../../chem/element":520,"../../action":604,"../../data/convert/structconv":637,"../modal":673,"../server":676,"lodash/fp/debounce":421}],670:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _debounce2 = require('lodash/fp/debounce');

var _debounce3 = _interopRequireDefault(_debounce2);

var _isEqual2 = require('lodash/fp/isEqual');

var _isEqual3 = _interopRequireDefault(_isEqual2);

exports.initKeydownListener = initKeydownListener;
exports.initClipboard = initClipboard;

var _molfile = require('../../chem/molfile');

var _molfile2 = _interopRequireDefault(_molfile);

var _keynorm = require('../data/convert/keynorm');

var _keynorm2 = _interopRequireDefault(_keynorm);

var _action = require('../action');

var _action2 = _interopRequireDefault(_action);

var _cliparea = require('../component/cliparea');

var clipArea = _interopRequireWildcard(_cliparea);

var _structformat = require('../data/convert/structformat');

var structFormat = _interopRequireWildcard(_structformat);

var _modal = require('./modal');

var _shared = require('./shared');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function initKeydownListener(element) {
	return function (dispatch, getState) {
		var hotKeys = initHotKeys();
		element.addEventListener('keydown', function (event) {
			return keyHandle(dispatch, getState, hotKeys, event);
		});
	};
}

/* HotKeys */
/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function keyHandle(dispatch, getState, hotKeys, event) {
	var state = getState();
	if (state.modal) return;

	var editor = state.editor;
	var actionState = state.actionState;
	var actionTool = actionState.activeTool;

	var key = (0, _keynorm2.default)(event);
	var atomsSelected = editor.selection() && editor.selection().atoms;

	var group = null;

	if (key && key.length === 1 && atomsSelected && key.match(/\w/)) {
		console.assert(atomsSelected.length > 0);
		(0, _modal.openDialog)(dispatch, 'labelEdit', { letter: key }).then(function (res) {
			dispatch((0, _shared.onAction)({ tool: 'atom', opts: res }));
		}).catch(function () {
			return null;
		});
		event.preventDefault();
	} else if ((group = _keynorm2.default.lookup(hotKeys, event)) !== undefined) {
		var index = checkGroupOnTool(group, actionTool); // index currentTool in group || -1
		index = (index + 1) % group.length;

		var actName = group[index];
		if (actionState[actName] && actionState[actName].disabled === true) {
			event.preventDefault();
			return;
		}
		if (clipArea.actions.indexOf(actName) === -1) {
			var newAction = _action2.default[actName].action;
			dispatch((0, _shared.onAction)(newAction));
			event.preventDefault();
		} else if (window.clipboardData) {
			// IE support
			clipArea.exec(event);
		}
	}
}

function setHotKey(key, actName, hotKeys) {
	if (Array.isArray(hotKeys[key])) hotKeys[key].push(actName);else hotKeys[key] = [actName];
}

function initHotKeys() {
	var hotKeys = {};
	var act = void 0;

	Object.keys(_action2.default).forEach(function (actName) {
		act = _action2.default[actName];
		if (!act.shortcut) return;

		if (Array.isArray(act.shortcut)) {
			act.shortcut.forEach(function (key) {
				setHotKey(key, actName, hotKeys);
			});
		} else {
			setHotKey(act.shortcut, actName, hotKeys);
		}
	});

	return (0, _keynorm2.default)(hotKeys);
}

function checkGroupOnTool(group, actionTool) {
	var index = group.indexOf(actionTool.tool);

	group.forEach(function (actName, i) {
		if ((0, _isEqual3.default)(_action2.default[actName].action, actionTool)) index = i;
	});

	return index;
}

var rxnTextPlain = /\$RXN\n+\s+0\s+0\s+0\n*/;

/* ClipArea */
function initClipboard(dispatch, getState) {
	var formats = Object.keys(structFormat.map).map(function (fmt) {
		return structFormat.map[fmt].mime;
	});

	var debAction = (0, _debounce3.default)(0, function (action) {
		return dispatch((0, _shared.onAction)(action));
	});
	var loadStruct = (0, _debounce3.default)(0, function (structStr, opts) {
		return dispatch((0, _shared.load)(structStr, opts));
	});

	return {
		formats: formats,
		focused: function focused() {
			return !getState().modal;
		},
		onCut: function onCut() {
			var editor = getState().editor;
			var data = clipData(editor);
			if (data) debAction({ tool: 'eraser', opts: 1 });else editor.selection(null);
			return data;
		},
		onCopy: function onCopy() {
			var editor = getState().editor;
			var data = clipData(editor);
			editor.selection(null);
			return data;
		},
		onPaste: function onPaste(data) {
			var structStr = data['chemical/x-mdl-molfile'] || data['chemical/x-mdl-rxnfile'] || data['text/plain'];

			var struct = getState().editor.render.ctab.molecule;

			if (structStr && (!struct.hasRxnArrow() || !rxnTextPlain.test(data['text/plain']))) loadStruct(structStr, { fragment: true });
		}
	};
}

function clipData(editor) {
	var res = {};
	var struct = editor.structSelected();

	if (struct.isBlank()) return null;

	var type = struct.isReaction ? 'chemical/x-mdl-molfile' : 'chemical/x-mdl-rxnfile';

	try {
		var data = _molfile2.default.stringify(struct);
		res['text/plain'] = data;
		res[type] = data;
		// res['chemical/x-daylight-smiles'] =
		// smiles.stringify(struct);
		return res;
	} catch (ex) {
		alert(ex.message); // eslint-disable-line no-undef
	}

	return null;
}

},{"../../chem/molfile":523,"../action":604,"../component/cliparea":615,"../data/convert/keynorm":636,"../data/convert/structformat":638,"./modal":673,"./shared":677,"lodash/fp/debounce":421,"lodash/fp/isEqual":428}],671:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.load = exports.onAction = undefined;

var _pick2 = require('lodash/fp/pick');

var _pick3 = _interopRequireDefault(_pick2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function (options, server) {
	// TODO: redux localStorage here
	var initState = {
		actionState: null,
		editor: null,
		modal: null,
		options: Object.assign(_options.initOptionsState, { app: options }),
		server: server || Promise.reject(new Error('Standalone mode!')),
		templates: _templates.initTmplsState
	};

	var middleware = [_reduxThunk2.default];

	if ("production" !== 'production') middleware.push(_reduxLogger.logger);

	return (0, _redux.createStore)(root, initState, _redux.applyMiddleware.apply(undefined, middleware));
};

var _redux = require('redux');

var _reduxThunk = require('redux-thunk');

var _reduxThunk2 = _interopRequireDefault(_reduxThunk);

var _reduxLogger = require('redux-logger');

var _action = require('./action');

var _action2 = _interopRequireDefault(_action);

var _modal = require('./modal');

var _modal2 = _interopRequireDefault(_modal);

var _options = require('./options');

var _options2 = _interopRequireDefault(_options);

var _templates = require('./templates');

var _templates2 = _interopRequireDefault(_templates);

var _toolbar = require('./toolbar');

var _toolbar2 = _interopRequireDefault(_toolbar);

var _shared = require('./shared');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /****************************************************************************
                                                                                                                                                                                                                              * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                              * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                              * You may obtain a copy of the License at
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                              *
                                                                                                                                                                                                                              * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                              * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                              * See the License for the specific language governing permissions and
                                                                                                                                                                                                                              * limitations under the License.
                                                                                                                                                                                                                              ***************************************************************************/

exports.onAction = _shared.onAction;
exports.load = _shared.load;


var shared = (0, _redux.combineReducers)({
	actionState: _action2.default,
	toolbar: _toolbar2.default,
	modal: _modal2.default,
	server: function server() {
		var store = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
		return store;
	},
	editor: function editor() {
		var store = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
		return store;
	},
	options: _options2.default,
	templates: _templates2.default
});

/* ROOT REDUCER */
function root(state, action) {
	switch (action.type) {// eslint-disable-line default-case
		case 'INIT':
			global._ui_editor = action.editor;
		case 'UPDATE':
			// eslint-disable-line no-case-declarations
			var type = action.type,
			    data = _objectWithoutProperties(action, ['type']);

			if (data) state = _extends({}, state, data);
	}

	var sh = shared(state, _extends({}, action, (0, _pick3.default)(['editor', 'server', 'options'], state)));

	return sh === state.shared ? state : _extends({}, state, sh);
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./action":668,"./modal":673,"./options":675,"./shared":677,"./templates":678,"./toolbar":680,"lodash/fp/pick":430,"redux":505,"redux-logger":498,"redux-thunk":499}],672:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.formsState = undefined;
exports.updateFormState = updateFormState;
exports.checkErrors = checkErrors;
exports.setDefaultSettings = setDefaultSettings;
exports.formReducer = formReducer;

var _optionsSchema = require('../../data/schema/options-schema');

var _sdata = require('./sdata');

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

var formsState = exports.formsState = { // TODO: create from schema.{smth}.defaultValue
	atomProps: {
		errors: {},
		valid: true,
		result: {
			label: '',
			charge: 0,
			explicitValence: -1,
			hCount: 0,
			invRet: 0,
			isotope: 0,
			radical: 0,
			ringBondCount: 0,
			substitutionCount: 0
		}
	},
	attachmentPoints: {
		errors: {},
		valid: true,
		result: {
			primary: false,
			secondary: false
		}
	},
	automap: {
		errors: {},
		valid: true,
		result: {
			mode: 'discard'
		}
	},
	bondProps: {
		errors: {},
		valid: true,
		result: {
			type: 'single',
			topology: 0,
			center: 0
		}
	},
	check: {
		errors: {},
		moleculeErrors: {}
	},
	labelEdit: {
		errors: {},
		valid: true,
		result: {
			label: ''
		}
	},
	rgroup: {
		errors: {},
		valid: true,
		result: {
			values: []
		}
	},
	rgroupLogic: {
		errors: {},
		valid: true,
		result: {
			ifthen: 0,
			range: '>0',
			resth: false
		}
	},
	save: {
		errors: {},
		valid: true,
		result: {
			filename: 'ketcher',
			format: 'mol'
		}
	},
	settings: {
		errors: {},
		valid: true,
		result: (0, _optionsSchema.getDefaultOptions)()
	},
	sgroup: {
		errors: {},
		valid: true,
		result: {
			type: 'GEN'
		}
	},
	sdata: (0, _sdata.initSdata)()
};

function updateFormState(data) {
	return {
		type: 'UPDATE_FORM',
		data: data
	};
}

function checkErrors(errors) {
	return {
		type: 'UPDATE_FORM',
		data: { moleculeErrors: errors }
	};
}

function setDefaultSettings() {
	return {
		type: 'UPDATE_FORM',
		data: {
			result: (0, _optionsSchema.getDefaultOptions)(),
			valid: true,
			errors: {}
		}
	};
}

function formReducer(state, action, formName) {
	if (formName === 'sdata') return (0, _sdata.sdataReducer)(state, action);

	return Object.assign({}, state, action.data);
}

},{"../../data/schema/options-schema":639,"./sdata":674}],673:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /****************************************************************************
                                                                                                                                                                                                                                                                   * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                   * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                   * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                   * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                   * limitations under the License.
                                                                                                                                                                                                                                                                   ***************************************************************************/

exports.openDialog = openDialog;

var _form = require('./form');

function openDialog(dispatch, dialogName, props) {
	return new Promise(function (resolve, reject) {
		dispatch({
			type: 'MODAL_OPEN',
			data: {
				name: dialogName,
				prop: _extends({}, props, {
					onResult: resolve,
					onCancel: reject
				})
			}
		});
	});
}

function modalReducer() {
	var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
	var action = arguments[1];
	var type = action.type,
	    data = action.data;


	if (type === 'UPDATE_FORM') {
		var formState = (0, _form.formReducer)(state.form, action, state.name);
		return _extends({}, state, { form: formState });
	}

	switch (type) {
		case 'MODAL_CLOSE':
			return null;
		case 'MODAL_OPEN':
			return {
				name: data.name,
				form: _form.formsState[data.name] || null,
				prop: data.prop || null
			};
		default:
			return state;
	}
}

exports.default = modalReducer;

},{"./form":672}],674:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.initSdata = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /****************************************************************************
                                                                                                                                                                                                                                                                   * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                   * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                   * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                   * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                   * limitations under the License.
                                                                                                                                                                                                                                                                   ***************************************************************************/

exports.sdataReducer = sdataReducer;

var _sdataSchema = require('../../data/schema/sdata-schema');

var initSdata = exports.initSdata = function initSdata() {
	var context = (0, _sdataSchema.getSdataDefault)();
	var fieldName = (0, _sdataSchema.getSdataDefault)(context);
	var fieldValue = (0, _sdataSchema.getSdataDefault)(context, fieldName);
	var radiobuttons = 'Absolute';

	return {
		errors: {},
		valid: true,
		result: {
			context: context,
			fieldName: fieldName,
			fieldValue: fieldValue,
			radiobuttons: radiobuttons,
			type: 'DAT'
		}
	};
};

function sdataReducer(state, action) {
	if (action.data.result.init) {
		return correctErrors(_extends({}, state, {
			result: Object.assign({}, state.result, action.data.result)
		}), action.data);
	}

	var actionContext = action.data.result.context;
	var actionFieldName = action.data.result.fieldName;

	var newstate = null;

	if (actionContext !== state.result.context) newstate = onContextChange(state, action.data.result);else if (actionFieldName !== state.result.fieldName) newstate = onFieldNameChange(state, action.data.result);

	newstate = newstate || _extends({}, state, {
		result: Object.assign({}, state.result, action.data.result)
	});

	return correctErrors(newstate, action.data);
}

var correctErrors = function correctErrors(state, payload) {
	var valid = payload.valid,
	    errors = payload.errors;
	var _state$result = state.result,
	    fieldName = _state$result.fieldName,
	    fieldValue = _state$result.fieldValue;


	return {
		result: state.result,
		valid: valid && !!fieldName && !!fieldValue,
		errors: errors
	};
};

var onContextChange = function onContextChange(state, payload) {
	var context = payload.context,
	    fieldValue = payload.fieldValue;


	var fieldName = (0, _sdataSchema.getSdataDefault)(context);

	var fValue = fieldValue;
	if (fValue === state.result.fieldValue) fValue = (0, _sdataSchema.getSdataDefault)(context, fieldName);

	return {
		result: _extends({}, payload, {
			context: context,
			fieldName: fieldName,
			fieldValue: fValue
		})
	};
};

var onFieldNameChange = function onFieldNameChange(state, payload) {
	var fieldName = payload.fieldName;


	var context = state.result.context;

	var fieldValue = payload.fieldValue;

	if (_sdataSchema.sdataSchema[context][fieldName]) fieldValue = (0, _sdataSchema.getSdataDefault)(context, fieldName);

	if (fieldValue === state.result.fieldValue && _sdataSchema.sdataSchema[context][state.result.fieldName]) fieldValue = '';

	return {
		result: _extends({}, payload, {
			fieldName: fieldName,
			fieldValue: fieldValue
		})
	};
};

},{"../../data/schema/sdata-schema":641}],675:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.initOptionsState = undefined;

var _pick2 = require('lodash/fp/pick');

var _pick3 = _interopRequireDefault(_pick2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.appUpdate = appUpdate;
exports.saveSettings = saveSettings;
exports.changeRound = changeRound;
exports.setStruct = setStruct;
exports.changeVersion = changeVersion;
exports.changeImage = changeImage;
exports.shouldFragment = shouldFragment;
exports.checkOpts = checkOpts;

var _optionsSchema = require('../../data/schema/options-schema');

var _storageExt = require('../../storage-ext');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /****************************************************************************
                                                                                                                                                                                                                   * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                   *
                                                                                                                                                                                                                   * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                   * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                   * You may obtain a copy of the License at
                                                                                                                                                                                                                   *
                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                   *
                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                   * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                   * See the License for the specific language governing permissions and
                                                                                                                                                                                                                   * limitations under the License.
                                                                                                                                                                                                                   ***************************************************************************/

var initOptionsState = exports.initOptionsState = {
	app: {
		server: false,
		templates: false
	},
	analyse: {
		values: null,
		roundWeight: 3,
		roundMass: 3
	},
	check: {
		checkOptions: ['valence', 'radicals', 'pseudoatoms', 'stereo', 'query', 'overlapping_atoms', 'overlapping_bonds', 'rgroups', 'chiral', '3d', 'chiral_flag']
	},
	recognize: {
		file: null,
		structStr: null,
		fragment: false,
		version: null
	},
	settings: Object.assign((0, _optionsSchema.getDefaultOptions)(), (0, _optionsSchema.validation)(_storageExt.storage.getItem('ketcher-opts'))),
	getServerSettings: function getServerSettings() {
		return (0, _pick3.default)(_optionsSchema.SERVER_OPTIONS, this.settings);
	}
};

function appUpdate(data) {
	return function (dispatch) {
		dispatch({ type: 'APP_OPTIONS', data: data });
		dispatch({ type: 'UPDATE' });
	};
}

/* SETTINGS */
function saveSettings(newSettings) {
	_storageExt.storage.setItem('ketcher-opts', newSettings);
	return {
		type: 'SAVE_SETTINGS',
		data: newSettings
	};
}

/* ANALYZE */
function changeRound(roundName, value) {
	return {
		type: 'CHANGE_ANALYSE',
		data: _defineProperty({}, roundName, value)
	};
}

/* RECOGNIZE */
var recognizeActions = ['SET_RECOGNIZE_STRUCT', 'CHANGE_RECOGNIZE_FILE', 'CHANGE_IMAGO_VERSION', 'IS_FRAGMENT_RECOGNIZE'];

function setStruct(str) {
	return {
		type: 'SET_RECOGNIZE_STRUCT',
		data: { structStr: str }
	};
}

function changeVersion(version) {
	return {
		type: 'CHANGE_IMAGO_VERSION',
		data: { version: version }
	};
}

function changeImage(file) {
	return {
		type: 'CHANGE_RECOGNIZE_FILE',
		data: {
			file: file,
			structStr: null
		}
	};
}

function shouldFragment(isFrag) {
	return {
		type: 'IS_FRAGMENT_RECOGNIZE',
		data: { fragment: isFrag }
	};
}

/* CHECK */
function checkOpts(data) {
	return {
		type: 'SAVE_CHECK_OPTS',
		data: data
	};
}

/* REDUCER */
function optionsReducer() {
	var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	var action = arguments[1];
	var type = action.type,
	    data = action.data;


	if (type === 'APP_OPTIONS') return _extends({}, state, { app: _extends({}, state.app, data) });

	if (type === 'SAVE_SETTINGS') return _extends({}, state, { settings: data });

	if (type === 'SAVE_CHECK_OPTS') return _extends({}, state, { check: data });

	if (type === 'CHANGE_ANALYSE') return _extends({}, state, { analyse: _extends({}, state.analyse, data) });

	if (recognizeActions.includes(type)) return _extends({}, state, { recognize: _extends({}, state.recognize, data) });
	return state;
}

exports.default = optionsReducer;

},{"../../data/schema/options-schema":639,"../../storage-ext":681,"lodash/fp/pick":430}],676:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _without2 = require('lodash/fp/without');

var _without3 = _interopRequireDefault(_without2);

var _omit2 = require('lodash/fp/omit');

var _omit3 = _interopRequireDefault(_omit2);

exports.checkServer = checkServer;
exports.recognize = recognize;
exports.check = check;
exports.automap = automap;
exports.analyse = analyse;
exports.serverTransform = serverTransform;
exports.serverCall = serverCall;

var _pool = require('../../../util/pool');

var _pool2 = _interopRequireDefault(_pool);

var _molfile = require('../../../chem/molfile');

var _molfile2 = _interopRequireDefault(_molfile);

var _options = require('../options');

var _form = require('../modal/form');

var _shared = require('../shared');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function checkServer() {
	return function (dispatch, getState) {
		var server = getState().server;

		server.then(function (res) {
			return dispatch((0, _options.appUpdate)({
				indigoVersion: res.indigoVersion,
				imagoVersions: res.imagoVersions,
				server: true
			}));
		}, function (err) {
			return console.info(err);
		}
		// TODO: notification info
		);
	};
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

function recognize(file, version) {
	return function (dispatch, getState) {
		var rec = getState().server.recognize;

		var process = rec(file, version).then(function (res) {
			dispatch((0, _options.setStruct)(res.struct));
		}, function () {
			dispatch((0, _options.setStruct)(null));
			// TODO: remove me...
			setTimeout(function () {
				return alert('Error! The picture isn\'t recognized.');
			}, 200); // eslint-disable-line no-undef
		});
		dispatch((0, _options.setStruct)(process));
	};
}

function ketcherCheck(struct, checkParams) {
	var errors = {};

	if (checkParams.includes('chiral_flag') && struct.isChiral) errors['chiral_flag'] = 'Chiral flag is present on the canvas';

	if (checkParams.includes('valence')) {
		var badVal = 0;
		struct.atoms.forEach(function (atom) {
			return atom.badConn && badVal++;
		});
		if (badVal > 0) errors['valence'] = 'Structure contains ' + badVal + ' atom' + (badVal !== 1 ? 's' : '') + ' with bad valence';
	}

	return errors;
}

function check(optsTypes) {
	return function (dispatch, getState) {
		var _getState = getState(),
		    editor = _getState.editor,
		    server = _getState.server;

		var ketcherErrors = ketcherCheck(editor.struct(), optsTypes);

		var options = getState().options.getServerSettings();
		options.data = { types: (0, _without3.default)(['valence', 'chiral_flag'], optsTypes) };

		return serverCall(editor, server, 'check', options).then(function (res) {
			res = Object.assign(res, ketcherErrors); // merge Indigo check with Ketcher check
			dispatch((0, _form.checkErrors)(res));
		}).catch(function (e) {
			alert('Failed check!\n' + e.message);throw e;
		}); // eslint-disable-line no-undef
		// TODO: notification
	};
}

function automap(res) {
	return serverTransform('automap', res);
}

function analyse() {
	return function (dispatch, getState) {
		var _getState2 = getState(),
		    editor = _getState2.editor,
		    server = _getState2.server;

		var options = getState().options.getServerSettings();
		options.data = {
			properties: ['molecular-weight', 'most-abundant-mass', 'monoisotopic-mass', 'gross', 'mass-composition']
		};

		return serverCall(editor, server, 'calculate', options).then(function (values) {
			return dispatch({
				type: 'CHANGE_ANALYSE',
				data: { values: values }
			});
		}).catch(function (e) {
			alert(e.message);throw e;
		}); // eslint-disable-line no-undef
		// TODO: notification
	};
}

function serverTransform(method, data, struct) {
	return function (dispatch, getState) {
		var state = getState();
		var opts = state.options.getServerSettings();
		opts.data = data;

		serverCall(state.editor, state.server, method, opts, struct).then(function (res) {
			return dispatch((0, _shared.load)(res.struct, {
				rescale: method === 'layout',
				reactionRelayout: method === 'clean'
			}));
		}).catch(function (e) {
			return alert(e.message);
		}); // eslint-disable-line no-undef
		// TODO: notification
	};
}

function serverCall(editor, server, method, options, struct) {
	var selection = editor.selection();
	var selectedAtoms = [];

	if (selection) selectedAtoms = selection.atoms ? selection.atoms : editor.explicitSelected().atoms;

	if (!struct) {
		var aidMap = new Map();
		struct = editor.struct().clone(null, null, false, aidMap);

		var reindexMap = getReindexMap(struct.getComponents());

		selectedAtoms = selectedAtoms.map(function (aid) {
			return reindexMap.get(aidMap.get(aid));
		});
	}

	return server.then(function () {
		return server[method](Object.assign({
			struct: _molfile2.default.stringify(struct, { ignoreErrors: true })
		}, selectedAtoms && selectedAtoms.length > 0 ? {
			selected: selectedAtoms
		} : null, options.data), (0, _omit3.default)('data', options));
	});
}

function getReindexMap(components) {
	return components.reactants.concat(components.products).reduce(function (acc, item) {
		Array.from(item).forEach(function (aid) {
			acc.add(aid);
		});

		return acc;
	}, new _pool2.default());
}

},{"../../../chem/molfile":523,"../../../util/pool":684,"../modal/form":672,"../options":675,"../shared":677,"lodash/fp/omit":429,"lodash/fp/without":437}],677:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.onAction = onAction;
exports.load = load;

var _structformat = require('../data/convert/structformat');

var structFormat = _interopRequireWildcard(_structformat);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function onAction(action) {
	if (action && action.dialog) {
		return {
			type: 'MODAL_OPEN',
			data: { name: action.dialog }
		};
	}
	if (action && action.thunk) return action.thunk;

	return {
		type: 'ACTION',
		action: action
	};
}

function load(structStr, options) {
	return function (dispatch, getState) {
		var state = getState();
		var editor = state.editor;
		var server = state.server;

		options = options || {};
		// TODO: check if structStr is parsed already
		// utils.loading('show');
		var parsed = structFormat.fromString(structStr, options, server);

		return parsed.then(function (struct) {
			// utils.loading('hide');
			console.assert(struct, 'No molecule to update');
			if (options.rescale) struct.rescale(); // TODO: move out parsing?

			if (struct.isBlank()) return;
			if (options.fragment) dispatch(onAction({ tool: 'paste', opts: struct }));else editor.struct(struct);
		}, function (err) {
			alert(err.message || 'Can\'t parse molecule!'); // eslint-disable-line no-undef
			// TODO: notification
		});
	};
}

},{"../data/convert/structformat":638}],678:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.initTmplsState = exports.initTmplLib = undefined;

var _omit2 = require('lodash/fp/omit');

var _omit3 = _interopRequireDefault(_omit2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /****************************************************************************
                                                                                                                                                                                                                                                                   * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                   * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                   * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                   * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                   * limitations under the License.
                                                                                                                                                                                                                                                                   ***************************************************************************/

exports.selectTmpl = selectTmpl;
exports.changeGroup = changeGroup;
exports.changeFilter = changeFilter;
exports.initAttach = initAttach;
exports.setAttachPoints = setAttachPoints;
exports.setTmplName = setTmplName;
exports.editTmpl = editTmpl;
exports.saveUserTmpl = saveUserTmpl;

var _molfile = require('../../../chem/molfile');

var _molfile2 = _interopRequireDefault(_molfile);

var _storageExt = require('../../storage-ext');

var _modal = require('../modal');

var _initLib = require('./init-lib');

var _initLib2 = _interopRequireDefault(_initLib);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.initTmplLib = _initLib2.default;

/* TEMPLATES */

function selectTmpl(tmpl) {
	return {
		type: 'TMPL_SELECT',
		data: { selected: tmpl }
	};
}

function changeGroup(group) {
	return {
		type: 'TMPL_CHANGE_GROUP',
		data: { group: group, selected: null }
	};
}

function changeFilter(filter) {
	return {
		type: 'TMPL_CHANGE_FILTER',
		data: { filter: filter.trim(), selected: null // TODO: change this
		} };
}

/* TEMPLATE-ATTACH-EDIT */
function initAttach(name, attach) {
	return {
		type: 'INIT_ATTACH',
		data: {
			name: name,
			atomid: attach.atomid,
			bondid: attach.bondid
		}
	};
}

function setAttachPoints(attach) {
	return {
		type: 'SET_ATTACH_POINTS',
		data: {
			atomid: attach.atomid,
			bondid: attach.bondid
		}
	};
}

function setTmplName(name) {
	return {
		type: 'SET_TMPL_NAME',
		data: { name: name }
	};
}

function editTmpl(tmpl) {
	return function (dispatch, getState) {
		(0, _modal.openDialog)(dispatch, 'attach', { tmpl: tmpl }).then(function (_ref) {
			var name = _ref.name,
			    attach = _ref.attach;

			tmpl.struct.name = name;
			tmpl.props = Object.assign({}, tmpl.props, attach);

			if (tmpl.props.group === 'User Templates') updateLocalStore(getState().templates.lib);
		}, function () {
			return null;
		}).then(function () {
			return (0, _modal.openDialog)(dispatch, 'templates').catch(function () {
				return null;
			});
		});
	};
}

/* SAVE */
function saveUserTmpl(struct) {
	// TODO: structStr can be not in mol format => structformat.toString ...
	var tmpl = { struct: struct.clone(), props: {} };

	return function (dispatch, getState) {
		(0, _modal.openDialog)(dispatch, 'attach', { tmpl: tmpl }).then(function (_ref2) {
			var name = _ref2.name,
			    attach = _ref2.attach;

			tmpl.struct.name = name;
			tmpl.props = _extends({}, attach, { group: 'User Templates' });

			var lib = getState().templates.lib.concat(tmpl);
			dispatch((0, _initLib.initLib)(lib));
			updateLocalStore(lib);
		}).catch(function () {
			return null;
		});
	};
}

function updateLocalStore(lib) {
	var userLib = lib.filter(function (item) {
		return item.props.group === 'User Templates';
	}).map(function (item) {
		return {
			struct: _molfile2.default.stringify(item.struct),
			props: Object.assign({}, (0, _omit3.default)(['group'], item.props))
		};
	});

	_storageExt.storage.setItem('ketcher-tmpls', userLib);
}

/* REDUCER */
var initTmplsState = exports.initTmplsState = {
	lib: [],
	selected: null,
	filter: '',
	group: null,
	attach: {}
};

var tmplActions = ['TMPL_INIT', 'TMPL_SELECT', 'TMPL_CHANGE_GROUP', 'TMPL_CHANGE_FILTER'];

var attachActions = ['INIT_ATTACH', 'SET_ATTACH_POINTS', 'SET_TMPL_NAME'];

function templatesReducer() {
	var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initTmplsState;
	var action = arguments[1];

	if (tmplActions.includes(action.type)) return Object.assign({}, state, action.data);

	if (attachActions.includes(action.type)) {
		var attach = Object.assign({}, state.attach, action.data);
		return _extends({}, state, { attach: attach });
	}

	return state;
}

exports.default = templatesReducer;

},{"../../../chem/molfile":523,"../../storage-ext":681,"../modal":673,"./init-lib":679,"lodash/fp/omit":429}],679:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.initLib = initLib;
exports.default = initTmplLib;

var _storageExt = require('../../storage-ext');

var _sdf = require('../../../chem/sdf');

var _sdf2 = _interopRequireDefault(_sdf);

var _molfile = require('../../../chem/molfile');

var _molfile2 = _interopRequireDefault(_molfile);

var _options = require('../options');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function initLib(lib) {
	return {
		type: 'TMPL_INIT',
		data: { lib: lib }
	};
}

function initTmplLib(dispatch, baseUrl, cacheEl) {
	prefetchStatic(baseUrl + 'library.sdf').then(function (text) {
		var tmpls = _sdf2.default.parse(text);
		var prefetch = prefetchRender(tmpls, baseUrl, cacheEl);

		return prefetch.then(function (cachedFiles) {
			return tmpls.map(function (tmpl) {
				var pr = prefetchSplit(tmpl);
				if (pr.file) tmpl.props.prerender = cachedFiles.indexOf(pr.file) !== -1 ? '#' + pr.id : '';

				return tmpl;
			});
		});
	}).then(function (res) {
		var lib = res.concat(userTmpls());
		dispatch(initLib(lib));
		dispatch((0, _options.appUpdate)({ templates: true }));
	});
}

function userTmpls() {
	var userLib = _storageExt.storage.getItem('ketcher-tmpls');
	if (!Array.isArray(userLib) || userLib.length === 0) return [];

	return userLib.map(function (tmpl) {
		try {
			if (tmpl.props === '') tmpl.props = {};
			tmpl.props.group = 'User Templates';

			return {
				struct: _molfile2.default.parse(tmpl.struct),
				props: tmpl.props
			};
		} catch (ex) {
			return null;
		}
	}).filter(function (tmpl) {
		return tmpl !== null;
	});
}

function prefetchStatic(url) {
	return fetch(url, { credentials: 'same-origin' }).then(function (resp) {
		if (resp.ok) return resp.text();
		throw Error('Could not fetch ' + url);
	});
}

function prefetchSplit(tmpl) {
	var pr = tmpl.props.prerender;
	var res = pr && pr.split('#', 2);

	return {
		file: pr && res[0],
		id: pr && res[1]
	};
}

function prefetchRender(tmpls, baseUrl, cacheEl) {
	var files = tmpls.reduce(function (res, tmpl) {
		var file = prefetchSplit(tmpl).file;

		if (file && res.indexOf(file) === -1) res.push(file);

		return res;
	}, []);

	var fetch = Promise.all(files.map(function (fn) {
		return prefetchStatic(baseUrl + fn).catch(function () {
			return null;
		});
	}));

	return fetch.then(function (svgs) {
		svgs.forEach(function (svgContent) {
			if (svgContent) cacheEl.innerHTML += svgContent;
		});

		return files.filter(function (file, i) {
			return !!svgs[i];
		});
	});
}

},{"../../../chem/molfile":523,"../../../chem/sdf":529,"../../storage-ext":681,"../options":675}],680:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _isEqual2 = require('lodash/fp/isEqual');

var _isEqual3 = _interopRequireDefault(_isEqual2);

var _throttle2 = require('lodash/fp/throttle');

var _throttle3 = _interopRequireDefault(_throttle2);

var _capitalize2 = require('lodash/fp/capitalize');

var _capitalize3 = _interopRequireDefault(_capitalize2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /****************************************************************************
                                                                                                                                                                                                                                                                   * Copyright 2018 EPAM Systems
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                   * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                   * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   *    http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                   * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                                                                                                                                   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                                                                                                                                   * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                   * limitations under the License.
                                                                                                                                                                                                                                                                   ***************************************************************************/

exports.initResize = initResize;
exports.initIcons = initIcons;

exports.default = function () {
	var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;
	var action = arguments[1];
	var type = action.type,
	    data = action.data;


	switch (type) {
		case 'ACTION':
			{
				var visibleTool = toolInMenu(action.action);
				return visibleTool ? _extends({}, state, { opened: null, visibleTools: _extends({}, state.visibleTools, visibleTool) }) : _extends({}, state, { opened: null });
			}
		case 'ADD_ATOMS':
			{
				var newState = addFreqAtom(data, state.freqAtoms, state.currentAtom);
				return _extends({}, state, newState);
			}
		case 'CLEAR_VISIBLE':
			{
				var activeTool = toolInMenu(action.data);
				var correctTools = updateVisibleTools(state.visibleTools, activeTool);
				return _extends({}, state, { opened: null, visibleTools: _extends({}, correctTools) });
			}
		case 'OPENED':
			{
				return data.isSelected && state.opened ? _extends({}, state, { opened: null }) : _extends({}, state, { opened: data.menuName });
			}
		case 'UPDATE':
			return _extends({}, state, { opened: null });
		case 'MODAL_OPEN':
			return _extends({}, state, { opened: null });
		default:
			return state;
	}
};

exports.addAtoms = addAtoms;
exports.hiddenAncestor = hiddenAncestor;

var _atoms = require('../../action/atoms');

var _tools = require('../../action/tools');

var _tools2 = _interopRequireDefault(_tools);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var initial = {
	freqAtoms: [],
	currentAtom: 0,
	opened: null,
	visibleTools: {
		select: 'select-lasso'
	}
};
var MAX_ATOMS = 7;

function updateVisibleTools(visibleTool, activeTool) {
	var regExp = /(bond)(-)(common|stereo|query)/;
	var menuHeight = window.innerHeight;

	return Object.keys(visibleTool).reduce(function (res, key) {
		if (key === 'bond' && menuHeight > 700) return res; // TODO remove me after update styles
		if (key === 'transform' && menuHeight > 800) return res;
		if (key === 'rgroup' && menuHeight > 850) return res;
		if (!key.match(regExp) || menuHeight > 700) res[key] = visibleTool[key];
		return res;
	}, _extends({}, activeTool));
}

function initResize() {
	return function (dispatch, getState) {
		var onResize = (0, _throttle3.default)(250, function () {
			var state = getState();
			state.editor.render.update();
			dispatch({ type: 'CLEAR_VISIBLE', data: state.actionState.activeTool });
		});
		addEventListener('resize', onResize); // eslint-disable-line
	};
}

function initIcons(cacheEl) {
	var iconpath = 'ketcher.svg';
	fetch(iconpath, { credentials: 'same-origin' }).then(function (resp) {
		if (resp.ok) resp.text().then(function (svg) {
			cacheEl.innerHTML += svg;
		});else throw Error('Could not fetch ' + iconpath);
	});
}

/* REDUCER */

/* ------- */

function addFreqAtom(label, freqAtoms, index) {
	label = (0, _capitalize3.default)(label);
	if (_atoms.basic.indexOf(label) > -1 || freqAtoms.indexOf(label) !== -1) return { freqAtoms: freqAtoms };

	freqAtoms[index] = label;
	index = (index + 1) % MAX_ATOMS;

	return { freqAtoms: freqAtoms, currentAtom: index };
}

function addAtoms(atomLabel) {
	return {
		type: 'ADD_ATOMS',
		data: atomLabel
	};
}

function toolInMenu(action) {
	var tool = Object.keys(_tools2.default).find(function (toolName) {
		return (0, _isEqual3.default)(action, _tools2.default[toolName].action);
	});

	var sel = document.getElementById(tool);
	var dropdown = sel && hiddenAncestor(sel);

	return dropdown && dropdown.id !== '' ? _defineProperty({}, dropdown.id, sel.id) : null;
}

function hiddenAncestor(el, base) {
	base = base || document.body;
	var findEl = el;

	while (window.getComputedStyle(findEl).overflow !== 'hidden' && !findEl.classList.contains('opened')) {
		if (findEl === base) return null;
		findEl = findEl.parentNode;
	}

	return findEl;
}

},{"../../action/atoms":602,"../../action/tools":607,"lodash/fp/capitalize":418,"lodash/fp/isEqual":428,"lodash/fp/throttle":435}],681:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

/* local storage */
var storage = exports.storage = {
	warningMessage: 'Your changes will be lost after the tab closing. See Help (Note 2).',
	isAvailable: function isAvailable() {
		try {
			return localStorage;
		} catch (ex) {
			return false;
		}
	},
	getItem: function getItem(key) {
		var item = null;
		try {
			item = JSON.parse(localStorage.getItem(key));
		} catch (ex) {
			console.info('LocalStorage:', ex.name);
		}
		return item;
	},
	setItem: function setItem(key, data) {
		var isSet = null;
		try {
			localStorage.setItem(key, JSON.stringify(data));
			isSet = true;
		} catch (ex) {
			console.info('LocalStorage:', ex.name);
			isSet = false;
		}
		return isSet;
	}
};

},{}],682:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _vec = require('./vec2');

var _vec2 = _interopRequireDefault(_vec);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Box2Abs() {
	for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		args[_key] = arguments[_key];
	}

	if (args.length === 1 && 'min' in args[0] && 'max' in args[0]) {
		this.p0 = args[0].min;
		this.p1 = args[0].max;
	}

	if (args.length === 2) {
		this.p0 = args[0];
		this.p1 = args[1];
	} else if (args.length === 4) {
		this.p0 = new _vec2.default(args[0], args[1]);
		this.p1 = new _vec2.default(args[2], args[3]);
	} else if (args.length === 0) {
		this.p0 = new _vec2.default();
		this.p1 = new _vec2.default();
	} else {
		return new Error('Box2Abs constructor only accepts 4 numbers or 2 vectors or no args!');
	}
} /****************************************************************************
   * Copyright 2018 EPAM Systems
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *    http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   ***************************************************************************/

Box2Abs.prototype.toString = function () {
	return this.p0.toString() + ' ' + this.p1.toString();
};

Box2Abs.prototype.clone = function () {
	return new Box2Abs(this.p0, this.p1);
};

/**
 * @param lp { Vec2 }
 * @param rb [ Vec2 }
 * @returns { Box2Abs }
 */
Box2Abs.prototype.extend = function (lp, rb) {
	console.assert(!!lp);
	rb = rb || lp;
	return new Box2Abs(this.p0.sub(lp), this.p1.add(rb));
};

/**
 * @param p { Vec2 }
 * @returns { Box2Abs }
 */
Box2Abs.prototype.include = function (p) {
	console.assert(!!p);
	return new Box2Abs(this.p0.min(p), this.p1.max(p));
};

/**
 * @param p { Vec2 }
 * @param ext { number }
 * @returns { boolean }
 */
Box2Abs.prototype.contains = function (p) {
	var ext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.0;

	console.assert(!!p);
	return p.x >= this.p0.x - ext && p.x <= this.p1.x + ext && p.y >= this.p0.y - ext && p.y <= this.p1.y + ext;
};

/**
 * @param d { Vec2 }
 * @returns { Box2Abs }
 */
Box2Abs.prototype.translate = function (d) {
	console.assert(!!d);
	return new Box2Abs(this.p0.add(d), this.p1.add(d));
};

/**
 * @param f { function(Vec2, object): Vec2 }
 * @param options { object }
 * @returns { Box2Abs }
 */
Box2Abs.prototype.transform = function (f, options) {
	console.assert(!!f);
	return new Box2Abs(f(this.p0, options), f(this.p1, options));
};

Box2Abs.prototype.sz = function () {
	return this.p1.sub(this.p0);
};

Box2Abs.prototype.centre = function () {
	return _vec2.default.centre(this.p0, this.p1);
};

Box2Abs.prototype.pos = function () {
	return this.p0;
};

Box2Abs.fromRelBox = function (relBox) {
	console.assert(!!relBox);
	return new Box2Abs(relBox.x, relBox.y, relBox.x + relBox.width, relBox.y + relBox.height);
};

/**
 * @param b1 { Box2Abs }
 * @param b2 { Box2Abs }
 * @returns { Box2Abs }
 */
Box2Abs.union = function (b1, b2) {
	console.assert(!!b1);
	console.assert(!!b2);
	return new Box2Abs(_vec2.default.min(b1.p0, b2.p0), _vec2.default.max(b1.p1, b2.p1));
};

/**
 * @param a { Vec2 }
 * @param b { Vec2 }
 * @param c { Vec2 }
 * @param d { Vec2 }
 * @returns { boolean }
 */
Box2Abs.segmentIntersection = function (a, b, c, d) {
	var dc = (a.x - c.x) * (b.y - c.y) - (a.y - c.y) * (b.x - c.x);
	var dd = (a.x - d.x) * (b.y - d.y) - (a.y - d.y) * (b.x - d.x);
	var da = (c.x - a.x) * (d.y - a.y) - (c.y - a.y) * (d.x - a.x);
	var db = (c.x - b.x) * (d.y - b.y) - (c.y - b.y) * (d.x - b.x);

	return dc * dd <= 0 && da * db <= 0;
};

exports.default = Box2Abs;

},{"./vec2":686}],683:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _extendableBuiltin(cls) {
	function ExtendableBuiltin() {
		var instance = Reflect.construct(cls, Array.from(arguments));
		Object.setPrototypeOf(instance, Object.getPrototypeOf(this));
		return instance;
	}

	ExtendableBuiltin.prototype = Object.create(cls.prototype, {
		constructor: {
			value: cls,
			enumerable: false,
			writable: true,
			configurable: true
		}
	});

	if (Object.setPrototypeOf) {
		Object.setPrototypeOf(ExtendableBuiltin, cls);
	} else {
		ExtendableBuiltin.__proto__ = cls;
	}

	return ExtendableBuiltin;
}

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

var Pile = function (_extendableBuiltin2) {
	_inherits(Pile, _extendableBuiltin2);

	function Pile() {
		_classCallCheck(this, Pile);

		return _possibleConstructorReturn(this, (Pile.__proto__ || Object.getPrototypeOf(Pile)).apply(this, arguments));
	}

	_createClass(Pile, [{
		key: "find",

		// TODO: it's used only in dfs.js in one place in some strange way.
		// Should be removed after dfs.js refactoring
		value: function find(predicate) {
			var _iteratorNormalCompletion = true;
			var _didIteratorError = false;
			var _iteratorError = undefined;

			try {
				for (var _iterator = this[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
					var item = _step.value;

					if (predicate(item)) return item;
				}
			} catch (err) {
				_didIteratorError = true;
				_iteratorError = err;
			} finally {
				try {
					if (!_iteratorNormalCompletion && _iterator.return) {
						_iterator.return();
					}
				} finally {
					if (_didIteratorError) {
						throw _iteratorError;
					}
				}
			}

			return null;
		}
	}, {
		key: "intersection",
		value: function intersection(setB) {
			var intersection = new Pile();

			var _iteratorNormalCompletion2 = true;
			var _didIteratorError2 = false;
			var _iteratorError2 = undefined;

			try {
				for (var _iterator2 = setB[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
					var item = _step2.value;

					if (this.has(item)) intersection.add(item);
				}
			} catch (err) {
				_didIteratorError2 = true;
				_iteratorError2 = err;
			} finally {
				try {
					if (!_iteratorNormalCompletion2 && _iterator2.return) {
						_iterator2.return();
					}
				} finally {
					if (_didIteratorError2) {
						throw _iteratorError2;
					}
				}
			}

			return intersection;
		}
	}, {
		key: "equals",
		value: function equals(setB) {
			return this.isSuperset(setB) && setB.isSuperset(this);
		}
	}, {
		key: "isSuperset",
		value: function isSuperset(subset) {
			var _iteratorNormalCompletion3 = true;
			var _didIteratorError3 = false;
			var _iteratorError3 = undefined;

			try {
				for (var _iterator3 = subset[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
					var item = _step3.value;

					if (!this.has(item)) return false;
				}
			} catch (err) {
				_didIteratorError3 = true;
				_iteratorError3 = err;
			} finally {
				try {
					if (!_iteratorNormalCompletion3 && _iterator3.return) {
						_iterator3.return();
					}
				} finally {
					if (_didIteratorError3) {
						throw _iteratorError3;
					}
				}
			}

			return true;
		}
	}, {
		key: "filter",
		value: function filter(filterFunc) {
			return new Pile(Array.from(this).filter(filterFunc));
		}
	}, {
		key: "union",
		value: function union(setB) {
			var union = new Pile(this);

			var _iteratorNormalCompletion4 = true;
			var _didIteratorError4 = false;
			var _iteratorError4 = undefined;

			try {
				for (var _iterator4 = setB[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
					var item = _step4.value;

					union.add(item);
				}
			} catch (err) {
				_didIteratorError4 = true;
				_iteratorError4 = err;
			} finally {
				try {
					if (!_iteratorNormalCompletion4 && _iterator4.return) {
						_iterator4.return();
					}
				} finally {
					if (_didIteratorError4) {
						throw _iteratorError4;
					}
				}
			}

			return union;
		}
	}]);

	return Pile;
}(_extendableBuiltin(Set));

exports.default = Pile;

},{}],684:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _extendableBuiltin(cls) {
	function ExtendableBuiltin() {
		var instance = Reflect.construct(cls, Array.from(arguments));
		Object.setPrototypeOf(instance, Object.getPrototypeOf(this));
		return instance;
	}

	ExtendableBuiltin.prototype = Object.create(cls.prototype, {
		constructor: {
			value: cls,
			enumerable: false,
			writable: true,
			configurable: true
		}
	});

	if (Object.setPrototypeOf) {
		Object.setPrototypeOf(ExtendableBuiltin, cls);
	} else {
		ExtendableBuiltin.__proto__ = cls;
	}

	return ExtendableBuiltin;
}

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

var Pool = function (_extendableBuiltin2) {
	_inherits(Pool, _extendableBuiltin2);

	function Pool(arg) {
		_classCallCheck(this, Pool);

		var _this = _possibleConstructorReturn(this, (Pool.__proto__ || Object.getPrototypeOf(Pool)).call(this, arg));

		_this._nextId = 0;
		return _this;
	}

	_createClass(Pool, [{
		key: "add",
		value: function add(item) {
			var id = this._nextId++;
			_get(Pool.prototype.__proto__ || Object.getPrototypeOf(Pool.prototype), "set", this).call(this, id, item);
			return id;
		}
	}, {
		key: "newId",
		value: function newId() {
			return this._nextId++;
		}
	}, {
		key: "keyOf",
		value: function keyOf(item) {
			var _iteratorNormalCompletion = true;
			var _didIteratorError = false;
			var _iteratorError = undefined;

			try {
				for (var _iterator = this.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
					var _ref = _step.value;

					var _ref2 = _slicedToArray(_ref, 2);

					var key = _ref2[0];
					var value = _ref2[1];

					if (value === item) return key;
				}
			} catch (err) {
				_didIteratorError = true;
				_iteratorError = err;
			} finally {
				try {
					if (!_iteratorNormalCompletion && _iterator.return) {
						_iterator.return();
					}
				} finally {
					if (_didIteratorError) {
						throw _iteratorError;
					}
				}
			}

			return null;
		}
	}, {
		key: "find",
		value: function find(predicate) {
			var _iteratorNormalCompletion2 = true;
			var _didIteratorError2 = false;
			var _iteratorError2 = undefined;

			try {
				for (var _iterator2 = this.entries()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
					var _ref3 = _step2.value;

					var _ref4 = _slicedToArray(_ref3, 2);

					var key = _ref4[0];
					var value = _ref4[1];

					if (predicate(key, value)) return key;
				}
			} catch (err) {
				_didIteratorError2 = true;
				_iteratorError2 = err;
			} finally {
				try {
					if (!_iteratorNormalCompletion2 && _iterator2.return) {
						_iterator2.return();
					}
				} finally {
					if (_didIteratorError2) {
						throw _iteratorError2;
					}
				}
			}

			return null;
		}
	}, {
		key: "filter",
		value: function filter(predicate) {
			return new Pool(Array.from(this).filter(function (_ref5) {
				var _ref6 = _slicedToArray(_ref5, 2),
				    key = _ref6[0],
				    value = _ref6[1];

				return predicate(key, value);
			}));
		}
	}]);

	return Pool;
}(_extendableBuiltin(Map));

exports.default = Pool;

},{}],685:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function scaled2obj(v, options) {
  return v.scaled(1 / options.scale);
}

function obj2scaled(v, options) {
  return v.scaled(options.scale);
}

exports.default = {
  scaled2obj: scaled2obj,
  obj2scaled: obj2scaled
};

},{}],686:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function Vec2(x, y, z) {
	if (arguments.length === 0) {
		this.x = 0;
		this.y = 0;
		this.z = 0;
	} else if (arguments.length === 1) {
		this.x = parseFloat(x.x || 0);
		this.y = parseFloat(x.y || 0);
		this.z = parseFloat(x.z || 0);
	} else if (arguments.length === 2) {
		this.x = parseFloat(x || 0);
		this.y = parseFloat(y || 0);
		this.z = 0;
	} else if (arguments.length === 3) {
		this.x = parseFloat(x);
		this.y = parseFloat(y);
		this.z = parseFloat(z);
	} else {
		throw new Error('Vec2(): invalid arguments');
	}
}

Vec2.ZERO = new Vec2(0, 0);
Vec2.UNIT = new Vec2(1, 1);

Vec2.prototype.length = function () {
	return Math.sqrt(this.x * this.x + this.y * this.y);
};

Vec2.prototype.equals = function (v) {
	console.assert(!!v);
	return this.x === v.x && this.y === v.y;
};

Vec2.prototype.add = function (v) {
	console.assert(!!v);
	return new Vec2(this.x + v.x, this.y + v.y, this.z + v.z);
};

Vec2.prototype.add_ = function (v) {
	// eslint-disable-line no-underscore-dangle
	console.assert(!!v);
	this.x += v.x;
	this.y += v.y;
	this.z += v.z;
};

Vec2.prototype.get_xy0 = function () {
	return new Vec2(this.x, this.y);
};

Vec2.prototype.sub = function (v) {
	console.assert(!!v);
	return new Vec2(this.x - v.x, this.y - v.y, this.z - v.z);
};

Vec2.prototype.scaled = function (s) {
	console.assert(s === 0 || !!s);
	return new Vec2(this.x * s, this.y * s, this.z * s);
};

Vec2.prototype.negated = function () {
	return new Vec2(-this.x, -this.y, -this.z);
};

Vec2.prototype.yComplement = function (y1) {
	y1 = y1 || 0;
	return new Vec2(this.x, y1 - this.y, this.z);
};

Vec2.prototype.addScaled = function (v, f) {
	console.assert(!!v);
	console.assert(f === 0 || !!f);

	return new Vec2(this.x + v.x * f, this.y + v.y * f, this.z + v.z * f);
};

Vec2.prototype.normalized = function () {
	return this.scaled(1 / this.length());
};

Vec2.prototype.normalize = function () {
	var l = this.length();

	if (l < 0.000001) return false;

	this.x /= l;
	this.y /= l;

	return true;
};

Vec2.prototype.turnLeft = function () {
	return new Vec2(-this.y, this.x, this.z);
};

Vec2.prototype.coordStr = function () {
	return this.x.toString() + ' , ' + this.y.toString();
};

Vec2.prototype.toString = function () {
	return '(' + this.x.toFixed(2) + ',' + this.y.toFixed(2) + ')';
};

Vec2.prototype.max = function (v) {
	console.assert(!!v);
	return new Vec2.max(this, v); // eslint-disable-line new-cap
};

Vec2.prototype.min = function (v) {
	console.assert(!!v);
	return new Vec2.min(this, v); // eslint-disable-line new-cap
};

Vec2.prototype.ceil = function () {
	return new Vec2(Math.ceil(this.x), Math.ceil(this.y), Math.ceil(this.z));
};

Vec2.prototype.floor = function () {
	return new Vec2(Math.floor(this.x), Math.floor(this.y), Math.floor(this.z));
};

Vec2.prototype.rotate = function (angle) {
	console.assert(angle === 0 || !!angle);

	var si = Math.sin(angle);
	var co = Math.cos(angle);

	return this.rotateSC(si, co);
};

Vec2.prototype.rotateSC = function (si, co) {
	console.assert(si === 0 || !!si);
	console.assert(co === 0 || !!co);

	return new Vec2(this.x * co - this.y * si, this.x * si + this.y * co, this.z);
};

Vec2.prototype.oxAngle = function () {
	return Math.atan2(this.y, this.x);
};

Vec2.dist = function (a, b) {
	console.assert(!!a);
	console.assert(!!b);
	return Vec2.diff(a, b).length();
};

Vec2.max = function (v1, v2) {
	console.assert(!!v1);
	console.assert(!!v2);
	return new Vec2(Math.max(v1.x, v2.x), Math.max(v1.y, v2.y), Math.max(v1.z, v2.z));
};

Vec2.min = function (v1, v2) {
	console.assert(!!v1);
	console.assert(!!v2);
	return new Vec2(Math.min(v1.x, v2.x), Math.min(v1.y, v2.y), Math.min(v1.z, v2.z));
};

Vec2.sum = function (v1, v2) {
	console.assert(!!v1);
	console.assert(!!v2);
	return new Vec2(v1.x + v2.x, v1.y + v2.y, v1.z + v2.z);
};

Vec2.dot = function (v1, v2) {
	console.assert(!!v1);
	console.assert(!!v2);

	return v1.x * v2.x + v1.y * v2.y;
};

Vec2.cross = function (v1, v2) {
	console.assert(!!v1);
	console.assert(!!v2);

	return v1.x * v2.y - v1.y * v2.x;
};

Vec2.angle = function (v1, v2) {
	console.assert(!!v1);
	console.assert(!!v2);

	return Math.atan2(Vec2.cross(v1, v2), Vec2.dot(v1, v2));
};

Vec2.diff = function (v1, v2) {
	console.assert(!!v1);
	console.assert(!!v2);

	return new Vec2(v1.x - v2.x, v1.y - v2.y, v1.z - v2.z);
};

// assume arguments v1, f1, v2, f2, v3, f3, etc.
// where v[i] are vectors and f[i] are corresponding coefficients
Vec2.lc = function () {
	for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		args[_key] = arguments[_key];
	}

	var v = new Vec2();
	for (var i = 0; i < arguments.length / 2; ++i) {
		v = v.addScaled(args[2 * i], args[2 * i + 1]);
	}return v;
};

/**
 * @param v1 { Vec2 }
 * @param f1 { number }
 * @param v2 { Vec2 }
 * @param f2 { number }
 * @return { Vec2 }
 */
Vec2.lc2 = function (v1, f1, v2, f2) {
	console.assert(!!v1);
	console.assert(!!v2);
	console.assert(f1 === 0 || !!f1);
	console.assert(f2 === 0 || !!f2);

	return new Vec2(v1.x * f1 + v2.x * f2, v1.y * f1 + v2.y * f2, v1.z * f1 + v2.z * f2);
};

Vec2.centre = function (v1, v2) {
	return new Vec2.lc2(v1, 0.5, v2, 0.5); // eslint-disable-line new-cap
};

exports.default = Vec2;

},{}],687:[function(require,module,exports){
(function (global){
'use strict';

require('core-js/modules/es6.typed.array-buffer');

require('core-js/modules/es6.typed.int8-array');

require('core-js/modules/es6.typed.uint8-array');

require('core-js/modules/es6.typed.uint8-clamped-array');

require('core-js/modules/es6.typed.int16-array');

require('core-js/modules/es6.typed.uint16-array');

require('core-js/modules/es6.typed.int32-array');

require('core-js/modules/es6.typed.uint32-array');

require('core-js/modules/es6.typed.float32-array');

require('core-js/modules/es6.typed.float64-array');

require('core-js/modules/es6.map');

require('core-js/modules/es6.set');

require('core-js/modules/es6.weak-map');

require('core-js/modules/es6.weak-set');

require('core-js/modules/es6.reflect.apply');

require('core-js/modules/es6.reflect.construct');

require('core-js/modules/es6.reflect.define-property');

require('core-js/modules/es6.reflect.delete-property');

require('core-js/modules/es6.reflect.get');

require('core-js/modules/es6.reflect.get-own-property-descriptor');

require('core-js/modules/es6.reflect.get-prototype-of');

require('core-js/modules/es6.reflect.has');

require('core-js/modules/es6.reflect.is-extensible');

require('core-js/modules/es6.reflect.own-keys');

require('core-js/modules/es6.reflect.prevent-extensions');

require('core-js/modules/es6.reflect.set');

require('core-js/modules/es6.reflect.set-prototype-of');

require('core-js/modules/es6.promise');

require('core-js/modules/es6.symbol');

require('core-js/modules/es6.object.assign');

require('core-js/modules/es6.object.is');

require('core-js/modules/es6.object.set-prototype-of');

require('core-js/modules/es6.function.name');

require('core-js/modules/es6.string.raw');

require('core-js/modules/es6.string.from-code-point');

require('core-js/modules/es6.string.code-point-at');

require('core-js/modules/es6.string.repeat');

require('core-js/modules/es6.string.starts-with');

require('core-js/modules/es6.string.ends-with');

require('core-js/modules/es6.string.includes');

require('core-js/modules/es6.regexp.flags');

require('core-js/modules/es6.regexp.match');

require('core-js/modules/es6.regexp.replace');

require('core-js/modules/es6.regexp.split');

require('core-js/modules/es6.regexp.search');

require('core-js/modules/es6.array.from');

require('core-js/modules/es6.array.of');

require('core-js/modules/es6.array.copy-within');

require('core-js/modules/es6.array.find');

require('core-js/modules/es6.array.find-index');

require('core-js/modules/es6.array.fill');

require('core-js/modules/es6.array.iterator');

require('core-js/modules/es6.number.is-finite');

require('core-js/modules/es6.number.is-integer');

require('core-js/modules/es6.number.is-safe-integer');

require('core-js/modules/es6.number.is-nan');

require('core-js/modules/es6.number.epsilon');

require('core-js/modules/es6.number.min-safe-integer');

require('core-js/modules/es6.number.max-safe-integer');

require('core-js/modules/es6.math.acosh');

require('core-js/modules/es6.math.asinh');

require('core-js/modules/es6.math.atanh');

require('core-js/modules/es6.math.cbrt');

require('core-js/modules/es6.math.clz32');

require('core-js/modules/es6.math.cosh');

require('core-js/modules/es6.math.expm1');

require('core-js/modules/es6.math.fround');

require('core-js/modules/es6.math.hypot');

require('core-js/modules/es6.math.imul');

require('core-js/modules/es6.math.log1p');

require('core-js/modules/es6.math.log10');

require('core-js/modules/es6.math.log2');

require('core-js/modules/es6.math.sign');

require('core-js/modules/es6.math.sinh');

require('core-js/modules/es6.math.tanh');

require('core-js/modules/es6.math.trunc');

require('core-js/modules/es7.array.includes');

require('core-js/modules/es7.object.values');

require('core-js/modules/es7.object.entries');

require('core-js/modules/es7.object.get-own-property-descriptors');

require('core-js/modules/es7.string.pad-start');

require('core-js/modules/es7.string.pad-end');

require('core-js/modules/web.timers');

require('core-js/modules/web.immediate');

require('core-js/modules/web.dom.iterable');

require('regenerator-runtime/runtime');

require('whatwg-fetch');

var _queryString = require('query-string');

var _queryString2 = _interopRequireDefault(_queryString);

var _api = require('./api');

var _api2 = _interopRequireDefault(_api);

var _molfile = require('./chem/molfile');

var _molfile2 = _interopRequireDefault(_molfile);

var _smiles = require('./chem/smiles');

var _smiles2 = _interopRequireDefault(_smiles);

var _structformat = require('./ui/data/convert/structformat');

var structformat = _interopRequireWildcard(_structformat);

var _ui = require('./ui');

var _ui2 = _interopRequireDefault(_ui);

var _render = require('./render');

var _render2 = _interopRequireDefault(_render);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/****************************************************************************
 * Copyright 2018 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************/

function getSmiles() {
	return _smiles2.default.stringify(ketcher.editor.struct(), { ignoreErrors: true });
}

function saveSmiles() {
	var struct = ketcher.editor.struct();
	return structformat.toString(struct, 'smiles-ext', ketcher.server).catch(function () {
		return _smiles2.default.stringify(struct);
	});
}

function getMolfile() {
	return _molfile2.default.stringify(ketcher.editor.struct(), { ignoreErrors: true });
}

function setMolecule(molString) {
	if (!(typeof molString === 'string')) return;
	ketcher.ui.load(molString, {
		rescale: true
	});
}

function addFragment(molString) {
	if (!(typeof molString === 'string')) return;
	ketcher.ui.load(molString, {
		rescale: true,
		fragment: true
	});
}

function showMolfile(clientArea, molString, options) {
	var render = new _render2.default(clientArea, Object.assign({
		scale: options.bondLength || 75
	}, options));
	if (molString) {
		var mol = _molfile2.default.parse(molString);
		render.setMolecule(mol);
	}
	render.update();
	// not sure we need to expose guts
	return render;
}

// TODO: replace window.onload with something like <https://github.com/ded/domready>
// to start early
window.onload = function () {
	var params = _queryString2.default.parse(document.location.search);
	if (params.api_path) ketcher.apiPath = params.api_path;
	ketcher.server = (0, _api2.default)(ketcher.apiPath, {
		'smart-layout': true,
		'ignore-stereochemistry-errors': true,
		'mass-skip-error-on-pseudoatoms': false,
		'gross-formula-add-rsites': true
	});
	ketcher.ui = (0, _ui2.default)(Object.assign({}, params, buildInfo), ketcher.server);
	ketcher.editor = global._ui_editor;
	ketcher.server.then(function () {
		if (params.mol) ketcher.ui.load(params.mol);
	}, function () {
		document.title += ' (standalone)';
	});
};

var buildInfo = {
	version: '2.0.0-RC',
	apiPath: '',
	buildDate: '2018-10-16T20:23:14',
	buildNumber: '' || null
};

var ketcher = module.exports = Object.assign({ // eslint-disable-line no-multi-assign
	getSmiles: getSmiles,
	saveSmiles: saveSmiles,
	getMolfile: getMolfile,
	setMolecule: setMolecule,
	addFragment: addFragment,
	showMolfile: showMolfile
}, buildInfo);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./api":518,"./chem/molfile":523,"./chem/smiles":532,"./render":586,"./ui":667,"./ui/data/convert/structformat":638,"core-js/modules/es6.array.copy-within":108,"core-js/modules/es6.array.fill":109,"core-js/modules/es6.array.find":111,"core-js/modules/es6.array.find-index":110,"core-js/modules/es6.array.from":112,"core-js/modules/es6.array.iterator":113,"core-js/modules/es6.array.of":114,"core-js/modules/es6.function.name":115,"core-js/modules/es6.map":116,"core-js/modules/es6.math.acosh":117,"core-js/modules/es6.math.asinh":118,"core-js/modules/es6.math.atanh":119,"core-js/modules/es6.math.cbrt":120,"core-js/modules/es6.math.clz32":121,"core-js/modules/es6.math.cosh":122,"core-js/modules/es6.math.expm1":123,"core-js/modules/es6.math.fround":124,"core-js/modules/es6.math.hypot":125,"core-js/modules/es6.math.imul":126,"core-js/modules/es6.math.log10":127,"core-js/modules/es6.math.log1p":128,"core-js/modules/es6.math.log2":129,"core-js/modules/es6.math.sign":130,"core-js/modules/es6.math.sinh":131,"core-js/modules/es6.math.tanh":132,"core-js/modules/es6.math.trunc":133,"core-js/modules/es6.number.epsilon":134,"core-js/modules/es6.number.is-finite":135,"core-js/modules/es6.number.is-integer":136,"core-js/modules/es6.number.is-nan":137,"core-js/modules/es6.number.is-safe-integer":138,"core-js/modules/es6.number.max-safe-integer":139,"core-js/modules/es6.number.min-safe-integer":140,"core-js/modules/es6.object.assign":141,"core-js/modules/es6.object.is":142,"core-js/modules/es6.object.set-prototype-of":143,"core-js/modules/es6.promise":144,"core-js/modules/es6.reflect.apply":145,"core-js/modules/es6.reflect.construct":146,"core-js/modules/es6.reflect.define-property":147,"core-js/modules/es6.reflect.delete-property":148,"core-js/modules/es6.reflect.get":151,"core-js/modules/es6.reflect.get-own-property-descriptor":149,"core-js/modules/es6.reflect.get-prototype-of":150,"core-js/modules/es6.reflect.has":152,"core-js/modules/es6.reflect.is-extensible":153,"core-js/modules/es6.reflect.own-keys":154,"core-js/modules/es6.reflect.prevent-extensions":155,"core-js/modules/es6.reflect.set":157,"core-js/modules/es6.reflect.set-prototype-of":156,"core-js/modules/es6.regexp.flags":158,"core-js/modules/es6.regexp.match":159,"core-js/modules/es6.regexp.replace":160,"core-js/modules/es6.regexp.search":161,"core-js/modules/es6.regexp.split":162,"core-js/modules/es6.set":163,"core-js/modules/es6.string.code-point-at":164,"core-js/modules/es6.string.ends-with":165,"core-js/modules/es6.string.from-code-point":166,"core-js/modules/es6.string.includes":167,"core-js/modules/es6.string.raw":168,"core-js/modules/es6.string.repeat":169,"core-js/modules/es6.string.starts-with":170,"core-js/modules/es6.symbol":171,"core-js/modules/es6.typed.array-buffer":172,"core-js/modules/es6.typed.float32-array":173,"core-js/modules/es6.typed.float64-array":174,"core-js/modules/es6.typed.int16-array":175,"core-js/modules/es6.typed.int32-array":176,"core-js/modules/es6.typed.int8-array":177,"core-js/modules/es6.typed.uint16-array":178,"core-js/modules/es6.typed.uint32-array":179,"core-js/modules/es6.typed.uint8-array":180,"core-js/modules/es6.typed.uint8-clamped-array":181,"core-js/modules/es6.weak-map":182,"core-js/modules/es6.weak-set":183,"core-js/modules/es7.array.includes":184,"core-js/modules/es7.object.entries":185,"core-js/modules/es7.object.get-own-property-descriptors":186,"core-js/modules/es7.object.values":187,"core-js/modules/es7.string.pad-end":188,"core-js/modules/es7.string.pad-start":189,"core-js/modules/web.dom.iterable":190,"core-js/modules/web.immediate":191,"core-js/modules/web.timers":192,"query-string":493,"regenerator-runtime/runtime":507,"whatwg-fetch":517}]},{},[687])(687)
});


//# sourceMappingURL=ketcher.js.map
